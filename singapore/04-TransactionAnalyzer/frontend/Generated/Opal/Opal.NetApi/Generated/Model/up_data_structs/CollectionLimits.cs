//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Opal.NetApi.Generated.Model.up_data_structs
{
    
    
    /// <summary>
    /// >> 277 - Composite[up_data_structs.CollectionLimits]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class CollectionLimits : BaseType
    {
        
        /// <summary>
        /// >> account_token_ownership_limit
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> AccountTokenOwnershipLimit { get; set; }
        /// <summary>
        /// >> sponsored_data_size
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> SponsoredDataSize { get; set; }
        /// <summary>
        /// >> sponsored_data_rate_limit
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Opal.NetApi.Generated.Model.up_data_structs.EnumSponsoringRateLimit> SponsoredDataRateLimit { get; set; }
        /// <summary>
        /// >> token_limit
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> TokenLimit { get; set; }
        /// <summary>
        /// >> sponsor_transfer_timeout
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> SponsorTransferTimeout { get; set; }
        /// <summary>
        /// >> sponsor_approve_timeout
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> SponsorApproveTimeout { get; set; }
        /// <summary>
        /// >> owner_can_transfer
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool> OwnerCanTransfer { get; set; }
        /// <summary>
        /// >> owner_can_destroy
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool> OwnerCanDestroy { get; set; }
        /// <summary>
        /// >> transfers_enabled
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool> TransfersEnabled { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "CollectionLimits";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(AccountTokenOwnershipLimit.Encode());
            result.AddRange(SponsoredDataSize.Encode());
            result.AddRange(SponsoredDataRateLimit.Encode());
            result.AddRange(TokenLimit.Encode());
            result.AddRange(SponsorTransferTimeout.Encode());
            result.AddRange(SponsorApproveTimeout.Encode());
            result.AddRange(OwnerCanTransfer.Encode());
            result.AddRange(OwnerCanDestroy.Encode());
            result.AddRange(TransfersEnabled.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            AccountTokenOwnershipLimit = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            AccountTokenOwnershipLimit.Decode(byteArray, ref p);
            SponsoredDataSize = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            SponsoredDataSize.Decode(byteArray, ref p);
            SponsoredDataRateLimit = new Substrate.NetApi.Model.Types.Base.BaseOpt<Opal.NetApi.Generated.Model.up_data_structs.EnumSponsoringRateLimit>();
            SponsoredDataRateLimit.Decode(byteArray, ref p);
            TokenLimit = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            TokenLimit.Decode(byteArray, ref p);
            SponsorTransferTimeout = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            SponsorTransferTimeout.Decode(byteArray, ref p);
            SponsorApproveTimeout = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            SponsorApproveTimeout.Decode(byteArray, ref p);
            OwnerCanTransfer = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool>();
            OwnerCanTransfer.Decode(byteArray, ref p);
            OwnerCanDestroy = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool>();
            OwnerCanDestroy.Decode(byteArray, ref p);
            TransfersEnabled = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool>();
            TransfersEnabled.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
