//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Opal.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> ForeignAssetsStorage
    /// </summary>
    public sealed class ForeignAssetsStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> ForeignAssetsStorage Constructor
        /// </summary>
        public ForeignAssetsStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ForeignAssets", "ForeignAssetToCollection"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Opal.NetApi.Generated.Model.xcm.v3.multiasset.EnumAssetId), typeof(Opal.NetApi.Generated.Model.up_data_structs.CollectionId)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ForeignAssets", "CollectionToForeignAsset"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Opal.NetApi.Generated.Model.up_data_structs.CollectionId), typeof(Opal.NetApi.Generated.Model.xcm.v3.multiasset.EnumAssetId)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ForeignAssets", "ForeignReserveAssetInstanceToTokenId"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.xcm.v3.multiasset.EnumAssetInstance>), typeof(Opal.NetApi.Generated.Model.up_data_structs.TokenId)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ForeignAssets", "TokenIdToForeignReserveAssetInstance"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId>), typeof(Opal.NetApi.Generated.Model.xcm.v3.multiasset.EnumAssetInstance)));
        }
        
        /// <summary>
        /// >> ForeignAssetToCollectionParams
        ///  The corresponding collections of foreign assets.
        /// </summary>
        public static string ForeignAssetToCollectionParams(Opal.NetApi.Generated.Model.xcm.v3.multiasset.EnumAssetId key)
        {
            return RequestGenerator.GetStorage("ForeignAssets", "ForeignAssetToCollection", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> ForeignAssetToCollectionDefault
        /// Default value as hex string
        /// </summary>
        public static string ForeignAssetToCollectionDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> ForeignAssetToCollection
        ///  The corresponding collections of foreign assets.
        /// </summary>
        public async Task<Opal.NetApi.Generated.Model.up_data_structs.CollectionId> ForeignAssetToCollection(Opal.NetApi.Generated.Model.xcm.v3.multiasset.EnumAssetId key, string blockhash, CancellationToken token)
        {
            string parameters = ForeignAssetsStorage.ForeignAssetToCollectionParams(key);
            var result = await _client.GetStorageAsync<Opal.NetApi.Generated.Model.up_data_structs.CollectionId>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> CollectionToForeignAssetParams
        ///  The corresponding foreign assets of collections.
        /// </summary>
        public static string CollectionToForeignAssetParams(Opal.NetApi.Generated.Model.up_data_structs.CollectionId key)
        {
            return RequestGenerator.GetStorage("ForeignAssets", "CollectionToForeignAsset", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> CollectionToForeignAssetDefault
        /// Default value as hex string
        /// </summary>
        public static string CollectionToForeignAssetDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> CollectionToForeignAsset
        ///  The corresponding foreign assets of collections.
        /// </summary>
        public async Task<Opal.NetApi.Generated.Model.xcm.v3.multiasset.EnumAssetId> CollectionToForeignAsset(Opal.NetApi.Generated.Model.up_data_structs.CollectionId key, string blockhash, CancellationToken token)
        {
            string parameters = ForeignAssetsStorage.CollectionToForeignAssetParams(key);
            var result = await _client.GetStorageAsync<Opal.NetApi.Generated.Model.xcm.v3.multiasset.EnumAssetId>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> ForeignReserveAssetInstanceToTokenIdParams
        ///  The correponding NFT token id of reserve NFTs
        /// </summary>
        public static string ForeignReserveAssetInstanceToTokenIdParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.xcm.v3.multiasset.EnumAssetInstance> key)
        {
            return RequestGenerator.GetStorage("ForeignAssets", "ForeignReserveAssetInstanceToTokenId", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> ForeignReserveAssetInstanceToTokenIdDefault
        /// Default value as hex string
        /// </summary>
        public static string ForeignReserveAssetInstanceToTokenIdDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> ForeignReserveAssetInstanceToTokenId
        ///  The correponding NFT token id of reserve NFTs
        /// </summary>
        public async Task<Opal.NetApi.Generated.Model.up_data_structs.TokenId> ForeignReserveAssetInstanceToTokenId(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.xcm.v3.multiasset.EnumAssetInstance> key, string blockhash, CancellationToken token)
        {
            string parameters = ForeignAssetsStorage.ForeignReserveAssetInstanceToTokenIdParams(key);
            var result = await _client.GetStorageAsync<Opal.NetApi.Generated.Model.up_data_structs.TokenId>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> TokenIdToForeignReserveAssetInstanceParams
        ///  The correponding reserve NFT of a token ID
        /// </summary>
        public static string TokenIdToForeignReserveAssetInstanceParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId> key)
        {
            return RequestGenerator.GetStorage("ForeignAssets", "TokenIdToForeignReserveAssetInstance", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> TokenIdToForeignReserveAssetInstanceDefault
        /// Default value as hex string
        /// </summary>
        public static string TokenIdToForeignReserveAssetInstanceDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> TokenIdToForeignReserveAssetInstance
        ///  The correponding reserve NFT of a token ID
        /// </summary>
        public async Task<Opal.NetApi.Generated.Model.xcm.v3.multiasset.EnumAssetInstance> TokenIdToForeignReserveAssetInstance(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId> key, string blockhash, CancellationToken token)
        {
            string parameters = ForeignAssetsStorage.TokenIdToForeignReserveAssetInstanceParams(key);
            var result = await _client.GetStorageAsync<Opal.NetApi.Generated.Model.xcm.v3.multiasset.EnumAssetInstance>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> ForeignAssetsCalls
    /// </summary>
    public sealed class ForeignAssetsCalls
    {
        
        /// <summary>
        /// >> force_register_foreign_asset
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ForceRegisterForeignAsset(Opal.NetApi.Generated.Model.xcm.EnumVersionedAssetId versioned_asset_id, Opal.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT8 name, Opal.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT10 token_prefix, Opal.NetApi.Generated.Model.pallet_foreign_assets.EnumForeignCollectionMode mode)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(versioned_asset_id.Encode());
            byteArray.AddRange(name.Encode());
            byteArray.AddRange(token_prefix.Encode());
            byteArray.AddRange(mode.Encode());
            return new Method(80, "ForeignAssets", 0, "force_register_foreign_asset", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> ForeignAssetsConstants
    /// </summary>
    public sealed class ForeignAssetsConstants
    {
    }
    
    /// <summary>
    /// >> ForeignAssetsErrors
    /// </summary>
    public enum ForeignAssetsErrors
    {
        
        /// <summary>
        /// >> ForeignAssetAlreadyRegistered
        /// The foreign asset is already registered.
        /// </summary>
        ForeignAssetAlreadyRegistered,
        
        /// <summary>
        /// >> BadForeignAssetId
        /// The given asset ID could not be converted into the current XCM version.
        /// </summary>
        BadForeignAssetId,
    }
}
