//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Opal.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> UniqueStorage
    /// </summary>
    public sealed class UniqueStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> UniqueStorage Constructor
        /// </summary>
        public UniqueStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Unique", "ChainVersion"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Unique", "CreateItemBasket"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32>), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Unique", "NftTransferBasket"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId>), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Unique", "FungibleTransferBasket"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32>), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Unique", "ReFungibleTransferBasket"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32>), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Unique", "TokenPropertyBasket"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId>), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Unique", "NftApproveBasket"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId>), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Unique", "FungibleApproveBasket"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32>), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Unique", "RefungibleApproveBasket"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32>), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
        }
        
        /// <summary>
        /// >> ChainVersionParams
        ///  Used for migrations
        /// </summary>
        public static string ChainVersionParams()
        {
            return RequestGenerator.GetStorage("Unique", "ChainVersion", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> ChainVersionDefault
        /// Default value as hex string
        /// </summary>
        public static string ChainVersionDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> ChainVersion
        ///  Used for migrations
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> ChainVersion(string blockhash, CancellationToken token)
        {
            string parameters = UniqueStorage.ChainVersionParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> CreateItemBasketParams
        ///  (Collection id (controlled?2), who created (real))
        ///  TODO: Off chain worker should remove from this map when collection gets removed
        /// </summary>
        public static string CreateItemBasketParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32> key)
        {
            return RequestGenerator.GetStorage("Unique", "CreateItemBasket", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> CreateItemBasketDefault
        /// Default value as hex string
        /// </summary>
        public static string CreateItemBasketDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> CreateItemBasket
        ///  (Collection id (controlled?2), who created (real))
        ///  TODO: Off chain worker should remove from this map when collection gets removed
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> CreateItemBasket(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32> key, string blockhash, CancellationToken token)
        {
            string parameters = UniqueStorage.CreateItemBasketParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> NftTransferBasketParams
        ///  Collection id (controlled?2), token id (controlled?2)
        /// </summary>
        public static string NftTransferBasketParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId> key)
        {
            return RequestGenerator.GetStorage("Unique", "NftTransferBasket", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> NftTransferBasketDefault
        /// Default value as hex string
        /// </summary>
        public static string NftTransferBasketDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> NftTransferBasket
        ///  Collection id (controlled?2), token id (controlled?2)
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> NftTransferBasket(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId> key, string blockhash, CancellationToken token)
        {
            string parameters = UniqueStorage.NftTransferBasketParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> FungibleTransferBasketParams
        ///  Collection id (controlled?2), owning user (real)
        /// </summary>
        public static string FungibleTransferBasketParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32> key)
        {
            return RequestGenerator.GetStorage("Unique", "FungibleTransferBasket", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, key.Value);
        }
        
        /// <summary>
        /// >> FungibleTransferBasketDefault
        /// Default value as hex string
        /// </summary>
        public static string FungibleTransferBasketDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> FungibleTransferBasket
        ///  Collection id (controlled?2), owning user (real)
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> FungibleTransferBasket(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32> key, string blockhash, CancellationToken token)
        {
            string parameters = UniqueStorage.FungibleTransferBasketParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> ReFungibleTransferBasketParams
        ///  Collection id (controlled?2), token id (controlled?2)
        /// </summary>
        public static string ReFungibleTransferBasketParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32> key)
        {
            return RequestGenerator.GetStorage("Unique", "ReFungibleTransferBasket", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, key.Value);
        }
        
        /// <summary>
        /// >> ReFungibleTransferBasketDefault
        /// Default value as hex string
        /// </summary>
        public static string ReFungibleTransferBasketDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> ReFungibleTransferBasket
        ///  Collection id (controlled?2), token id (controlled?2)
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> ReFungibleTransferBasket(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32> key, string blockhash, CancellationToken token)
        {
            string parameters = UniqueStorage.ReFungibleTransferBasketParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> TokenPropertyBasketParams
        ///  Last sponsoring of token property setting // todo:doc rephrase this and the following
        /// </summary>
        public static string TokenPropertyBasketParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId> key)
        {
            return RequestGenerator.GetStorage("Unique", "TokenPropertyBasket", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> TokenPropertyBasketDefault
        /// Default value as hex string
        /// </summary>
        public static string TokenPropertyBasketDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> TokenPropertyBasket
        ///  Last sponsoring of token property setting // todo:doc rephrase this and the following
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> TokenPropertyBasket(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId> key, string blockhash, CancellationToken token)
        {
            string parameters = UniqueStorage.TokenPropertyBasketParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> NftApproveBasketParams
        ///  Last sponsoring of NFT approval in a collection
        /// </summary>
        public static string NftApproveBasketParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId> key)
        {
            return RequestGenerator.GetStorage("Unique", "NftApproveBasket", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> NftApproveBasketDefault
        /// Default value as hex string
        /// </summary>
        public static string NftApproveBasketDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> NftApproveBasket
        ///  Last sponsoring of NFT approval in a collection
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> NftApproveBasket(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId> key, string blockhash, CancellationToken token)
        {
            string parameters = UniqueStorage.NftApproveBasketParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> FungibleApproveBasketParams
        ///  Last sponsoring of fungible tokens approval in a collection
        /// </summary>
        public static string FungibleApproveBasketParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32> key)
        {
            return RequestGenerator.GetStorage("Unique", "FungibleApproveBasket", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, key.Value);
        }
        
        /// <summary>
        /// >> FungibleApproveBasketDefault
        /// Default value as hex string
        /// </summary>
        public static string FungibleApproveBasketDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> FungibleApproveBasket
        ///  Last sponsoring of fungible tokens approval in a collection
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> FungibleApproveBasket(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32> key, string blockhash, CancellationToken token)
        {
            string parameters = UniqueStorage.FungibleApproveBasketParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> RefungibleApproveBasketParams
        ///  Last sponsoring of RFT approval in a collection
        /// </summary>
        public static string RefungibleApproveBasketParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32> key)
        {
            return RequestGenerator.GetStorage("Unique", "RefungibleApproveBasket", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, key.Value);
        }
        
        /// <summary>
        /// >> RefungibleApproveBasketDefault
        /// Default value as hex string
        /// </summary>
        public static string RefungibleApproveBasketDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> RefungibleApproveBasket
        ///  Last sponsoring of RFT approval in a collection
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> RefungibleApproveBasket(Substrate.NetApi.Model.Types.Base.BaseTuple<Opal.NetApi.Generated.Model.up_data_structs.CollectionId, Opal.NetApi.Generated.Model.up_data_structs.TokenId, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32> key, string blockhash, CancellationToken token)
        {
            string parameters = UniqueStorage.RefungibleApproveBasketParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> UniqueCalls
    /// </summary>
    public sealed class UniqueCalls
    {
        
        /// <summary>
        /// >> create_collection
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method CreateCollection(Opal.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT8 collection_name, Opal.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT9 collection_description, Opal.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT10 token_prefix, Opal.NetApi.Generated.Model.up_data_structs.EnumCollectionMode mode)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_name.Encode());
            byteArray.AddRange(collection_description.Encode());
            byteArray.AddRange(token_prefix.Encode());
            byteArray.AddRange(mode.Encode());
            return new Method(61, "Unique", 0, "create_collection", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> create_collection_ex
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method CreateCollectionEx(Opal.NetApi.Generated.Model.up_data_structs.CreateCollectionData data)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(data.Encode());
            return new Method(61, "Unique", 1, "create_collection_ex", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> destroy_collection
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method DestroyCollection(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            return new Method(61, "Unique", 2, "destroy_collection", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> add_to_allow_list
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method AddToAllowList(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr address)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(address.Encode());
            return new Method(61, "Unique", 3, "add_to_allow_list", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> remove_from_allow_list
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method RemoveFromAllowList(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr address)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(address.Encode());
            return new Method(61, "Unique", 4, "remove_from_allow_list", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> change_collection_owner
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method ChangeCollectionOwner(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32 new_owner)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(new_owner.Encode());
            return new Method(61, "Unique", 5, "change_collection_owner", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> add_collection_admin
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method AddCollectionAdmin(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr new_admin_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(new_admin_id.Encode());
            return new Method(61, "Unique", 6, "add_collection_admin", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> remove_collection_admin
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method RemoveCollectionAdmin(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr account_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(account_id.Encode());
            return new Method(61, "Unique", 7, "remove_collection_admin", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_collection_sponsor
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method SetCollectionSponsor(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.sp_core.crypto.AccountId32 new_sponsor)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(new_sponsor.Encode());
            return new Method(61, "Unique", 8, "set_collection_sponsor", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> confirm_sponsorship
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method ConfirmSponsorship(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            return new Method(61, "Unique", 9, "confirm_sponsorship", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> remove_collection_sponsor
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method RemoveCollectionSponsor(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            return new Method(61, "Unique", 10, "remove_collection_sponsor", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> create_item
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method CreateItem(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr owner, Opal.NetApi.Generated.Model.up_data_structs.EnumCreateItemData data)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(owner.Encode());
            byteArray.AddRange(data.Encode());
            return new Method(61, "Unique", 11, "create_item", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> create_multiple_items
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method CreateMultipleItems(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr owner, Substrate.NetApi.Model.Types.Base.BaseVec<Opal.NetApi.Generated.Model.up_data_structs.EnumCreateItemData> items_data)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(owner.Encode());
            byteArray.AddRange(items_data.Encode());
            return new Method(61, "Unique", 12, "create_multiple_items", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_collection_properties
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method SetCollectionProperties(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Substrate.NetApi.Model.Types.Base.BaseVec<Opal.NetApi.Generated.Model.up_data_structs.Property> properties)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(properties.Encode());
            return new Method(61, "Unique", 13, "set_collection_properties", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> delete_collection_properties
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method DeleteCollectionProperties(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Substrate.NetApi.Model.Types.Base.BaseVec<Opal.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT12> property_keys)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(property_keys.Encode());
            return new Method(61, "Unique", 14, "delete_collection_properties", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_token_properties
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method SetTokenProperties(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.up_data_structs.TokenId token_id, Substrate.NetApi.Model.Types.Base.BaseVec<Opal.NetApi.Generated.Model.up_data_structs.Property> properties)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(token_id.Encode());
            byteArray.AddRange(properties.Encode());
            return new Method(61, "Unique", 15, "set_token_properties", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> delete_token_properties
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method DeleteTokenProperties(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.up_data_structs.TokenId token_id, Substrate.NetApi.Model.Types.Base.BaseVec<Opal.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT12> property_keys)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(token_id.Encode());
            byteArray.AddRange(property_keys.Encode());
            return new Method(61, "Unique", 16, "delete_token_properties", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_token_property_permissions
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method SetTokenPropertyPermissions(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Substrate.NetApi.Model.Types.Base.BaseVec<Opal.NetApi.Generated.Model.up_data_structs.PropertyKeyPermission> property_permissions)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(property_permissions.Encode());
            return new Method(61, "Unique", 17, "set_token_property_permissions", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> create_multiple_items_ex
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method CreateMultipleItemsEx(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.up_data_structs.EnumCreateItemExData data)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(data.Encode());
            return new Method(61, "Unique", 18, "create_multiple_items_ex", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_transfers_enabled_flag
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method SetTransfersEnabledFlag(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Substrate.NetApi.Model.Types.Primitive.Bool value)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(value.Encode());
            return new Method(61, "Unique", 19, "set_transfers_enabled_flag", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> burn_item
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method BurnItem(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.up_data_structs.TokenId item_id, Substrate.NetApi.Model.Types.Primitive.U128 value)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(item_id.Encode());
            byteArray.AddRange(value.Encode());
            return new Method(61, "Unique", 20, "burn_item", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> burn_from
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method BurnFrom(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr from, Opal.NetApi.Generated.Model.up_data_structs.TokenId item_id, Substrate.NetApi.Model.Types.Primitive.U128 value)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(from.Encode());
            byteArray.AddRange(item_id.Encode());
            byteArray.AddRange(value.Encode());
            return new Method(61, "Unique", 21, "burn_from", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> transfer
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method Transfer(Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr recipient, Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.up_data_structs.TokenId item_id, Substrate.NetApi.Model.Types.Primitive.U128 value)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(recipient.Encode());
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(item_id.Encode());
            byteArray.AddRange(value.Encode());
            return new Method(61, "Unique", 22, "transfer", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> approve
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method Approve(Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr spender, Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.up_data_structs.TokenId item_id, Substrate.NetApi.Model.Types.Primitive.U128 amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(spender.Encode());
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(item_id.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(61, "Unique", 23, "approve", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> approve_from
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method ApproveFrom(Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr from, Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr to, Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.up_data_structs.TokenId item_id, Substrate.NetApi.Model.Types.Primitive.U128 amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(from.Encode());
            byteArray.AddRange(to.Encode());
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(item_id.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(61, "Unique", 24, "approve_from", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> transfer_from
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method TransferFrom(Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr from, Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr recipient, Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.up_data_structs.TokenId item_id, Substrate.NetApi.Model.Types.Primitive.U128 value)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(from.Encode());
            byteArray.AddRange(recipient.Encode());
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(item_id.Encode());
            byteArray.AddRange(value.Encode());
            return new Method(61, "Unique", 25, "transfer_from", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_collection_limits
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method SetCollectionLimits(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.up_data_structs.CollectionLimits new_limit)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(new_limit.Encode());
            return new Method(61, "Unique", 26, "set_collection_limits", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_collection_permissions
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method SetCollectionPermissions(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.up_data_structs.CollectionPermissions new_permission)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(new_permission.Encode());
            return new Method(61, "Unique", 27, "set_collection_permissions", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> repartition
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method Repartition(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.up_data_structs.TokenId token_id, Substrate.NetApi.Model.Types.Primitive.U128 amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(token_id.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(61, "Unique", 28, "repartition", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_allowance_for_all
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method SetAllowanceForAll(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr @operator, Substrate.NetApi.Model.Types.Primitive.Bool approve)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(@operator.Encode());
            byteArray.AddRange(approve.Encode());
            return new Method(61, "Unique", 29, "set_allowance_for_all", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> force_repair_collection
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method ForceRepairCollection(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            return new Method(61, "Unique", 30, "force_repair_collection", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> force_repair_item
        /// Type alias to Pallet, to be used by construct_runtime.
        /// </summary>
        public static Method ForceRepairItem(Opal.NetApi.Generated.Model.up_data_structs.CollectionId collection_id, Opal.NetApi.Generated.Model.up_data_structs.TokenId item_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collection_id.Encode());
            byteArray.AddRange(item_id.Encode());
            return new Method(61, "Unique", 31, "force_repair_item", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> UniqueConstants
    /// </summary>
    public sealed class UniqueConstants
    {
        
        /// <summary>
        /// >> nesting_budget
        ///  A maximum number of levels of depth in the token nesting tree.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 nesting_budget()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x05000000");
            return result;
        }
        
        /// <summary>
        /// >> max_collection_name_length
        ///  Maximal length of a collection name.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 max_collection_name_length()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x40000000");
            return result;
        }
        
        /// <summary>
        /// >> max_collection_description_length
        ///  Maximal length of a collection description.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 max_collection_description_length()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x00010000");
            return result;
        }
        
        /// <summary>
        /// >> max_token_prefix_length
        ///  Maximal length of a token prefix.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 max_token_prefix_length()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x10000000");
            return result;
        }
        
        /// <summary>
        /// >> collection_admins_limit
        ///  Maximum admins per collection.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 collection_admins_limit()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x05000000");
            return result;
        }
        
        /// <summary>
        /// >> max_property_key_length
        ///  Maximal length of a property key.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 max_property_key_length()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x00010000");
            return result;
        }
        
        /// <summary>
        /// >> max_property_value_length
        ///  Maximal length of a property value.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 max_property_value_length()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x00800000");
            return result;
        }
        
        /// <summary>
        /// >> max_properties_per_item
        ///  A maximum number of token properties.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 max_properties_per_item()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x40000000");
            return result;
        }
        
        /// <summary>
        /// >> max_collection_properties_size
        ///  Maximum size for all collection properties.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 max_collection_properties_size()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x00A00000");
            return result;
        }
        
        /// <summary>
        /// >> max_token_properties_size
        ///  Maximum size of all token properties.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 max_token_properties_size()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x00800000");
            return result;
        }
        
        /// <summary>
        /// >> nft_default_collection_limits
        ///  Default NFT collection limit.
        /// </summary>
        public Opal.NetApi.Generated.Model.up_data_structs.CollectionLimits nft_default_collection_limits()
        {
            var result = new Opal.NetApi.Generated.Model.up_data_structs.CollectionLimits();
            result.Create("0x0100E1F5050100080000010001FFFFFFFF01050000000105000000010001010101");
            return result;
        }
        
        /// <summary>
        /// >> rft_default_collection_limits
        ///  Default RFT collection limit.
        /// </summary>
        public Opal.NetApi.Generated.Model.up_data_structs.CollectionLimits rft_default_collection_limits()
        {
            var result = new Opal.NetApi.Generated.Model.up_data_structs.CollectionLimits();
            result.Create("0x0100E1F5050100080000010001FFFFFFFF01050000000105000000010001010101");
            return result;
        }
        
        /// <summary>
        /// >> ft_default_collection_limits
        ///  Default FT collection limit.
        /// </summary>
        public Opal.NetApi.Generated.Model.up_data_structs.CollectionLimits ft_default_collection_limits()
        {
            var result = new Opal.NetApi.Generated.Model.up_data_structs.CollectionLimits();
            result.Create("0x0100E1F5050100080000010001FFFFFFFF01050000000105000000010001010101");
            return result;
        }
    }
    
    /// <summary>
    /// >> UniqueErrors
    /// </summary>
    public enum UniqueErrors
    {
        
        /// <summary>
        /// >> CollectionDecimalPointLimitExceeded
        /// Decimal_points parameter must be lower than [`up_data_structs::MAX_DECIMAL_POINTS`].
        /// </summary>
        CollectionDecimalPointLimitExceeded,
        
        /// <summary>
        /// >> EmptyArgument
        /// Length of items properties must be greater than 0.
        /// </summary>
        EmptyArgument,
        
        /// <summary>
        /// >> RepartitionCalledOnNonRefungibleCollection
        /// Repertition is only supported by refungible collection.
        /// </summary>
        RepartitionCalledOnNonRefungibleCollection,
    }
}
