{
  "Origin": "",
  "Magic": "0x6D657461",
  "Version": 14,
  "NodeMetadata": {
    "Types": {
      "0": {
        "TypeFields": [
          {
            "TypeName": "[u8; 32]",
            "TypeId": 1
          }
        ],
        "Path": [
          "sp_core",
          "crypto",
          "AccountId32"
        ],
        "TypeDef": "Composite"
      },
      "1": {
        "Length": 32,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "2": {
        "Primitive": "U8",
        "TypeDef": "Primitive"
      },
      "3": {
        "TypeFields": [
          {
            "Name": "nonce",
            "TypeName": "Nonce",
            "TypeId": 4
          },
          {
            "Name": "consumers",
            "TypeName": "RefCount",
            "TypeId": 4
          },
          {
            "Name": "providers",
            "TypeName": "RefCount",
            "TypeId": 4
          },
          {
            "Name": "sufficients",
            "TypeName": "RefCount",
            "TypeId": 4
          },
          {
            "Name": "data",
            "TypeName": "AccountData",
            "TypeId": 5
          }
        ],
        "Path": [
          "frame_system",
          "AccountInfo"
        ],
        "TypeParams": [
          {
            "Name": "Nonce",
            "TypeId": 4
          },
          {
            "Name": "AccountData",
            "TypeId": 5
          }
        ],
        "TypeDef": "Composite"
      },
      "4": {
        "Primitive": "U32",
        "TypeDef": "Primitive"
      },
      "5": {
        "TypeFields": [
          {
            "Name": "free",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "reserved",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "frozen",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "flags",
            "TypeName": "ExtraFlags",
            "TypeId": 7
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "AccountData"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "6": {
        "Primitive": "U128",
        "TypeDef": "Primitive"
      },
      "7": {
        "TypeFields": [
          {
            "TypeName": "u128",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "ExtraFlags"
        ],
        "TypeDef": "Composite"
      },
      "8": {
        "TypeFields": [
          {
            "Name": "normal",
            "TypeName": "T",
            "TypeId": 9
          },
          {
            "Name": "operational",
            "TypeName": "T",
            "TypeId": 9
          },
          {
            "Name": "mandatory",
            "TypeName": "T",
            "TypeId": 9
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "PerDispatchClass"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 9
          }
        ],
        "TypeDef": "Composite"
      },
      "9": {
        "TypeFields": [
          {
            "Name": "ref_time",
            "TypeName": "u64",
            "TypeId": 10
          },
          {
            "Name": "proof_size",
            "TypeName": "u64",
            "TypeId": 10
          }
        ],
        "Path": [
          "sp_weights",
          "weight_v2",
          "Weight"
        ],
        "TypeDef": "Composite"
      },
      "10": {
        "TypeId": 11,
        "TypeDef": "Compact"
      },
      "11": {
        "Primitive": "U64",
        "TypeDef": "Primitive"
      },
      "12": {
        "TypeFields": [
          {
            "TypeName": "[u8; 32]",
            "TypeId": 1
          }
        ],
        "Path": [
          "primitive_types",
          "H256"
        ],
        "TypeDef": "Composite"
      },
      "13": {
        "TypeId": 2,
        "TypeDef": "Sequence"
      },
      "14": {
        "TypeFields": [
          {
            "Name": "logs",
            "TypeName": "Vec<DigestItem>",
            "TypeId": 15
          }
        ],
        "Path": [
          "sp_runtime",
          "generic",
          "digest",
          "Digest"
        ],
        "TypeDef": "Composite"
      },
      "15": {
        "TypeId": 16,
        "TypeDef": "Sequence"
      },
      "16": {
        "Variants": [
          {
            "Name": "PreRuntime",
            "TypeFields": [
              {
                "TypeName": "ConsensusEngineId",
                "TypeId": 17
              },
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 6
          },
          {
            "Name": "Consensus",
            "TypeFields": [
              {
                "TypeName": "ConsensusEngineId",
                "TypeId": 17
              },
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 4
          },
          {
            "Name": "Seal",
            "TypeFields": [
              {
                "TypeName": "ConsensusEngineId",
                "TypeId": 17
              },
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 5
          },
          {
            "Name": "Other",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0
          },
          {
            "Name": "RuntimeEnvironmentUpdated",
            "TypeFields": null,
            "Index": 8
          }
        ],
        "Path": [
          "sp_runtime",
          "generic",
          "digest",
          "DigestItem"
        ],
        "TypeDef": "Variant"
      },
      "17": {
        "Length": 4,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "18": {
        "TypeId": 19,
        "TypeDef": "Sequence"
      },
      "19": {
        "TypeFields": [
          {
            "Name": "phase",
            "TypeName": "Phase",
            "TypeId": 388
          },
          {
            "Name": "event",
            "TypeName": "E",
            "TypeId": 20
          },
          {
            "Name": "topics",
            "TypeName": "Vec<T>",
            "TypeId": 197
          }
        ],
        "Path": [
          "frame_system",
          "EventRecord"
        ],
        "TypeParams": [
          {
            "Name": "E",
            "TypeId": 20
          },
          {
            "Name": "T",
            "TypeId": 12
          }
        ],
        "TypeDef": "Composite"
      },
      "20": {
        "Variants": [
          {
            "Name": "System",
            "TypeFields": [
              {
                "TypeName": "frame_system::Event<Runtime>",
                "TypeId": 21
              }
            ],
            "Index": 0
          },
          {
            "Name": "StateTrieMigration",
            "TypeFields": [
              {
                "TypeName": "pallet_state_trie_migration::Event<Runtime>",
                "TypeId": 30
              }
            ],
            "Index": 1
          },
          {
            "Name": "ParachainSystem",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_parachain_system::Event<Runtime>",
                "TypeId": 33
              }
            ],
            "Index": 20
          },
          {
            "Name": "CollatorSelection",
            "TypeFields": [
              {
                "TypeName": "pallet_collator_selection::Event<Runtime>",
                "TypeId": 35
              }
            ],
            "Index": 23
          },
          {
            "Name": "Session",
            "TypeFields": [
              {
                "TypeName": "pallet_session::Event",
                "TypeId": 36
              }
            ],
            "Index": 24
          },
          {
            "Name": "Balances",
            "TypeFields": [
              {
                "TypeName": "pallet_balances::Event<Runtime>",
                "TypeId": 37
              }
            ],
            "Index": 30
          },
          {
            "Name": "TransactionPayment",
            "TypeFields": [
              {
                "TypeName": "pallet_transaction_payment::Event<Runtime>",
                "TypeId": 39
              }
            ],
            "Index": 33
          },
          {
            "Name": "Treasury",
            "TypeFields": [
              {
                "TypeName": "pallet_treasury::Event<Runtime>",
                "TypeId": 40
              }
            ],
            "Index": 34
          },
          {
            "Name": "Sudo",
            "TypeFields": [
              {
                "TypeName": "pallet_sudo::Event<Runtime>",
                "TypeId": 42
              }
            ],
            "Index": 35
          },
          {
            "Name": "Vesting",
            "TypeFields": [
              {
                "TypeName": "orml_vesting::Event<Runtime>",
                "TypeId": 45
              }
            ],
            "Index": 37
          },
          {
            "Name": "XTokens",
            "TypeFields": [
              {
                "TypeName": "orml_xtokens::Event<Runtime>",
                "TypeId": 48
              }
            ],
            "Index": 38
          },
          {
            "Name": "Identity",
            "TypeFields": [
              {
                "TypeName": "pallet_identity::Event<Runtime>",
                "TypeId": 66
              }
            ],
            "Index": 40
          },
          {
            "Name": "Preimage",
            "TypeFields": [
              {
                "TypeName": "pallet_preimage::Event<Runtime>",
                "TypeId": 67
              }
            ],
            "Index": 41
          },
          {
            "Name": "Democracy",
            "TypeFields": [
              {
                "TypeName": "pallet_democracy::Event<Runtime>",
                "TypeId": 68
              }
            ],
            "Index": 42
          },
          {
            "Name": "Council",
            "TypeFields": [
              {
                "TypeName": "pallet_collective::Event<Runtime, pallet_collective::Instance1>",
                "TypeId": 73
              }
            ],
            "Index": 43
          },
          {
            "Name": "TechnicalCommittee",
            "TypeFields": [
              {
                "TypeName": "pallet_collective::Event<Runtime, pallet_collective::Instance2>",
                "TypeId": 75
              }
            ],
            "Index": 44
          },
          {
            "Name": "CouncilMembership",
            "TypeFields": [
              {
                "TypeName": "pallet_membership::Event<Runtime, pallet_membership::Instance1>",
                "TypeId": 76
              }
            ],
            "Index": 45
          },
          {
            "Name": "TechnicalCommitteeMembership",
            "TypeFields": [
              {
                "TypeName": "pallet_membership::Event<Runtime, pallet_membership::Instance2>",
                "TypeId": 77
              }
            ],
            "Index": 46
          },
          {
            "Name": "FellowshipCollective",
            "TypeFields": [
              {
                "TypeName": "pallet_ranked_collective::Event<Runtime>",
                "TypeId": 78
              }
            ],
            "Index": 47
          },
          {
            "Name": "FellowshipReferenda",
            "TypeFields": [
              {
                "TypeName": "pallet_referenda::Event<Runtime>",
                "TypeId": 82
              }
            ],
            "Index": 48
          },
          {
            "Name": "Scheduler",
            "TypeFields": [
              {
                "TypeName": "pallet_scheduler::Event<Runtime>",
                "TypeId": 362
              }
            ],
            "Index": 49
          },
          {
            "Name": "XcmpQueue",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_xcmp_queue::Event<Runtime>",
                "TypeId": 363
              }
            ],
            "Index": 50
          },
          {
            "Name": "PolkadotXcm",
            "TypeFields": [
              {
                "TypeName": "pallet_xcm::Event<Runtime>",
                "TypeId": 364
              }
            ],
            "Index": 51
          },
          {
            "Name": "CumulusXcm",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_xcm::Event<Runtime>",
                "TypeId": 366
              }
            ],
            "Index": 52
          },
          {
            "Name": "DmpQueue",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_dmp_queue::Event<Runtime>",
                "TypeId": 367
              }
            ],
            "Index": 53
          },
          {
            "Name": "Configuration",
            "TypeFields": [
              {
                "TypeName": "pallet_configuration::Event<Runtime>",
                "TypeId": 368
              }
            ],
            "Index": 63
          },
          {
            "Name": "Common",
            "TypeFields": [
              {
                "TypeName": "pallet_common::Event<Runtime>",
                "TypeId": 369
              }
            ],
            "Index": 66
          },
          {
            "Name": "Structure",
            "TypeFields": [
              {
                "TypeName": "pallet_structure::Event<Runtime>",
                "TypeId": 370
              }
            ],
            "Index": 70
          },
          {
            "Name": "AppPromotion",
            "TypeFields": [
              {
                "TypeName": "pallet_app_promotion::Event<Runtime>",
                "TypeId": 371
              }
            ],
            "Index": 73
          },
          {
            "Name": "ForeignAssets",
            "TypeFields": [
              {
                "TypeName": "pallet_foreign_assets::Event<Runtime>",
                "TypeId": 372
              }
            ],
            "Index": 80
          },
          {
            "Name": "EVM",
            "TypeFields": [
              {
                "TypeName": "pallet_evm::Event<Runtime>",
                "TypeId": 373
              }
            ],
            "Index": 100
          },
          {
            "Name": "Ethereum",
            "TypeFields": [
              {
                "TypeName": "pallet_ethereum::Event",
                "TypeId": 374
              }
            ],
            "Index": 101
          },
          {
            "Name": "EvmContractHelpers",
            "TypeFields": [
              {
                "TypeName": "pallet_evm_contract_helpers::Event<Runtime>",
                "TypeId": 383
              }
            ],
            "Index": 151
          },
          {
            "Name": "EvmMigration",
            "TypeFields": [
              {
                "TypeName": "pallet_evm_migration::Event<Runtime>",
                "TypeId": 384
              }
            ],
            "Index": 153
          },
          {
            "Name": "Maintenance",
            "TypeFields": [
              {
                "TypeName": "pallet_maintenance::Event<Runtime>",
                "TypeId": 385
              }
            ],
            "Index": 154
          },
          {
            "Name": "Utility",
            "TypeFields": [
              {
                "TypeName": "pallet_utility::Event",
                "TypeId": 386
              }
            ],
            "Index": 156
          },
          {
            "Name": "TestUtils",
            "TypeFields": [
              {
                "TypeName": "pallet_test_utils::Event<Runtime>",
                "TypeId": 387
              }
            ],
            "Index": 255
          }
        ],
        "Path": [
          "opal_runtime",
          "RuntimeEvent"
        ],
        "TypeDef": "Variant"
      },
      "21": {
        "Variants": [
          {
            "Name": "ExtrinsicSuccess",
            "TypeFields": [
              {
                "Name": "dispatch_info",
                "TypeName": "DispatchInfo",
                "TypeId": 22
              }
            ],
            "Index": 0,
            "Docs": [
              "An extrinsic completed successfully."
            ]
          },
          {
            "Name": "ExtrinsicFailed",
            "TypeFields": [
              {
                "Name": "dispatch_error",
                "TypeName": "DispatchError",
                "TypeId": 25
              },
              {
                "Name": "dispatch_info",
                "TypeName": "DispatchInfo",
                "TypeId": 22
              }
            ],
            "Index": 1,
            "Docs": [
              "An extrinsic failed."
            ]
          },
          {
            "Name": "CodeUpdated",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "`:code` was updated."
            ]
          },
          {
            "Name": "NewAccount",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 3,
            "Docs": [
              "A new account was created."
            ]
          },
          {
            "Name": "KilledAccount",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 4,
            "Docs": [
              "An account was reaped."
            ]
          },
          {
            "Name": "Remarked",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "On on-chain remark happened."
            ]
          }
        ],
        "Path": [
          "frame_system",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Event for the System pallet."
        ]
      },
      "22": {
        "TypeFields": [
          {
            "Name": "weight",
            "TypeName": "Weight",
            "TypeId": 9
          },
          {
            "Name": "class",
            "TypeName": "DispatchClass",
            "TypeId": 23
          },
          {
            "Name": "pays_fee",
            "TypeName": "Pays",
            "TypeId": 24
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "DispatchInfo"
        ],
        "TypeDef": "Composite"
      },
      "23": {
        "Variants": [
          {
            "Name": "Normal",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Operational",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Mandatory",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "DispatchClass"
        ],
        "TypeDef": "Variant"
      },
      "24": {
        "Variants": [
          {
            "Name": "Yes",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "No",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "Pays"
        ],
        "TypeDef": "Variant"
      },
      "25": {
        "Variants": [
          {
            "Name": "Other",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "CannotLookup",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "BadOrigin",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Module",
            "TypeFields": [
              {
                "TypeName": "ModuleError",
                "TypeId": 26
              }
            ],
            "Index": 3
          },
          {
            "Name": "ConsumerRemaining",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "NoProviders",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "TooManyConsumers",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Token",
            "TypeFields": [
              {
                "TypeName": "TokenError",
                "TypeId": 27
              }
            ],
            "Index": 7
          },
          {
            "Name": "Arithmetic",
            "TypeFields": [
              {
                "TypeName": "ArithmeticError",
                "TypeId": 28
              }
            ],
            "Index": 8
          },
          {
            "Name": "Transactional",
            "TypeFields": [
              {
                "TypeName": "TransactionalError",
                "TypeId": 29
              }
            ],
            "Index": 9
          },
          {
            "Name": "Exhausted",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "Corruption",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "Unavailable",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "RootNotAllowed",
            "TypeFields": null,
            "Index": 13
          }
        ],
        "Path": [
          "sp_runtime",
          "DispatchError"
        ],
        "TypeDef": "Variant"
      },
      "26": {
        "TypeFields": [
          {
            "Name": "index",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "error",
            "TypeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
            "TypeId": 17
          }
        ],
        "Path": [
          "sp_runtime",
          "ModuleError"
        ],
        "TypeDef": "Composite"
      },
      "27": {
        "Variants": [
          {
            "Name": "FundsUnavailable",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "OnlyProvider",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "BelowMinimum",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "CannotCreate",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "UnknownAsset",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Frozen",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Unsupported",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "CannotCreateHold",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "NotExpendable",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "Blocked",
            "TypeFields": null,
            "Index": 9
          }
        ],
        "Path": [
          "sp_runtime",
          "TokenError"
        ],
        "TypeDef": "Variant"
      },
      "28": {
        "Variants": [
          {
            "Name": "Underflow",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "DivisionByZero",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "sp_arithmetic",
          "ArithmeticError"
        ],
        "TypeDef": "Variant"
      },
      "29": {
        "Variants": [
          {
            "Name": "LimitReached",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NoLayer",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "sp_runtime",
          "TransactionalError"
        ],
        "TypeDef": "Variant"
      },
      "30": {
        "Variants": [
          {
            "Name": "Migrated",
            "TypeFields": [
              {
                "Name": "top",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "child",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "compute",
                "TypeName": "MigrationCompute",
                "TypeId": 31
              }
            ],
            "Index": 0,
            "Docs": [
              "Given number of `(top, child)` keys were migrated respectively, with the given",
              "`compute`."
            ]
          },
          {
            "Name": "Slashed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "Some account got slashed by the given amount."
            ]
          },
          {
            "Name": "AutoMigrationFinished",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The auto migration task finished."
            ]
          },
          {
            "Name": "Halted",
            "TypeFields": [
              {
                "Name": "error",
                "TypeName": "Error<T>",
                "TypeId": 32
              }
            ],
            "Index": 3,
            "Docs": [
              "Migration got halted due to an error or miss-configuration."
            ]
          }
        ],
        "Path": [
          "pallet_state_trie_migration",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Inner events of this pallet."
        ]
      },
      "31": {
        "Variants": [
          {
            "Name": "Signed",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Auto",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "pallet_state_trie_migration",
          "pallet",
          "MigrationCompute"
        ],
        "TypeDef": "Variant"
      },
      "32": {
        "Variants": [
          {
            "Name": "MaxSignedLimits",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Max signed limits not respected."
            ]
          },
          {
            "Name": "KeyTooLong",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "A key was longer than the configured maximum.",
              "",
              "This means that the migration halted at the current [`Progress`] and",
              "can be resumed with a larger [`crate::Config::MaxKeyLen`] value.",
              "Retrying with the same [`crate::Config::MaxKeyLen`] value will not work.",
              "The value should only be increased to avoid a storage migration for the currently",
              "stored [`crate::Progress::LastKey`]."
            ]
          },
          {
            "Name": "NotEnoughFunds",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "submitter does not have enough funds."
            ]
          },
          {
            "Name": "BadWitness",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Bad witness data provided."
            ]
          },
          {
            "Name": "SignedMigrationNotAllowed",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Signed migration is not allowed because the maximum limit is not set yet."
            ]
          },
          {
            "Name": "BadChildRoot",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Bad child root provided."
            ]
          }
        ],
        "Path": [
          "pallet_state_trie_migration",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "33": {
        "Variants": [
          {
            "Name": "ValidationFunctionStored",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The validation function has been scheduled to apply."
            ]
          },
          {
            "Name": "ValidationFunctionApplied",
            "TypeFields": [
              {
                "Name": "relay_chain_block_num",
                "TypeName": "RelayChainBlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "The validation function was applied as of the contained relay chain block number."
            ]
          },
          {
            "Name": "ValidationFunctionDiscarded",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The relay-chain aborted the upgrade process."
            ]
          },
          {
            "Name": "UpgradeAuthorized",
            "TypeFields": [
              {
                "Name": "code_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "An upgrade has been authorized."
            ]
          },
          {
            "Name": "DownwardMessagesReceived",
            "TypeFields": [
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "Some downward messages have been received and will be processed."
            ]
          },
          {
            "Name": "DownwardMessagesProcessed",
            "TypeFields": [
              {
                "Name": "weight_used",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "dmq_head",
                "TypeName": "relay_chain::Hash",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "Downward messages were processed using the given weight."
            ]
          },
          {
            "Name": "UpwardMessageSent",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "Option<XcmHash>",
                "TypeId": 34
              }
            ],
            "Index": 6,
            "Docs": [
              "An upward message was sent to the relay chain."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "34": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 1
          }
        ],
        "TypeDef": "Variant"
      },
      "35": {
        "Variants": [
          {
            "Name": "InvulnerableAdded",
            "TypeFields": [
              {
                "Name": "invulnerable",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0
          },
          {
            "Name": "InvulnerableRemoved",
            "TypeFields": [
              {
                "Name": "invulnerable",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "LicenseObtained",
            "TypeFields": [
              {
                "Name": "account_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2
          },
          {
            "Name": "LicenseReleased",
            "TypeFields": [
              {
                "Name": "account_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit_returned",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 3
          },
          {
            "Name": "CandidateAdded",
            "TypeFields": [
              {
                "Name": "account_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 4
          },
          {
            "Name": "CandidateRemoved",
            "TypeFields": [
              {
                "Name": "account_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "pallet_collator_selection",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "36": {
        "Variants": [
          {
            "Name": "NewSession",
            "TypeFields": [
              {
                "Name": "session_index",
                "TypeName": "SessionIndex",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "New session has happened. Note that the argument is the session index, not the",
              "block number as the type might suggest."
            ]
          }
        ],
        "Path": [
          "pallet_session",
          "pallet",
          "Event"
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "37": {
        "Variants": [
          {
            "Name": "Endowed",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "free_balance",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "An account was created with some free balance."
            ]
          },
          {
            "Name": "DustLost",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "An account was removed whose balance was non-zero but below ExistentialDeposit,",
              "resulting in an outright loss."
            ]
          },
          {
            "Name": "Transfer",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "Transfer succeeded."
            ]
          },
          {
            "Name": "BalanceSet",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "free",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 3,
            "Docs": [
              "A balance was set by root."
            ]
          },
          {
            "Name": "Reserved",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "Some balance was reserved (moved from free to reserved)."
            ]
          },
          {
            "Name": "Unreserved",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "Some balance was unreserved (moved from reserved to free)."
            ]
          },
          {
            "Name": "ReserveRepatriated",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "destination_status",
                "TypeName": "Status",
                "TypeId": 38
              }
            ],
            "Index": 6,
            "Docs": [
              "Some balance was moved from the reserve of the first account to the second account.",
              "Final argument indicates the destination balance type."
            ]
          },
          {
            "Name": "Deposit",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 7,
            "Docs": [
              "Some amount was deposited (e.g. for transaction fees)."
            ]
          },
          {
            "Name": "Withdraw",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "Some amount was withdrawn from the account (e.g. for transaction fees)."
            ]
          },
          {
            "Name": "Slashed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 9,
            "Docs": [
              "Some amount was removed from the account (e.g. for misbehavior)."
            ]
          },
          {
            "Name": "Minted",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 10,
            "Docs": [
              "Some amount was minted into an account."
            ]
          },
          {
            "Name": "Burned",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 11,
            "Docs": [
              "Some amount was burned from an account."
            ]
          },
          {
            "Name": "Suspended",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 12,
            "Docs": [
              "Some amount was suspended from an account (it can be restored later)."
            ]
          },
          {
            "Name": "Restored",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 13,
            "Docs": [
              "Some amount was restored into an account."
            ]
          },
          {
            "Name": "Upgraded",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 14,
            "Docs": [
              "An account was upgraded."
            ]
          },
          {
            "Name": "Issued",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 15,
            "Docs": [
              "Total issuance was increased by `amount`, creating a credit to be balanced."
            ]
          },
          {
            "Name": "Rescinded",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 16,
            "Docs": [
              "Total issuance was decreased by `amount`, creating a debt to be balanced."
            ]
          },
          {
            "Name": "Locked",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 17,
            "Docs": [
              "Some balance was locked."
            ]
          },
          {
            "Name": "Unlocked",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 18,
            "Docs": [
              "Some balance was unlocked."
            ]
          },
          {
            "Name": "Frozen",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 19,
            "Docs": [
              "Some balance was frozen."
            ]
          },
          {
            "Name": "Thawed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 20,
            "Docs": [
              "Some balance was thawed."
            ]
          }
        ],
        "Path": [
          "pallet_balances",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "38": {
        "Variants": [
          {
            "Name": "Free",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Reserved",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "tokens",
          "misc",
          "BalanceStatus"
        ],
        "TypeDef": "Variant"
      },
      "39": {
        "Variants": [
          {
            "Name": "TransactionFeePaid",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "actual_fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "tip",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
              "has been paid by `who`."
            ]
          }
        ],
        "Path": [
          "pallet_transaction_payment",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "40": {
        "Variants": [
          {
            "Name": "Proposed",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "New proposal."
            ]
          },
          {
            "Name": "Spending",
            "TypeFields": [
              {
                "Name": "budget_remaining",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "We have ended a spend period and will now allocate funds."
            ]
          },
          {
            "Name": "Awarded",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 4
              },
              {
                "Name": "award",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 2,
            "Docs": [
              "Some funds have been allocated."
            ]
          },
          {
            "Name": "Rejected",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 4
              },
              {
                "Name": "slashed",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 3,
            "Docs": [
              "A proposal was rejected; funds were slashed."
            ]
          },
          {
            "Name": "Burnt",
            "TypeFields": [
              {
                "Name": "burnt_funds",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "Some of our funds have been burnt."
            ]
          },
          {
            "Name": "Rollover",
            "TypeFields": [
              {
                "Name": "rollover_balance",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "Spending has finished; this is the amount that rolls over until next spend."
            ]
          },
          {
            "Name": "Deposit",
            "TypeFields": [
              {
                "Name": "value",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "Some funds have been deposited."
            ]
          },
          {
            "Name": "SpendApproved",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 4
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "beneficiary",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 7,
            "Docs": [
              "A new spend proposal has been approved."
            ]
          },
          {
            "Name": "UpdatedInactive",
            "TypeFields": [
              {
                "Name": "reactivated",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "deactivated",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "The inactive funds of the pallet have been updated."
            ]
          },
          {
            "Name": "AssetSpendApproved",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              },
              {
                "Name": "asset_kind",
                "TypeName": "T::AssetKind",
                "TypeId": 41
              },
              {
                "Name": "amount",
                "TypeName": "AssetBalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "beneficiary",
                "TypeName": "T::Beneficiary",
                "TypeId": 0
              },
              {
                "Name": "valid_from",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "expire_at",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 9,
            "Docs": [
              "A new asset spend proposal has been approved."
            ]
          },
          {
            "Name": "AssetSpendVoided",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              }
            ],
            "Index": 10,
            "Docs": [
              "An approved spend was voided."
            ]
          },
          {
            "Name": "Paid",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              },
              {
                "Name": "payment_id",
                "TypeName": "<T::Paymaster as Pay>::Id",
                "TypeId": 41
              }
            ],
            "Index": 11,
            "Docs": [
              "A payment happened."
            ]
          },
          {
            "Name": "PaymentFailed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              },
              {
                "Name": "payment_id",
                "TypeName": "<T::Paymaster as Pay>::Id",
                "TypeId": 41
              }
            ],
            "Index": 12,
            "Docs": [
              "A payment failed and can be retried."
            ]
          },
          {
            "Name": "SpendProcessed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              }
            ],
            "Index": 13,
            "Docs": [
              "A spend was processed and removed from the storage. It might have been successfully",
              "paid or it may have expired."
            ]
          }
        ],
        "Path": [
          "pallet_treasury",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "41": {
        "TypeIds": [],
        "TypeDef": "Tuple"
      },
      "42": {
        "Variants": [
          {
            "Name": "Sudid",
            "TypeFields": [
              {
                "Name": "sudo_result",
                "TypeName": "DispatchResult",
                "TypeId": 43,
                "Docs": [
                  "The result of the call made by the sudo user."
                ]
              }
            ],
            "Index": 0,
            "Docs": [
              "A sudo call just took place."
            ]
          },
          {
            "Name": "KeyChanged",
            "TypeFields": [
              {
                "Name": "old_sudoer",
                "TypeName": "Option<T::AccountId>",
                "TypeId": 44,
                "Docs": [
                  "The old sudo key if one was previously set."
                ]
              }
            ],
            "Index": 1,
            "Docs": [
              "The sudo key has been updated."
            ]
          },
          {
            "Name": "SudoAsDone",
            "TypeFields": [
              {
                "Name": "sudo_result",
                "TypeName": "DispatchResult",
                "TypeId": 43,
                "Docs": [
                  "The result of the call made by the sudo user."
                ]
              }
            ],
            "Index": 2,
            "Docs": [
              "A [sudo_as](Pallet::sudo_as) call just took place."
            ]
          }
        ],
        "Path": [
          "pallet_sudo",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "43": {
        "Variants": [
          {
            "Name": "Ok",
            "TypeFields": [
              {
                "TypeId": 41
              }
            ],
            "Index": 0
          },
          {
            "Name": "Err",
            "TypeFields": [
              {
                "TypeId": 25
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Result"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 41
          },
          {
            "Name": "E",
            "TypeId": 25
          }
        ],
        "TypeDef": "Variant"
      },
      "44": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 0
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "45": {
        "Variants": [
          {
            "Name": "VestingScheduleAdded",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "vesting_schedule",
                "TypeName": "VestingScheduleOf<T>",
                "TypeId": 46
              }
            ],
            "Index": 0,
            "Docs": [
              "Added new vesting schedule."
            ]
          },
          {
            "Name": "Claimed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "Claimed vesting."
            ]
          },
          {
            "Name": "VestingSchedulesUpdated",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 2,
            "Docs": [
              "Updated vesting schedules."
            ]
          }
        ],
        "Path": [
          "orml_vesting",
          "module",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "46": {
        "TypeFields": [
          {
            "Name": "start",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "period",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "period_count",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "per_period",
            "TypeName": "Balance",
            "TypeId": 47
          }
        ],
        "Path": [
          "orml_vesting",
          "VestingSchedule"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "47": {
        "TypeId": 6,
        "TypeDef": "Compact"
      },
      "48": {
        "Variants": [
          {
            "Name": "TransferredMultiAssets",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "fee",
                "TypeName": "MultiAsset",
                "TypeId": 51
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 0,
            "Docs": [
              "Transferred `MultiAsset` with fee."
            ]
          }
        ],
        "Path": [
          "orml_xtokens",
          "module",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "49": {
        "TypeFields": [
          {
            "TypeName": "Vec<MultiAsset>",
            "TypeId": 50
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "MultiAssets"
        ],
        "TypeDef": "Composite"
      },
      "50": {
        "TypeId": 51,
        "TypeDef": "Sequence"
      },
      "51": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "AssetId",
            "TypeId": 52
          },
          {
            "Name": "fun",
            "TypeName": "Fungibility",
            "TypeId": 62
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "MultiAsset"
        ],
        "TypeDef": "Composite"
      },
      "52": {
        "Variants": [
          {
            "Name": "Concrete",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 0
          },
          {
            "Name": "Abstract",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "AssetId"
        ],
        "TypeDef": "Variant"
      },
      "53": {
        "TypeFields": [
          {
            "Name": "parents",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "interior",
            "TypeName": "Junctions",
            "TypeId": 54
          }
        ],
        "Path": [
          "staging_xcm",
          "v3",
          "multilocation",
          "MultiLocation"
        ],
        "TypeDef": "Composite"
      },
      "54": {
        "Variants": [
          {
            "Name": "Here",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "X1",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 55
              }
            ],
            "Index": 1
          },
          {
            "Name": "X2",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              }
            ],
            "Index": 2
          },
          {
            "Name": "X3",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              }
            ],
            "Index": 3
          },
          {
            "Name": "X4",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              }
            ],
            "Index": 4
          },
          {
            "Name": "X5",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              }
            ],
            "Index": 5
          },
          {
            "Name": "X6",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              }
            ],
            "Index": 6
          },
          {
            "Name": "X7",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              }
            ],
            "Index": 7
          },
          {
            "Name": "X8",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              },
              {
                "TypeName": "Junction",
                "TypeId": 55
              }
            ],
            "Index": 8
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junctions",
          "Junctions"
        ],
        "TypeDef": "Variant"
      },
      "55": {
        "Variants": [
          {
            "Name": "Parachain",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 0
          },
          {
            "Name": "AccountId32",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 57
              },
              {
                "Name": "id",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "AccountIndex64",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 57
              },
              {
                "Name": "index",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 2
          },
          {
            "Name": "AccountKey20",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 57
              },
              {
                "Name": "key",
                "TypeName": "[u8; 20]",
                "TypeId": 59
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletInstance",
            "TypeFields": [
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 4
          },
          {
            "Name": "GeneralIndex",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 47
              }
            ],
            "Index": 5
          },
          {
            "Name": "GeneralKey",
            "TypeFields": [
              {
                "Name": "length",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "data",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 6
          },
          {
            "Name": "OnlyChild",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Plurality",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "BodyId",
                "TypeId": 60
              },
              {
                "Name": "part",
                "TypeName": "BodyPart",
                "TypeId": 61
              }
            ],
            "Index": 8
          },
          {
            "Name": "GlobalConsensus",
            "TypeFields": [
              {
                "TypeName": "NetworkId",
                "TypeId": 58
              }
            ],
            "Index": 9
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junction",
          "Junction"
        ],
        "TypeDef": "Variant"
      },
      "56": {
        "TypeId": 4,
        "TypeDef": "Compact"
      },
      "57": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 58
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 58
          }
        ],
        "TypeDef": "Variant"
      },
      "58": {
        "Variants": [
          {
            "Name": "ByGenesis",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 0
          },
          {
            "Name": "ByFork",
            "TypeFields": [
              {
                "Name": "block_number",
                "TypeName": "u64",
                "TypeId": 11
              },
              {
                "Name": "block_hash",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "Polkadot",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Kusama",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Westend",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Rococo",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Wococo",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Ethereum",
            "TypeFields": [
              {
                "Name": "chain_id",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 7
          },
          {
            "Name": "BitcoinCore",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "BitcoinCash",
            "TypeFields": null,
            "Index": 9
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junction",
          "NetworkId"
        ],
        "TypeDef": "Variant"
      },
      "59": {
        "Length": 20,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "60": {
        "Variants": [
          {
            "Name": "Unit",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Moniker",
            "TypeFields": [
              {
                "TypeName": "[u8; 4]",
                "TypeId": 17
              }
            ],
            "Index": 1
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 2
          },
          {
            "Name": "Executive",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Technical",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Legislative",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Judicial",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Defense",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Administration",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "Treasury",
            "TypeFields": null,
            "Index": 9
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junction",
          "BodyId"
        ],
        "TypeDef": "Variant"
      },
      "61": {
        "Variants": [
          {
            "Name": "Voice",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Members",
            "TypeFields": [
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 1
          },
          {
            "Name": "Fraction",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 2
          },
          {
            "Name": "AtLeastProportion",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 3
          },
          {
            "Name": "MoreThanProportion",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junction",
          "BodyPart"
        ],
        "TypeDef": "Variant"
      },
      "62": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 47
              }
            ],
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": [
              {
                "TypeName": "AssetInstance",
                "TypeId": 63
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "Fungibility"
        ],
        "TypeDef": "Variant"
      },
      "63": {
        "Variants": [
          {
            "Name": "Undefined",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 47
              }
            ],
            "Index": 1
          },
          {
            "Name": "Array4",
            "TypeFields": [
              {
                "TypeName": "[u8; 4]",
                "TypeId": 17
              }
            ],
            "Index": 2
          },
          {
            "Name": "Array8",
            "TypeFields": [
              {
                "TypeName": "[u8; 8]",
                "TypeId": 64
              }
            ],
            "Index": 3
          },
          {
            "Name": "Array16",
            "TypeFields": [
              {
                "TypeName": "[u8; 16]",
                "TypeId": 65
              }
            ],
            "Index": 4
          },
          {
            "Name": "Array32",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "AssetInstance"
        ],
        "TypeDef": "Variant"
      },
      "64": {
        "Length": 8,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "65": {
        "Length": 16,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "66": {
        "Variants": [
          {
            "Name": "IdentitySet",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0,
            "Docs": [
              "A name was set or reset (which will remove all judgements)."
            ]
          },
          {
            "Name": "IdentityCleared",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "A name was cleared, and the given balance returned."
            ]
          },
          {
            "Name": "IdentityKilled",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "A name was removed and the given balance slashed."
            ]
          },
          {
            "Name": "IdentitiesInserted",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "A number of identities and associated info were forcibly inserted."
            ]
          },
          {
            "Name": "IdentitiesRemoved",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "A number of identities and all associated info were forcibly removed."
            ]
          },
          {
            "Name": "JudgementRequested",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "registrar_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "A judgement was asked from a registrar."
            ]
          },
          {
            "Name": "JudgementUnrequested",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "registrar_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "A judgement request was retracted."
            ]
          },
          {
            "Name": "JudgementGiven",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "registrar_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 4
              }
            ],
            "Index": 7,
            "Docs": [
              "A judgement was given by a registrar."
            ]
          },
          {
            "Name": "RegistrarAdded",
            "TypeFields": [
              {
                "Name": "registrar_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 4
              }
            ],
            "Index": 8,
            "Docs": [
              "A registrar was added."
            ]
          },
          {
            "Name": "SubIdentityAdded",
            "TypeFields": [
              {
                "Name": "sub",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "main",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 9,
            "Docs": [
              "A sub-identity was added to an identity and the deposit paid."
            ]
          },
          {
            "Name": "SubIdentityRemoved",
            "TypeFields": [
              {
                "Name": "sub",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "main",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 10,
            "Docs": [
              "A sub-identity was removed from an identity and the deposit freed."
            ]
          },
          {
            "Name": "SubIdentityRevoked",
            "TypeFields": [
              {
                "Name": "sub",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "main",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 11,
            "Docs": [
              "A sub-identity was cleared, and the given deposit repatriated from the",
              "main identity account to the sub-identity account."
            ]
          },
          {
            "Name": "SubIdentitiesInserted",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 12,
            "Docs": [
              "A number of identities were forcibly updated with new sub-identities."
            ]
          }
        ],
        "Path": [
          "pallet_identity",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "67": {
        "Variants": [
          {
            "Name": "Noted",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 0,
            "Docs": [
              "A preimage has been noted."
            ]
          },
          {
            "Name": "Requested",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 1,
            "Docs": [
              "A preimage has been requested."
            ]
          },
          {
            "Name": "Cleared",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "A preimage has ben cleared."
            ]
          }
        ],
        "Path": [
          "pallet_preimage",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "68": {
        "Variants": [
          {
            "Name": "Proposed",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "PropIndex",
                "TypeId": 4
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "A motion has been proposed by a public account."
            ]
          },
          {
            "Name": "Tabled",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "PropIndex",
                "TypeId": 4
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "A public proposal has been tabled for referendum vote."
            ]
          },
          {
            "Name": "ExternalTabled",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "An external proposal has been tabled."
            ]
          },
          {
            "Name": "Started",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              },
              {
                "Name": "threshold",
                "TypeName": "VoteThreshold",
                "TypeId": 69
              }
            ],
            "Index": 3,
            "Docs": [
              "A referendum has begun."
            ]
          },
          {
            "Name": "Passed",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "A proposal has been approved by referendum."
            ]
          },
          {
            "Name": "NotPassed",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "A proposal has been rejected by referendum."
            ]
          },
          {
            "Name": "Cancelled",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "A referendum has been cancelled."
            ]
          },
          {
            "Name": "Delegated",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "target",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 7,
            "Docs": [
              "An account has delegated their vote to another account."
            ]
          },
          {
            "Name": "Undelegated",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 8,
            "Docs": [
              "An account has cancelled a previous delegation operation."
            ]
          },
          {
            "Name": "Vetoed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "until",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 9,
            "Docs": [
              "An external proposal has been vetoed."
            ]
          },
          {
            "Name": "Blacklisted",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 10,
            "Docs": [
              "A proposal_hash has been blacklisted permanently."
            ]
          },
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "voter",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              },
              {
                "Name": "vote",
                "TypeName": "AccountVote<BalanceOf<T>>",
                "TypeId": 70
              }
            ],
            "Index": 11,
            "Docs": [
              "An account has voted in a referendum"
            ]
          },
          {
            "Name": "Seconded",
            "TypeFields": [
              {
                "Name": "seconder",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "prop_index",
                "TypeName": "PropIndex",
                "TypeId": 4
              }
            ],
            "Index": 12,
            "Docs": [
              "An account has secconded a proposal"
            ]
          },
          {
            "Name": "ProposalCanceled",
            "TypeFields": [
              {
                "Name": "prop_index",
                "TypeName": "PropIndex",
                "TypeId": 4
              }
            ],
            "Index": 13,
            "Docs": [
              "A proposal got canceled."
            ]
          },
          {
            "Name": "MetadataSet",
            "TypeFields": [
              {
                "Name": "owner",
                "TypeName": "MetadataOwner",
                "TypeId": 72,
                "Docs": [
                  "Metadata owner."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 14,
            "Docs": [
              "Metadata for a proposal or a referendum has been set."
            ]
          },
          {
            "Name": "MetadataCleared",
            "TypeFields": [
              {
                "Name": "owner",
                "TypeName": "MetadataOwner",
                "TypeId": 72,
                "Docs": [
                  "Metadata owner."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 15,
            "Docs": [
              "Metadata for a proposal or a referendum has been cleared."
            ]
          },
          {
            "Name": "MetadataTransferred",
            "TypeFields": [
              {
                "Name": "prev_owner",
                "TypeName": "MetadataOwner",
                "TypeId": 72,
                "Docs": [
                  "Previous metadata owner."
                ]
              },
              {
                "Name": "owner",
                "TypeName": "MetadataOwner",
                "TypeId": 72,
                "Docs": [
                  "New metadata owner."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 16,
            "Docs": [
              "Metadata has been transferred to new owner."
            ]
          }
        ],
        "Path": [
          "pallet_democracy",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "69": {
        "Variants": [
          {
            "Name": "SuperMajorityApprove",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "SuperMajorityAgainst",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "SimpleMajority",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote_threshold",
          "VoteThreshold"
        ],
        "TypeDef": "Variant"
      },
      "70": {
        "Variants": [
          {
            "Name": "Standard",
            "TypeFields": [
              {
                "Name": "vote",
                "TypeName": "Vote",
                "TypeId": 71
              },
              {
                "Name": "balance",
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "Split",
            "TypeFields": [
              {
                "Name": "aye",
                "TypeName": "Balance",
                "TypeId": 6
              },
              {
                "Name": "nay",
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote",
          "AccountVote"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "71": {
        "TypeFields": [
          {
            "TypeId": 2
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote",
          "Vote"
        ],
        "TypeDef": "Composite"
      },
      "72": {
        "Variants": [
          {
            "Name": "External",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Proposal",
            "TypeFields": [
              {
                "TypeName": "PropIndex",
                "TypeId": 4
              }
            ],
            "Index": 1
          },
          {
            "Name": "Referendum",
            "TypeFields": [
              {
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "MetadataOwner"
        ],
        "TypeDef": "Variant"
      },
      "73": {
        "Variants": [
          {
            "Name": "Proposed",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 4
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "threshold",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "A motion (given hash) has been proposed (by given account) with a threshold (given",
              "`MemberCount`)."
            ]
          },
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "voted",
                "TypeName": "bool",
                "TypeId": 74
              },
              {
                "Name": "yes",
                "TypeName": "MemberCount",
                "TypeId": 4
              },
              {
                "Name": "no",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "A motion (given hash) has been voted on by given account, leaving",
              "a tally (yes votes and no votes given respectively as `MemberCount`)."
            ]
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "A motion was approved by the required threshold."
            ]
          },
          {
            "Name": "Disapproved",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "A motion was not approved by the required threshold."
            ]
          },
          {
            "Name": "Executed",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 43
              }
            ],
            "Index": 4,
            "Docs": [
              "A motion was executed; result will be `Ok` if it returned without error."
            ]
          },
          {
            "Name": "MemberExecuted",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 43
              }
            ],
            "Index": 5,
            "Docs": [
              "A single member did some action; result will be `Ok` if it returned without error."
            ]
          },
          {
            "Name": "Closed",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "yes",
                "TypeName": "MemberCount",
                "TypeId": 4
              },
              {
                "Name": "no",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "A proposal was closed because its threshold was reached or after its duration was up."
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "74": {
        "Primitive": "Bool",
        "TypeDef": "Primitive"
      },
      "75": {
        "Variants": [
          {
            "Name": "Proposed",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 4
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "threshold",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "A motion (given hash) has been proposed (by given account) with a threshold (given",
              "`MemberCount`)."
            ]
          },
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "voted",
                "TypeName": "bool",
                "TypeId": 74
              },
              {
                "Name": "yes",
                "TypeName": "MemberCount",
                "TypeId": 4
              },
              {
                "Name": "no",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "A motion (given hash) has been voted on by given account, leaving",
              "a tally (yes votes and no votes given respectively as `MemberCount`)."
            ]
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "A motion was approved by the required threshold."
            ]
          },
          {
            "Name": "Disapproved",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "A motion was not approved by the required threshold."
            ]
          },
          {
            "Name": "Executed",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 43
              }
            ],
            "Index": 4,
            "Docs": [
              "A motion was executed; result will be `Ok` if it returned without error."
            ]
          },
          {
            "Name": "MemberExecuted",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 43
              }
            ],
            "Index": 5,
            "Docs": [
              "A single member did some action; result will be `Ok` if it returned without error."
            ]
          },
          {
            "Name": "Closed",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "yes",
                "TypeName": "MemberCount",
                "TypeId": 4
              },
              {
                "Name": "no",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "A proposal was closed because its threshold was reached or after its duration was up."
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "76": {
        "Variants": [
          {
            "Name": "MemberAdded",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The given member was added; see the transaction for who."
            ]
          },
          {
            "Name": "MemberRemoved",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The given member was removed; see the transaction for who."
            ]
          },
          {
            "Name": "MembersSwapped",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Two members were swapped; see the transaction for who."
            ]
          },
          {
            "Name": "MembersReset",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The membership was reset; see the transaction for who the new set is."
            ]
          },
          {
            "Name": "KeyChanged",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "One of the members' keys changed."
            ]
          },
          {
            "Name": "Dummy",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Phantom member, never used."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "77": {
        "Variants": [
          {
            "Name": "MemberAdded",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The given member was added; see the transaction for who."
            ]
          },
          {
            "Name": "MemberRemoved",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The given member was removed; see the transaction for who."
            ]
          },
          {
            "Name": "MembersSwapped",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Two members were swapped; see the transaction for who."
            ]
          },
          {
            "Name": "MembersReset",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The membership was reset; see the transaction for who the new set is."
            ]
          },
          {
            "Name": "KeyChanged",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "One of the members' keys changed."
            ]
          },
          {
            "Name": "Dummy",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Phantom member, never used."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "78": {
        "Variants": [
          {
            "Name": "MemberAdded",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0,
            "Docs": [
              "A member `who` has been added."
            ]
          },
          {
            "Name": "RankChanged",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "rank",
                "TypeName": "Rank",
                "TypeId": 79
              }
            ],
            "Index": 1,
            "Docs": [
              "The member `who`se rank has been changed to the given `rank`."
            ]
          },
          {
            "Name": "MemberRemoved",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "rank",
                "TypeName": "Rank",
                "TypeId": 79
              }
            ],
            "Index": 2,
            "Docs": [
              "The member `who` of given `rank` has been removed from the collective."
            ]
          },
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "poll",
                "TypeName": "PollIndexOf<T, I>",
                "TypeId": 4
              },
              {
                "Name": "vote",
                "TypeName": "VoteRecord",
                "TypeId": 80
              },
              {
                "Name": "tally",
                "TypeName": "TallyOf<T, I>",
                "TypeId": 81
              }
            ],
            "Index": 3,
            "Docs": [
              "The member `who` has voted for the `poll` with the given `vote` leading to an updated",
              "`tally`."
            ]
          }
        ],
        "Path": [
          "pallet_ranked_collective",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "79": {
        "Primitive": "U16",
        "TypeDef": "Primitive"
      },
      "80": {
        "Variants": [
          {
            "Name": "Aye",
            "TypeFields": [
              {
                "TypeName": "Votes",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "Nay",
            "TypeFields": [
              {
                "TypeName": "Votes",
                "TypeId": 4
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_ranked_collective",
          "VoteRecord"
        ],
        "TypeDef": "Variant"
      },
      "81": {
        "TypeFields": [
          {
            "Name": "bare_ayes",
            "TypeName": "MemberIndex",
            "TypeId": 4
          },
          {
            "Name": "ayes",
            "TypeName": "Votes",
            "TypeId": 4
          },
          {
            "Name": "nays",
            "TypeName": "Votes",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_ranked_collective",
          "Tally"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          },
          {
            "Name": "M"
          }
        ],
        "TypeDef": "Composite"
      },
      "82": {
        "Variants": [
          {
            "Name": "Submitted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "track",
                "TypeName": "TrackIdOf<T, I>",
                "TypeId": 79,
                "Docs": [
                  "The track (and by extension proposal dispatch origin) of this referendum."
                ]
              },
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T, I>",
                "TypeId": 83,
                "Docs": [
                  "The proposal for the referendum."
                ]
              }
            ],
            "Index": 0,
            "Docs": [
              "A referendum has been submitted."
            ]
          },
          {
            "Name": "DecisionDepositPlaced",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "The account who placed the deposit."
                ]
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6,
                "Docs": [
                  "The amount placed by the account."
                ]
              }
            ],
            "Index": 1,
            "Docs": [
              "The decision deposit has been placed."
            ]
          },
          {
            "Name": "DecisionDepositRefunded",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "The account who placed the deposit."
                ]
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6,
                "Docs": [
                  "The amount placed by the account."
                ]
              }
            ],
            "Index": 2,
            "Docs": [
              "The decision deposit has been refunded."
            ]
          },
          {
            "Name": "DepositSlashed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "The account who placed the deposit."
                ]
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6,
                "Docs": [
                  "The amount placed by the account."
                ]
              }
            ],
            "Index": 3,
            "Docs": [
              "A deposit has been slashaed."
            ]
          },
          {
            "Name": "DecisionStarted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "track",
                "TypeName": "TrackIdOf<T, I>",
                "TypeId": 79,
                "Docs": [
                  "The track (and by extension proposal dispatch origin) of this referendum."
                ]
              },
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T, I>",
                "TypeId": 83,
                "Docs": [
                  "The proposal for the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 81,
                "Docs": [
                  "The current tally of votes in this referendum."
                ]
              }
            ],
            "Index": 4,
            "Docs": [
              "A referendum has moved into the deciding phase."
            ]
          },
          {
            "Name": "ConfirmStarted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              }
            ],
            "Index": 5
          },
          {
            "Name": "ConfirmAborted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              }
            ],
            "Index": 6
          },
          {
            "Name": "Confirmed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 81,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 7,
            "Docs": [
              "A referendum has ended its confirmation phase and is ready for approval."
            ]
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              }
            ],
            "Index": 8,
            "Docs": [
              "A referendum has been approved and its proposal has been scheduled."
            ]
          },
          {
            "Name": "Rejected",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 81,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 9,
            "Docs": [
              "A proposal has been rejected by referendum."
            ]
          },
          {
            "Name": "TimedOut",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 81,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 10,
            "Docs": [
              "A referendum has been timed out without being decided."
            ]
          },
          {
            "Name": "Cancelled",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 81,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 11,
            "Docs": [
              "A referendum has been cancelled."
            ]
          },
          {
            "Name": "Killed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 81,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 12,
            "Docs": [
              "A referendum has been killed."
            ]
          },
          {
            "Name": "SubmissionDepositRefunded",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "The account who placed the deposit."
                ]
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6,
                "Docs": [
                  "The amount placed by the account."
                ]
              }
            ],
            "Index": 13,
            "Docs": [
              "The submission deposit has been refunded."
            ]
          },
          {
            "Name": "MetadataSet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 14,
            "Docs": [
              "Metadata for a referendum has been set."
            ]
          },
          {
            "Name": "MetadataCleared",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 15,
            "Docs": [
              "Metadata for a referendum has been cleared."
            ]
          }
        ],
        "Path": [
          "pallet_referenda",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "83": {
        "Variants": [
          {
            "Name": "Legacy",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "H::Output",
                "TypeId": 12
              }
            ],
            "Index": 0
          },
          {
            "Name": "Inline",
            "TypeFields": [
              {
                "TypeName": "BoundedInline",
                "TypeId": 361
              }
            ],
            "Index": 1
          },
          {
            "Name": "Lookup",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "H::Output",
                "TypeId": 12
              },
              {
                "Name": "len",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "preimages",
          "Bounded"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 84
          },
          {
            "Name": "H",
            "TypeId": 360
          }
        ],
        "TypeDef": "Variant"
      },
      "84": {
        "Variants": [
          {
            "Name": "System",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                "TypeId": 85
              }
            ],
            "Index": 0
          },
          {
            "Name": "StateTrieMigration",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<StateTrieMigration, Runtime>",
                "TypeId": 89
              }
            ],
            "Index": 1
          },
          {
            "Name": "ParachainSystem",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainSystem, Runtime>",
                "TypeId": 95
              }
            ],
            "Index": 20
          },
          {
            "Name": "ParachainInfo",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainInfo, Runtime>",
                "TypeId": 109
              }
            ],
            "Index": 21
          },
          {
            "Name": "CollatorSelection",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CollatorSelection, Runtime>",
                "TypeId": 110
              }
            ],
            "Index": 23
          },
          {
            "Name": "Session",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                "TypeId": 111
              }
            ],
            "Index": 24
          },
          {
            "Name": "Balances",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                "TypeId": 115
              }
            ],
            "Index": 30
          },
          {
            "Name": "Timestamp",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                "TypeId": 119
              }
            ],
            "Index": 32
          },
          {
            "Name": "Treasury",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Treasury, Runtime>",
                "TypeId": 120
              }
            ],
            "Index": 34
          },
          {
            "Name": "Sudo",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>",
                "TypeId": 122
              }
            ],
            "Index": 35
          },
          {
            "Name": "Vesting",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vesting, Runtime>",
                "TypeId": 123
              }
            ],
            "Index": 37
          },
          {
            "Name": "XTokens",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XTokens, Runtime>",
                "TypeId": 125
              }
            ],
            "Index": 38
          },
          {
            "Name": "Identity",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Identity, Runtime>",
                "TypeId": 146
              }
            ],
            "Index": 40
          },
          {
            "Name": "Preimage",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Preimage, Runtime>",
                "TypeId": 196
              }
            ],
            "Index": 41
          },
          {
            "Name": "Democracy",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Democracy, Runtime>",
                "TypeId": 198
              }
            ],
            "Index": 42
          },
          {
            "Name": "Council",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Council, Runtime>",
                "TypeId": 201
              }
            ],
            "Index": 43
          },
          {
            "Name": "TechnicalCommittee",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalCommittee, Runtime>",
                "TypeId": 202
              }
            ],
            "Index": 44
          },
          {
            "Name": "CouncilMembership",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CouncilMembership, Runtime>",
                "TypeId": 203
              }
            ],
            "Index": 45
          },
          {
            "Name": "TechnicalCommitteeMembership",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalCommitteeMembership, Runtime>",
                "TypeId": 204
              }
            ],
            "Index": 46
          },
          {
            "Name": "FellowshipCollective",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FellowshipCollective, Runtime>",
                "TypeId": 205
              }
            ],
            "Index": 47
          },
          {
            "Name": "FellowshipReferenda",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FellowshipReferenda, Runtime>",
                "TypeId": 206
              }
            ],
            "Index": 48
          },
          {
            "Name": "Scheduler",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Scheduler, Runtime>",
                "TypeId": 218
              }
            ],
            "Index": 49
          },
          {
            "Name": "XcmpQueue",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmpQueue, Runtime>",
                "TypeId": 221
              }
            ],
            "Index": 50
          },
          {
            "Name": "PolkadotXcm",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotXcm, Runtime>",
                "TypeId": 222
              }
            ],
            "Index": 51
          },
          {
            "Name": "CumulusXcm",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CumulusXcm, Runtime>",
                "TypeId": 263
              }
            ],
            "Index": 52
          },
          {
            "Name": "DmpQueue",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DmpQueue, Runtime>",
                "TypeId": 264
              }
            ],
            "Index": 53
          },
          {
            "Name": "Inflation",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Inflation, Runtime>",
                "TypeId": 265
              }
            ],
            "Index": 60
          },
          {
            "Name": "Unique",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Unique, Runtime>",
                "TypeId": 266
              }
            ],
            "Index": 61
          },
          {
            "Name": "Configuration",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Configuration, Runtime>",
                "TypeId": 320
              }
            ],
            "Index": 63
          },
          {
            "Name": "Structure",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Structure, Runtime>",
                "TypeId": 327
              }
            ],
            "Index": 70
          },
          {
            "Name": "AppPromotion",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AppPromotion, Runtime>",
                "TypeId": 328
              }
            ],
            "Index": 73
          },
          {
            "Name": "ForeignAssets",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ForeignAssets, Runtime>",
                "TypeId": 330
              }
            ],
            "Index": 80
          },
          {
            "Name": "EVM",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<EVM, Runtime>",
                "TypeId": 333
              }
            ],
            "Index": 100
          },
          {
            "Name": "Ethereum",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Ethereum, Runtime>",
                "TypeId": 339
              }
            ],
            "Index": 101
          },
          {
            "Name": "EvmContractHelpers",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<EvmContractHelpers, Runtime>",
                "TypeId": 349
              }
            ],
            "Index": 151
          },
          {
            "Name": "EvmMigration",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<EvmMigration, Runtime>",
                "TypeId": 351
              }
            ],
            "Index": 153
          },
          {
            "Name": "Maintenance",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Maintenance, Runtime>",
                "TypeId": 356
              }
            ],
            "Index": 154
          },
          {
            "Name": "Utility",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                "TypeId": 357
              }
            ],
            "Index": 156
          },
          {
            "Name": "TestUtils",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TestUtils, Runtime>",
                "TypeId": 359
              }
            ],
            "Index": 255
          }
        ],
        "Path": [
          "opal_runtime",
          "RuntimeCall"
        ],
        "TypeDef": "Variant"
      },
      "85": {
        "Variants": [
          {
            "Name": "remark",
            "TypeFields": [
              {
                "Name": "remark",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::remark`]."
            ]
          },
          {
            "Name": "set_heap_pages",
            "TypeFields": [
              {
                "Name": "pages",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_heap_pages`]."
            ]
          },
          {
            "Name": "set_code",
            "TypeFields": [
              {
                "Name": "code",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::set_code`]."
            ]
          },
          {
            "Name": "set_code_without_checks",
            "TypeFields": [
              {
                "Name": "code",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::set_code_without_checks`]."
            ]
          },
          {
            "Name": "set_storage",
            "TypeFields": [
              {
                "Name": "items",
                "TypeName": "Vec<KeyValue>",
                "TypeId": 86
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::set_storage`]."
            ]
          },
          {
            "Name": "kill_storage",
            "TypeFields": [
              {
                "Name": "keys",
                "TypeName": "Vec<Key>",
                "TypeId": 88
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::kill_storage`]."
            ]
          },
          {
            "Name": "kill_prefix",
            "TypeFields": [
              {
                "Name": "prefix",
                "TypeName": "Key",
                "TypeId": 13
              },
              {
                "Name": "subkeys",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::kill_prefix`]."
            ]
          },
          {
            "Name": "remark_with_event",
            "TypeFields": [
              {
                "Name": "remark",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::remark_with_event`]."
            ]
          }
        ],
        "Path": [
          "frame_system",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "86": {
        "TypeId": 87,
        "TypeDef": "Sequence"
      },
      "87": {
        "TypeIds": [
          13,
          13
        ],
        "TypeDef": "Tuple"
      },
      "88": {
        "TypeId": 13,
        "TypeDef": "Sequence"
      },
      "89": {
        "Variants": [
          {
            "Name": "control_auto_migration",
            "TypeFields": [
              {
                "Name": "maybe_config",
                "TypeName": "Option<MigrationLimits>",
                "TypeId": 90
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::control_auto_migration`]."
            ]
          },
          {
            "Name": "continue_migrate",
            "TypeFields": [
              {
                "Name": "limits",
                "TypeName": "MigrationLimits",
                "TypeId": 91
              },
              {
                "Name": "real_size_upper",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "witness_task",
                "TypeName": "MigrationTask<T>",
                "TypeId": 92
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::continue_migrate`]."
            ]
          },
          {
            "Name": "migrate_custom_top",
            "TypeFields": [
              {
                "Name": "keys",
                "TypeName": "Vec<Vec<u8>>",
                "TypeId": 88
              },
              {
                "Name": "witness_size",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::migrate_custom_top`]."
            ]
          },
          {
            "Name": "migrate_custom_child",
            "TypeFields": [
              {
                "Name": "root",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "child_keys",
                "TypeName": "Vec<Vec<u8>>",
                "TypeId": 88
              },
              {
                "Name": "total_size",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::migrate_custom_child`]."
            ]
          },
          {
            "Name": "set_signed_max_limits",
            "TypeFields": [
              {
                "Name": "limits",
                "TypeName": "MigrationLimits",
                "TypeId": 91
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::set_signed_max_limits`]."
            ]
          },
          {
            "Name": "force_set_progress",
            "TypeFields": [
              {
                "Name": "progress_top",
                "TypeName": "ProgressOf<T>",
                "TypeId": 93
              },
              {
                "Name": "progress_child",
                "TypeName": "ProgressOf<T>",
                "TypeId": 93
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::force_set_progress`]."
            ]
          }
        ],
        "Path": [
          "pallet_state_trie_migration",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "90": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 91
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 91
          }
        ],
        "TypeDef": "Variant"
      },
      "91": {
        "TypeFields": [
          {
            "Name": "size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "item",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_state_trie_migration",
          "pallet",
          "MigrationLimits"
        ],
        "TypeDef": "Composite"
      },
      "92": {
        "TypeFields": [
          {
            "Name": "progress_top",
            "TypeName": "ProgressOf<T>",
            "TypeId": 93
          },
          {
            "Name": "progress_child",
            "TypeName": "ProgressOf<T>",
            "TypeId": 93
          },
          {
            "Name": "size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "top_items",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "child_items",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_state_trie_migration",
          "pallet",
          "MigrationTask"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "93": {
        "Variants": [
          {
            "Name": "ToStart",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "LastKey",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<u8, MaxKeyLen>",
                "TypeId": 94
              }
            ],
            "Index": 1
          },
          {
            "Name": "Complete",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_state_trie_migration",
          "pallet",
          "Progress"
        ],
        "TypeParams": [
          {
            "Name": "MaxKeyLen"
          }
        ],
        "TypeDef": "Variant"
      },
      "94": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "95": {
        "Variants": [
          {
            "Name": "set_validation_data",
            "TypeFields": [
              {
                "Name": "data",
                "TypeName": "ParachainInherentData",
                "TypeId": 96
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_validation_data`]."
            ]
          },
          {
            "Name": "sudo_send_upward_message",
            "TypeFields": [
              {
                "Name": "message",
                "TypeName": "UpwardMessage",
                "TypeId": 13
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::sudo_send_upward_message`]."
            ]
          },
          {
            "Name": "authorize_upgrade",
            "TypeFields": [
              {
                "Name": "code_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "check_version",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::authorize_upgrade`]."
            ]
          },
          {
            "Name": "enact_authorized_upgrade",
            "TypeFields": [
              {
                "Name": "code",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::enact_authorized_upgrade`]."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "96": {
        "TypeFields": [
          {
            "Name": "validation_data",
            "TypeName": "PersistedValidationData",
            "TypeId": 97
          },
          {
            "Name": "relay_chain_state",
            "TypeName": "sp_trie::StorageProof",
            "TypeId": 99
          },
          {
            "Name": "downward_messages",
            "TypeName": "Vec<InboundDownwardMessage>",
            "TypeId": 101
          },
          {
            "Name": "horizontal_messages",
            "TypeName": "BTreeMap<ParaId, Vec<InboundHrmpMessage>>",
            "TypeId": 103
          }
        ],
        "Path": [
          "cumulus_primitives_parachain_inherent",
          "ParachainInherentData"
        ],
        "TypeDef": "Composite"
      },
      "97": {
        "TypeFields": [
          {
            "Name": "parent_head",
            "TypeName": "HeadData",
            "TypeId": 98
          },
          {
            "Name": "relay_parent_number",
            "TypeName": "N",
            "TypeId": 4
          },
          {
            "Name": "relay_parent_storage_root",
            "TypeName": "H",
            "TypeId": 12
          },
          {
            "Name": "max_pov_size",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "PersistedValidationData"
        ],
        "TypeParams": [
          {
            "Name": "H",
            "TypeId": 12
          },
          {
            "Name": "N",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "98": {
        "TypeFields": [
          {
            "TypeName": "Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "polkadot_parachain_primitives",
          "primitives",
          "HeadData"
        ],
        "TypeDef": "Composite"
      },
      "99": {
        "TypeFields": [
          {
            "Name": "trie_nodes",
            "TypeName": "BTreeSet<Vec<u8>>",
            "TypeId": 100
          }
        ],
        "Path": [
          "sp_trie",
          "storage_proof",
          "StorageProof"
        ],
        "TypeDef": "Composite"
      },
      "100": {
        "TypeFields": [
          {
            "TypeId": 88
          }
        ],
        "Path": [
          "BTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 13
          }
        ],
        "TypeDef": "Composite"
      },
      "101": {
        "TypeId": 102,
        "TypeDef": "Sequence"
      },
      "102": {
        "TypeFields": [
          {
            "Name": "sent_at",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "msg",
            "TypeName": "DownwardMessage",
            "TypeId": 13
          }
        ],
        "Path": [
          "polkadot_core_primitives",
          "InboundDownwardMessage"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "103": {
        "TypeFields": [
          {
            "TypeId": 107
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 104
          },
          {
            "Name": "V",
            "TypeId": 105
          }
        ],
        "TypeDef": "Composite"
      },
      "104": {
        "TypeFields": [
          {
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "polkadot_parachain_primitives",
          "primitives",
          "Id"
        ],
        "TypeDef": "Composite"
      },
      "105": {
        "TypeId": 106,
        "TypeDef": "Sequence"
      },
      "106": {
        "TypeFields": [
          {
            "Name": "sent_at",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "data",
            "TypeName": "sp_std::vec::Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "polkadot_core_primitives",
          "InboundHrmpMessage"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "107": {
        "TypeId": 108,
        "TypeDef": "Sequence"
      },
      "108": {
        "TypeIds": [
          104,
          105
        ],
        "TypeDef": "Tuple"
      },
      "109": {
        "Variants": null,
        "Path": [
          "staging_parachain_info",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "110": {
        "Variants": [
          {
            "Name": "add_invulnerable",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_invulnerable`]."
            ]
          },
          {
            "Name": "remove_invulnerable",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::remove_invulnerable`]."
            ]
          },
          {
            "Name": "get_license",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "See [`Pallet::get_license`]."
            ]
          },
          {
            "Name": "onboard",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "See [`Pallet::onboard`]."
            ]
          },
          {
            "Name": "offboard",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "See [`Pallet::offboard`]."
            ]
          },
          {
            "Name": "release_license",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "See [`Pallet::release_license`]."
            ]
          },
          {
            "Name": "force_release_license",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::force_release_license`]."
            ]
          }
        ],
        "Path": [
          "pallet_collator_selection",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "111": {
        "Variants": [
          {
            "Name": "set_keys",
            "TypeFields": [
              {
                "Name": "keys",
                "TypeName": "T::Keys",
                "TypeId": 112
              },
              {
                "Name": "proof",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_keys`]."
            ]
          },
          {
            "Name": "purge_keys",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "See [`Pallet::purge_keys`]."
            ]
          }
        ],
        "Path": [
          "pallet_session",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "112": {
        "TypeFields": [
          {
            "Name": "aura",
            "TypeName": "<Aura as $crate::BoundToRuntimeAppPublic>::Public",
            "TypeId": 113
          }
        ],
        "Path": [
          "opal_runtime",
          "runtime_common",
          "SessionKeys"
        ],
        "TypeDef": "Composite"
      },
      "113": {
        "TypeFields": [
          {
            "TypeName": "sr25519::Public",
            "TypeId": 114
          }
        ],
        "Path": [
          "sp_consensus_aura",
          "sr25519",
          "app_sr25519",
          "Public"
        ],
        "TypeDef": "Composite"
      },
      "114": {
        "TypeFields": [
          {
            "TypeName": "[u8; 32]",
            "TypeId": 1
          }
        ],
        "Path": [
          "sp_core",
          "sr25519",
          "Public"
        ],
        "TypeDef": "Composite"
      },
      "115": {
        "Variants": [
          {
            "Name": "transfer_allow_death",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "value",
                "TypeName": "T::Balance",
                "TypeId": 47
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::transfer_allow_death`]."
            ]
          },
          {
            "Name": "force_transfer",
            "TypeFields": [
              {
                "Name": "source",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "value",
                "TypeName": "T::Balance",
                "TypeId": 47
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::force_transfer`]."
            ]
          },
          {
            "Name": "transfer_keep_alive",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "value",
                "TypeName": "T::Balance",
                "TypeId": 47
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::transfer_keep_alive`]."
            ]
          },
          {
            "Name": "transfer_all",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "keep_alive",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::transfer_all`]."
            ]
          },
          {
            "Name": "force_unreserve",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::force_unreserve`]."
            ]
          },
          {
            "Name": "upgrade_accounts",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 118
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::upgrade_accounts`]."
            ]
          },
          {
            "Name": "force_set_balance",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "new_free",
                "TypeName": "T::Balance",
                "TypeId": 47
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::force_set_balance`]."
            ]
          }
        ],
        "Path": [
          "pallet_balances",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "116": {
        "Variants": [
          {
            "Name": "Id",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "AccountIndex",
                "TypeId": 117
              }
            ],
            "Index": 1
          },
          {
            "Name": "Raw",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 2
          },
          {
            "Name": "Address32",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 3
          },
          {
            "Name": "Address20",
            "TypeFields": [
              {
                "TypeName": "[u8; 20]",
                "TypeId": 59
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "sp_runtime",
          "multiaddress",
          "MultiAddress"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "AccountIndex",
            "TypeId": 41
          }
        ],
        "TypeDef": "Variant"
      },
      "117": {
        "TypeId": 41,
        "TypeDef": "Compact"
      },
      "118": {
        "TypeId": 0,
        "TypeDef": "Sequence"
      },
      "119": {
        "Variants": [
          {
            "Name": "set",
            "TypeFields": [
              {
                "Name": "now",
                "TypeName": "T::Moment",
                "TypeId": 10
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set`]."
            ]
          }
        ],
        "Path": [
          "pallet_timestamp",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "120": {
        "Variants": [
          {
            "Name": "propose_spend",
            "TypeFields": [
              {
                "Name": "value",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 47
              },
              {
                "Name": "beneficiary",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::propose_spend`]."
            ]
          },
          {
            "Name": "reject_proposal",
            "TypeFields": [
              {
                "Name": "proposal_id",
                "TypeName": "ProposalIndex",
                "TypeId": 56
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::reject_proposal`]."
            ]
          },
          {
            "Name": "approve_proposal",
            "TypeFields": [
              {
                "Name": "proposal_id",
                "TypeName": "ProposalIndex",
                "TypeId": 56
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::approve_proposal`]."
            ]
          },
          {
            "Name": "spend_local",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 47
              },
              {
                "Name": "beneficiary",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::spend_local`]."
            ]
          },
          {
            "Name": "remove_approval",
            "TypeFields": [
              {
                "Name": "proposal_id",
                "TypeName": "ProposalIndex",
                "TypeId": 56
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::remove_approval`]."
            ]
          },
          {
            "Name": "spend",
            "TypeFields": [
              {
                "Name": "asset_kind",
                "TypeName": "Box<T::AssetKind>",
                "TypeId": 41
              },
              {
                "Name": "amount",
                "TypeName": "AssetBalanceOf<T, I>",
                "TypeId": 47
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<BeneficiaryLookupOf<T, I>>",
                "TypeId": 0
              },
              {
                "Name": "valid_from",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 121
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::spend`]."
            ]
          },
          {
            "Name": "payout",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::payout`]."
            ]
          },
          {
            "Name": "check_status",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::check_status`]."
            ]
          },
          {
            "Name": "void_spend",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::void_spend`]."
            ]
          }
        ],
        "Path": [
          "pallet_treasury",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "121": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 4
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 4
          }
        ],
        "TypeDef": "Variant"
      },
      "122": {
        "Variants": [
          {
            "Name": "sudo",
            "TypeFields": [
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 84
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::sudo`]."
            ]
          },
          {
            "Name": "sudo_unchecked_weight",
            "TypeFields": [
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 84
              },
              {
                "Name": "weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::sudo_unchecked_weight`]."
            ]
          },
          {
            "Name": "set_key",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::set_key`]."
            ]
          },
          {
            "Name": "sudo_as",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 84
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::sudo_as`]."
            ]
          }
        ],
        "Path": [
          "pallet_sudo",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "123": {
        "Variants": [
          {
            "Name": "claim",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "See [`Pallet::claim`]."
            ]
          },
          {
            "Name": "vested_transfer",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 116
              },
              {
                "Name": "schedule",
                "TypeName": "VestingScheduleOf<T>",
                "TypeId": 46
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::vested_transfer`]."
            ]
          },
          {
            "Name": "update_vesting_schedules",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 116
              },
              {
                "Name": "vesting_schedules",
                "TypeName": "Vec<VestingScheduleOf<T>>",
                "TypeId": 124
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::update_vesting_schedules`]."
            ]
          },
          {
            "Name": "claim_for",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 116
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::claim_for`]."
            ]
          }
        ],
        "Path": [
          "orml_vesting",
          "module",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "124": {
        "TypeId": 46,
        "TypeDef": "Sequence"
      },
      "125": {
        "Variants": [
          {
            "Name": "transfer",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 126
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "dest",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "dest_weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 135
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::transfer`]."
            ]
          },
          {
            "Name": "transfer_multiasset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Box<VersionedMultiAsset>",
                "TypeId": 136
              },
              {
                "Name": "dest",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "dest_weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 135
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::transfer_multiasset`]."
            ]
          },
          {
            "Name": "transfer_with_fee",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 126
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "fee",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "dest",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "dest_weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 135
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::transfer_with_fee`]."
            ]
          },
          {
            "Name": "transfer_multiasset_with_fee",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Box<VersionedMultiAsset>",
                "TypeId": 136
              },
              {
                "Name": "fee",
                "TypeName": "Box<VersionedMultiAsset>",
                "TypeId": 136
              },
              {
                "Name": "dest",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "dest_weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 135
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::transfer_multiasset_with_fee`]."
            ]
          },
          {
            "Name": "transfer_multicurrencies",
            "TypeFields": [
              {
                "Name": "currencies",
                "TypeName": "Vec<(T::CurrencyId, T::Balance)>",
                "TypeId": 141
              },
              {
                "Name": "fee_item",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "dest",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "dest_weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 135
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::transfer_multicurrencies`]."
            ]
          },
          {
            "Name": "transfer_multiassets",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Box<VersionedMultiAssets>",
                "TypeId": 143
              },
              {
                "Name": "fee_item",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "dest",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "dest_weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 135
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::transfer_multiassets`]."
            ]
          }
        ],
        "Path": [
          "orml_xtokens",
          "module",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "126": {
        "TypeFields": [
          {
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "up_data_structs",
          "CollectionId"
        ],
        "TypeDef": "Composite"
      },
      "127": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::MultiLocation",
                "TypeId": 128
              }
            ],
            "Index": 1
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "VersionedMultiLocation"
        ],
        "TypeDef": "Variant"
      },
      "128": {
        "TypeFields": [
          {
            "Name": "parents",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "interior",
            "TypeName": "Junctions",
            "TypeId": 129
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multilocation",
          "MultiLocation"
        ],
        "TypeDef": "Composite"
      },
      "129": {
        "Variants": [
          {
            "Name": "Here",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "X1",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 130
              }
            ],
            "Index": 1
          },
          {
            "Name": "X2",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              }
            ],
            "Index": 2
          },
          {
            "Name": "X3",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              }
            ],
            "Index": 3
          },
          {
            "Name": "X4",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              }
            ],
            "Index": 4
          },
          {
            "Name": "X5",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              }
            ],
            "Index": 5
          },
          {
            "Name": "X6",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              }
            ],
            "Index": 6
          },
          {
            "Name": "X7",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              }
            ],
            "Index": 7
          },
          {
            "Name": "X8",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              },
              {
                "TypeName": "Junction",
                "TypeId": 130
              }
            ],
            "Index": 8
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multilocation",
          "Junctions"
        ],
        "TypeDef": "Variant"
      },
      "130": {
        "Variants": [
          {
            "Name": "Parachain",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 0
          },
          {
            "Name": "AccountId32",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 131
              },
              {
                "Name": "id",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "AccountIndex64",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 131
              },
              {
                "Name": "index",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 2
          },
          {
            "Name": "AccountKey20",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 131
              },
              {
                "Name": "key",
                "TypeName": "[u8; 20]",
                "TypeId": 59
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletInstance",
            "TypeFields": [
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 4
          },
          {
            "Name": "GeneralIndex",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 47
              }
            ],
            "Index": 5
          },
          {
            "Name": "GeneralKey",
            "TypeFields": [
              {
                "TypeName": "WeakBoundedVec<u8, ConstU32<32>>",
                "TypeId": 132
              }
            ],
            "Index": 6
          },
          {
            "Name": "OnlyChild",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Plurality",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "BodyId",
                "TypeId": 133
              },
              {
                "Name": "part",
                "TypeName": "BodyPart",
                "TypeId": 134
              }
            ],
            "Index": 8
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "junction",
          "Junction"
        ],
        "TypeDef": "Variant"
      },
      "131": {
        "Variants": [
          {
            "Name": "Any",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Named",
            "TypeFields": [
              {
                "TypeName": "WeakBoundedVec<u8, ConstU32<32>>",
                "TypeId": 132
              }
            ],
            "Index": 1
          },
          {
            "Name": "Polkadot",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Kusama",
            "TypeFields": null,
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "NetworkId"
        ],
        "TypeDef": "Variant"
      },
      "132": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "weak_bounded_vec",
          "WeakBoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "133": {
        "Variants": [
          {
            "Name": "Unit",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Named",
            "TypeFields": [
              {
                "TypeName": "WeakBoundedVec<u8, ConstU32<32>>",
                "TypeId": 132
              }
            ],
            "Index": 1
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 2
          },
          {
            "Name": "Executive",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Technical",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Legislative",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Judicial",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Defense",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Administration",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "Treasury",
            "TypeFields": null,
            "Index": 9
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "BodyId"
        ],
        "TypeDef": "Variant"
      },
      "134": {
        "Variants": [
          {
            "Name": "Voice",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Members",
            "TypeFields": [
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 1
          },
          {
            "Name": "Fraction",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 2
          },
          {
            "Name": "AtLeastProportion",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 3
          },
          {
            "Name": "MoreThanProportion",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "BodyPart"
        ],
        "TypeDef": "Variant"
      },
      "135": {
        "Variants": [
          {
            "Name": "Unlimited",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Limited",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "WeightLimit"
        ],
        "TypeDef": "Variant"
      },
      "136": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::MultiAsset",
                "TypeId": 137
              }
            ],
            "Index": 1
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::MultiAsset",
                "TypeId": 51
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "VersionedMultiAsset"
        ],
        "TypeDef": "Variant"
      },
      "137": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "AssetId",
            "TypeId": 138
          },
          {
            "Name": "fun",
            "TypeName": "Fungibility",
            "TypeId": 139
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "MultiAsset"
        ],
        "TypeDef": "Composite"
      },
      "138": {
        "Variants": [
          {
            "Name": "Concrete",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 128
              }
            ],
            "Index": 0
          },
          {
            "Name": "Abstract",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "AssetId"
        ],
        "TypeDef": "Variant"
      },
      "139": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 47
              }
            ],
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": [
              {
                "TypeName": "AssetInstance",
                "TypeId": 140
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "Fungibility"
        ],
        "TypeDef": "Variant"
      },
      "140": {
        "Variants": [
          {
            "Name": "Undefined",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 47
              }
            ],
            "Index": 1
          },
          {
            "Name": "Array4",
            "TypeFields": [
              {
                "TypeName": "[u8; 4]",
                "TypeId": 17
              }
            ],
            "Index": 2
          },
          {
            "Name": "Array8",
            "TypeFields": [
              {
                "TypeName": "[u8; 8]",
                "TypeId": 64
              }
            ],
            "Index": 3
          },
          {
            "Name": "Array16",
            "TypeFields": [
              {
                "TypeName": "[u8; 16]",
                "TypeId": 65
              }
            ],
            "Index": 4
          },
          {
            "Name": "Array32",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 5
          },
          {
            "Name": "Blob",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 6
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "AssetInstance"
        ],
        "TypeDef": "Variant"
      },
      "141": {
        "TypeId": 142,
        "TypeDef": "Sequence"
      },
      "142": {
        "TypeIds": [
          126,
          6
        ],
        "TypeDef": "Tuple"
      },
      "143": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::MultiAssets",
                "TypeId": 144
              }
            ],
            "Index": 1
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "VersionedMultiAssets"
        ],
        "TypeDef": "Variant"
      },
      "144": {
        "TypeFields": [
          {
            "TypeName": "Vec<MultiAsset>",
            "TypeId": 145
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "MultiAssets"
        ],
        "TypeDef": "Composite"
      },
      "145": {
        "TypeId": 137,
        "TypeDef": "Sequence"
      },
      "146": {
        "Variants": [
          {
            "Name": "add_registrar",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_registrar`]."
            ]
          },
          {
            "Name": "set_identity",
            "TypeFields": [
              {
                "Name": "info",
                "TypeName": "Box<IdentityInfo<T::MaxAdditionalFields>>",
                "TypeId": 147
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_identity`]."
            ]
          },
          {
            "Name": "set_subs",
            "TypeFields": [
              {
                "Name": "subs",
                "TypeName": "Vec<(T::AccountId, Data)>",
                "TypeId": 181
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::set_subs`]."
            ]
          },
          {
            "Name": "clear_identity",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "See [`Pallet::clear_identity`]."
            ]
          },
          {
            "Name": "request_judgement",
            "TypeFields": [
              {
                "Name": "reg_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 56
              },
              {
                "Name": "max_fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 47
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::request_judgement`]."
            ]
          },
          {
            "Name": "cancel_request",
            "TypeFields": [
              {
                "Name": "reg_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::cancel_request`]."
            ]
          },
          {
            "Name": "set_fee",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "RegistrarIndex",
                "TypeId": 56
              },
              {
                "Name": "fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 47
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::set_fee`]."
            ]
          },
          {
            "Name": "set_account_id",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "RegistrarIndex",
                "TypeId": 56
              },
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::set_account_id`]."
            ]
          },
          {
            "Name": "set_fields",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "RegistrarIndex",
                "TypeId": 56
              },
              {
                "Name": "fields",
                "TypeName": "IdentityFields",
                "TypeId": 183
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::set_fields`]."
            ]
          },
          {
            "Name": "provide_judgement",
            "TypeFields": [
              {
                "Name": "reg_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 56
              },
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "judgement",
                "TypeName": "Judgement<BalanceOf<T>>",
                "TypeId": 185
              },
              {
                "Name": "identity",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::provide_judgement`]."
            ]
          },
          {
            "Name": "kill_identity",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::kill_identity`]."
            ]
          },
          {
            "Name": "add_sub",
            "TypeFields": [
              {
                "Name": "sub",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "data",
                "TypeName": "Data",
                "TypeId": 150
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::add_sub`]."
            ]
          },
          {
            "Name": "rename_sub",
            "TypeFields": [
              {
                "Name": "sub",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "data",
                "TypeName": "Data",
                "TypeId": 150
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::rename_sub`]."
            ]
          },
          {
            "Name": "remove_sub",
            "TypeFields": [
              {
                "Name": "sub",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::remove_sub`]."
            ]
          },
          {
            "Name": "quit_sub",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "See [`Pallet::quit_sub`]."
            ]
          },
          {
            "Name": "force_insert_identities",
            "TypeFields": [
              {
                "Name": "identities",
                "TypeName": "Vec<(T::AccountId, RegistrationOf<T>)>",
                "TypeId": 186
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::force_insert_identities`]."
            ]
          },
          {
            "Name": "force_remove_identities",
            "TypeFields": [
              {
                "Name": "identities",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 118
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::force_remove_identities`]."
            ]
          },
          {
            "Name": "force_set_subs",
            "TypeFields": [
              {
                "Name": "subs",
                "TypeName": "Vec<SubAccountsByAccountId<T>>",
                "TypeId": 192
              }
            ],
            "Index": 17,
            "Docs": [
              "See [`Pallet::force_set_subs`]."
            ]
          }
        ],
        "Path": [
          "pallet_identity",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Identity pallet declaration."
        ]
      },
      "147": {
        "TypeFields": [
          {
            "Name": "additional",
            "TypeName": "BoundedVec<(Data, Data), FieldLimit>",
            "TypeId": 148
          },
          {
            "Name": "display",
            "TypeName": "Data",
            "TypeId": 150
          },
          {
            "Name": "legal",
            "TypeName": "Data",
            "TypeId": 150
          },
          {
            "Name": "web",
            "TypeName": "Data",
            "TypeId": 150
          },
          {
            "Name": "riot",
            "TypeName": "Data",
            "TypeId": 150
          },
          {
            "Name": "email",
            "TypeName": "Data",
            "TypeId": 150
          },
          {
            "Name": "pgp_fingerprint",
            "TypeName": "Option<[u8; 20]>",
            "TypeId": 180
          },
          {
            "Name": "image",
            "TypeName": "Data",
            "TypeId": 150
          },
          {
            "Name": "twitter",
            "TypeName": "Data",
            "TypeId": 150
          }
        ],
        "Path": [
          "pallet_identity",
          "types",
          "IdentityInfo"
        ],
        "TypeParams": [
          {
            "Name": "FieldLimit"
          }
        ],
        "TypeDef": "Composite"
      },
      "148": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 179
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 149
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "149": {
        "TypeIds": [
          150,
          150
        ],
        "TypeDef": "Tuple"
      },
      "150": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Raw0",
            "TypeFields": [
              {
                "TypeId": 151
              }
            ],
            "Index": 1
          },
          {
            "Name": "Raw1",
            "TypeFields": [
              {
                "TypeId": 152
              }
            ],
            "Index": 2
          },
          {
            "Name": "Raw2",
            "TypeFields": [
              {
                "TypeId": 153
              }
            ],
            "Index": 3
          },
          {
            "Name": "Raw3",
            "TypeFields": [
              {
                "TypeId": 154
              }
            ],
            "Index": 4
          },
          {
            "Name": "Raw4",
            "TypeFields": [
              {
                "TypeId": 17
              }
            ],
            "Index": 5
          },
          {
            "Name": "Raw5",
            "TypeFields": [
              {
                "TypeId": 155
              }
            ],
            "Index": 6
          },
          {
            "Name": "Raw6",
            "TypeFields": [
              {
                "TypeId": 156
              }
            ],
            "Index": 7
          },
          {
            "Name": "Raw7",
            "TypeFields": [
              {
                "TypeId": 157
              }
            ],
            "Index": 8
          },
          {
            "Name": "Raw8",
            "TypeFields": [
              {
                "TypeId": 64
              }
            ],
            "Index": 9
          },
          {
            "Name": "Raw9",
            "TypeFields": [
              {
                "TypeId": 158
              }
            ],
            "Index": 10
          },
          {
            "Name": "Raw10",
            "TypeFields": [
              {
                "TypeId": 159
              }
            ],
            "Index": 11
          },
          {
            "Name": "Raw11",
            "TypeFields": [
              {
                "TypeId": 160
              }
            ],
            "Index": 12
          },
          {
            "Name": "Raw12",
            "TypeFields": [
              {
                "TypeId": 161
              }
            ],
            "Index": 13
          },
          {
            "Name": "Raw13",
            "TypeFields": [
              {
                "TypeId": 162
              }
            ],
            "Index": 14
          },
          {
            "Name": "Raw14",
            "TypeFields": [
              {
                "TypeId": 163
              }
            ],
            "Index": 15
          },
          {
            "Name": "Raw15",
            "TypeFields": [
              {
                "TypeId": 164
              }
            ],
            "Index": 16
          },
          {
            "Name": "Raw16",
            "TypeFields": [
              {
                "TypeId": 65
              }
            ],
            "Index": 17
          },
          {
            "Name": "Raw17",
            "TypeFields": [
              {
                "TypeId": 165
              }
            ],
            "Index": 18
          },
          {
            "Name": "Raw18",
            "TypeFields": [
              {
                "TypeId": 166
              }
            ],
            "Index": 19
          },
          {
            "Name": "Raw19",
            "TypeFields": [
              {
                "TypeId": 167
              }
            ],
            "Index": 20
          },
          {
            "Name": "Raw20",
            "TypeFields": [
              {
                "TypeId": 59
              }
            ],
            "Index": 21
          },
          {
            "Name": "Raw21",
            "TypeFields": [
              {
                "TypeId": 168
              }
            ],
            "Index": 22
          },
          {
            "Name": "Raw22",
            "TypeFields": [
              {
                "TypeId": 169
              }
            ],
            "Index": 23
          },
          {
            "Name": "Raw23",
            "TypeFields": [
              {
                "TypeId": 170
              }
            ],
            "Index": 24
          },
          {
            "Name": "Raw24",
            "TypeFields": [
              {
                "TypeId": 171
              }
            ],
            "Index": 25
          },
          {
            "Name": "Raw25",
            "TypeFields": [
              {
                "TypeId": 172
              }
            ],
            "Index": 26
          },
          {
            "Name": "Raw26",
            "TypeFields": [
              {
                "TypeId": 173
              }
            ],
            "Index": 27
          },
          {
            "Name": "Raw27",
            "TypeFields": [
              {
                "TypeId": 174
              }
            ],
            "Index": 28
          },
          {
            "Name": "Raw28",
            "TypeFields": [
              {
                "TypeId": 175
              }
            ],
            "Index": 29
          },
          {
            "Name": "Raw29",
            "TypeFields": [
              {
                "TypeId": 176
              }
            ],
            "Index": 30
          },
          {
            "Name": "Raw30",
            "TypeFields": [
              {
                "TypeId": 177
              }
            ],
            "Index": 31
          },
          {
            "Name": "Raw31",
            "TypeFields": [
              {
                "TypeId": 178
              }
            ],
            "Index": 32
          },
          {
            "Name": "Raw32",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 33
          },
          {
            "Name": "BlakeTwo256",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 34
          },
          {
            "Name": "Sha256",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 35
          },
          {
            "Name": "Keccak256",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 36
          },
          {
            "Name": "ShaThree256",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 37
          }
        ],
        "Path": [
          "pallet_identity",
          "types",
          "Data"
        ],
        "TypeDef": "Variant"
      },
      "151": {
        "Length": 0,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "152": {
        "Length": 1,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "153": {
        "Length": 2,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "154": {
        "Length": 3,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "155": {
        "Length": 5,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "156": {
        "Length": 6,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "157": {
        "Length": 7,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "158": {
        "Length": 9,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "159": {
        "Length": 10,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "160": {
        "Length": 11,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "161": {
        "Length": 12,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "162": {
        "Length": 13,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "163": {
        "Length": 14,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "164": {
        "Length": 15,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "165": {
        "Length": 17,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "166": {
        "Length": 18,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "167": {
        "Length": 19,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "168": {
        "Length": 21,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "169": {
        "Length": 22,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "170": {
        "Length": 23,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "171": {
        "Length": 24,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "172": {
        "Length": 25,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "173": {
        "Length": 26,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "174": {
        "Length": 27,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "175": {
        "Length": 28,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "176": {
        "Length": 29,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "177": {
        "Length": 30,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "178": {
        "Length": 31,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "179": {
        "TypeId": 149,
        "TypeDef": "Sequence"
      },
      "180": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 59
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 59
          }
        ],
        "TypeDef": "Variant"
      },
      "181": {
        "TypeId": 182,
        "TypeDef": "Sequence"
      },
      "182": {
        "TypeIds": [
          0,
          150
        ],
        "TypeDef": "Tuple"
      },
      "183": {
        "TypeFields": [
          {
            "TypeName": "IdentityField",
            "TypeId": 11
          }
        ],
        "Path": [
          "pallet_identity",
          "types",
          "BitFlags"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 184
          }
        ],
        "TypeDef": "Composite"
      },
      "184": {
        "Variants": [
          {
            "Name": "Display",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Legal",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Web",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Riot",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "Email",
            "TypeFields": null,
            "Index": 16
          },
          {
            "Name": "PgpFingerprint",
            "TypeFields": null,
            "Index": 32
          },
          {
            "Name": "Image",
            "TypeFields": null,
            "Index": 64
          },
          {
            "Name": "Twitter",
            "TypeFields": null,
            "Index": 128
          }
        ],
        "Path": [
          "pallet_identity",
          "types",
          "IdentityField"
        ],
        "TypeDef": "Variant"
      },
      "185": {
        "Variants": [
          {
            "Name": "Unknown",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "FeePaid",
            "TypeFields": [
              {
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 1
          },
          {
            "Name": "Reasonable",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "KnownGood",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "OutOfDate",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "LowQuality",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Erroneous",
            "TypeFields": null,
            "Index": 6
          }
        ],
        "Path": [
          "pallet_identity",
          "types",
          "Judgement"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "186": {
        "TypeId": 187,
        "TypeDef": "Sequence"
      },
      "187": {
        "TypeIds": [
          0,
          188
        ],
        "TypeDef": "Tuple"
      },
      "188": {
        "TypeFields": [
          {
            "Name": "judgements",
            "TypeName": "BoundedVec<(RegistrarIndex, Judgement<Balance>), MaxJudgements>",
            "TypeId": 189
          },
          {
            "Name": "deposit",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "info",
            "TypeName": "IdentityInfo<MaxAdditionalFields>",
            "TypeId": 147
          }
        ],
        "Path": [
          "pallet_identity",
          "types",
          "Registration"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "MaxJudgements"
          },
          {
            "Name": "MaxAdditionalFields"
          }
        ],
        "TypeDef": "Composite"
      },
      "189": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 191
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 190
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "190": {
        "TypeIds": [
          4,
          185
        ],
        "TypeDef": "Tuple"
      },
      "191": {
        "TypeId": 190,
        "TypeDef": "Sequence"
      },
      "192": {
        "TypeId": 193,
        "TypeDef": "Sequence"
      },
      "193": {
        "TypeIds": [
          0,
          194
        ],
        "TypeDef": "Tuple"
      },
      "194": {
        "TypeIds": [
          6,
          195
        ],
        "TypeDef": "Tuple"
      },
      "195": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 181
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 182
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "196": {
        "Variants": [
          {
            "Name": "note_preimage",
            "TypeFields": [
              {
                "Name": "bytes",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::note_preimage`]."
            ]
          },
          {
            "Name": "unnote_preimage",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::unnote_preimage`]."
            ]
          },
          {
            "Name": "request_preimage",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::request_preimage`]."
            ]
          },
          {
            "Name": "unrequest_preimage",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::unrequest_preimage`]."
            ]
          },
          {
            "Name": "ensure_updated",
            "TypeFields": [
              {
                "Name": "hashes",
                "TypeName": "Vec<T::Hash>",
                "TypeId": 197
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::ensure_updated`]."
            ]
          }
        ],
        "Path": [
          "pallet_preimage",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "197": {
        "TypeId": 12,
        "TypeDef": "Sequence"
      },
      "198": {
        "Variants": [
          {
            "Name": "propose",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T>",
                "TypeId": 83
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 47
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::propose`]."
            ]
          },
          {
            "Name": "second",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "PropIndex",
                "TypeId": 56
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::second`]."
            ]
          },
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 56
              },
              {
                "Name": "vote",
                "TypeName": "AccountVote<BalanceOf<T>>",
                "TypeId": 70
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "emergency_cancel",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::emergency_cancel`]."
            ]
          },
          {
            "Name": "external_propose",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T>",
                "TypeId": 83
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::external_propose`]."
            ]
          },
          {
            "Name": "external_propose_majority",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T>",
                "TypeId": 83
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::external_propose_majority`]."
            ]
          },
          {
            "Name": "external_propose_default",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T>",
                "TypeId": 83
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::external_propose_default`]."
            ]
          },
          {
            "Name": "fast_track",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "voting_period",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::fast_track`]."
            ]
          },
          {
            "Name": "veto_external",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::veto_external`]."
            ]
          },
          {
            "Name": "cancel_referendum",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 56
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::cancel_referendum`]."
            ]
          },
          {
            "Name": "delegate",
            "TypeFields": [
              {
                "Name": "to",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "conviction",
                "TypeName": "Conviction",
                "TypeId": 199
              },
              {
                "Name": "balance",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::delegate`]."
            ]
          },
          {
            "Name": "undelegate",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "See [`Pallet::undelegate`]."
            ]
          },
          {
            "Name": "clear_public_proposals",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "See [`Pallet::clear_public_proposals`]."
            ]
          },
          {
            "Name": "unlock",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::unlock`]."
            ]
          },
          {
            "Name": "remove_vote",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::remove_vote`]."
            ]
          },
          {
            "Name": "remove_other_vote",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::remove_other_vote`]."
            ]
          },
          {
            "Name": "blacklist",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "maybe_ref_index",
                "TypeName": "Option<ReferendumIndex>",
                "TypeId": 121
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::blacklist`]."
            ]
          },
          {
            "Name": "cancel_proposal",
            "TypeFields": [
              {
                "Name": "prop_index",
                "TypeName": "PropIndex",
                "TypeId": 56
              }
            ],
            "Index": 17,
            "Docs": [
              "See [`Pallet::cancel_proposal`]."
            ]
          },
          {
            "Name": "set_metadata",
            "TypeFields": [
              {
                "Name": "owner",
                "TypeName": "MetadataOwner",
                "TypeId": 72
              },
              {
                "Name": "maybe_hash",
                "TypeName": "Option<T::Hash>",
                "TypeId": 200
              }
            ],
            "Index": 18,
            "Docs": [
              "See [`Pallet::set_metadata`]."
            ]
          }
        ],
        "Path": [
          "pallet_democracy",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "199": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Locked1x",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Locked2x",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Locked3x",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Locked4x",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Locked5x",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Locked6x",
            "TypeFields": null,
            "Index": 6
          }
        ],
        "Path": [
          "pallet_democracy",
          "conviction",
          "Conviction"
        ],
        "TypeDef": "Variant"
      },
      "200": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 12
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          }
        ],
        "TypeDef": "Variant"
      },
      "201": {
        "Variants": [
          {
            "Name": "set_members",
            "TypeFields": [
              {
                "Name": "new_members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 118
              },
              {
                "Name": "prime",
                "TypeName": "Option<T::AccountId>",
                "TypeId": 44
              },
              {
                "Name": "old_count",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_members`]."
            ]
          },
          {
            "Name": "execute",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "Box<<T as Config<I>>::Proposal>",
                "TypeId": 84
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::execute`]."
            ]
          },
          {
            "Name": "propose",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "MemberCount",
                "TypeId": 56
              },
              {
                "Name": "proposal",
                "TypeName": "Box<<T as Config<I>>::Proposal>",
                "TypeId": 84
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::propose`]."
            ]
          },
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "index",
                "TypeName": "ProposalIndex",
                "TypeId": 56
              },
              {
                "Name": "approve",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "disapprove_proposal",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::disapprove_proposal`]."
            ]
          },
          {
            "Name": "close",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "index",
                "TypeName": "ProposalIndex",
                "TypeId": 56
              },
              {
                "Name": "proposal_weight_bound",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::close`]."
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "202": {
        "Variants": [
          {
            "Name": "set_members",
            "TypeFields": [
              {
                "Name": "new_members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 118
              },
              {
                "Name": "prime",
                "TypeName": "Option<T::AccountId>",
                "TypeId": 44
              },
              {
                "Name": "old_count",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_members`]."
            ]
          },
          {
            "Name": "execute",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "Box<<T as Config<I>>::Proposal>",
                "TypeId": 84
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::execute`]."
            ]
          },
          {
            "Name": "propose",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "MemberCount",
                "TypeId": 56
              },
              {
                "Name": "proposal",
                "TypeName": "Box<<T as Config<I>>::Proposal>",
                "TypeId": 84
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::propose`]."
            ]
          },
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "index",
                "TypeName": "ProposalIndex",
                "TypeId": 56
              },
              {
                "Name": "approve",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "disapprove_proposal",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::disapprove_proposal`]."
            ]
          },
          {
            "Name": "close",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "index",
                "TypeName": "ProposalIndex",
                "TypeId": 56
              },
              {
                "Name": "proposal_weight_bound",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::close`]."
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "203": {
        "Variants": [
          {
            "Name": "add_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_member`]."
            ]
          },
          {
            "Name": "remove_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::remove_member`]."
            ]
          },
          {
            "Name": "swap_member",
            "TypeFields": [
              {
                "Name": "remove",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "add",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::swap_member`]."
            ]
          },
          {
            "Name": "reset_members",
            "TypeFields": [
              {
                "Name": "members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 118
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::reset_members`]."
            ]
          },
          {
            "Name": "change_key",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::change_key`]."
            ]
          },
          {
            "Name": "set_prime",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::set_prime`]."
            ]
          },
          {
            "Name": "clear_prime",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "See [`Pallet::clear_prime`]."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "204": {
        "Variants": [
          {
            "Name": "add_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_member`]."
            ]
          },
          {
            "Name": "remove_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::remove_member`]."
            ]
          },
          {
            "Name": "swap_member",
            "TypeFields": [
              {
                "Name": "remove",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "add",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::swap_member`]."
            ]
          },
          {
            "Name": "reset_members",
            "TypeFields": [
              {
                "Name": "members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 118
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::reset_members`]."
            ]
          },
          {
            "Name": "change_key",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::change_key`]."
            ]
          },
          {
            "Name": "set_prime",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::set_prime`]."
            ]
          },
          {
            "Name": "clear_prime",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "See [`Pallet::clear_prime`]."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "205": {
        "Variants": [
          {
            "Name": "add_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_member`]."
            ]
          },
          {
            "Name": "promote_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::promote_member`]."
            ]
          },
          {
            "Name": "demote_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::demote_member`]."
            ]
          },
          {
            "Name": "remove_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 116
              },
              {
                "Name": "min_rank",
                "TypeName": "Rank",
                "TypeId": 79
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::remove_member`]."
            ]
          },
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "poll",
                "TypeName": "PollIndexOf<T, I>",
                "TypeId": 4
              },
              {
                "Name": "aye",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "cleanup_poll",
            "TypeFields": [
              {
                "Name": "poll_index",
                "TypeName": "PollIndexOf<T, I>",
                "TypeId": 4
              },
              {
                "Name": "max",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::cleanup_poll`]."
            ]
          }
        ],
        "Path": [
          "pallet_ranked_collective",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "206": {
        "Variants": [
          {
            "Name": "submit",
            "TypeFields": [
              {
                "Name": "proposal_origin",
                "TypeName": "Box<PalletsOriginOf<T>>",
                "TypeId": 207
              },
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T, I>",
                "TypeId": 83
              },
              {
                "Name": "enactment_moment",
                "TypeName": "DispatchTime<BlockNumberFor<T>>",
                "TypeId": 217
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::submit`]."
            ]
          },
          {
            "Name": "place_decision_deposit",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::place_decision_deposit`]."
            ]
          },
          {
            "Name": "refund_decision_deposit",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::refund_decision_deposit`]."
            ]
          },
          {
            "Name": "cancel",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::cancel`]."
            ]
          },
          {
            "Name": "kill",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::kill`]."
            ]
          },
          {
            "Name": "nudge_referendum",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::nudge_referendum`]."
            ]
          },
          {
            "Name": "one_fewer_deciding",
            "TypeFields": [
              {
                "Name": "track",
                "TypeName": "TrackIdOf<T, I>",
                "TypeId": 79
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::one_fewer_deciding`]."
            ]
          },
          {
            "Name": "refund_submission_deposit",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::refund_submission_deposit`]."
            ]
          },
          {
            "Name": "set_metadata",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              },
              {
                "Name": "maybe_hash",
                "TypeName": "Option<T::Hash>",
                "TypeId": 200
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::set_metadata`]."
            ]
          }
        ],
        "Path": [
          "pallet_referenda",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "207": {
        "Variants": [
          {
            "Name": "system",
            "TypeFields": [
              {
                "TypeName": "frame_system::Origin<Runtime>",
                "TypeId": 208
              }
            ],
            "Index": 0
          },
          {
            "Name": "Council",
            "TypeFields": [
              {
                "TypeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance1>",
                "TypeId": 209
              }
            ],
            "Index": 43
          },
          {
            "Name": "TechnicalCommittee",
            "TypeFields": [
              {
                "TypeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance2>",
                "TypeId": 210
              }
            ],
            "Index": 44
          },
          {
            "Name": "Origins",
            "TypeFields": [
              {
                "TypeName": "pallet_gov_origins::Origin",
                "TypeId": 211
              }
            ],
            "Index": 99
          },
          {
            "Name": "PolkadotXcm",
            "TypeFields": [
              {
                "TypeName": "pallet_xcm::Origin",
                "TypeId": 212
              }
            ],
            "Index": 51
          },
          {
            "Name": "CumulusXcm",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_xcm::Origin",
                "TypeId": 213
              }
            ],
            "Index": 52
          },
          {
            "Name": "Ethereum",
            "TypeFields": [
              {
                "TypeName": "pallet_ethereum::Origin",
                "TypeId": 214
              }
            ],
            "Index": 101
          },
          {
            "Name": "Void",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::\n__private::Void",
                "TypeId": 216
              }
            ],
            "Index": 7
          }
        ],
        "Path": [
          "opal_runtime",
          "OriginCaller"
        ],
        "TypeDef": "Variant"
      },
      "208": {
        "Variants": [
          {
            "Name": "Root",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Signed",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "RawOrigin"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "209": {
        "Variants": [
          {
            "Name": "Members",
            "TypeFields": [
              {
                "TypeName": "MemberCount",
                "TypeId": 4
              },
              {
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "Member",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "_Phantom",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_collective",
          "RawOrigin"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant"
      },
      "210": {
        "Variants": [
          {
            "Name": "Members",
            "TypeFields": [
              {
                "TypeName": "MemberCount",
                "TypeId": 4
              },
              {
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "Member",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "_Phantom",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_collective",
          "RawOrigin"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant"
      },
      "211": {
        "Variants": [
          {
            "Name": "FellowshipProposition",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "pallet_gov_origins",
          "pallet",
          "Origin"
        ],
        "TypeDef": "Variant"
      },
      "212": {
        "Variants": [
          {
            "Name": "Xcm",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 0
          },
          {
            "Name": "Response",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "Origin"
        ],
        "TypeDef": "Variant"
      },
      "213": {
        "Variants": [
          {
            "Name": "Relay",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "SiblingParachain",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 104
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "cumulus_pallet_xcm",
          "pallet",
          "Origin"
        ],
        "TypeDef": "Variant"
      },
      "214": {
        "Variants": [
          {
            "Name": "EthereumTransaction",
            "TypeFields": [
              {
                "TypeName": "H160",
                "TypeId": 215
              }
            ],
            "Index": 0
          }
        ],
        "Path": [
          "pallet_ethereum",
          "RawOrigin"
        ],
        "TypeDef": "Variant"
      },
      "215": {
        "TypeFields": [
          {
            "TypeName": "[u8; 20]",
            "TypeId": 59
          }
        ],
        "Path": [
          "primitive_types",
          "H160"
        ],
        "TypeDef": "Composite"
      },
      "216": {
        "Variants": null,
        "Path": [
          "sp_core",
          "Void"
        ],
        "TypeDef": "Variant"
      },
      "217": {
        "Variants": [
          {
            "Name": "At",
            "TypeFields": [
              {
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "After",
            "TypeFields": [
              {
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "schedule",
          "DispatchTime"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Variant"
      },
      "218": {
        "Variants": [
          {
            "Name": "schedule",
            "TypeFields": [
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "maybe_periodic",
                "TypeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                "TypeId": 219
              },
              {
                "Name": "priority",
                "TypeName": "schedule::Priority",
                "TypeId": 2
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 84
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::schedule`]."
            ]
          },
          {
            "Name": "cancel",
            "TypeFields": [
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::cancel`]."
            ]
          },
          {
            "Name": "schedule_named",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "TaskName",
                "TypeId": 1
              },
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "maybe_periodic",
                "TypeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                "TypeId": 219
              },
              {
                "Name": "priority",
                "TypeName": "schedule::Priority",
                "TypeId": 2
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 84
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::schedule_named`]."
            ]
          },
          {
            "Name": "cancel_named",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "TaskName",
                "TypeId": 1
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::cancel_named`]."
            ]
          },
          {
            "Name": "schedule_after",
            "TypeFields": [
              {
                "Name": "after",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "maybe_periodic",
                "TypeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                "TypeId": 219
              },
              {
                "Name": "priority",
                "TypeName": "schedule::Priority",
                "TypeId": 2
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 84
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::schedule_after`]."
            ]
          },
          {
            "Name": "schedule_named_after",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "TaskName",
                "TypeId": 1
              },
              {
                "Name": "after",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "maybe_periodic",
                "TypeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                "TypeId": 219
              },
              {
                "Name": "priority",
                "TypeName": "schedule::Priority",
                "TypeId": 2
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 84
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::schedule_named_after`]."
            ]
          }
        ],
        "Path": [
          "pallet_scheduler",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "219": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 220
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 220
          }
        ],
        "TypeDef": "Variant"
      },
      "220": {
        "TypeIds": [
          4,
          4
        ],
        "TypeDef": "Tuple"
      },
      "221": {
        "Variants": [
          {
            "Name": "service_overweight",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "OverweightIndex",
                "TypeId": 11
              },
              {
                "Name": "weight_limit",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::service_overweight`]."
            ]
          },
          {
            "Name": "suspend_xcm_execution",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "See [`Pallet::suspend_xcm_execution`]."
            ]
          },
          {
            "Name": "resume_xcm_execution",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "See [`Pallet::resume_xcm_execution`]."
            ]
          },
          {
            "Name": "update_suspend_threshold",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::update_suspend_threshold`]."
            ]
          },
          {
            "Name": "update_drop_threshold",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::update_drop_threshold`]."
            ]
          },
          {
            "Name": "update_resume_threshold",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::update_resume_threshold`]."
            ]
          },
          {
            "Name": "update_threshold_weight",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::update_threshold_weight`]."
            ]
          },
          {
            "Name": "update_weight_restrict_decay",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::update_weight_restrict_decay`]."
            ]
          },
          {
            "Name": "update_xcmp_max_individual_weight",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::update_xcmp_max_individual_weight`]."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "222": {
        "Variants": [
          {
            "Name": "send",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "message",
                "TypeName": "Box<VersionedXcm<()>>",
                "TypeId": 223
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::send`]."
            ]
          },
          {
            "Name": "teleport_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedMultiAssets>",
                "TypeId": 143
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::teleport_assets`]."
            ]
          },
          {
            "Name": "reserve_transfer_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedMultiAssets>",
                "TypeId": 143
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::reserve_transfer_assets`]."
            ]
          },
          {
            "Name": "execute",
            "TypeFields": [
              {
                "Name": "message",
                "TypeName": "Box<VersionedXcm<<T as Config>::RuntimeCall>>",
                "TypeId": 255
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::execute`]."
            ]
          },
          {
            "Name": "force_xcm_version",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 53
              },
              {
                "Name": "version",
                "TypeName": "XcmVersion",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::force_xcm_version`]."
            ]
          },
          {
            "Name": "force_default_xcm_version",
            "TypeFields": [
              {
                "Name": "maybe_xcm_version",
                "TypeName": "Option<XcmVersion>",
                "TypeId": 121
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::force_default_xcm_version`]."
            ]
          },
          {
            "Name": "force_subscribe_version_notify",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::force_subscribe_version_notify`]."
            ]
          },
          {
            "Name": "force_unsubscribe_version_notify",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::force_unsubscribe_version_notify`]."
            ]
          },
          {
            "Name": "limited_reserve_transfer_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedMultiAssets>",
                "TypeId": 143
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 135
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::limited_reserve_transfer_assets`]."
            ]
          },
          {
            "Name": "limited_teleport_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedMultiLocation>",
                "TypeId": 127
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedMultiAssets>",
                "TypeId": 143
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 135
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::limited_teleport_assets`]."
            ]
          },
          {
            "Name": "force_suspension",
            "TypeFields": [
              {
                "Name": "suspended",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::force_suspension`]."
            ]
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "223": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::Xcm<RuntimeCall>",
                "TypeId": 224
              }
            ],
            "Index": 2
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::Xcm<RuntimeCall>",
                "TypeId": 237
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "VersionedXcm"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Variant"
      },
      "224": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<RuntimeCall>>",
            "TypeId": 225
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Composite"
      },
      "225": {
        "TypeId": 226,
        "TypeDef": "Sequence"
      },
      "226": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 144
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 144
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 144
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 227
              },
              {
                "Name": "max_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 144
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 128
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 144
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 128
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 224
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_type",
                "TypeName": "OriginKind",
                "TypeId": 231
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "u64",
                "TypeId": 10
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<RuntimeCall>",
                "TypeId": 232
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorMultiLocation",
                "TypeId": 129
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 128
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 233
              },
              {
                "Name": "max_assets",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 128
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 233
              },
              {
                "Name": "max_assets",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 128
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 224
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "MultiAssetFilter",
                "TypeId": 233
              },
              {
                "Name": "receive",
                "TypeName": "MultiAssets",
                "TypeId": 144
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 233
              },
              {
                "Name": "reserve",
                "TypeName": "MultiLocation",
                "TypeId": 128
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 224
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 233
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 128
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 224
              }
            ],
            "Index": 17
          },
          {
            "Name": "QueryHolding",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 128
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 233
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "MultiAsset",
                "TypeId": 137
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 236
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<RuntimeCall>",
                "TypeId": 224
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<RuntimeCall>",
                "TypeId": 224
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 144
              },
              {
                "Name": "ticket",
                "TypeName": "MultiLocation",
                "TypeId": 128
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Variant"
      },
      "227": {
        "Variants": [
          {
            "Name": "Null",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Assets",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 144
              }
            ],
            "Index": 1
          },
          {
            "Name": "ExecutionResult",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 228
              }
            ],
            "Index": 2
          },
          {
            "Name": "Version",
            "TypeFields": [
              {
                "TypeName": "super::Version",
                "TypeId": 4
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Response"
        ],
        "TypeDef": "Variant"
      },
      "228": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 229
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 229
          }
        ],
        "TypeDef": "Variant"
      },
      "229": {
        "TypeIds": [
          4,
          230
        ],
        "TypeDef": "Tuple"
      },
      "230": {
        "Variants": [
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Unimplemented",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "UntrustedReserveLocation",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "UntrustedTeleportLocation",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "MultiLocationFull",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "MultiLocationNotInvertible",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "BadOrigin",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "InvalidLocation",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "AssetNotFound",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "FailedToTransactAsset",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "NotWithdrawable",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "LocationCannotHold",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "ExceedsMaxMessageSize",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "DestinationUnsupported",
            "TypeFields": null,
            "Index": 13
          },
          {
            "Name": "Transport",
            "TypeFields": null,
            "Index": 14
          },
          {
            "Name": "Unroutable",
            "TypeFields": null,
            "Index": 15
          },
          {
            "Name": "UnknownClaim",
            "TypeFields": null,
            "Index": 16
          },
          {
            "Name": "FailedToDecode",
            "TypeFields": null,
            "Index": 17
          },
          {
            "Name": "MaxWeightInvalid",
            "TypeFields": null,
            "Index": 18
          },
          {
            "Name": "NotHoldingFees",
            "TypeFields": null,
            "Index": 19
          },
          {
            "Name": "TooExpensive",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 21
          },
          {
            "Name": "UnhandledXcmVersion",
            "TypeFields": null,
            "Index": 22
          },
          {
            "Name": "WeightLimitReached",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 11
              }
            ],
            "Index": 23
          },
          {
            "Name": "Barrier",
            "TypeFields": null,
            "Index": 24
          },
          {
            "Name": "WeightNotComputable",
            "TypeFields": null,
            "Index": 25
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "traits",
          "Error"
        ],
        "TypeDef": "Variant"
      },
      "231": {
        "Variants": [
          {
            "Name": "Native",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "SovereignAccount",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Superuser",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Xcm",
            "TypeFields": null,
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "OriginKind"
        ],
        "TypeDef": "Variant"
      },
      "232": {
        "TypeFields": [
          {
            "Name": "encoded",
            "TypeName": "Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "xcm",
          "double_encoded",
          "DoubleEncoded"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "233": {
        "Variants": [
          {
            "Name": "Definite",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 144
              }
            ],
            "Index": 0
          },
          {
            "Name": "Wild",
            "TypeFields": [
              {
                "TypeName": "WildMultiAsset",
                "TypeId": 234
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "MultiAssetFilter"
        ],
        "TypeDef": "Variant"
      },
      "234": {
        "Variants": [
          {
            "Name": "All",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "AllOf",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 138
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 235
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "WildMultiAsset"
        ],
        "TypeDef": "Variant"
      },
      "235": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "WildFungibility"
        ],
        "TypeDef": "Variant"
      },
      "236": {
        "Variants": [
          {
            "Name": "Unlimited",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Limited",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "WeightLimit"
        ],
        "TypeDef": "Variant"
      },
      "237": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<Call>>",
            "TypeId": 238
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Composite"
      },
      "238": {
        "TypeId": 239,
        "TypeDef": "Sequence"
      },
      "239": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 240
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "querier",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 250
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 237
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_kind",
                "TypeName": "OriginKind",
                "TypeId": 231
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<Call>",
                "TypeId": 232
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorMultiLocation",
                "TypeId": 54
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 251
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 252
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 252
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 237
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "MultiAssetFilter",
                "TypeId": 252
              },
              {
                "Name": "want",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "maximal",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 252
              },
              {
                "Name": "reserve",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 237
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 252
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 237
              }
            ],
            "Index": 17
          },
          {
            "Name": "ReportHolding",
            "TypeFields": [
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 251
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 252
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "MultiAsset",
                "TypeId": 51
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 135
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 237
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 237
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "ticket",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "max_response_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "BurnAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 28
          },
          {
            "Name": "ExpectAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 29
          },
          {
            "Name": "ExpectOrigin",
            "TypeFields": [
              {
                "TypeName": "Option<MultiLocation>",
                "TypeId": 250
              }
            ],
            "Index": 30
          },
          {
            "Name": "ExpectError",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 241
              }
            ],
            "Index": 31
          },
          {
            "Name": "ExpectTransactStatus",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 248
              }
            ],
            "Index": 32
          },
          {
            "Name": "QueryPallet",
            "TypeFields": [
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 251
              }
            ],
            "Index": 33
          },
          {
            "Name": "ExpectPallet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "crate_major",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "min_crate_minor",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 34
          },
          {
            "Name": "ReportTransactStatus",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 251
              }
            ],
            "Index": 35
          },
          {
            "Name": "ClearTransactStatus",
            "TypeFields": null,
            "Index": 36
          },
          {
            "Name": "UniversalOrigin",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 55
              }
            ],
            "Index": 37
          },
          {
            "Name": "ExportMessage",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 58
              },
              {
                "Name": "destination",
                "TypeName": "InteriorMultiLocation",
                "TypeId": 54
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 237
              }
            ],
            "Index": 38
          },
          {
            "Name": "LockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 51
              },
              {
                "Name": "unlocker",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 39
          },
          {
            "Name": "UnlockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 51
              },
              {
                "Name": "target",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 40
          },
          {
            "Name": "NoteUnlockable",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 51
              },
              {
                "Name": "owner",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 41
          },
          {
            "Name": "RequestUnlock",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 51
              },
              {
                "Name": "locker",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 42
          },
          {
            "Name": "SetFeesMode",
            "TypeFields": [
              {
                "Name": "jit_withdraw",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 43
          },
          {
            "Name": "SetTopic",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 44
          },
          {
            "Name": "ClearTopic",
            "TypeFields": null,
            "Index": 45
          },
          {
            "Name": "AliasOrigin",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 46
          },
          {
            "Name": "UnpaidExecution",
            "TypeFields": [
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 135
              },
              {
                "Name": "check_origin",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 250
              }
            ],
            "Index": 47
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Variant"
      },
      "240": {
        "Variants": [
          {
            "Name": "Null",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Assets",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 1
          },
          {
            "Name": "ExecutionResult",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 241
              }
            ],
            "Index": 2
          },
          {
            "Name": "Version",
            "TypeFields": [
              {
                "TypeName": "super::Version",
                "TypeId": 4
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletsInfo",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<PalletInfo, MaxPalletsInfo>",
                "TypeId": 244
              }
            ],
            "Index": 4
          },
          {
            "Name": "DispatchResult",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 248
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Response"
        ],
        "TypeDef": "Variant"
      },
      "241": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 242
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 242
          }
        ],
        "TypeDef": "Variant"
      },
      "242": {
        "TypeIds": [
          4,
          243
        ],
        "TypeDef": "Tuple"
      },
      "243": {
        "Variants": [
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Unimplemented",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "UntrustedReserveLocation",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "UntrustedTeleportLocation",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "LocationFull",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "LocationNotInvertible",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "BadOrigin",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "InvalidLocation",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "AssetNotFound",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "FailedToTransactAsset",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "NotWithdrawable",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "LocationCannotHold",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "ExceedsMaxMessageSize",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "DestinationUnsupported",
            "TypeFields": null,
            "Index": 13
          },
          {
            "Name": "Transport",
            "TypeFields": null,
            "Index": 14
          },
          {
            "Name": "Unroutable",
            "TypeFields": null,
            "Index": 15
          },
          {
            "Name": "UnknownClaim",
            "TypeFields": null,
            "Index": 16
          },
          {
            "Name": "FailedToDecode",
            "TypeFields": null,
            "Index": 17
          },
          {
            "Name": "MaxWeightInvalid",
            "TypeFields": null,
            "Index": 18
          },
          {
            "Name": "NotHoldingFees",
            "TypeFields": null,
            "Index": 19
          },
          {
            "Name": "TooExpensive",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 21
          },
          {
            "Name": "ExpectationFalse",
            "TypeFields": null,
            "Index": 22
          },
          {
            "Name": "PalletNotFound",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "NameMismatch",
            "TypeFields": null,
            "Index": 24
          },
          {
            "Name": "VersionIncompatible",
            "TypeFields": null,
            "Index": 25
          },
          {
            "Name": "HoldingWouldOverflow",
            "TypeFields": null,
            "Index": 26
          },
          {
            "Name": "ExportError",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "ReanchorFailed",
            "TypeFields": null,
            "Index": 28
          },
          {
            "Name": "NoDeal",
            "TypeFields": null,
            "Index": 29
          },
          {
            "Name": "FeesNotMet",
            "TypeFields": null,
            "Index": 30
          },
          {
            "Name": "LockError",
            "TypeFields": null,
            "Index": 31
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 32
          },
          {
            "Name": "Unanchored",
            "TypeFields": null,
            "Index": 33
          },
          {
            "Name": "NotDepositable",
            "TypeFields": null,
            "Index": 34
          },
          {
            "Name": "UnhandledXcmVersion",
            "TypeFields": null,
            "Index": 35
          },
          {
            "Name": "WeightLimitReached",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 36
          },
          {
            "Name": "Barrier",
            "TypeFields": null,
            "Index": 37
          },
          {
            "Name": "WeightNotComputable",
            "TypeFields": null,
            "Index": 38
          },
          {
            "Name": "ExceedsStackLimit",
            "TypeFields": null,
            "Index": 39
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "traits",
          "Error"
        ],
        "TypeDef": "Variant"
      },
      "244": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 247
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 245
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "245": {
        "TypeFields": [
          {
            "Name": "index",
            "TypeName": "u32",
            "TypeId": 56
          },
          {
            "Name": "name",
            "TypeName": "BoundedVec<u8, MaxPalletNameLen>",
            "TypeId": 246
          },
          {
            "Name": "module_name",
            "TypeName": "BoundedVec<u8, MaxPalletNameLen>",
            "TypeId": 246
          },
          {
            "Name": "major",
            "TypeName": "u32",
            "TypeId": 56
          },
          {
            "Name": "minor",
            "TypeName": "u32",
            "TypeId": 56
          },
          {
            "Name": "patch",
            "TypeName": "u32",
            "TypeId": 56
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "PalletInfo"
        ],
        "TypeDef": "Composite"
      },
      "246": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "247": {
        "TypeId": 245,
        "TypeDef": "Sequence"
      },
      "248": {
        "Variants": [
          {
            "Name": "Success",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Error",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                "TypeId": 249
              }
            ],
            "Index": 1
          },
          {
            "Name": "TruncatedError",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                "TypeId": 249
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "MaybeErrorCode"
        ],
        "TypeDef": "Variant"
      },
      "249": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "250": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 53
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 53
          }
        ],
        "TypeDef": "Variant"
      },
      "251": {
        "TypeFields": [
          {
            "Name": "destination",
            "TypeName": "MultiLocation",
            "TypeId": 53
          },
          {
            "Name": "query_id",
            "TypeName": "QueryId",
            "TypeId": 10
          },
          {
            "Name": "max_weight",
            "TypeName": "Weight",
            "TypeId": 9
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "QueryResponseInfo"
        ],
        "TypeDef": "Composite"
      },
      "252": {
        "Variants": [
          {
            "Name": "Definite",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 0
          },
          {
            "Name": "Wild",
            "TypeFields": [
              {
                "TypeName": "WildMultiAsset",
                "TypeId": 253
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "MultiAssetFilter"
        ],
        "TypeDef": "Variant"
      },
      "253": {
        "Variants": [
          {
            "Name": "All",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "AllOf",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 52
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 254
              }
            ],
            "Index": 1
          },
          {
            "Name": "AllCounted",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 2
          },
          {
            "Name": "AllOfCounted",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 52
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 254
              },
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "WildMultiAsset"
        ],
        "TypeDef": "Variant"
      },
      "254": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "WildFungibility"
        ],
        "TypeDef": "Variant"
      },
      "255": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::Xcm<RuntimeCall>",
                "TypeId": 256
              }
            ],
            "Index": 2
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::Xcm<RuntimeCall>",
                "TypeId": 260
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "VersionedXcm"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Variant"
      },
      "256": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<RuntimeCall>>",
            "TypeId": 257
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Composite"
      },
      "257": {
        "TypeId": 258,
        "TypeDef": "Sequence"
      },
      "258": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 144
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 144
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 144
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 227
              },
              {
                "Name": "max_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 144
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 128
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 144
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 128
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 224
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_type",
                "TypeName": "OriginKind",
                "TypeId": 231
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "u64",
                "TypeId": 10
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<RuntimeCall>",
                "TypeId": 259
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorMultiLocation",
                "TypeId": 129
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 128
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 233
              },
              {
                "Name": "max_assets",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 128
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 233
              },
              {
                "Name": "max_assets",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 128
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 224
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "MultiAssetFilter",
                "TypeId": 233
              },
              {
                "Name": "receive",
                "TypeName": "MultiAssets",
                "TypeId": 144
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 233
              },
              {
                "Name": "reserve",
                "TypeName": "MultiLocation",
                "TypeId": 128
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 224
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 233
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 128
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 224
              }
            ],
            "Index": 17
          },
          {
            "Name": "QueryHolding",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 128
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 233
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "MultiAsset",
                "TypeId": 137
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 236
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<RuntimeCall>",
                "TypeId": 256
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<RuntimeCall>",
                "TypeId": 256
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 144
              },
              {
                "Name": "ticket",
                "TypeName": "MultiLocation",
                "TypeId": 128
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Variant"
      },
      "259": {
        "TypeFields": [
          {
            "Name": "encoded",
            "TypeName": "Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "xcm",
          "double_encoded",
          "DoubleEncoded"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "260": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<Call>>",
            "TypeId": 261
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Composite"
      },
      "261": {
        "TypeId": 262,
        "TypeDef": "Sequence"
      },
      "262": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 240
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "querier",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 250
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 237
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_kind",
                "TypeName": "OriginKind",
                "TypeId": 231
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<Call>",
                "TypeId": 259
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorMultiLocation",
                "TypeId": 54
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 251
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 252
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 252
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 237
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "MultiAssetFilter",
                "TypeId": 252
              },
              {
                "Name": "want",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "maximal",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 252
              },
              {
                "Name": "reserve",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 237
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 252
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 237
              }
            ],
            "Index": 17
          },
          {
            "Name": "ReportHolding",
            "TypeFields": [
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 251
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 252
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "MultiAsset",
                "TypeId": 51
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 135
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 260
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 260
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "ticket",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "max_response_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "BurnAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 28
          },
          {
            "Name": "ExpectAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 29
          },
          {
            "Name": "ExpectOrigin",
            "TypeFields": [
              {
                "TypeName": "Option<MultiLocation>",
                "TypeId": 250
              }
            ],
            "Index": 30
          },
          {
            "Name": "ExpectError",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 241
              }
            ],
            "Index": 31
          },
          {
            "Name": "ExpectTransactStatus",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 248
              }
            ],
            "Index": 32
          },
          {
            "Name": "QueryPallet",
            "TypeFields": [
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 251
              }
            ],
            "Index": 33
          },
          {
            "Name": "ExpectPallet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "crate_major",
                "TypeName": "u32",
                "TypeId": 56
              },
              {
                "Name": "min_crate_minor",
                "TypeName": "u32",
                "TypeId": 56
              }
            ],
            "Index": 34
          },
          {
            "Name": "ReportTransactStatus",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 251
              }
            ],
            "Index": 35
          },
          {
            "Name": "ClearTransactStatus",
            "TypeFields": null,
            "Index": 36
          },
          {
            "Name": "UniversalOrigin",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 55
              }
            ],
            "Index": 37
          },
          {
            "Name": "ExportMessage",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 58
              },
              {
                "Name": "destination",
                "TypeName": "InteriorMultiLocation",
                "TypeId": 54
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 237
              }
            ],
            "Index": 38
          },
          {
            "Name": "LockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 51
              },
              {
                "Name": "unlocker",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 39
          },
          {
            "Name": "UnlockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 51
              },
              {
                "Name": "target",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 40
          },
          {
            "Name": "NoteUnlockable",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 51
              },
              {
                "Name": "owner",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 41
          },
          {
            "Name": "RequestUnlock",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 51
              },
              {
                "Name": "locker",
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 42
          },
          {
            "Name": "SetFeesMode",
            "TypeFields": [
              {
                "Name": "jit_withdraw",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 43
          },
          {
            "Name": "SetTopic",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 44
          },
          {
            "Name": "ClearTopic",
            "TypeFields": null,
            "Index": 45
          },
          {
            "Name": "AliasOrigin",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 53
              }
            ],
            "Index": 46
          },
          {
            "Name": "UnpaidExecution",
            "TypeFields": [
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 135
              },
              {
                "Name": "check_origin",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 250
              }
            ],
            "Index": 47
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Variant"
      },
      "263": {
        "Variants": null,
        "Path": [
          "cumulus_pallet_xcm",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "264": {
        "Variants": [
          {
            "Name": "service_overweight",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "OverweightIndex",
                "TypeId": 11
              },
              {
                "Name": "weight_limit",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::service_overweight`]."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_dmp_queue",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "265": {
        "Variants": [
          {
            "Name": "start_inflation",
            "TypeFields": [
              {
                "Name": "inflation_start_relay_block",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::start_inflation`]."
            ]
          }
        ],
        "Path": [
          "pallet_inflation",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "266": {
        "Variants": [
          {
            "Name": "create_collection",
            "TypeFields": [
              {
                "Name": "collection_name",
                "TypeName": "BoundedVec<u16, ConstU32<MAX_COLLECTION_NAME_LENGTH>>",
                "TypeId": 267
              },
              {
                "Name": "collection_description",
                "TypeName": "BoundedVec<u16, ConstU32<MAX_COLLECTION_DESCRIPTION_LENGTH>>",
                "TypeId": 269
              },
              {
                "Name": "token_prefix",
                "TypeName": "BoundedVec<u8, ConstU32<MAX_TOKEN_PREFIX_LENGTH>>",
                "TypeId": 270
              },
              {
                "Name": "mode",
                "TypeName": "CollectionMode",
                "TypeId": 271
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::create_collection`]."
            ]
          },
          {
            "Name": "create_collection_ex",
            "TypeFields": [
              {
                "Name": "data",
                "TypeName": "CreateCollectionData<T::CrossAccountId>",
                "TypeId": 272
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::create_collection_ex`]."
            ]
          },
          {
            "Name": "destroy_collection",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::destroy_collection`]."
            ]
          },
          {
            "Name": "add_to_allow_list",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "address",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::add_to_allow_list`]."
            ]
          },
          {
            "Name": "remove_from_allow_list",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "address",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::remove_from_allow_list`]."
            ]
          },
          {
            "Name": "change_collection_owner",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "new_owner",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::change_collection_owner`]."
            ]
          },
          {
            "Name": "add_collection_admin",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "new_admin_id",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::add_collection_admin`]."
            ]
          },
          {
            "Name": "remove_collection_admin",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "account_id",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::remove_collection_admin`]."
            ]
          },
          {
            "Name": "set_collection_sponsor",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "new_sponsor",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::set_collection_sponsor`]."
            ]
          },
          {
            "Name": "confirm_sponsorship",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::confirm_sponsorship`]."
            ]
          },
          {
            "Name": "remove_collection_sponsor",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::remove_collection_sponsor`]."
            ]
          },
          {
            "Name": "create_item",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "owner",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              },
              {
                "Name": "data",
                "TypeName": "CreateItemData",
                "TypeId": 301
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::create_item`]."
            ]
          },
          {
            "Name": "create_multiple_items",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "owner",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              },
              {
                "Name": "items_data",
                "TypeName": "Vec<CreateItemData>",
                "TypeId": 305
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::create_multiple_items`]."
            ]
          },
          {
            "Name": "set_collection_properties",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "properties",
                "TypeName": "Vec<Property>",
                "TypeId": 298
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::set_collection_properties`]."
            ]
          },
          {
            "Name": "delete_collection_properties",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "property_keys",
                "TypeName": "Vec<PropertyKey>",
                "TypeId": 306
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::delete_collection_properties`]."
            ]
          },
          {
            "Name": "set_token_properties",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "token_id",
                "TypeName": "TokenId",
                "TypeId": 307
              },
              {
                "Name": "properties",
                "TypeName": "Vec<Property>",
                "TypeId": 298
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::set_token_properties`]."
            ]
          },
          {
            "Name": "delete_token_properties",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "token_id",
                "TypeName": "TokenId",
                "TypeId": 307
              },
              {
                "Name": "property_keys",
                "TypeName": "Vec<PropertyKey>",
                "TypeId": 306
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::delete_token_properties`]."
            ]
          },
          {
            "Name": "set_token_property_permissions",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "property_permissions",
                "TypeName": "Vec<PropertyKeyPermission>",
                "TypeId": 294
              }
            ],
            "Index": 17,
            "Docs": [
              "See [`Pallet::set_token_property_permissions`]."
            ]
          },
          {
            "Name": "create_multiple_items_ex",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "data",
                "TypeName": "CreateItemExData<T::CrossAccountId>",
                "TypeId": 308
              }
            ],
            "Index": 18,
            "Docs": [
              "See [`Pallet::create_multiple_items_ex`]."
            ]
          },
          {
            "Name": "set_transfers_enabled_flag",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "value",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 19,
            "Docs": [
              "See [`Pallet::set_transfers_enabled_flag`]."
            ]
          },
          {
            "Name": "burn_item",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "item_id",
                "TypeName": "TokenId",
                "TypeId": 307
              },
              {
                "Name": "value",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 20,
            "Docs": [
              "See [`Pallet::burn_item`]."
            ]
          },
          {
            "Name": "burn_from",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "from",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              },
              {
                "Name": "item_id",
                "TypeName": "TokenId",
                "TypeId": 307
              },
              {
                "Name": "value",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 21,
            "Docs": [
              "See [`Pallet::burn_from`]."
            ]
          },
          {
            "Name": "transfer",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              },
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "item_id",
                "TypeName": "TokenId",
                "TypeId": 307
              },
              {
                "Name": "value",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 22,
            "Docs": [
              "See [`Pallet::transfer`]."
            ]
          },
          {
            "Name": "approve",
            "TypeFields": [
              {
                "Name": "spender",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              },
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "item_id",
                "TypeName": "TokenId",
                "TypeId": 307
              },
              {
                "Name": "amount",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 23,
            "Docs": [
              "See [`Pallet::approve`]."
            ]
          },
          {
            "Name": "approve_from",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              },
              {
                "Name": "to",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              },
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "item_id",
                "TypeName": "TokenId",
                "TypeId": 307
              },
              {
                "Name": "amount",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 24,
            "Docs": [
              "See [`Pallet::approve_from`]."
            ]
          },
          {
            "Name": "transfer_from",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              },
              {
                "Name": "recipient",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              },
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "item_id",
                "TypeName": "TokenId",
                "TypeId": 307
              },
              {
                "Name": "value",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 25,
            "Docs": [
              "See [`Pallet::transfer_from`]."
            ]
          },
          {
            "Name": "set_collection_limits",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "new_limit",
                "TypeName": "CollectionLimits",
                "TypeId": 277
              }
            ],
            "Index": 26,
            "Docs": [
              "See [`Pallet::set_collection_limits`]."
            ]
          },
          {
            "Name": "set_collection_permissions",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "new_permission",
                "TypeName": "CollectionPermissions",
                "TypeId": 282
              }
            ],
            "Index": 27,
            "Docs": [
              "See [`Pallet::set_collection_permissions`]."
            ]
          },
          {
            "Name": "repartition",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "token_id",
                "TypeName": "TokenId",
                "TypeId": 307
              },
              {
                "Name": "amount",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 28,
            "Docs": [
              "See [`Pallet::repartition`]."
            ]
          },
          {
            "Name": "set_allowance_for_all",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "operator",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              },
              {
                "Name": "approve",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 29,
            "Docs": [
              "See [`Pallet::set_allowance_for_all`]."
            ]
          },
          {
            "Name": "force_repair_collection",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              }
            ],
            "Index": 30,
            "Docs": [
              "See [`Pallet::force_repair_collection`]."
            ]
          },
          {
            "Name": "force_repair_item",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "item_id",
                "TypeName": "TokenId",
                "TypeId": 307
              }
            ],
            "Index": 31,
            "Docs": [
              "See [`Pallet::force_repair_item`]."
            ]
          }
        ],
        "Path": [
          "pallet_unique",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Type alias to Pallet, to be used by construct_runtime."
        ]
      },
      "267": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 268
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 79
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "268": {
        "TypeId": 79,
        "TypeDef": "Sequence"
      },
      "269": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 268
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 79
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "270": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "271": {
        "Variants": [
          {
            "Name": "NFT",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Fungible",
            "TypeFields": [
              {
                "TypeName": "DecimalPoints",
                "TypeId": 2
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReFungible",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "up_data_structs",
          "CollectionMode"
        ],
        "TypeDef": "Variant"
      },
      "272": {
        "TypeFields": [
          {
            "Name": "mode",
            "TypeName": "CollectionMode",
            "TypeId": 271
          },
          {
            "Name": "access",
            "TypeName": "Option<AccessMode>",
            "TypeId": 274
          },
          {
            "Name": "name",
            "TypeName": "CollectionName",
            "TypeId": 267
          },
          {
            "Name": "description",
            "TypeName": "CollectionDescription",
            "TypeId": 269
          },
          {
            "Name": "token_prefix",
            "TypeName": "CollectionTokenPrefix",
            "TypeId": 270
          },
          {
            "Name": "limits",
            "TypeName": "Option<CollectionLimits>",
            "TypeId": 276
          },
          {
            "Name": "permissions",
            "TypeName": "Option<CollectionPermissions>",
            "TypeId": 281
          },
          {
            "Name": "token_property_permissions",
            "TypeName": "CollectionPropertiesPermissionsVec",
            "TypeId": 290
          },
          {
            "Name": "properties",
            "TypeName": "CollectionPropertiesVec",
            "TypeId": 295
          },
          {
            "Name": "admin_list",
            "TypeName": "Vec<CrossAccountId>",
            "TypeId": 299
          },
          {
            "Name": "pending_sponsor",
            "TypeName": "Option<CrossAccountId>",
            "TypeId": 300
          },
          {
            "Name": "flags",
            "TypeName": "CollectionFlags",
            "TypeId": 152
          }
        ],
        "Path": [
          "up_data_structs",
          "CreateCollectionData"
        ],
        "TypeParams": [
          {
            "Name": "CrossAccountId",
            "TypeId": 273
          }
        ],
        "TypeDef": "Composite"
      },
      "273": {
        "Variants": [
          {
            "Name": "Substrate",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0
          },
          {
            "Name": "Ethereum",
            "TypeFields": [
              {
                "TypeName": "H160",
                "TypeId": 215
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_evm",
          "account",
          "BasicCrossAccountIdRepr"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "274": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 275
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 275
          }
        ],
        "TypeDef": "Variant"
      },
      "275": {
        "Variants": [
          {
            "Name": "Normal",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "AllowList",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "up_data_structs",
          "AccessMode"
        ],
        "TypeDef": "Variant"
      },
      "276": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 277
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 277
          }
        ],
        "TypeDef": "Variant"
      },
      "277": {
        "TypeFields": [
          {
            "Name": "account_token_ownership_limit",
            "TypeName": "Option<u32>",
            "TypeId": 121
          },
          {
            "Name": "sponsored_data_size",
            "TypeName": "Option<u32>",
            "TypeId": 121
          },
          {
            "Name": "sponsored_data_rate_limit",
            "TypeName": "Option<SponsoringRateLimit>",
            "TypeId": 278
          },
          {
            "Name": "token_limit",
            "TypeName": "Option<u32>",
            "TypeId": 121
          },
          {
            "Name": "sponsor_transfer_timeout",
            "TypeName": "Option<u32>",
            "TypeId": 121
          },
          {
            "Name": "sponsor_approve_timeout",
            "TypeName": "Option<u32>",
            "TypeId": 121
          },
          {
            "Name": "owner_can_transfer",
            "TypeName": "Option<bool>",
            "TypeId": 280
          },
          {
            "Name": "owner_can_destroy",
            "TypeName": "Option<bool>",
            "TypeId": 280
          },
          {
            "Name": "transfers_enabled",
            "TypeName": "Option<bool>",
            "TypeId": 280
          }
        ],
        "Path": [
          "up_data_structs",
          "CollectionLimits"
        ],
        "TypeDef": "Composite"
      },
      "278": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 279
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 279
          }
        ],
        "TypeDef": "Variant"
      },
      "279": {
        "Variants": [
          {
            "Name": "SponsoringDisabled",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Blocks",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "up_data_structs",
          "SponsoringRateLimit"
        ],
        "TypeDef": "Variant"
      },
      "280": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 74
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 74
          }
        ],
        "TypeDef": "Variant"
      },
      "281": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 282
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 282
          }
        ],
        "TypeDef": "Variant"
      },
      "282": {
        "TypeFields": [
          {
            "Name": "access",
            "TypeName": "Option<AccessMode>",
            "TypeId": 274
          },
          {
            "Name": "mint_mode",
            "TypeName": "Option<bool>",
            "TypeId": 280
          },
          {
            "Name": "nesting",
            "TypeName": "Option<NestingPermissions>",
            "TypeId": 283
          }
        ],
        "Path": [
          "up_data_structs",
          "CollectionPermissions"
        ],
        "TypeDef": "Composite"
      },
      "283": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 284
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 284
          }
        ],
        "TypeDef": "Variant"
      },
      "284": {
        "TypeFields": [
          {
            "Name": "token_owner",
            "TypeName": "bool",
            "TypeId": 74
          },
          {
            "Name": "collection_admin",
            "TypeName": "bool",
            "TypeId": 74
          },
          {
            "Name": "restricted",
            "TypeName": "Option<OwnerRestrictedSet>",
            "TypeId": 285
          }
        ],
        "Path": [
          "up_data_structs",
          "NestingPermissions"
        ],
        "TypeDef": "Composite"
      },
      "285": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 286
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 286
          }
        ],
        "TypeDef": "Variant"
      },
      "286": {
        "TypeFields": [
          {
            "TypeName": "OwnerRestrictedSetInner",
            "TypeId": 287
          }
        ],
        "Path": [
          "up_data_structs",
          "OwnerRestrictedSet"
        ],
        "TypeDef": "Composite"
      },
      "287": {
        "TypeFields": [
          {
            "TypeName": "BTreeSet<T>",
            "TypeId": 288
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_btree_set",
          "BoundedBTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 126
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "288": {
        "TypeFields": [
          {
            "TypeId": 289
          }
        ],
        "Path": [
          "BTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 126
          }
        ],
        "TypeDef": "Composite"
      },
      "289": {
        "TypeId": 126,
        "TypeDef": "Sequence"
      },
      "290": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 294
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 291
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "291": {
        "TypeFields": [
          {
            "Name": "key",
            "TypeName": "PropertyKey",
            "TypeId": 292
          },
          {
            "Name": "permission",
            "TypeName": "PropertyPermission",
            "TypeId": 293
          }
        ],
        "Path": [
          "up_data_structs",
          "PropertyKeyPermission"
        ],
        "TypeDef": "Composite"
      },
      "292": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "293": {
        "TypeFields": [
          {
            "Name": "mutable",
            "TypeName": "bool",
            "TypeId": 74
          },
          {
            "Name": "collection_admin",
            "TypeName": "bool",
            "TypeId": 74
          },
          {
            "Name": "token_owner",
            "TypeName": "bool",
            "TypeId": 74
          }
        ],
        "Path": [
          "up_data_structs",
          "PropertyPermission"
        ],
        "TypeDef": "Composite"
      },
      "294": {
        "TypeId": 291,
        "TypeDef": "Sequence"
      },
      "295": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 298
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 296
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "296": {
        "TypeFields": [
          {
            "Name": "key",
            "TypeName": "PropertyKey",
            "TypeId": 292
          },
          {
            "Name": "value",
            "TypeName": "PropertyValue",
            "TypeId": 297
          }
        ],
        "Path": [
          "up_data_structs",
          "Property"
        ],
        "TypeDef": "Composite"
      },
      "297": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "298": {
        "TypeId": 296,
        "TypeDef": "Sequence"
      },
      "299": {
        "TypeId": 273,
        "TypeDef": "Sequence"
      },
      "300": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 273
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 273
          }
        ],
        "TypeDef": "Variant"
      },
      "301": {
        "Variants": [
          {
            "Name": "NFT",
            "TypeFields": [
              {
                "TypeName": "CreateNftData",
                "TypeId": 302
              }
            ],
            "Index": 0
          },
          {
            "Name": "Fungible",
            "TypeFields": [
              {
                "TypeName": "CreateFungibleData",
                "TypeId": 303
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReFungible",
            "TypeFields": [
              {
                "TypeName": "CreateReFungibleData",
                "TypeId": 304
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "up_data_structs",
          "CreateItemData"
        ],
        "TypeDef": "Variant"
      },
      "302": {
        "TypeFields": [
          {
            "Name": "properties",
            "TypeName": "CollectionPropertiesVec",
            "TypeId": 295
          }
        ],
        "Path": [
          "up_data_structs",
          "CreateNftData"
        ],
        "TypeDef": "Composite"
      },
      "303": {
        "TypeFields": [
          {
            "Name": "value",
            "TypeName": "u128",
            "TypeId": 6
          }
        ],
        "Path": [
          "up_data_structs",
          "CreateFungibleData"
        ],
        "TypeDef": "Composite"
      },
      "304": {
        "TypeFields": [
          {
            "Name": "pieces",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "properties",
            "TypeName": "CollectionPropertiesVec",
            "TypeId": 295
          }
        ],
        "Path": [
          "up_data_structs",
          "CreateReFungibleData"
        ],
        "TypeDef": "Composite"
      },
      "305": {
        "TypeId": 301,
        "TypeDef": "Sequence"
      },
      "306": {
        "TypeId": 292,
        "TypeDef": "Sequence"
      },
      "307": {
        "TypeFields": [
          {
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "up_data_structs",
          "TokenId"
        ],
        "TypeDef": "Composite"
      },
      "308": {
        "Variants": [
          {
            "Name": "NFT",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<CreateNftExData<CrossAccountId>, ConstU32<\nMAX_ITEMS_PER_BATCH>>",
                "TypeId": 309
              }
            ],
            "Index": 0
          },
          {
            "Name": "Fungible",
            "TypeFields": [
              {
                "TypeName": "BoundedBTreeMap<CrossAccountId, u128, ConstU32<MAX_ITEMS_PER_BATCH>>",
                "TypeId": 312
              }
            ],
            "Index": 1
          },
          {
            "Name": "RefungibleMultipleItems",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<CreateRefungibleExSingleOwner<CrossAccountId>, ConstU32<\nMAX_ITEMS_PER_BATCH>>",
                "TypeId": 316
              }
            ],
            "Index": 2
          },
          {
            "Name": "RefungibleMultipleOwners",
            "TypeFields": [
              {
                "TypeName": "CreateRefungibleExMultipleOwners<CrossAccountId>",
                "TypeId": 319
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "up_data_structs",
          "CreateItemExData"
        ],
        "TypeParams": [
          {
            "Name": "CrossAccountId",
            "TypeId": 273
          }
        ],
        "TypeDef": "Variant"
      },
      "309": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 311
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 310
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "310": {
        "TypeFields": [
          {
            "Name": "properties",
            "TypeName": "CollectionPropertiesVec",
            "TypeId": 295
          },
          {
            "Name": "owner",
            "TypeName": "CrossAccountId",
            "TypeId": 273
          }
        ],
        "Path": [
          "up_data_structs",
          "CreateNftExData"
        ],
        "TypeParams": [
          {
            "Name": "CrossAccountId",
            "TypeId": 273
          }
        ],
        "TypeDef": "Composite"
      },
      "311": {
        "TypeId": 310,
        "TypeDef": "Sequence"
      },
      "312": {
        "TypeFields": [
          {
            "TypeName": "BTreeMap<K, V>",
            "TypeId": 313
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_btree_map",
          "BoundedBTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 273
          },
          {
            "Name": "V",
            "TypeId": 6
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "313": {
        "TypeFields": [
          {
            "TypeId": 314
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 273
          },
          {
            "Name": "V",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "314": {
        "TypeId": 315,
        "TypeDef": "Sequence"
      },
      "315": {
        "TypeIds": [
          273,
          6
        ],
        "TypeDef": "Tuple"
      },
      "316": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 318
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 317
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "317": {
        "TypeFields": [
          {
            "Name": "user",
            "TypeName": "CrossAccountId",
            "TypeId": 273
          },
          {
            "Name": "pieces",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "properties",
            "TypeName": "CollectionPropertiesVec",
            "TypeId": 295
          }
        ],
        "Path": [
          "up_data_structs",
          "CreateRefungibleExSingleOwner"
        ],
        "TypeParams": [
          {
            "Name": "CrossAccountId",
            "TypeId": 273
          }
        ],
        "TypeDef": "Composite"
      },
      "318": {
        "TypeId": 317,
        "TypeDef": "Sequence"
      },
      "319": {
        "TypeFields": [
          {
            "Name": "users",
            "TypeName": "BoundedBTreeMap<CrossAccountId, u128, ConstU32<MAX_ITEMS_PER_BATCH>>",
            "TypeId": 312
          },
          {
            "Name": "properties",
            "TypeName": "CollectionPropertiesVec",
            "TypeId": 295
          }
        ],
        "Path": [
          "up_data_structs",
          "CreateRefungibleExMultipleOwners"
        ],
        "TypeParams": [
          {
            "Name": "CrossAccountId",
            "TypeId": 273
          }
        ],
        "TypeDef": "Composite"
      },
      "320": {
        "Variants": [
          {
            "Name": "set_weight_to_fee_coefficient_override",
            "TypeFields": [
              {
                "Name": "coeff",
                "TypeName": "Option<u64>",
                "TypeId": 321
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_weight_to_fee_coefficient_override`]."
            ]
          },
          {
            "Name": "set_min_gas_price_override",
            "TypeFields": [
              {
                "Name": "coeff",
                "TypeName": "Option<u64>",
                "TypeId": 321
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_min_gas_price_override`]."
            ]
          },
          {
            "Name": "set_app_promotion_configuration_override",
            "TypeFields": [
              {
                "Name": "configuration",
                "TypeName": "AppPromotionConfiguration<BlockNumberFor<T>>",
                "TypeId": 322
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::set_app_promotion_configuration_override`]."
            ]
          },
          {
            "Name": "set_collator_selection_desired_collators",
            "TypeFields": [
              {
                "Name": "max",
                "TypeName": "Option<u32>",
                "TypeId": 121
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::set_collator_selection_desired_collators`]."
            ]
          },
          {
            "Name": "set_collator_selection_license_bond",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "Option<<T as Config>::Balance>",
                "TypeId": 326
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::set_collator_selection_license_bond`]."
            ]
          },
          {
            "Name": "set_collator_selection_kick_threshold",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 121
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::set_collator_selection_kick_threshold`]."
            ]
          }
        ],
        "Path": [
          "pallet_configuration",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "321": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 11
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 11
          }
        ],
        "TypeDef": "Variant"
      },
      "322": {
        "TypeFields": [
          {
            "Name": "recalculation_interval",
            "TypeName": "Option<BlockNumber>",
            "TypeId": 121
          },
          {
            "Name": "pending_interval",
            "TypeName": "Option<BlockNumber>",
            "TypeId": 121
          },
          {
            "Name": "interval_income",
            "TypeName": "Option<Perbill>",
            "TypeId": 323
          },
          {
            "Name": "max_stakers_per_calculation",
            "TypeName": "Option<u8>",
            "TypeId": 325
          }
        ],
        "Path": [
          "pallet_configuration",
          "AppPromotionConfiguration"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "323": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 324
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 324
          }
        ],
        "TypeDef": "Variant"
      },
      "324": {
        "TypeFields": [
          {
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "sp_arithmetic",
          "per_things",
          "Perbill"
        ],
        "TypeDef": "Composite"
      },
      "325": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          }
        ],
        "TypeDef": "Variant"
      },
      "326": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 6
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "327": {
        "Variants": null,
        "Path": [
          "pallet_structure",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "328": {
        "Variants": [
          {
            "Name": "set_admin_address",
            "TypeFields": [
              {
                "Name": "admin",
                "TypeName": "T::CrossAccountId",
                "TypeId": 273
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_admin_address`]."
            ]
          },
          {
            "Name": "stake",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::stake`]."
            ]
          },
          {
            "Name": "unstake_all",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "See [`Pallet::unstake_all`]."
            ]
          },
          {
            "Name": "unstake_partial",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::unstake_partial`]."
            ]
          },
          {
            "Name": "sponsor_collection",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::sponsor_collection`]."
            ]
          },
          {
            "Name": "stop_sponsoring_collection",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::stop_sponsoring_collection`]."
            ]
          },
          {
            "Name": "sponsor_contract",
            "TypeFields": [
              {
                "Name": "contract_id",
                "TypeName": "H160",
                "TypeId": 215
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::sponsor_contract`]."
            ]
          },
          {
            "Name": "stop_sponsoring_contract",
            "TypeFields": [
              {
                "Name": "contract_id",
                "TypeName": "H160",
                "TypeId": 215
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::stop_sponsoring_contract`]."
            ]
          },
          {
            "Name": "payout_stakers",
            "TypeFields": [
              {
                "Name": "stakers_number",
                "TypeName": "Option<u8>",
                "TypeId": 325
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::payout_stakers`]."
            ]
          },
          {
            "Name": "force_unstake",
            "TypeFields": [
              {
                "Name": "pending_blocks",
                "TypeName": "Vec<BlockNumberFor<T>>",
                "TypeId": 329
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::force_unstake`]."
            ]
          }
        ],
        "Path": [
          "pallet_app_promotion",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "329": {
        "TypeId": 4,
        "TypeDef": "Sequence"
      },
      "330": {
        "Variants": [
          {
            "Name": "force_register_foreign_asset",
            "TypeFields": [
              {
                "Name": "versioned_asset_id",
                "TypeName": "Box<VersionedAssetId>",
                "TypeId": 331
              },
              {
                "Name": "name",
                "TypeName": "CollectionName",
                "TypeId": 267
              },
              {
                "Name": "token_prefix",
                "TypeName": "CollectionTokenPrefix",
                "TypeId": 270
              },
              {
                "Name": "mode",
                "TypeName": "ForeignCollectionMode",
                "TypeId": 332
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::force_register_foreign_asset`]."
            ]
          }
        ],
        "Path": [
          "pallet_foreign_assets",
          "module",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "331": {
        "Variants": [
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::AssetId",
                "TypeId": 52
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "VersionedAssetId"
        ],
        "TypeDef": "Variant"
      },
      "332": {
        "Variants": [
          {
            "Name": "NFT",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Fungible",
            "TypeFields": [
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_foreign_assets",
          "ForeignCollectionMode"
        ],
        "TypeDef": "Variant"
      },
      "333": {
        "Variants": [
          {
            "Name": "withdraw",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "H160",
                "TypeId": 215
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::withdraw`]."
            ]
          },
          {
            "Name": "call",
            "TypeFields": [
              {
                "Name": "source",
                "TypeName": "H160",
                "TypeId": 215
              },
              {
                "Name": "target",
                "TypeName": "H160",
                "TypeId": 215
              },
              {
                "Name": "input",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "value",
                "TypeName": "U256",
                "TypeId": 334
              },
              {
                "Name": "gas_limit",
                "TypeName": "u64",
                "TypeId": 11
              },
              {
                "Name": "max_fee_per_gas",
                "TypeName": "U256",
                "TypeId": 334
              },
              {
                "Name": "max_priority_fee_per_gas",
                "TypeName": "Option<U256>",
                "TypeId": 336
              },
              {
                "Name": "nonce",
                "TypeName": "Option<U256>",
                "TypeId": 336
              },
              {
                "Name": "access_list",
                "TypeName": "Vec<(H160, Vec<H256>)>",
                "TypeId": 337
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::call`]."
            ]
          },
          {
            "Name": "create",
            "TypeFields": [
              {
                "Name": "source",
                "TypeName": "H160",
                "TypeId": 215
              },
              {
                "Name": "init",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "value",
                "TypeName": "U256",
                "TypeId": 334
              },
              {
                "Name": "gas_limit",
                "TypeName": "u64",
                "TypeId": 11
              },
              {
                "Name": "max_fee_per_gas",
                "TypeName": "U256",
                "TypeId": 334
              },
              {
                "Name": "max_priority_fee_per_gas",
                "TypeName": "Option<U256>",
                "TypeId": 336
              },
              {
                "Name": "nonce",
                "TypeName": "Option<U256>",
                "TypeId": 336
              },
              {
                "Name": "access_list",
                "TypeName": "Vec<(H160, Vec<H256>)>",
                "TypeId": 337
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::create`]."
            ]
          },
          {
            "Name": "create2",
            "TypeFields": [
              {
                "Name": "source",
                "TypeName": "H160",
                "TypeId": 215
              },
              {
                "Name": "init",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "salt",
                "TypeName": "H256",
                "TypeId": 12
              },
              {
                "Name": "value",
                "TypeName": "U256",
                "TypeId": 334
              },
              {
                "Name": "gas_limit",
                "TypeName": "u64",
                "TypeId": 11
              },
              {
                "Name": "max_fee_per_gas",
                "TypeName": "U256",
                "TypeId": 334
              },
              {
                "Name": "max_priority_fee_per_gas",
                "TypeName": "Option<U256>",
                "TypeId": 336
              },
              {
                "Name": "nonce",
                "TypeName": "Option<U256>",
                "TypeId": 336
              },
              {
                "Name": "access_list",
                "TypeName": "Vec<(H160, Vec<H256>)>",
                "TypeId": 337
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::create2`]."
            ]
          }
        ],
        "Path": [
          "pallet_evm",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "334": {
        "TypeFields": [
          {
            "TypeName": "[u64; 4]",
            "TypeId": 335
          }
        ],
        "Path": [
          "primitive_types",
          "U256"
        ],
        "TypeDef": "Composite"
      },
      "335": {
        "Length": 4,
        "TypeId": 11,
        "TypeDef": "Array"
      },
      "336": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 334
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 334
          }
        ],
        "TypeDef": "Variant"
      },
      "337": {
        "TypeId": 338,
        "TypeDef": "Sequence"
      },
      "338": {
        "TypeIds": [
          215,
          197
        ],
        "TypeDef": "Tuple"
      },
      "339": {
        "Variants": [
          {
            "Name": "transact",
            "TypeFields": [
              {
                "Name": "transaction",
                "TypeName": "Transaction",
                "TypeId": 340
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::transact`]."
            ]
          }
        ],
        "Path": [
          "pallet_ethereum",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "340": {
        "Variants": [
          {
            "Name": "Legacy",
            "TypeFields": [
              {
                "TypeName": "LegacyTransaction",
                "TypeId": 341
              }
            ],
            "Index": 0
          },
          {
            "Name": "EIP2930",
            "TypeFields": [
              {
                "TypeName": "EIP2930Transaction",
                "TypeId": 345
              }
            ],
            "Index": 1
          },
          {
            "Name": "EIP1559",
            "TypeFields": [
              {
                "TypeName": "EIP1559Transaction",
                "TypeId": 348
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "ethereum",
          "transaction",
          "TransactionV2"
        ],
        "TypeDef": "Variant"
      },
      "341": {
        "TypeFields": [
          {
            "Name": "nonce",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "gas_price",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "gas_limit",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "action",
            "TypeName": "TransactionAction",
            "TypeId": 342
          },
          {
            "Name": "value",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "input",
            "TypeName": "Bytes",
            "TypeId": 13
          },
          {
            "Name": "signature",
            "TypeName": "TransactionSignature",
            "TypeId": 343
          }
        ],
        "Path": [
          "ethereum",
          "transaction",
          "LegacyTransaction"
        ],
        "TypeDef": "Composite"
      },
      "342": {
        "Variants": [
          {
            "Name": "Call",
            "TypeFields": [
              {
                "TypeName": "H160",
                "TypeId": 215
              }
            ],
            "Index": 0
          },
          {
            "Name": "Create",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "ethereum",
          "transaction",
          "TransactionAction"
        ],
        "TypeDef": "Variant"
      },
      "343": {
        "TypeFields": [
          {
            "Name": "v",
            "TypeName": "TransactionRecoveryId",
            "TypeId": 344
          },
          {
            "Name": "r",
            "TypeName": "H256",
            "TypeId": 12
          },
          {
            "Name": "s",
            "TypeName": "H256",
            "TypeId": 12
          }
        ],
        "Path": [
          "ethereum",
          "transaction",
          "TransactionSignature"
        ],
        "TypeDef": "Composite"
      },
      "344": {
        "TypeFields": [
          {
            "TypeName": "u64",
            "TypeId": 11
          }
        ],
        "Path": [
          "ethereum",
          "transaction",
          "TransactionRecoveryId"
        ],
        "TypeDef": "Composite"
      },
      "345": {
        "TypeFields": [
          {
            "Name": "chain_id",
            "TypeName": "u64",
            "TypeId": 11
          },
          {
            "Name": "nonce",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "gas_price",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "gas_limit",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "action",
            "TypeName": "TransactionAction",
            "TypeId": 342
          },
          {
            "Name": "value",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "input",
            "TypeName": "Bytes",
            "TypeId": 13
          },
          {
            "Name": "access_list",
            "TypeName": "AccessList",
            "TypeId": 346
          },
          {
            "Name": "odd_y_parity",
            "TypeName": "bool",
            "TypeId": 74
          },
          {
            "Name": "r",
            "TypeName": "H256",
            "TypeId": 12
          },
          {
            "Name": "s",
            "TypeName": "H256",
            "TypeId": 12
          }
        ],
        "Path": [
          "ethereum",
          "transaction",
          "EIP2930Transaction"
        ],
        "TypeDef": "Composite"
      },
      "346": {
        "TypeId": 347,
        "TypeDef": "Sequence"
      },
      "347": {
        "TypeFields": [
          {
            "Name": "address",
            "TypeName": "Address",
            "TypeId": 215
          },
          {
            "Name": "storage_keys",
            "TypeName": "Vec<H256>",
            "TypeId": 197
          }
        ],
        "Path": [
          "ethereum",
          "transaction",
          "AccessListItem"
        ],
        "TypeDef": "Composite"
      },
      "348": {
        "TypeFields": [
          {
            "Name": "chain_id",
            "TypeName": "u64",
            "TypeId": 11
          },
          {
            "Name": "nonce",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "max_priority_fee_per_gas",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "max_fee_per_gas",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "gas_limit",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "action",
            "TypeName": "TransactionAction",
            "TypeId": 342
          },
          {
            "Name": "value",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "input",
            "TypeName": "Bytes",
            "TypeId": 13
          },
          {
            "Name": "access_list",
            "TypeName": "AccessList",
            "TypeId": 346
          },
          {
            "Name": "odd_y_parity",
            "TypeName": "bool",
            "TypeId": 74
          },
          {
            "Name": "r",
            "TypeName": "H256",
            "TypeId": 12
          },
          {
            "Name": "s",
            "TypeName": "H256",
            "TypeId": 12
          }
        ],
        "Path": [
          "ethereum",
          "transaction",
          "EIP1559Transaction"
        ],
        "TypeDef": "Composite"
      },
      "349": {
        "Variants": [
          {
            "Name": "migrate_from_self_sponsoring",
            "TypeFields": [
              {
                "Name": "addresses",
                "TypeName": "Vec<H160>",
                "TypeId": 350
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::migrate_from_self_sponsoring`]."
            ]
          }
        ],
        "Path": [
          "pallet_evm_contract_helpers",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "350": {
        "TypeId": 215,
        "TypeDef": "Sequence"
      },
      "351": {
        "Variants": [
          {
            "Name": "begin",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "H160",
                "TypeId": 215
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::begin`]."
            ]
          },
          {
            "Name": "set_data",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "H160",
                "TypeId": 215
              },
              {
                "Name": "data",
                "TypeName": "Vec<(H256, H256)>",
                "TypeId": 352
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_data`]."
            ]
          },
          {
            "Name": "finish",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "H160",
                "TypeId": 215
              },
              {
                "Name": "code",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::finish`]."
            ]
          },
          {
            "Name": "insert_eth_logs",
            "TypeFields": [
              {
                "Name": "logs",
                "TypeName": "Vec<ethereum::Log>",
                "TypeId": 354
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::insert_eth_logs`]."
            ]
          },
          {
            "Name": "insert_events",
            "TypeFields": [
              {
                "Name": "events",
                "TypeName": "Vec<Vec<u8>>",
                "TypeId": 88
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::insert_events`]."
            ]
          },
          {
            "Name": "remove_rmrk_data",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "See [`Pallet::remove_rmrk_data`]."
            ]
          }
        ],
        "Path": [
          "pallet_evm_migration",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "352": {
        "TypeId": 353,
        "TypeDef": "Sequence"
      },
      "353": {
        "TypeIds": [
          12,
          12
        ],
        "TypeDef": "Tuple"
      },
      "354": {
        "TypeId": 355,
        "TypeDef": "Sequence"
      },
      "355": {
        "TypeFields": [
          {
            "Name": "address",
            "TypeName": "H160",
            "TypeId": 215
          },
          {
            "Name": "topics",
            "TypeName": "Vec<H256>",
            "TypeId": 197
          },
          {
            "Name": "data",
            "TypeName": "Bytes",
            "TypeId": 13
          }
        ],
        "Path": [
          "ethereum",
          "log",
          "Log"
        ],
        "TypeDef": "Composite"
      },
      "356": {
        "Variants": [
          {
            "Name": "enable",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "See [`Pallet::enable`]."
            ]
          },
          {
            "Name": "disable",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "See [`Pallet::disable`]."
            ]
          }
        ],
        "Path": [
          "pallet_maintenance",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "357": {
        "Variants": [
          {
            "Name": "batch",
            "TypeFields": [
              {
                "Name": "calls",
                "TypeName": "Vec<<T as Config>::RuntimeCall>",
                "TypeId": 358
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::batch`]."
            ]
          },
          {
            "Name": "as_derivative",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u16",
                "TypeId": 79
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 84
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::as_derivative`]."
            ]
          },
          {
            "Name": "batch_all",
            "TypeFields": [
              {
                "Name": "calls",
                "TypeName": "Vec<<T as Config>::RuntimeCall>",
                "TypeId": 358
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::batch_all`]."
            ]
          },
          {
            "Name": "dispatch_as",
            "TypeFields": [
              {
                "Name": "as_origin",
                "TypeName": "Box<T::PalletsOrigin>",
                "TypeId": 207
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 84
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::dispatch_as`]."
            ]
          },
          {
            "Name": "force_batch",
            "TypeFields": [
              {
                "Name": "calls",
                "TypeName": "Vec<<T as Config>::RuntimeCall>",
                "TypeId": 358
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::force_batch`]."
            ]
          },
          {
            "Name": "with_weight",
            "TypeFields": [
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 84
              },
              {
                "Name": "weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::with_weight`]."
            ]
          }
        ],
        "Path": [
          "pallet_utility",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "358": {
        "TypeId": 84,
        "TypeDef": "Sequence"
      },
      "359": {
        "Variants": [
          {
            "Name": "enable",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "See `Pallet::enable`."
            ]
          },
          {
            "Name": "set_test_value",
            "TypeFields": [
              {
                "Name": "value",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See `Pallet::set_test_value`."
            ]
          },
          {
            "Name": "set_test_value_and_rollback",
            "TypeFields": [
              {
                "Name": "value",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "See `Pallet::set_test_value_and_rollback`."
            ]
          },
          {
            "Name": "inc_test_value",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "See `Pallet::inc_test_value`."
            ]
          },
          {
            "Name": "just_take_fee",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "See `Pallet::just_take_fee`."
            ]
          },
          {
            "Name": "batch_all",
            "TypeFields": [
              {
                "Name": "calls",
                "TypeName": "Vec<<T as Config>::RuntimeCall>",
                "TypeId": 358
              }
            ],
            "Index": 5,
            "Docs": [
              "See `Pallet::batch_all`."
            ]
          }
        ],
        "Path": [
          "pallet_test_utils",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "360": {
        "Path": [
          "sp_runtime",
          "traits",
          "BlakeTwo256"
        ],
        "TypeDef": "Composite"
      },
      "361": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "362": {
        "Variants": [
          {
            "Name": "Scheduled",
            "TypeFields": [
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "Scheduled some task."
            ]
          },
          {
            "Name": "Canceled",
            "TypeFields": [
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "Canceled some task."
            ]
          },
          {
            "Name": "Dispatched",
            "TypeFields": [
              {
                "Name": "task",
                "TypeName": "TaskAddress<BlockNumberFor<T>>",
                "TypeId": 220
              },
              {
                "Name": "id",
                "TypeName": "Option<TaskName>",
                "TypeId": 34
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 43
              }
            ],
            "Index": 2,
            "Docs": [
              "Dispatched some task."
            ]
          },
          {
            "Name": "CallUnavailable",
            "TypeFields": [
              {
                "Name": "task",
                "TypeName": "TaskAddress<BlockNumberFor<T>>",
                "TypeId": 220
              },
              {
                "Name": "id",
                "TypeName": "Option<TaskName>",
                "TypeId": 34
              }
            ],
            "Index": 3,
            "Docs": [
              "The call for the provided hash was not found so the task has been aborted."
            ]
          },
          {
            "Name": "PeriodicFailed",
            "TypeFields": [
              {
                "Name": "task",
                "TypeName": "TaskAddress<BlockNumberFor<T>>",
                "TypeId": 220
              },
              {
                "Name": "id",
                "TypeName": "Option<TaskName>",
                "TypeId": 34
              }
            ],
            "Index": 4,
            "Docs": [
              "The given task was unable to be renewed since the agenda is full at that block."
            ]
          },
          {
            "Name": "PermanentlyOverweight",
            "TypeFields": [
              {
                "Name": "task",
                "TypeName": "TaskAddress<BlockNumberFor<T>>",
                "TypeId": 220
              },
              {
                "Name": "id",
                "TypeName": "Option<TaskName>",
                "TypeId": 34
              }
            ],
            "Index": 5,
            "Docs": [
              "The given task can never be executed since it is overweight."
            ]
          }
        ],
        "Path": [
          "pallet_scheduler",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Events type."
        ]
      },
      "363": {
        "Variants": [
          {
            "Name": "Success",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              },
              {
                "Name": "weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 0,
            "Docs": [
              "Some XCM was executed ok."
            ]
          },
          {
            "Name": "Fail",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              },
              {
                "Name": "error",
                "TypeName": "XcmError",
                "TypeId": 243
              },
              {
                "Name": "weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 1,
            "Docs": [
              "Some XCM failed."
            ]
          },
          {
            "Name": "BadVersion",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 2,
            "Docs": [
              "Bad XCM version used."
            ]
          },
          {
            "Name": "BadFormat",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 3,
            "Docs": [
              "Bad XCM format used."
            ]
          },
          {
            "Name": "XcmpMessageSent",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 4,
            "Docs": [
              "An HRMP message was sent to a sibling parachain."
            ]
          },
          {
            "Name": "OverweightEnqueued",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "ParaId",
                "TypeId": 104
              },
              {
                "Name": "sent_at",
                "TypeName": "RelayBlockNumber",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "OverweightIndex",
                "TypeId": 11
              },
              {
                "Name": "required",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 5,
            "Docs": [
              "An XCM exceeded the individual message weight budget."
            ]
          },
          {
            "Name": "OverweightServiced",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "OverweightIndex",
                "TypeId": 11
              },
              {
                "Name": "used",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 6,
            "Docs": [
              "An XCM from the overweight queue was executed with the given actual weight used."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "364": {
        "Variants": [
          {
            "Name": "Attempted",
            "TypeFields": [
              {
                "Name": "outcome",
                "TypeName": "xcm::latest::Outcome",
                "TypeId": 365
              }
            ],
            "Index": 0,
            "Docs": [
              "Execution of an XCM message was attempted."
            ]
          },
          {
            "Name": "Sent",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "destination",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "message",
                "TypeName": "Xcm<()>",
                "TypeId": 237
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 1,
            "Docs": [
              "A XCM message was sent."
            ]
          },
          {
            "Name": "UnexpectedResponse",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              }
            ],
            "Index": 2,
            "Docs": [
              "Query response received which does not match a registered query. This may be because a",
              "matching query was never registered, it may be because it is a duplicate response, or",
              "because the query timed out."
            ]
          },
          {
            "Name": "ResponseReady",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 240
              }
            ],
            "Index": 3,
            "Docs": [
              "Query response has been received and is ready for taking with `take_response`. There is",
              "no registered notification call."
            ]
          },
          {
            "Name": "Notified",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "pallet_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "call_index",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 4,
            "Docs": [
              "Query response has been received and query is removed. The registered notification has",
              "been dispatched and executed successfully."
            ]
          },
          {
            "Name": "NotifyOverweight",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "pallet_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "call_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "actual_weight",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "max_budgeted_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 5,
            "Docs": [
              "Query response has been received and query is removed. The registered notification",
              "could not be dispatched because the dispatch weight is greater than the maximum weight",
              "originally budgeted by this runtime for the query result."
            ]
          },
          {
            "Name": "NotifyDispatchError",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "pallet_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "call_index",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 6,
            "Docs": [
              "Query response has been received and query is removed. There was a general error with",
              "dispatching the notification call."
            ]
          },
          {
            "Name": "NotifyDecodeFailed",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "pallet_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "call_index",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 7,
            "Docs": [
              "Query response has been received and query is removed. The dispatch was unable to be",
              "decoded into a `Call`; this might be due to dispatch function having a signature which",
              "is not `(origin, QueryId, Response)`."
            ]
          },
          {
            "Name": "InvalidResponder",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "expected_location",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 250
              }
            ],
            "Index": 8,
            "Docs": [
              "Expected query response has been received but the origin location of the response does",
              "not match that expected. The query remains registered for a later, valid, response to",
              "be received and acted upon."
            ]
          },
          {
            "Name": "InvalidResponderVersion",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              }
            ],
            "Index": 9,
            "Docs": [
              "Expected query response has been received but the expected origin location placed in",
              "storage by this runtime previously cannot be decoded. The query remains registered.",
              "",
              "This is unexpected (since a location placed in storage in a previously executing",
              "runtime should be readable prior to query timeout) and dangerous since the possibly",
              "valid response will be dropped. Manual governance intervention is probably going to be",
              "needed."
            ]
          },
          {
            "Name": "ResponseTaken",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              }
            ],
            "Index": 10,
            "Docs": [
              "Received query response has been read and removed."
            ]
          },
          {
            "Name": "AssetsTrapped",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "H256",
                "TypeId": 12
              },
              {
                "Name": "origin",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "assets",
                "TypeName": "VersionedMultiAssets",
                "TypeId": 143
              }
            ],
            "Index": 11,
            "Docs": [
              "Some assets have been placed in an asset trap."
            ]
          },
          {
            "Name": "VersionChangeNotified",
            "TypeFields": [
              {
                "Name": "destination",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "result",
                "TypeName": "XcmVersion",
                "TypeId": 4
              },
              {
                "Name": "cost",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 12,
            "Docs": [
              "An XCM version change notification message has been attempted to be sent.",
              "",
              "The cost of sending it (borne by the chain) is included."
            ]
          },
          {
            "Name": "SupportedVersionChanged",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "version",
                "TypeName": "XcmVersion",
                "TypeId": 4
              }
            ],
            "Index": 13,
            "Docs": [
              "The supported version of a location has been changed. This might be through an",
              "automatic notification or a manual intervention."
            ]
          },
          {
            "Name": "NotifyTargetSendFail",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "error",
                "TypeName": "XcmError",
                "TypeId": 243
              }
            ],
            "Index": 14,
            "Docs": [
              "A given location which had a version change subscription was dropped owing to an error",
              "sending the notification to it."
            ]
          },
          {
            "Name": "NotifyTargetMigrationFail",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "VersionedMultiLocation",
                "TypeId": 127
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              }
            ],
            "Index": 15,
            "Docs": [
              "A given location which had a version change subscription was dropped owing to an error",
              "migrating the location to our new XCM format."
            ]
          },
          {
            "Name": "InvalidQuerierVersion",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              }
            ],
            "Index": 16,
            "Docs": [
              "Expected query response has been received but the expected querier location placed in",
              "storage by this runtime previously cannot be decoded. The query remains registered.",
              "",
              "This is unexpected (since a location placed in storage in a previously executing",
              "runtime should be readable prior to query timeout) and dangerous since the possibly",
              "valid response will be dropped. Manual governance intervention is probably going to be",
              "needed."
            ]
          },
          {
            "Name": "InvalidQuerier",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "expected_querier",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "maybe_actual_querier",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 250
              }
            ],
            "Index": 17,
            "Docs": [
              "Expected query response has been received but the querier location of the response does",
              "not match the expected. The query remains registered for a later, valid, response to",
              "be received and acted upon."
            ]
          },
          {
            "Name": "VersionNotifyStarted",
            "TypeFields": [
              {
                "Name": "destination",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "cost",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 18,
            "Docs": [
              "A remote has requested XCM version change notification from us and we have honored it.",
              "A version information message is sent to them and its cost is included."
            ]
          },
          {
            "Name": "VersionNotifyRequested",
            "TypeFields": [
              {
                "Name": "destination",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "cost",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 19,
            "Docs": [
              "We have requested that a remote chain send us XCM version change notifications."
            ]
          },
          {
            "Name": "VersionNotifyUnrequested",
            "TypeFields": [
              {
                "Name": "destination",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "cost",
                "TypeName": "MultiAssets",
                "TypeId": 49
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 20,
            "Docs": [
              "We have requested that a remote chain stops sending us XCM version change",
              "notifications."
            ]
          },
          {
            "Name": "FeesPaid",
            "TypeFields": [
              {
                "Name": "paying",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "fees",
                "TypeName": "MultiAssets",
                "TypeId": 49
              }
            ],
            "Index": 21,
            "Docs": [
              "Fees were paid from a location for an operation (often for using `SendXcm`)."
            ]
          },
          {
            "Name": "AssetsClaimed",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "H256",
                "TypeId": 12
              },
              {
                "Name": "origin",
                "TypeName": "MultiLocation",
                "TypeId": 53
              },
              {
                "Name": "assets",
                "TypeName": "VersionedMultiAssets",
                "TypeId": 143
              }
            ],
            "Index": 22,
            "Docs": [
              "Some assets have been claimed from an asset trap"
            ]
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "365": {
        "Variants": [
          {
            "Name": "Complete",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 0
          },
          {
            "Name": "Incomplete",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "TypeName": "Error",
                "TypeId": 243
              }
            ],
            "Index": 1
          },
          {
            "Name": "Error",
            "TypeFields": [
              {
                "TypeName": "Error",
                "TypeId": 243
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "traits",
          "Outcome"
        ],
        "TypeDef": "Variant"
      },
      "366": {
        "Variants": [
          {
            "Name": "InvalidFormat",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 0,
            "Docs": [
              "Downward message is invalid XCM.",
              "\\[ id \\]"
            ]
          },
          {
            "Name": "UnsupportedVersion",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1,
            "Docs": [
              "Downward message is unsupported version of XCM.",
              "\\[ id \\]"
            ]
          },
          {
            "Name": "ExecutedDownward",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              },
              {
                "TypeName": "Outcome",
                "TypeId": 365
              }
            ],
            "Index": 2,
            "Docs": [
              "Downward message executed with the given outcome.",
              "\\[ id, outcome \\]"
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_xcm",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "367": {
        "Variants": [
          {
            "Name": "InvalidFormat",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 0,
            "Docs": [
              "Downward message is invalid XCM."
            ]
          },
          {
            "Name": "UnsupportedVersion",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 1,
            "Docs": [
              "Downward message is unsupported version of XCM."
            ]
          },
          {
            "Name": "ExecutedDownward",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              },
              {
                "Name": "outcome",
                "TypeName": "Outcome",
                "TypeId": 365
              }
            ],
            "Index": 2,
            "Docs": [
              "Downward message executed with the given outcome."
            ]
          },
          {
            "Name": "WeightExhausted",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              },
              {
                "Name": "remaining_weight",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "required_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 3,
            "Docs": [
              "The weight limit for handling downward messages was reached."
            ]
          },
          {
            "Name": "OverweightEnqueued",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              },
              {
                "Name": "overweight_index",
                "TypeName": "OverweightIndex",
                "TypeId": 11
              },
              {
                "Name": "required_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 4,
            "Docs": [
              "Downward message is overweight and was placed in the overweight queue."
            ]
          },
          {
            "Name": "OverweightServiced",
            "TypeFields": [
              {
                "Name": "overweight_index",
                "TypeName": "OverweightIndex",
                "TypeId": 11
              },
              {
                "Name": "weight_used",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 5,
            "Docs": [
              "Downward message from the overweight queue was executed."
            ]
          },
          {
            "Name": "MaxMessagesExhausted",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 6,
            "Docs": [
              "The maximum number of downward messages was reached."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_dmp_queue",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "368": {
        "Variants": [
          {
            "Name": "NewDesiredCollators",
            "TypeFields": [
              {
                "Name": "desired_collators",
                "TypeName": "Option<u32>",
                "TypeId": 121
              }
            ],
            "Index": 0
          },
          {
            "Name": "NewCollatorLicenseBond",
            "TypeFields": [
              {
                "Name": "bond_cost",
                "TypeName": "Option<T::Balance>",
                "TypeId": 326
              }
            ],
            "Index": 1
          },
          {
            "Name": "NewCollatorKickThreshold",
            "TypeFields": [
              {
                "Name": "length_in_blocks",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 121
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "pallet_configuration",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "369": {
        "Variants": [
          {
            "Name": "CollectionCreated",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "Globally unique identifier of newly created collection."
                ]
              },
              {
                "TypeName": "u8",
                "TypeId": 2,
                "Docs": [
                  "[`CollectionMode`] converted into _u8_."
                ]
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "Collection owner."
                ]
              }
            ],
            "Index": 0,
            "Docs": [
              "New collection was created"
            ]
          },
          {
            "Name": "CollectionDestroyed",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "Globally unique identifier of collection."
                ]
              }
            ],
            "Index": 1,
            "Docs": [
              "New collection was destroyed"
            ]
          },
          {
            "Name": "ItemCreated",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "Id of the collection where item was created."
                ]
              },
              {
                "TypeName": "TokenId",
                "TypeId": 307,
                "Docs": [
                  "Id of an item. Unique within the collection."
                ]
              },
              {
                "TypeName": "T::CrossAccountId",
                "TypeId": 273,
                "Docs": [
                  "Owner of newly created item"
                ]
              },
              {
                "TypeName": "u128",
                "TypeId": 6,
                "Docs": [
                  "Always 1 for NFT"
                ]
              }
            ],
            "Index": 2,
            "Docs": [
              "New item was created."
            ]
          },
          {
            "Name": "ItemDestroyed",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "Id of the collection where item was destroyed."
                ]
              },
              {
                "TypeName": "TokenId",
                "TypeId": 307,
                "Docs": [
                  "Identifier of burned NFT."
                ]
              },
              {
                "TypeName": "T::CrossAccountId",
                "TypeId": 273,
                "Docs": [
                  "Which user has destroyed its tokens."
                ]
              },
              {
                "TypeName": "u128",
                "TypeId": 6,
                "Docs": [
                  "Amount of token pieces destroed. Always 1 for NFT."
                ]
              }
            ],
            "Index": 3,
            "Docs": [
              "Collection item was burned."
            ]
          },
          {
            "Name": "Transfer",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "Id of collection to which item is belong."
                ]
              },
              {
                "TypeName": "TokenId",
                "TypeId": 307,
                "Docs": [
                  "Id of an item."
                ]
              },
              {
                "TypeName": "T::CrossAccountId",
                "TypeId": 273,
                "Docs": [
                  "Original owner of item."
                ]
              },
              {
                "TypeName": "T::CrossAccountId",
                "TypeId": 273,
                "Docs": [
                  "New owner of item."
                ]
              },
              {
                "TypeName": "u128",
                "TypeId": 6,
                "Docs": [
                  "Amount of token pieces transfered. Always 1 for NFT."
                ]
              }
            ],
            "Index": 4,
            "Docs": [
              "Item was transferred"
            ]
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "Id of collection to which item is belong."
                ]
              },
              {
                "TypeName": "TokenId",
                "TypeId": 307,
                "Docs": [
                  "Id of an item."
                ]
              },
              {
                "TypeName": "T::CrossAccountId",
                "TypeId": 273,
                "Docs": [
                  "Original owner of item."
                ]
              },
              {
                "TypeName": "T::CrossAccountId",
                "TypeId": 273,
                "Docs": [
                  "Id for which the approval was granted."
                ]
              },
              {
                "TypeName": "u128",
                "TypeId": 6,
                "Docs": [
                  "Amount of token pieces transfered. Always 1 for NFT."
                ]
              }
            ],
            "Index": 5,
            "Docs": [
              "Amount pieces of token owned by `sender` was approved for `spender`."
            ]
          },
          {
            "Name": "ApprovedForAll",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "Id of collection to which item is belong."
                ]
              },
              {
                "TypeName": "T::CrossAccountId",
                "TypeId": 273,
                "Docs": [
                  "Owner of a wallet."
                ]
              },
              {
                "TypeName": "T::CrossAccountId",
                "TypeId": 273,
                "Docs": [
                  "Id for which operator status was granted or rewoked."
                ]
              },
              {
                "TypeName": "bool",
                "TypeId": 74,
                "Docs": [
                  "Is operator status granted or revoked?"
                ]
              }
            ],
            "Index": 6,
            "Docs": [
              "A `sender` approves operations on all owned tokens for `spender`."
            ]
          },
          {
            "Name": "CollectionPropertySet",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "Id of collection to which property has been set."
                ]
              },
              {
                "TypeName": "PropertyKey",
                "TypeId": 292,
                "Docs": [
                  "The property that was set."
                ]
              }
            ],
            "Index": 7,
            "Docs": [
              "The colletion property has been added or edited."
            ]
          },
          {
            "Name": "CollectionPropertyDeleted",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "Id of collection to which property has been deleted."
                ]
              },
              {
                "TypeName": "PropertyKey",
                "TypeId": 292,
                "Docs": [
                  "The property that was deleted."
                ]
              }
            ],
            "Index": 8,
            "Docs": [
              "The property has been deleted."
            ]
          },
          {
            "Name": "TokenPropertySet",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "Identifier of the collection whose token has the property set."
                ]
              },
              {
                "TypeName": "TokenId",
                "TypeId": 307,
                "Docs": [
                  "The token for which the property was set."
                ]
              },
              {
                "TypeName": "PropertyKey",
                "TypeId": 292,
                "Docs": [
                  "The property that was set."
                ]
              }
            ],
            "Index": 9,
            "Docs": [
              "The token property has been added or edited."
            ]
          },
          {
            "Name": "TokenPropertyDeleted",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "Identifier of the collection whose token has the property deleted."
                ]
              },
              {
                "TypeName": "TokenId",
                "TypeId": 307,
                "Docs": [
                  "The token for which the property was deleted."
                ]
              },
              {
                "TypeName": "PropertyKey",
                "TypeId": 292,
                "Docs": [
                  "The property that was deleted."
                ]
              }
            ],
            "Index": 10,
            "Docs": [
              "The token property has been deleted."
            ]
          },
          {
            "Name": "PropertyPermissionSet",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "ID of collection to which property permission has been set."
                ]
              },
              {
                "TypeName": "PropertyKey",
                "TypeId": 292,
                "Docs": [
                  "The property permission that was set."
                ]
              }
            ],
            "Index": 11,
            "Docs": [
              "The token property permission of a collection has been set."
            ]
          },
          {
            "Name": "AllowListAddressAdded",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "ID of the affected collection."
                ]
              },
              {
                "TypeName": "T::CrossAccountId",
                "TypeId": 273,
                "Docs": [
                  "Address of the added account."
                ]
              }
            ],
            "Index": 12,
            "Docs": [
              "Address was added to the allow list."
            ]
          },
          {
            "Name": "AllowListAddressRemoved",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "ID of the affected collection."
                ]
              },
              {
                "TypeName": "T::CrossAccountId",
                "TypeId": 273,
                "Docs": [
                  "Address of the removed account."
                ]
              }
            ],
            "Index": 13,
            "Docs": [
              "Address was removed from the allow list."
            ]
          },
          {
            "Name": "CollectionAdminAdded",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "ID of the affected collection."
                ]
              },
              {
                "TypeName": "T::CrossAccountId",
                "TypeId": 273,
                "Docs": [
                  "Admin address."
                ]
              }
            ],
            "Index": 14,
            "Docs": [
              "Collection admin was added."
            ]
          },
          {
            "Name": "CollectionAdminRemoved",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "ID of the affected collection."
                ]
              },
              {
                "TypeName": "T::CrossAccountId",
                "TypeId": 273,
                "Docs": [
                  "Removed admin address."
                ]
              }
            ],
            "Index": 15,
            "Docs": [
              "Collection admin was removed."
            ]
          },
          {
            "Name": "CollectionLimitSet",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "ID of the affected collection."
                ]
              }
            ],
            "Index": 16,
            "Docs": [
              "Collection limits were set."
            ]
          },
          {
            "Name": "CollectionOwnerChanged",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "ID of the affected collection."
                ]
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "New owner address."
                ]
              }
            ],
            "Index": 17,
            "Docs": [
              "Collection owned was changed."
            ]
          },
          {
            "Name": "CollectionPermissionSet",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "ID of the affected collection."
                ]
              }
            ],
            "Index": 18,
            "Docs": [
              "Collection permissions were set."
            ]
          },
          {
            "Name": "CollectionSponsorSet",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "ID of the affected collection."
                ]
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "New sponsor address."
                ]
              }
            ],
            "Index": 19,
            "Docs": [
              "Collection sponsor was set."
            ]
          },
          {
            "Name": "SponsorshipConfirmed",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "ID of the affected collection."
                ]
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "New sponsor address."
                ]
              }
            ],
            "Index": 20,
            "Docs": [
              "New sponsor was confirm."
            ]
          },
          {
            "Name": "CollectionSponsorRemoved",
            "TypeFields": [
              {
                "TypeName": "CollectionId",
                "TypeId": 126,
                "Docs": [
                  "ID of the affected collection."
                ]
              }
            ],
            "Index": 21,
            "Docs": [
              "Collection sponsor was removed."
            ]
          }
        ],
        "Path": [
          "pallet_common",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "370": {
        "Variants": [
          {
            "Name": "Executed",
            "TypeFields": [
              {
                "TypeName": "DispatchResult",
                "TypeId": 43
              }
            ],
            "Index": 0,
            "Docs": [
              "Executed call on behalf of the token."
            ]
          }
        ],
        "Path": [
          "pallet_structure",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "371": {
        "Variants": [
          {
            "Name": "StakingRecalculation",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "An recalculated staker"
                ]
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6,
                "Docs": [
                  "Base on which interest is calculated"
                ]
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6,
                "Docs": [
                  "Amount of accrued interest"
                ]
              }
            ],
            "Index": 0,
            "Docs": [
              "Staking recalculation was performed",
              "",
              "# Arguments",
              "* AccountId: account of the staker.",
              "* Balance : recalculation base",
              "* Balance : total income"
            ]
          },
          {
            "Name": "Stake",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "Staking was performed",
              "",
              "# Arguments",
              "* AccountId: account of the staker",
              "* Balance : staking amount"
            ]
          },
          {
            "Name": "Unstake",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "Unstaking was performed",
              "",
              "# Arguments",
              "* AccountId: account of the staker",
              "* Balance : unstaking amount"
            ]
          },
          {
            "Name": "SetAdmin",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 3,
            "Docs": [
              "The admin was set",
              "",
              "# Arguments",
              "* AccountId: account address of the admin"
            ]
          }
        ],
        "Path": [
          "pallet_app_promotion",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "372": {
        "Variants": [
          {
            "Name": "ForeignAssetRegistered",
            "TypeFields": [
              {
                "Name": "collection_id",
                "TypeName": "CollectionId",
                "TypeId": 126
              },
              {
                "Name": "asset_id",
                "TypeName": "Box<VersionedAssetId>",
                "TypeId": 331
              }
            ],
            "Index": 0,
            "Docs": [
              "The foreign asset registered."
            ]
          }
        ],
        "Path": [
          "pallet_foreign_assets",
          "module",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "373": {
        "Variants": [
          {
            "Name": "Log",
            "TypeFields": [
              {
                "Name": "log",
                "TypeName": "Log",
                "TypeId": 355
              }
            ],
            "Index": 0,
            "Docs": [
              "Ethereum events from contracts."
            ]
          },
          {
            "Name": "Created",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "H160",
                "TypeId": 215
              }
            ],
            "Index": 1,
            "Docs": [
              "A contract has been created at given address."
            ]
          },
          {
            "Name": "CreatedFailed",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "H160",
                "TypeId": 215
              }
            ],
            "Index": 2,
            "Docs": [
              "A contract was attempted to be created, but the execution failed."
            ]
          },
          {
            "Name": "Executed",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "H160",
                "TypeId": 215
              }
            ],
            "Index": 3,
            "Docs": [
              "A contract has been executed successfully with states applied."
            ]
          },
          {
            "Name": "ExecutedFailed",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "H160",
                "TypeId": 215
              }
            ],
            "Index": 4,
            "Docs": [
              "A contract has been executed with errors. States are reverted with only gas fees applied."
            ]
          }
        ],
        "Path": [
          "pallet_evm",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "374": {
        "Variants": [
          {
            "Name": "Executed",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "H160",
                "TypeId": 215
              },
              {
                "Name": "to",
                "TypeName": "H160",
                "TypeId": 215
              },
              {
                "Name": "transaction_hash",
                "TypeName": "H256",
                "TypeId": 12
              },
              {
                "Name": "exit_reason",
                "TypeName": "ExitReason",
                "TypeId": 375
              },
              {
                "Name": "extra_data",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "An ethereum transaction was successfully executed."
            ]
          }
        ],
        "Path": [
          "pallet_ethereum",
          "pallet",
          "Event"
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "375": {
        "Variants": [
          {
            "Name": "Succeed",
            "TypeFields": [
              {
                "TypeName": "ExitSucceed",
                "TypeId": 376
              }
            ],
            "Index": 0
          },
          {
            "Name": "Error",
            "TypeFields": [
              {
                "TypeName": "ExitError",
                "TypeId": 377
              }
            ],
            "Index": 1
          },
          {
            "Name": "Revert",
            "TypeFields": [
              {
                "TypeName": "ExitRevert",
                "TypeId": 381
              }
            ],
            "Index": 2
          },
          {
            "Name": "Fatal",
            "TypeFields": [
              {
                "TypeName": "ExitFatal",
                "TypeId": 382
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "evm_core",
          "error",
          "ExitReason"
        ],
        "TypeDef": "Variant"
      },
      "376": {
        "Variants": [
          {
            "Name": "Stopped",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Returned",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Suicided",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "evm_core",
          "error",
          "ExitSucceed"
        ],
        "TypeDef": "Variant"
      },
      "377": {
        "Variants": [
          {
            "Name": "StackUnderflow",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "StackOverflow",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "InvalidJump",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "InvalidRange",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "DesignatedInvalid",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "CallTooDeep",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "CreateCollision",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "CreateContractLimit",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "InvalidCode",
            "TypeFields": [
              {
                "TypeName": "Opcode",
                "TypeId": 378
              }
            ],
            "Index": 15
          },
          {
            "Name": "OutOfOffset",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "OutOfGas",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "OutOfFund",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "PCUnderflow",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "CreateEmpty",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "Other",
            "TypeFields": [
              {
                "TypeName": "Cow<'static, str>",
                "TypeId": 379
              }
            ],
            "Index": 13
          },
          {
            "Name": "MaxNonce",
            "TypeFields": null,
            "Index": 14
          }
        ],
        "Path": [
          "evm_core",
          "error",
          "ExitError"
        ],
        "TypeDef": "Variant"
      },
      "378": {
        "TypeFields": [
          {
            "TypeName": "u8",
            "TypeId": 2
          }
        ],
        "Path": [
          "evm_core",
          "opcode",
          "Opcode"
        ],
        "TypeDef": "Composite"
      },
      "379": {
        "TypeFields": [
          {
            "TypeId": 380
          }
        ],
        "Path": [
          "Cow"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 380
          }
        ],
        "TypeDef": "Composite"
      },
      "380": {
        "Primitive": "Str",
        "TypeDef": "Primitive"
      },
      "381": {
        "Variants": [
          {
            "Name": "Reverted",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "evm_core",
          "error",
          "ExitRevert"
        ],
        "TypeDef": "Variant"
      },
      "382": {
        "Variants": [
          {
            "Name": "NotSupported",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "UnhandledInterrupt",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "CallErrorAsFatal",
            "TypeFields": [
              {
                "TypeName": "ExitError",
                "TypeId": 377
              }
            ],
            "Index": 2
          },
          {
            "Name": "Other",
            "TypeFields": [
              {
                "TypeName": "Cow<'static, str>",
                "TypeId": 379
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "evm_core",
          "error",
          "ExitFatal"
        ],
        "TypeDef": "Variant"
      },
      "383": {
        "Variants": [
          {
            "Name": "ContractSponsorSet",
            "TypeFields": [
              {
                "TypeName": "H160",
                "TypeId": 215,
                "Docs": [
                  "Contract address of the affected collection."
                ]
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "New sponsor address."
                ]
              }
            ],
            "Index": 0,
            "Docs": [
              "Contract sponsor was set."
            ]
          },
          {
            "Name": "ContractSponsorshipConfirmed",
            "TypeFields": [
              {
                "TypeName": "H160",
                "TypeId": 215,
                "Docs": [
                  "Contract address of the affected collection."
                ]
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "New sponsor address."
                ]
              }
            ],
            "Index": 1,
            "Docs": [
              "New sponsor was confirm."
            ]
          },
          {
            "Name": "ContractSponsorRemoved",
            "TypeFields": [
              {
                "TypeName": "H160",
                "TypeId": 215,
                "Docs": [
                  "Contract address of the affected collection."
                ]
              }
            ],
            "Index": 2,
            "Docs": [
              "Collection sponsor was removed."
            ]
          }
        ],
        "Path": [
          "pallet_evm_contract_helpers",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "384": {
        "Variants": [
          {
            "Name": "TestEvent",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "This event is used in benchmarking and can be used for tests"
            ]
          }
        ],
        "Path": [
          "pallet_evm_migration",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "385": {
        "Variants": [
          {
            "Name": "MaintenanceEnabled",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "MaintenanceDisabled",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "pallet_maintenance",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "386": {
        "Variants": [
          {
            "Name": "BatchInterrupted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "error",
                "TypeName": "DispatchError",
                "TypeId": 25
              }
            ],
            "Index": 0,
            "Docs": [
              "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
              "well as the error."
            ]
          },
          {
            "Name": "BatchCompleted",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Batch of dispatches completed fully with no error."
            ]
          },
          {
            "Name": "BatchCompletedWithErrors",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Batch of dispatches completed but has errors."
            ]
          },
          {
            "Name": "ItemCompleted",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "A single item within a Batch of dispatches has completed with no error."
            ]
          },
          {
            "Name": "ItemFailed",
            "TypeFields": [
              {
                "Name": "error",
                "TypeName": "DispatchError",
                "TypeId": 25
              }
            ],
            "Index": 4,
            "Docs": [
              "A single item within a Batch of dispatches has completed with error."
            ]
          },
          {
            "Name": "DispatchedAs",
            "TypeFields": [
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 43
              }
            ],
            "Index": 5,
            "Docs": [
              "A call was dispatched."
            ]
          }
        ],
        "Path": [
          "pallet_utility",
          "pallet",
          "Event"
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "387": {
        "Variants": [
          {
            "Name": "ValueIsSet",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "ShouldRollback",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "BatchCompleted",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_test_utils",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "388": {
        "Variants": [
          {
            "Name": "ApplyExtrinsic",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "Finalization",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Initialization",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "frame_system",
          "Phase"
        ],
        "TypeDef": "Variant"
      },
      "389": {
        "TypeId": 220,
        "TypeDef": "Sequence"
      },
      "390": {
        "TypeFields": [
          {
            "Name": "spec_version",
            "TypeName": "codec::Compact<u32>",
            "TypeId": 56
          },
          {
            "Name": "spec_name",
            "TypeName": "sp_runtime::RuntimeString",
            "TypeId": 380
          }
        ],
        "Path": [
          "frame_system",
          "LastRuntimeUpgradeInfo"
        ],
        "TypeDef": "Composite"
      },
      "391": {
        "TypeFields": [
          {
            "Name": "base_block",
            "TypeName": "Weight",
            "TypeId": 9
          },
          {
            "Name": "max_block",
            "TypeName": "Weight",
            "TypeId": 9
          },
          {
            "Name": "per_class",
            "TypeName": "PerDispatchClass<WeightsPerClass>",
            "TypeId": 392
          }
        ],
        "Path": [
          "frame_system",
          "limits",
          "BlockWeights"
        ],
        "TypeDef": "Composite"
      },
      "392": {
        "TypeFields": [
          {
            "Name": "normal",
            "TypeName": "T",
            "TypeId": 393
          },
          {
            "Name": "operational",
            "TypeName": "T",
            "TypeId": 393
          },
          {
            "Name": "mandatory",
            "TypeName": "T",
            "TypeId": 393
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "PerDispatchClass"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 393
          }
        ],
        "TypeDef": "Composite"
      },
      "393": {
        "TypeFields": [
          {
            "Name": "base_extrinsic",
            "TypeName": "Weight",
            "TypeId": 9
          },
          {
            "Name": "max_extrinsic",
            "TypeName": "Option<Weight>",
            "TypeId": 394
          },
          {
            "Name": "max_total",
            "TypeName": "Option<Weight>",
            "TypeId": 394
          },
          {
            "Name": "reserved",
            "TypeName": "Option<Weight>",
            "TypeId": 394
          }
        ],
        "Path": [
          "frame_system",
          "limits",
          "WeightsPerClass"
        ],
        "TypeDef": "Composite"
      },
      "394": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 9
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 9
          }
        ],
        "TypeDef": "Variant"
      },
      "395": {
        "TypeFields": [
          {
            "Name": "max",
            "TypeName": "PerDispatchClass<u32>",
            "TypeId": 396
          }
        ],
        "Path": [
          "frame_system",
          "limits",
          "BlockLength"
        ],
        "TypeDef": "Composite"
      },
      "396": {
        "TypeFields": [
          {
            "Name": "normal",
            "TypeName": "T",
            "TypeId": 4
          },
          {
            "Name": "operational",
            "TypeName": "T",
            "TypeId": 4
          },
          {
            "Name": "mandatory",
            "TypeName": "T",
            "TypeId": 4
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "PerDispatchClass"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "397": {
        "TypeFields": [
          {
            "Name": "read",
            "TypeName": "u64",
            "TypeId": 11
          },
          {
            "Name": "write",
            "TypeName": "u64",
            "TypeId": 11
          }
        ],
        "Path": [
          "sp_weights",
          "RuntimeDbWeight"
        ],
        "TypeDef": "Composite"
      },
      "398": {
        "TypeFields": [
          {
            "Name": "spec_name",
            "TypeName": "RuntimeString",
            "TypeId": 380
          },
          {
            "Name": "impl_name",
            "TypeName": "RuntimeString",
            "TypeId": 380
          },
          {
            "Name": "authoring_version",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "spec_version",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "impl_version",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "apis",
            "TypeName": "ApisVec",
            "TypeId": 399
          },
          {
            "Name": "transaction_version",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "state_version",
            "TypeName": "u8",
            "TypeId": 2
          }
        ],
        "Path": [
          "sp_version",
          "RuntimeVersion"
        ],
        "TypeDef": "Composite"
      },
      "399": {
        "TypeFields": [
          {
            "TypeId": 400
          }
        ],
        "Path": [
          "Cow"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 400
          }
        ],
        "TypeDef": "Composite"
      },
      "400": {
        "TypeId": 401,
        "TypeDef": "Sequence"
      },
      "401": {
        "TypeIds": [
          64,
          4
        ],
        "TypeDef": "Tuple"
      },
      "402": {
        "Variants": [
          {
            "Name": "InvalidSpecName",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The name of specification does not match between the current runtime",
              "and the new runtime."
            ]
          },
          {
            "Name": "SpecVersionNeedsToIncrease",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The specification version is not allowed to decrease between the current runtime",
              "and the new runtime."
            ]
          },
          {
            "Name": "FailedToExtractRuntimeVersion",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Failed to extract the runtime version from the new runtime.",
              "",
              "Either calling `Core_version` or decoding `RuntimeVersion` failed."
            ]
          },
          {
            "Name": "NonDefaultComposite",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Suicide called when the account has non-default composite data."
            ]
          },
          {
            "Name": "NonZeroRefCount",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "There is a non-zero reference count preventing the account from being purged."
            ]
          },
          {
            "Name": "CallFiltered",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The origin filter prevent the call to be dispatched."
            ]
          }
        ],
        "Path": [
          "frame_system",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Error for the System pallet"
        ]
      },
      "403": {
        "TypeId": 404,
        "TypeDef": "Sequence"
      },
      "404": {
        "TypeFields": [
          {
            "Name": "used_bandwidth",
            "TypeName": "UsedBandwidth",
            "TypeId": 405
          },
          {
            "Name": "para_head_hash",
            "TypeName": "Option<H>",
            "TypeId": 200
          },
          {
            "Name": "consumed_go_ahead_signal",
            "TypeName": "Option<relay_chain::UpgradeGoAhead>",
            "TypeId": 410
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "unincluded_segment",
          "Ancestor"
        ],
        "TypeParams": [
          {
            "Name": "H",
            "TypeId": 12
          }
        ],
        "TypeDef": "Composite"
      },
      "405": {
        "TypeFields": [
          {
            "Name": "ump_msg_count",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "ump_total_bytes",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "hrmp_outgoing",
            "TypeName": "BTreeMap<ParaId, HrmpChannelUpdate>",
            "TypeId": 406
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "unincluded_segment",
          "UsedBandwidth"
        ],
        "TypeDef": "Composite"
      },
      "406": {
        "TypeFields": [
          {
            "TypeId": 408
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 104
          },
          {
            "Name": "V",
            "TypeId": 407
          }
        ],
        "TypeDef": "Composite"
      },
      "407": {
        "TypeFields": [
          {
            "Name": "msg_count",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "total_bytes",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "unincluded_segment",
          "HrmpChannelUpdate"
        ],
        "TypeDef": "Composite"
      },
      "408": {
        "TypeId": 409,
        "TypeDef": "Sequence"
      },
      "409": {
        "TypeIds": [
          104,
          407
        ],
        "TypeDef": "Tuple"
      },
      "410": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 411
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 411
          }
        ],
        "TypeDef": "Variant"
      },
      "411": {
        "Variants": [
          {
            "Name": "Abort",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "GoAhead",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "UpgradeGoAhead"
        ],
        "TypeDef": "Variant"
      },
      "412": {
        "TypeFields": [
          {
            "Name": "used_bandwidth",
            "TypeName": "UsedBandwidth",
            "TypeId": 405
          },
          {
            "Name": "hrmp_watermark",
            "TypeName": "Option<relay_chain::BlockNumber>",
            "TypeId": 121
          },
          {
            "Name": "consumed_go_ahead_signal",
            "TypeName": "Option<relay_chain::UpgradeGoAhead>",
            "TypeId": 410
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "unincluded_segment",
          "SegmentTracker"
        ],
        "TypeParams": [
          {
            "Name": "H",
            "TypeId": 12
          }
        ],
        "TypeDef": "Composite"
      },
      "413": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 414
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 414
          }
        ],
        "TypeDef": "Variant"
      },
      "414": {
        "Variants": [
          {
            "Name": "Present",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "UpgradeRestriction"
        ],
        "TypeDef": "Variant"
      },
      "415": {
        "TypeFields": [
          {
            "Name": "dmq_mqc_head",
            "TypeName": "relay_chain::Hash",
            "TypeId": 12
          },
          {
            "Name": "relay_dispatch_queue_remaining_capacity",
            "TypeName": "RelayDispatchQueueRemainingCapacity",
            "TypeId": 416
          },
          {
            "Name": "ingress_channels",
            "TypeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
            "TypeId": 417
          },
          {
            "Name": "egress_channels",
            "TypeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
            "TypeId": 417
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "relay_state_snapshot",
          "MessagingStateSnapshot"
        ],
        "TypeDef": "Composite"
      },
      "416": {
        "TypeFields": [
          {
            "Name": "remaining_count",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "remaining_size",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "relay_state_snapshot",
          "RelayDispatchQueueRemainingCapacity"
        ],
        "TypeDef": "Composite"
      },
      "417": {
        "TypeId": 418,
        "TypeDef": "Sequence"
      },
      "418": {
        "TypeIds": [
          104,
          419
        ],
        "TypeDef": "Tuple"
      },
      "419": {
        "TypeFields": [
          {
            "Name": "max_capacity",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_total_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_message_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "msg_count",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "total_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "mqc_head",
            "TypeName": "Option<Hash>",
            "TypeId": 200
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "AbridgedHrmpChannel"
        ],
        "TypeDef": "Composite"
      },
      "420": {
        "TypeFields": [
          {
            "Name": "max_code_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_head_data_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_upward_queue_count",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_upward_queue_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_upward_message_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_upward_message_num_per_candidate",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "hrmp_max_message_num_per_candidate",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "validation_upgrade_cooldown",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "validation_upgrade_delay",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "async_backing_params",
            "TypeName": "AsyncBackingParams",
            "TypeId": 421
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "AbridgedHostConfiguration"
        ],
        "TypeDef": "Composite"
      },
      "421": {
        "TypeFields": [
          {
            "Name": "max_candidate_depth",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "allowed_ancestry_len",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "async_backing",
          "AsyncBackingParams"
        ],
        "TypeDef": "Composite"
      },
      "422": {
        "TypeFields": [
          {
            "TypeName": "RelayHash",
            "TypeId": 12
          }
        ],
        "Path": [
          "cumulus_primitives_parachain_inherent",
          "MessageQueueChain"
        ],
        "TypeDef": "Composite"
      },
      "423": {
        "TypeFields": [
          {
            "TypeId": 424
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 104
          },
          {
            "Name": "V",
            "TypeId": 422
          }
        ],
        "TypeDef": "Composite"
      },
      "424": {
        "TypeId": 425,
        "TypeDef": "Sequence"
      },
      "425": {
        "TypeIds": [
          104,
          422
        ],
        "TypeDef": "Tuple"
      },
      "426": {
        "TypeId": 427,
        "TypeDef": "Sequence"
      },
      "427": {
        "TypeFields": [
          {
            "Name": "recipient",
            "TypeName": "Id",
            "TypeId": 104
          },
          {
            "Name": "data",
            "TypeName": "sp_std::vec::Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "polkadot_core_primitives",
          "OutboundHrmpMessage"
        ],
        "TypeParams": [
          {
            "Name": "Id",
            "TypeId": 104
          }
        ],
        "TypeDef": "Composite"
      },
      "428": {
        "TypeFields": [
          {
            "TypeName": "u128",
            "TypeId": 6
          }
        ],
        "Path": [
          "sp_arithmetic",
          "fixed_point",
          "FixedU128"
        ],
        "TypeDef": "Composite"
      },
      "429": {
        "TypeFields": [
          {
            "Name": "code_hash",
            "TypeName": "T::Hash",
            "TypeId": 12
          },
          {
            "Name": "check_version",
            "TypeName": "bool",
            "TypeId": 74
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "CodeUpgradeAuthorization"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "430": {
        "Variants": [
          {
            "Name": "OverlappingUpgrades",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Attempt to upgrade validation function while existing upgrade pending."
            ]
          },
          {
            "Name": "ProhibitedByPolkadot",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Polkadot currently prohibits this parachain from upgrading its validation function."
            ]
          },
          {
            "Name": "TooBig",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The supplied validation function has compiled into a blob larger than Polkadot is",
              "willing to run."
            ]
          },
          {
            "Name": "ValidationDataNotAvailable",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The inherent which supplies the validation data did not run this block."
            ]
          },
          {
            "Name": "HostConfigurationNotAvailable",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The inherent which supplies the host configuration did not run this block."
            ]
          },
          {
            "Name": "NotScheduled",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "No validation function upgrade is currently scheduled."
            ]
          },
          {
            "Name": "NothingAuthorized",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "No code upgrade has been authorized."
            ]
          },
          {
            "Name": "Unauthorized",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The given code upgrade has not been authorized."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "431": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 118
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "432": {
        "Variants": [
          {
            "Name": "TooManyCandidates",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Too many candidates"
            ]
          },
          {
            "Name": "Unknown",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Unknown error"
            ]
          },
          {
            "Name": "Permission",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Permission issue"
            ]
          },
          {
            "Name": "AlreadyHoldingLicense",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "User already holds license to collate"
            ]
          },
          {
            "Name": "NoLicense",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "User does not hold a license to collate"
            ]
          },
          {
            "Name": "AlreadyCandidate",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "User is already a candidate"
            ]
          },
          {
            "Name": "NotCandidate",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "User is not a candidate"
            ]
          },
          {
            "Name": "TooManyInvulnerables",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Too many invulnerables"
            ]
          },
          {
            "Name": "TooFewInvulnerables",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Too few invulnerables"
            ]
          },
          {
            "Name": "AlreadyInvulnerable",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "User is already an Invulnerable"
            ]
          },
          {
            "Name": "NotInvulnerable",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "User is not an Invulnerable"
            ]
          },
          {
            "Name": "NoAssociatedValidatorId",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "Account has no associated validator ID"
            ]
          },
          {
            "Name": "ValidatorNotRegistered",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "Validator ID is not yet registered"
            ]
          }
        ],
        "Path": [
          "pallet_collator_selection",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "433": {
        "TypeId": 434,
        "TypeDef": "Sequence"
      },
      "434": {
        "TypeIds": [
          0,
          112
        ],
        "TypeDef": "Tuple"
      },
      "435": {
        "TypeIds": [
          436,
          13
        ],
        "TypeDef": "Tuple"
      },
      "436": {
        "TypeFields": [
          {
            "TypeName": "[u8; 4]",
            "TypeId": 17
          }
        ],
        "Path": [
          "sp_core",
          "crypto",
          "KeyTypeId"
        ],
        "TypeDef": "Composite"
      },
      "437": {
        "Variants": [
          {
            "Name": "InvalidProof",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Invalid ownership proof."
            ]
          },
          {
            "Name": "NoAssociatedValidatorId",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "No associated validator ID for account."
            ]
          },
          {
            "Name": "DuplicatedKey",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Registered duplicate key."
            ]
          },
          {
            "Name": "NoKeys",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "No keys are associated with this account."
            ]
          },
          {
            "Name": "NoAccount",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Key setting account is not live, so it's impossible to associate keys."
            ]
          }
        ],
        "Path": [
          "pallet_session",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Error for the session pallet."
        ]
      },
      "438": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 439
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 113
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "439": {
        "TypeId": 113,
        "TypeDef": "Sequence"
      },
      "440": {
        "TypeFields": [
          {
            "TypeName": "u64",
            "TypeId": 11
          }
        ],
        "Path": [
          "sp_consensus_slots",
          "Slot"
        ],
        "TypeDef": "Composite"
      },
      "441": {
        "TypeIds": [
          440,
          4
        ],
        "TypeDef": "Tuple"
      },
      "442": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 445
          }
        ],
        "Path": [
          "bounded_collections",
          "weak_bounded_vec",
          "WeakBoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 443
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "443": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "LockIdentifier",
            "TypeId": 64
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "reasons",
            "TypeName": "Reasons",
            "TypeId": 444
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "BalanceLock"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "444": {
        "Variants": [
          {
            "Name": "Fee",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Misc",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "All",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "Reasons"
        ],
        "TypeDef": "Variant"
      },
      "445": {
        "TypeId": 443,
        "TypeDef": "Sequence"
      },
      "446": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 448
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 447
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "447": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "ReserveIdentifier",
            "TypeId": 65
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "ReserveData"
        ],
        "TypeParams": [
          {
            "Name": "ReserveIdentifier",
            "TypeId": 65
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "448": {
        "TypeId": 447,
        "TypeDef": "Sequence"
      },
      "449": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 454
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 450
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "450": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "Id",
            "TypeId": 451
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "IdAmount"
        ],
        "TypeParams": [
          {
            "Name": "Id",
            "TypeId": 451
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "451": {
        "Variants": [
          {
            "Name": "CollatorSelection",
            "TypeFields": [
              {
                "TypeName": "pallet_collator_selection::HoldReason",
                "TypeId": 452
              }
            ],
            "Index": 23
          },
          {
            "Name": "Preimage",
            "TypeFields": [
              {
                "TypeName": "pallet_preimage::HoldReason",
                "TypeId": 453
              }
            ],
            "Index": 41
          }
        ],
        "Path": [
          "opal_runtime",
          "RuntimeHoldReason"
        ],
        "TypeDef": "Variant"
      },
      "452": {
        "Variants": [
          {
            "Name": "LicenseBond",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "pallet_collator_selection",
          "pallet",
          "HoldReason"
        ],
        "TypeDef": "Variant"
      },
      "453": {
        "Variants": [
          {
            "Name": "Preimage",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "pallet_preimage",
          "pallet",
          "HoldReason"
        ],
        "TypeDef": "Variant"
      },
      "454": {
        "TypeId": 450,
        "TypeDef": "Sequence"
      },
      "455": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 457
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 456
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "456": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "Id",
            "TypeId": 65
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "IdAmount"
        ],
        "TypeParams": [
          {
            "Name": "Id",
            "TypeId": 65
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "457": {
        "TypeId": 456,
        "TypeDef": "Sequence"
      },
      "458": {
        "Variants": [
          {
            "Name": "VestingBalance",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Vesting balance too high to send value."
            ]
          },
          {
            "Name": "LiquidityRestrictions",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Account liquidity restrictions prevent withdrawal."
            ]
          },
          {
            "Name": "InsufficientBalance",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Balance too low to send value."
            ]
          },
          {
            "Name": "ExistentialDeposit",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Value too low to create account due to existential deposit."
            ]
          },
          {
            "Name": "Expendability",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Transfer/payment would kill account."
            ]
          },
          {
            "Name": "ExistingVestingSchedule",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "A vesting schedule already exists for this account."
            ]
          },
          {
            "Name": "DeadAccount",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Beneficiary account must pre-exist."
            ]
          },
          {
            "Name": "TooManyReserves",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Number of named reserves exceed `MaxReserves`."
            ]
          },
          {
            "Name": "TooManyHolds",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Number of holds exceed `MaxHolds`."
            ]
          },
          {
            "Name": "TooManyFreezes",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Number of freezes exceed `MaxFreezes`."
            ]
          }
        ],
        "Path": [
          "pallet_balances",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "459": {
        "Variants": [
          {
            "Name": "V1Ancient",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "V2",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "pallet_transaction_payment",
          "Releases"
        ],
        "TypeDef": "Variant"
      },
      "460": {
        "TypeFields": [
          {
            "Name": "proposer",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "value",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "beneficiary",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "bond",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_treasury",
          "Proposal"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "461": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 329
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 4
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "462": {
        "TypeFields": [
          {
            "Name": "asset_kind",
            "TypeName": "AssetKind",
            "TypeId": 41
          },
          {
            "Name": "amount",
            "TypeName": "AssetBalance",
            "TypeId": 6
          },
          {
            "Name": "beneficiary",
            "TypeName": "Beneficiary",
            "TypeId": 0
          },
          {
            "Name": "valid_from",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "expire_at",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "status",
            "TypeName": "PaymentState<PaymentId>",
            "TypeId": 463
          }
        ],
        "Path": [
          "pallet_treasury",
          "SpendStatus"
        ],
        "TypeParams": [
          {
            "Name": "AssetKind",
            "TypeId": 41
          },
          {
            "Name": "AssetBalance",
            "TypeId": 6
          },
          {
            "Name": "Beneficiary",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "PaymentId",
            "TypeId": 41
          }
        ],
        "TypeDef": "Composite"
      },
      "463": {
        "Variants": [
          {
            "Name": "Pending",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Attempted",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "Id",
                "TypeId": 41
              }
            ],
            "Index": 1
          },
          {
            "Name": "Failed",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_treasury",
          "PaymentState"
        ],
        "TypeParams": [
          {
            "Name": "Id",
            "TypeId": 41
          }
        ],
        "TypeDef": "Variant"
      },
      "464": {
        "TypeFields": [
          {
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "sp_arithmetic",
          "per_things",
          "Permill"
        ],
        "TypeDef": "Composite"
      },
      "465": {
        "TypeFields": [
          {
            "TypeName": "[u8; 8]",
            "TypeId": 64
          }
        ],
        "Path": [
          "frame_support",
          "PalletId"
        ],
        "TypeDef": "Composite"
      },
      "466": {
        "Variants": [
          {
            "Name": "InsufficientProposersBalance",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Proposer's balance is too low."
            ]
          },
          {
            "Name": "InvalidIndex",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "No proposal, bounty or spend at that index."
            ]
          },
          {
            "Name": "TooManyApprovals",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Too many approvals in the queue."
            ]
          },
          {
            "Name": "InsufficientPermission",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The spend origin is valid but the amount it is allowed to spend is lower than the",
              "amount to be spent."
            ]
          },
          {
            "Name": "ProposalNotApproved",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Proposal has not been approved."
            ]
          },
          {
            "Name": "FailedToConvertBalance",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The balance of the asset kind is not convertible to the balance of the native asset."
            ]
          },
          {
            "Name": "SpendExpired",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The spend has expired and cannot be claimed."
            ]
          },
          {
            "Name": "EarlyPayout",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The spend is not yet eligible for payout."
            ]
          },
          {
            "Name": "AlreadyAttempted",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The payment has already been attempted."
            ]
          },
          {
            "Name": "PayoutError",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "There was some issue with the mechanism of payment."
            ]
          },
          {
            "Name": "NotAttempted",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The payout was not yet attempted/claimed."
            ]
          },
          {
            "Name": "Inconclusive",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The payment has neither failed nor succeeded yet."
            ]
          }
        ],
        "Path": [
          "pallet_treasury",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Error for the treasury pallet."
        ]
      },
      "467": {
        "Variants": [
          {
            "Name": "RequireSudo",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Sender must be the Sudo account"
            ]
          }
        ],
        "Path": [
          "pallet_sudo",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Error for the Sudo pallet"
        ]
      },
      "468": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 124
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 46
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "469": {
        "Variants": [
          {
            "Name": "ZeroVestingPeriod",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Vesting period is zero"
            ]
          },
          {
            "Name": "ZeroVestingPeriodCount",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Number of vests is zero"
            ]
          },
          {
            "Name": "InsufficientBalanceToLock",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Insufficient amount of balance to lock"
            ]
          },
          {
            "Name": "TooManyVestingSchedules",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "This account have too many vesting schedules"
            ]
          },
          {
            "Name": "AmountLow",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The vested transfer amount is too low"
            ]
          },
          {
            "Name": "MaxVestingSchedulesExceeded",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Failed because the maximum vesting schedules was exceeded"
            ]
          }
        ],
        "Path": [
          "orml_vesting",
          "module",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "470": {
        "Variants": [
          {
            "Name": "AssetHasNoReserve",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Asset has no reserve location."
            ]
          },
          {
            "Name": "NotCrossChainTransfer",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Not cross-chain transfer."
            ]
          },
          {
            "Name": "InvalidDest",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Invalid transfer destination."
            ]
          },
          {
            "Name": "NotCrossChainTransferableCurrency",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Currency is not cross-chain transferable."
            ]
          },
          {
            "Name": "UnweighableMessage",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The message's weight could not be determined."
            ]
          },
          {
            "Name": "XcmExecutionFailed",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "XCM execution failed."
            ]
          },
          {
            "Name": "CannotReanchor",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Could not re-anchor the assets to declare the fees for the",
              "destination chain."
            ]
          },
          {
            "Name": "InvalidAncestry",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Could not get ancestry of asset reserve location."
            ]
          },
          {
            "Name": "InvalidAsset",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The MultiAsset is invalid."
            ]
          },
          {
            "Name": "DestinationNotInvertible",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The destination `MultiLocation` provided cannot be inverted."
            ]
          },
          {
            "Name": "BadVersion",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The version of the `Versioned` value used is not able to be",
              "interpreted."
            ]
          },
          {
            "Name": "DistinctReserveForAssetAndFee",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "We tried sending distinct asset and fee but they have different",
              "reserve chains."
            ]
          },
          {
            "Name": "ZeroFee",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The fee is zero."
            ]
          },
          {
            "Name": "ZeroAmount",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The transfering asset amount is zero."
            ]
          },
          {
            "Name": "TooManyAssetsBeingSent",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "The number of assets to be sent is over the maximum."
            ]
          },
          {
            "Name": "AssetIndexNonExistent",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The specified index does not exist in a MultiAssets struct."
            ]
          },
          {
            "Name": "FeeNotEnough",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "Fee is not enough."
            ]
          },
          {
            "Name": "NotSupportedMultiLocation",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "Not supported MultiLocation"
            ]
          },
          {
            "Name": "MinXcmFeeNotDefined",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "MinXcmFee not registered for certain reserve location"
            ]
          }
        ],
        "Path": [
          "orml_xtokens",
          "module",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "471": {
        "TypeIds": [
          6,
          472
        ],
        "TypeDef": "Tuple"
      },
      "472": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 118
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "473": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 476
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 474
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "474": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 475
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 475
          }
        ],
        "TypeDef": "Variant"
      },
      "475": {
        "TypeFields": [
          {
            "Name": "account",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "fee",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "fields",
            "TypeName": "IdentityFields",
            "TypeId": 183
          }
        ],
        "Path": [
          "pallet_identity",
          "types",
          "RegistrarInfo"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "476": {
        "TypeId": 474,
        "TypeDef": "Sequence"
      },
      "477": {
        "Variants": [
          {
            "Name": "TooManySubAccounts",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Too many subs-accounts."
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Account isn't found."
            ]
          },
          {
            "Name": "NotNamed",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Account isn't named."
            ]
          },
          {
            "Name": "EmptyIndex",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Empty index."
            ]
          },
          {
            "Name": "FeeChanged",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Fee is changed."
            ]
          },
          {
            "Name": "NoIdentity",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "No identity found."
            ]
          },
          {
            "Name": "StickyJudgement",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Sticky judgement."
            ]
          },
          {
            "Name": "JudgementGiven",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Judgement given."
            ]
          },
          {
            "Name": "InvalidJudgement",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Invalid judgement."
            ]
          },
          {
            "Name": "InvalidIndex",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The index is invalid."
            ]
          },
          {
            "Name": "InvalidTarget",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The target is invalid."
            ]
          },
          {
            "Name": "TooManyFields",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "Too many additional fields."
            ]
          },
          {
            "Name": "TooManyRegistrars",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "Maximum amount of registrars reached. Cannot add any more."
            ]
          },
          {
            "Name": "AlreadyClaimed",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "Account ID is already named."
            ]
          },
          {
            "Name": "NotSub",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "Sender is not a sub-account."
            ]
          },
          {
            "Name": "NotOwned",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "Sub-account isn't owned by sender."
            ]
          },
          {
            "Name": "JudgementForDifferentIdentity",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "The provided judgement was for a different identity."
            ]
          },
          {
            "Name": "JudgementPaymentFailed",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "Error that occurs when there is an issue paying for judgement."
            ]
          }
        ],
        "Path": [
          "pallet_identity",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "478": {
        "Variants": [
          {
            "Name": "Unrequested",
            "TypeFields": [
              {
                "Name": "deposit",
                "TypeName": "(AccountId, Balance)",
                "TypeId": 479
              },
              {
                "Name": "len",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "Requested",
            "TypeFields": [
              {
                "Name": "deposit",
                "TypeName": "Option<(AccountId, Balance)>",
                "TypeId": 480
              },
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "len",
                "TypeName": "Option<u32>",
                "TypeId": 121
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_preimage",
          "OldRequestStatus"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "479": {
        "TypeIds": [
          0,
          6
        ],
        "TypeDef": "Tuple"
      },
      "480": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 479
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 479
          }
        ],
        "TypeDef": "Variant"
      },
      "481": {
        "Variants": [
          {
            "Name": "Unrequested",
            "TypeFields": [
              {
                "Name": "ticket",
                "TypeName": "(AccountId, Ticket)",
                "TypeId": 483
              },
              {
                "Name": "len",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "Requested",
            "TypeFields": [
              {
                "Name": "maybe_ticket",
                "TypeName": "Option<(AccountId, Ticket)>",
                "TypeId": 484
              },
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "maybe_len",
                "TypeName": "Option<u32>",
                "TypeId": 121
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_preimage",
          "RequestStatus"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Ticket",
            "TypeId": 482
          }
        ],
        "TypeDef": "Variant"
      },
      "482": {
        "TypeFields": [
          {
            "TypeName": "F::Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "tokens",
          "fungible",
          "HoldConsideration"
        ],
        "TypeParams": [
          {
            "Name": "A"
          },
          {
            "Name": "F"
          },
          {
            "Name": "R"
          },
          {
            "Name": "D"
          }
        ],
        "TypeDef": "Composite"
      },
      "483": {
        "TypeIds": [
          0,
          482
        ],
        "TypeDef": "Tuple"
      },
      "484": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 483
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 483
          }
        ],
        "TypeDef": "Variant"
      },
      "485": {
        "TypeIds": [
          12,
          4
        ],
        "TypeDef": "Tuple"
      },
      "486": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "487": {
        "Variants": [
          {
            "Name": "TooBig",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Preimage is too large to store on-chain."
            ]
          },
          {
            "Name": "AlreadyNoted",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Preimage has already been noted on-chain."
            ]
          },
          {
            "Name": "NotAuthorized",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The user is not authorized to perform this action."
            ]
          },
          {
            "Name": "NotNoted",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The preimage cannot be removed since it has not yet been noted."
            ]
          },
          {
            "Name": "Requested",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "A preimage may not be removed when there are outstanding requests."
            ]
          },
          {
            "Name": "NotRequested",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The preimage request cannot be removed since no outstanding requests exist."
            ]
          },
          {
            "Name": "TooMany",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "More than `MAX_HASH_UPGRADE_BULK_COUNT` hashes were requested to be upgraded at once."
            ]
          },
          {
            "Name": "TooFew",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Too few hashes were requested to be upgraded (i.e. zero)."
            ]
          }
        ],
        "Path": [
          "pallet_preimage",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "488": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 490
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 489
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "489": {
        "TypeIds": [
          4,
          83,
          0
        ],
        "TypeDef": "Tuple"
      },
      "490": {
        "TypeId": 489,
        "TypeDef": "Sequence"
      },
      "491": {
        "TypeIds": [
          492,
          6
        ],
        "TypeDef": "Tuple"
      },
      "492": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 118
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "493": {
        "Variants": [
          {
            "Name": "Ongoing",
            "TypeFields": [
              {
                "TypeName": "ReferendumStatus<BlockNumber, Proposal, Balance>",
                "TypeId": 494
              }
            ],
            "Index": 0
          },
          {
            "Name": "Finished",
            "TypeFields": [
              {
                "Name": "approved",
                "TypeName": "bool",
                "TypeId": 74
              },
              {
                "Name": "end",
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "ReferendumInfo"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Proposal",
            "TypeId": 83
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "494": {
        "TypeFields": [
          {
            "Name": "end",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "proposal",
            "TypeName": "Proposal",
            "TypeId": 83
          },
          {
            "Name": "threshold",
            "TypeName": "VoteThreshold",
            "TypeId": 69
          },
          {
            "Name": "delay",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "tally",
            "TypeName": "Tally<Balance>",
            "TypeId": 495
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "ReferendumStatus"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Proposal",
            "TypeId": 83
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "495": {
        "TypeFields": [
          {
            "Name": "ayes",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "nays",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "turnout",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "Tally"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "496": {
        "Variants": [
          {
            "Name": "Direct",
            "TypeFields": [
              {
                "Name": "votes",
                "TypeName": "BoundedVec<(ReferendumIndex, AccountVote<Balance>), MaxVotes>",
                "TypeId": 497
              },
              {
                "Name": "delegations",
                "TypeName": "Delegations<Balance>",
                "TypeId": 500
              },
              {
                "Name": "prior",
                "TypeName": "PriorLock<BlockNumber, Balance>",
                "TypeId": 501
              }
            ],
            "Index": 0
          },
          {
            "Name": "Delegating",
            "TypeFields": [
              {
                "Name": "balance",
                "TypeName": "Balance",
                "TypeId": 6
              },
              {
                "Name": "target",
                "TypeName": "AccountId",
                "TypeId": 0
              },
              {
                "Name": "conviction",
                "TypeName": "Conviction",
                "TypeId": 199
              },
              {
                "Name": "delegations",
                "TypeName": "Delegations<Balance>",
                "TypeId": 500
              },
              {
                "Name": "prior",
                "TypeName": "PriorLock<BlockNumber, Balance>",
                "TypeId": 501
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote",
          "Voting"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "MaxVotes"
          }
        ],
        "TypeDef": "Variant"
      },
      "497": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 499
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 498
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "498": {
        "TypeIds": [
          4,
          70
        ],
        "TypeDef": "Tuple"
      },
      "499": {
        "TypeId": 498,
        "TypeDef": "Sequence"
      },
      "500": {
        "TypeFields": [
          {
            "Name": "votes",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "capital",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "Delegations"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "501": {
        "TypeFields": [
          {
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote",
          "PriorLock"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "502": {
        "TypeIds": [
          83,
          69
        ],
        "TypeDef": "Tuple"
      },
      "503": {
        "TypeIds": [
          4,
          492
        ],
        "TypeDef": "Tuple"
      },
      "504": {
        "Variants": [
          {
            "Name": "ValueLow",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Value too low"
            ]
          },
          {
            "Name": "ProposalMissing",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Proposal does not exist"
            ]
          },
          {
            "Name": "AlreadyCanceled",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Cannot cancel the same proposal twice"
            ]
          },
          {
            "Name": "DuplicateProposal",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Proposal already made"
            ]
          },
          {
            "Name": "ProposalBlacklisted",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Proposal still blacklisted"
            ]
          },
          {
            "Name": "NotSimpleMajority",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Next external proposal not simple majority"
            ]
          },
          {
            "Name": "InvalidHash",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Invalid hash"
            ]
          },
          {
            "Name": "NoProposal",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "No external proposal"
            ]
          },
          {
            "Name": "AlreadyVetoed",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Identity may not veto a proposal twice"
            ]
          },
          {
            "Name": "ReferendumInvalid",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Vote given for invalid referendum"
            ]
          },
          {
            "Name": "NoneWaiting",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "No proposals waiting"
            ]
          },
          {
            "Name": "NotVoter",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The given account did not vote on the referendum."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The actor has no permission to conduct the action."
            ]
          },
          {
            "Name": "AlreadyDelegating",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The account is already delegating."
            ]
          },
          {
            "Name": "InsufficientFunds",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "Too high a balance was provided that the account cannot afford."
            ]
          },
          {
            "Name": "NotDelegating",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The account is not currently delegating."
            ]
          },
          {
            "Name": "VotesExist",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "The account currently has votes attached to it and the operation cannot succeed until",
              "these are removed, either through `unvote` or `reap_vote`."
            ]
          },
          {
            "Name": "InstantNotAllowed",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "The instant referendum origin is currently disallowed."
            ]
          },
          {
            "Name": "Nonsense",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "Delegation to oneself makes no sense."
            ]
          },
          {
            "Name": "WrongUpperBound",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "Invalid upper bound."
            ]
          },
          {
            "Name": "MaxVotesReached",
            "TypeFields": null,
            "Index": 20,
            "Docs": [
              "Maximum number of votes reached."
            ]
          },
          {
            "Name": "TooMany",
            "TypeFields": null,
            "Index": 21,
            "Docs": [
              "Maximum number of items reached."
            ]
          },
          {
            "Name": "VotingPeriodLow",
            "TypeFields": null,
            "Index": 22,
            "Docs": [
              "Voting period too low"
            ]
          },
          {
            "Name": "PreimageNotExist",
            "TypeFields": null,
            "Index": 23,
            "Docs": [
              "The preimage does not exist."
            ]
          }
        ],
        "Path": [
          "pallet_democracy",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "505": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 197
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "506": {
        "TypeFields": [
          {
            "Name": "index",
            "TypeName": "ProposalIndex",
            "TypeId": 4
          },
          {
            "Name": "threshold",
            "TypeName": "MemberCount",
            "TypeId": 4
          },
          {
            "Name": "ayes",
            "TypeName": "Vec<AccountId>",
            "TypeId": 118
          },
          {
            "Name": "nays",
            "TypeName": "Vec<AccountId>",
            "TypeId": 118
          },
          {
            "Name": "end",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_collective",
          "Votes"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "507": {
        "Variants": [
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Account is not a member"
            ]
          },
          {
            "Name": "DuplicateProposal",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Duplicate proposals not allowed"
            ]
          },
          {
            "Name": "ProposalMissing",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Proposal must exist"
            ]
          },
          {
            "Name": "WrongIndex",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Mismatched index"
            ]
          },
          {
            "Name": "DuplicateVote",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Duplicate vote ignored"
            ]
          },
          {
            "Name": "AlreadyInitialized",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Members are already initialized!"
            ]
          },
          {
            "Name": "TooEarly",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The close call was made too early, before the end of the voting."
            ]
          },
          {
            "Name": "TooManyProposals",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "There can only be a maximum of `MaxProposals` active proposals."
            ]
          },
          {
            "Name": "WrongProposalWeight",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The given weight bound for the proposal was too low."
            ]
          },
          {
            "Name": "WrongProposalLength",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The given length bound for the proposal was too low."
            ]
          },
          {
            "Name": "PrimeAccountNotMember",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "Prime account is not a member"
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "508": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 197
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "509": {
        "Variants": [
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Account is not a member"
            ]
          },
          {
            "Name": "DuplicateProposal",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Duplicate proposals not allowed"
            ]
          },
          {
            "Name": "ProposalMissing",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Proposal must exist"
            ]
          },
          {
            "Name": "WrongIndex",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Mismatched index"
            ]
          },
          {
            "Name": "DuplicateVote",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Duplicate vote ignored"
            ]
          },
          {
            "Name": "AlreadyInitialized",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Members are already initialized!"
            ]
          },
          {
            "Name": "TooEarly",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The close call was made too early, before the end of the voting."
            ]
          },
          {
            "Name": "TooManyProposals",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "There can only be a maximum of `MaxProposals` active proposals."
            ]
          },
          {
            "Name": "WrongProposalWeight",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The given weight bound for the proposal was too low."
            ]
          },
          {
            "Name": "WrongProposalLength",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The given length bound for the proposal was too low."
            ]
          },
          {
            "Name": "PrimeAccountNotMember",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "Prime account is not a member"
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "510": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 118
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "511": {
        "Variants": [
          {
            "Name": "AlreadyMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Already a member."
            ]
          },
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Not a member."
            ]
          },
          {
            "Name": "TooManyMembers",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Too many members."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "512": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 118
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "513": {
        "Variants": [
          {
            "Name": "AlreadyMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Already a member."
            ]
          },
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Not a member."
            ]
          },
          {
            "Name": "TooManyMembers",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Too many members."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "514": {
        "TypeFields": [
          {
            "Name": "rank",
            "TypeName": "Rank",
            "TypeId": 79
          }
        ],
        "Path": [
          "pallet_ranked_collective",
          "MemberRecord"
        ],
        "TypeDef": "Composite"
      },
      "515": {
        "TypeIds": [
          79,
          0
        ],
        "TypeDef": "Tuple"
      },
      "516": {
        "TypeIds": [
          79,
          4
        ],
        "TypeDef": "Tuple"
      },
      "517": {
        "TypeIds": [
          4,
          0
        ],
        "TypeDef": "Tuple"
      },
      "518": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "519": {
        "Variants": [
          {
            "Name": "AlreadyMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Account is already a member."
            ]
          },
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Account is not a member."
            ]
          },
          {
            "Name": "NotPolling",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The given poll index is unknown or has closed."
            ]
          },
          {
            "Name": "Ongoing",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The given poll is still ongoing."
            ]
          },
          {
            "Name": "NoneRemaining",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "There are no further records to be removed."
            ]
          },
          {
            "Name": "Corruption",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Unexpected error in state."
            ]
          },
          {
            "Name": "RankTooLow",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The member's rank is too low to vote."
            ]
          },
          {
            "Name": "InvalidWitness",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The information provided is incorrect."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The origin is not sufficiently privileged to do the operation."
            ]
          }
        ],
        "Path": [
          "pallet_ranked_collective",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "520": {
        "Variants": [
          {
            "Name": "Ongoing",
            "TypeFields": [
              {
                "TypeName": "ReferendumStatus<TrackId, RuntimeOrigin, Moment, Call, Balance, Tally,\nAccountId, ScheduleAddress,>",
                "TypeId": 521
              }
            ],
            "Index": 0
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 523
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 523
              }
            ],
            "Index": 1
          },
          {
            "Name": "Rejected",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 523
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 523
              }
            ],
            "Index": 2
          },
          {
            "Name": "Cancelled",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 523
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 523
              }
            ],
            "Index": 3
          },
          {
            "Name": "TimedOut",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 523
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 523
              }
            ],
            "Index": 4
          },
          {
            "Name": "Killed",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "ReferendumInfo"
        ],
        "TypeParams": [
          {
            "Name": "TrackId",
            "TypeId": 79
          },
          {
            "Name": "RuntimeOrigin",
            "TypeId": 207
          },
          {
            "Name": "Moment",
            "TypeId": 4
          },
          {
            "Name": "Call",
            "TypeId": 83
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "Tally",
            "TypeId": 81
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "ScheduleAddress",
            "TypeId": 220
          }
        ],
        "TypeDef": "Variant"
      },
      "521": {
        "TypeFields": [
          {
            "Name": "track",
            "TypeName": "TrackId",
            "TypeId": 79
          },
          {
            "Name": "origin",
            "TypeName": "RuntimeOrigin",
            "TypeId": 207
          },
          {
            "Name": "proposal",
            "TypeName": "Call",
            "TypeId": 83
          },
          {
            "Name": "enactment",
            "TypeName": "DispatchTime<Moment>",
            "TypeId": 217
          },
          {
            "Name": "submitted",
            "TypeName": "Moment",
            "TypeId": 4
          },
          {
            "Name": "submission_deposit",
            "TypeName": "Deposit<AccountId, Balance>",
            "TypeId": 522
          },
          {
            "Name": "decision_deposit",
            "TypeName": "Option<Deposit<AccountId, Balance>>",
            "TypeId": 523
          },
          {
            "Name": "deciding",
            "TypeName": "Option<DecidingStatus<Moment>>",
            "TypeId": 524
          },
          {
            "Name": "tally",
            "TypeName": "Tally",
            "TypeId": 81
          },
          {
            "Name": "in_queue",
            "TypeName": "bool",
            "TypeId": 74
          },
          {
            "Name": "alarm",
            "TypeName": "Option<(Moment, ScheduleAddress)>",
            "TypeId": 526
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "ReferendumStatus"
        ],
        "TypeParams": [
          {
            "Name": "TrackId",
            "TypeId": 79
          },
          {
            "Name": "RuntimeOrigin",
            "TypeId": 207
          },
          {
            "Name": "Moment",
            "TypeId": 4
          },
          {
            "Name": "Call",
            "TypeId": 83
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "Tally",
            "TypeId": 81
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "ScheduleAddress",
            "TypeId": 220
          }
        ],
        "TypeDef": "Composite"
      },
      "522": {
        "TypeFields": [
          {
            "Name": "who",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "Deposit"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "523": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 522
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 522
          }
        ],
        "TypeDef": "Variant"
      },
      "524": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 525
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 525
          }
        ],
        "TypeDef": "Variant"
      },
      "525": {
        "TypeFields": [
          {
            "Name": "since",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "confirming",
            "TypeName": "Option<BlockNumber>",
            "TypeId": 121
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "DecidingStatus"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "526": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 527
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 527
          }
        ],
        "TypeDef": "Variant"
      },
      "527": {
        "TypeIds": [
          4,
          220
        ],
        "TypeDef": "Tuple"
      },
      "528": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 389
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 220
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "529": {
        "TypeId": 530,
        "TypeDef": "Sequence"
      },
      "530": {
        "TypeIds": [
          79,
          531
        ],
        "TypeDef": "Tuple"
      },
      "531": {
        "TypeFields": [
          {
            "Name": "name",
            "TypeName": "&'static str",
            "TypeId": 380
          },
          {
            "Name": "max_deciding",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "decision_deposit",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "prepare_period",
            "TypeName": "Moment",
            "TypeId": 4
          },
          {
            "Name": "decision_period",
            "TypeName": "Moment",
            "TypeId": 4
          },
          {
            "Name": "confirm_period",
            "TypeName": "Moment",
            "TypeId": 4
          },
          {
            "Name": "min_enactment_period",
            "TypeName": "Moment",
            "TypeId": 4
          },
          {
            "Name": "min_approval",
            "TypeName": "Curve",
            "TypeId": 532
          },
          {
            "Name": "min_support",
            "TypeName": "Curve",
            "TypeId": 532
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "TrackInfo"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "Moment",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "532": {
        "Variants": [
          {
            "Name": "LinearDecreasing",
            "TypeFields": [
              {
                "Name": "length",
                "TypeName": "Perbill",
                "TypeId": 324
              },
              {
                "Name": "floor",
                "TypeName": "Perbill",
                "TypeId": 324
              },
              {
                "Name": "ceil",
                "TypeName": "Perbill",
                "TypeId": 324
              }
            ],
            "Index": 0
          },
          {
            "Name": "SteppedDecreasing",
            "TypeFields": [
              {
                "Name": "begin",
                "TypeName": "Perbill",
                "TypeId": 324
              },
              {
                "Name": "end",
                "TypeName": "Perbill",
                "TypeId": 324
              },
              {
                "Name": "step",
                "TypeName": "Perbill",
                "TypeId": 324
              },
              {
                "Name": "period",
                "TypeName": "Perbill",
                "TypeId": 324
              }
            ],
            "Index": 1
          },
          {
            "Name": "Reciprocal",
            "TypeFields": [
              {
                "Name": "factor",
                "TypeName": "FixedI64",
                "TypeId": 533
              },
              {
                "Name": "x_offset",
                "TypeName": "FixedI64",
                "TypeId": 533
              },
              {
                "Name": "y_offset",
                "TypeName": "FixedI64",
                "TypeId": 533
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "Curve"
        ],
        "TypeDef": "Variant"
      },
      "533": {
        "TypeFields": [
          {
            "TypeName": "i64",
            "TypeId": 534
          }
        ],
        "Path": [
          "sp_arithmetic",
          "fixed_point",
          "FixedI64"
        ],
        "TypeDef": "Composite"
      },
      "534": {
        "Primitive": "I64",
        "TypeDef": "Primitive"
      },
      "535": {
        "Variants": [
          {
            "Name": "NotOngoing",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Referendum is not ongoing."
            ]
          },
          {
            "Name": "HasDeposit",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Referendum's decision deposit is already paid."
            ]
          },
          {
            "Name": "BadTrack",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The track identifier given was invalid."
            ]
          },
          {
            "Name": "Full",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "There are already a full complement of referenda in progress for this track."
            ]
          },
          {
            "Name": "QueueEmpty",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The queue of the track is empty."
            ]
          },
          {
            "Name": "BadReferendum",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The referendum index provided is invalid in this context."
            ]
          },
          {
            "Name": "NothingToDo",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "There was nothing to do in the advancement."
            ]
          },
          {
            "Name": "NoTrack",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "No track exists for the proposal origin."
            ]
          },
          {
            "Name": "Unfinished",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Any deposit cannot be refunded until after the decision is over."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The deposit refunder is not the depositor."
            ]
          },
          {
            "Name": "NoDeposit",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The deposit cannot be refunded since none was made."
            ]
          },
          {
            "Name": "BadStatus",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The referendum status is invalid for this operation."
            ]
          },
          {
            "Name": "PreimageNotExist",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The preimage does not exist."
            ]
          }
        ],
        "Path": [
          "pallet_referenda",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "536": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 539
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 537
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "537": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 538
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 538
          }
        ],
        "TypeDef": "Variant"
      },
      "538": {
        "TypeFields": [
          {
            "Name": "maybe_id",
            "TypeName": "Option<Name>",
            "TypeId": 34
          },
          {
            "Name": "priority",
            "TypeName": "schedule::Priority",
            "TypeId": 2
          },
          {
            "Name": "call",
            "TypeName": "Call",
            "TypeId": 83
          },
          {
            "Name": "maybe_periodic",
            "TypeName": "Option<schedule::Period<BlockNumber>>",
            "TypeId": 219
          },
          {
            "Name": "origin",
            "TypeName": "PalletsOrigin",
            "TypeId": 207
          }
        ],
        "Path": [
          "pallet_scheduler",
          "Scheduled"
        ],
        "TypeParams": [
          {
            "Name": "Name",
            "TypeId": 1
          },
          {
            "Name": "Call",
            "TypeId": 83
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "PalletsOrigin",
            "TypeId": 207
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "539": {
        "TypeId": 537,
        "TypeDef": "Sequence"
      },
      "540": {
        "Variants": [
          {
            "Name": "FailedToSchedule",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Failed to schedule a call"
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Cannot find the scheduled call."
            ]
          },
          {
            "Name": "TargetBlockNumberInPast",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Given target block number is in the past."
            ]
          },
          {
            "Name": "RescheduleNoChange",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Reschedule failed because it does not change scheduled time."
            ]
          },
          {
            "Name": "Named",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Attempt to use a non-named function on a named task."
            ]
          }
        ],
        "Path": [
          "pallet_scheduler",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "541": {
        "TypeId": 542,
        "TypeDef": "Sequence"
      },
      "542": {
        "TypeFields": [
          {
            "Name": "sender",
            "TypeName": "ParaId",
            "TypeId": 104
          },
          {
            "Name": "state",
            "TypeName": "InboundState",
            "TypeId": 543
          },
          {
            "Name": "message_metadata",
            "TypeName": "Vec<(RelayBlockNumber, XcmpMessageFormat)>",
            "TypeId": 544
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "InboundChannelDetails"
        ],
        "TypeDef": "Composite"
      },
      "543": {
        "Variants": [
          {
            "Name": "Ok",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Suspended",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "InboundState"
        ],
        "TypeDef": "Variant"
      },
      "544": {
        "TypeId": 545,
        "TypeDef": "Sequence"
      },
      "545": {
        "TypeIds": [
          4,
          546
        ],
        "TypeDef": "Tuple"
      },
      "546": {
        "Variants": [
          {
            "Name": "ConcatenatedVersionedXcm",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "ConcatenatedEncodedBlob",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Signals",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "polkadot_parachain_primitives",
          "primitives",
          "XcmpMessageFormat"
        ],
        "TypeDef": "Variant"
      },
      "547": {
        "TypeIds": [
          104,
          4
        ],
        "TypeDef": "Tuple"
      },
      "548": {
        "TypeId": 549,
        "TypeDef": "Sequence"
      },
      "549": {
        "TypeFields": [
          {
            "Name": "recipient",
            "TypeName": "ParaId",
            "TypeId": 104
          },
          {
            "Name": "state",
            "TypeName": "OutboundState",
            "TypeId": 550
          },
          {
            "Name": "signals_exist",
            "TypeName": "bool",
            "TypeId": 74
          },
          {
            "Name": "first_index",
            "TypeName": "u16",
            "TypeId": 79
          },
          {
            "Name": "last_index",
            "TypeName": "u16",
            "TypeId": 79
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "OutboundChannelDetails"
        ],
        "TypeDef": "Composite"
      },
      "550": {
        "Variants": [
          {
            "Name": "Ok",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Suspended",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "OutboundState"
        ],
        "TypeDef": "Variant"
      },
      "551": {
        "TypeIds": [
          104,
          79
        ],
        "TypeDef": "Tuple"
      },
      "552": {
        "TypeFields": [
          {
            "Name": "suspend_threshold",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "drop_threshold",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "resume_threshold",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "threshold_weight",
            "TypeName": "Weight",
            "TypeId": 9
          },
          {
            "Name": "weight_restrict_decay",
            "TypeName": "Weight",
            "TypeId": 9
          },
          {
            "Name": "xcmp_max_individual_weight",
            "TypeName": "Weight",
            "TypeId": 9
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "QueueConfigData"
        ],
        "TypeDef": "Composite"
      },
      "553": {
        "TypeIds": [
          104,
          4,
          13
        ],
        "TypeDef": "Tuple"
      },
      "554": {
        "Variants": [
          {
            "Name": "FailedToSend",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Failed to send XCM message."
            ]
          },
          {
            "Name": "BadXcmOrigin",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Bad XCM origin."
            ]
          },
          {
            "Name": "BadXcm",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Bad XCM data."
            ]
          },
          {
            "Name": "BadOverweightIndex",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Bad overweight index."
            ]
          },
          {
            "Name": "WeightOverLimit",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Provided weight is possibly not enough to execute the message."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "555": {
        "Variants": [
          {
            "Name": "Pending",
            "TypeFields": [
              {
                "Name": "responder",
                "TypeName": "VersionedMultiLocation",
                "TypeId": 127
              },
              {
                "Name": "maybe_match_querier",
                "TypeName": "Option<VersionedMultiLocation>",
                "TypeId": 556
              },
              {
                "Name": "maybe_notify",
                "TypeName": "Option<(u8, u8)>",
                "TypeId": 557
              },
              {
                "Name": "timeout",
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "VersionNotifier",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "VersionedMultiLocation",
                "TypeId": 127
              },
              {
                "Name": "is_active",
                "TypeName": "bool",
                "TypeId": 74
              }
            ],
            "Index": 1
          },
          {
            "Name": "Ready",
            "TypeFields": [
              {
                "Name": "response",
                "TypeName": "VersionedResponse",
                "TypeId": 559
              },
              {
                "Name": "at",
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "QueryStatus"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Variant"
      },
      "556": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 127
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 127
          }
        ],
        "TypeDef": "Variant"
      },
      "557": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 558
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 558
          }
        ],
        "TypeDef": "Variant"
      },
      "558": {
        "TypeIds": [
          2,
          2
        ],
        "TypeDef": "Tuple"
      },
      "559": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::Response",
                "TypeId": 227
              }
            ],
            "Index": 2
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::Response",
                "TypeId": 240
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "VersionedResponse"
        ],
        "TypeDef": "Variant"
      },
      "560": {
        "TypeIds": [
          4,
          127
        ],
        "TypeDef": "Tuple"
      },
      "561": {
        "TypeIds": [
          11,
          9,
          4
        ],
        "TypeDef": "Tuple"
      },
      "562": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 564
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 563
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "563": {
        "TypeIds": [
          127,
          4
        ],
        "TypeDef": "Tuple"
      },
      "564": {
        "TypeId": 563,
        "TypeDef": "Sequence"
      },
      "565": {
        "Variants": [
          {
            "Name": "MigrateSupportedVersion",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "MigrateVersionNotifiers",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "NotifyCurrentTargets",
            "TypeFields": [
              {
                "TypeName": "Option<Vec<u8>>",
                "TypeId": 566
              }
            ],
            "Index": 2
          },
          {
            "Name": "MigrateAndNotifyOldTargets",
            "TypeFields": null,
            "Index": 3
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "VersionMigrationStage"
        ],
        "TypeDef": "Variant"
      },
      "566": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 13
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 13
          }
        ],
        "TypeDef": "Variant"
      },
      "567": {
        "TypeIds": [
          4,
          0,
          331
        ],
        "TypeDef": "Tuple"
      },
      "568": {
        "TypeFields": [
          {
            "Name": "amount",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "owner",
            "TypeName": "VersionedMultiLocation",
            "TypeId": 127
          },
          {
            "Name": "locker",
            "TypeName": "VersionedMultiLocation",
            "TypeId": 127
          },
          {
            "Name": "consumers",
            "TypeName": "BoundedVec<(ConsumerIdentifier, u128), MaxConsumers>",
            "TypeId": 569
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "RemoteLockedFungibleRecord"
        ],
        "TypeParams": [
          {
            "Name": "ConsumerIdentifier",
            "TypeId": 41
          },
          {
            "Name": "MaxConsumers"
          }
        ],
        "TypeDef": "Composite"
      },
      "569": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 571
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 570
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "570": {
        "TypeIds": [
          41,
          6
        ],
        "TypeDef": "Tuple"
      },
      "571": {
        "TypeId": 570,
        "TypeDef": "Sequence"
      },
      "572": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 574
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 573
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "573": {
        "TypeIds": [
          6,
          127
        ],
        "TypeDef": "Tuple"
      },
      "574": {
        "TypeId": 573,
        "TypeDef": "Sequence"
      },
      "575": {
        "Variants": [
          {
            "Name": "Unreachable",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The desired destination was unreachable, generally because there is a no way of routing",
              "to it."
            ]
          },
          {
            "Name": "SendFailure",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "There was some other issue (i.e. not to do with routing) in sending the message.",
              "Perhaps a lack of space for buffering the message."
            ]
          },
          {
            "Name": "Filtered",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The message execution fails the filter."
            ]
          },
          {
            "Name": "UnweighableMessage",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The message's weight could not be determined."
            ]
          },
          {
            "Name": "DestinationNotInvertible",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The destination `MultiLocation` provided cannot be inverted."
            ]
          },
          {
            "Name": "Empty",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The assets to be sent are empty."
            ]
          },
          {
            "Name": "CannotReanchor",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Could not re-anchor the assets to declare the fees for the destination chain."
            ]
          },
          {
            "Name": "TooManyAssets",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Too many assets have been attempted for transfer."
            ]
          },
          {
            "Name": "InvalidOrigin",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Origin is invalid for sending."
            ]
          },
          {
            "Name": "BadVersion",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The version of the `Versioned` value used is not able to be interpreted."
            ]
          },
          {
            "Name": "BadLocation",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The given location could not be used (e.g. because it cannot be expressed in the",
              "desired version of XCM)."
            ]
          },
          {
            "Name": "NoSubscription",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The referenced subscription could not be found."
            ]
          },
          {
            "Name": "AlreadySubscribed",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The location is invalid since it already has a subscription from us."
            ]
          },
          {
            "Name": "InvalidAsset",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "Invalid asset for the operation."
            ]
          },
          {
            "Name": "LowBalance",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "The owner does not own (all) of the asset that they wish to do the operation on."
            ]
          },
          {
            "Name": "TooManyLocks",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The asset owner has too many locks on the asset."
            ]
          },
          {
            "Name": "AccountNotSovereign",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "The given account is not an identifiable sovereign account for any location."
            ]
          },
          {
            "Name": "FeesNotMet",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "The operation required fees to be paid which the initiator could not meet."
            ]
          },
          {
            "Name": "LockNotFound",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "A remote lock with the corresponding data could not be found."
            ]
          },
          {
            "Name": "InUse",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "The unlock operation cannot succeed because there are still consumers of the lock."
            ]
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "576": {
        "Variants": null,
        "Path": [
          "cumulus_pallet_xcm",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "577": {
        "TypeFields": [
          {
            "Name": "max_individual",
            "TypeName": "Weight",
            "TypeId": 9
          }
        ],
        "Path": [
          "cumulus_pallet_dmp_queue",
          "ConfigData"
        ],
        "TypeDef": "Composite"
      },
      "578": {
        "TypeFields": [
          {
            "Name": "begin_used",
            "TypeName": "PageCounter",
            "TypeId": 4
          },
          {
            "Name": "end_used",
            "TypeName": "PageCounter",
            "TypeId": 4
          },
          {
            "Name": "overweight_count",
            "TypeName": "OverweightIndex",
            "TypeId": 11
          }
        ],
        "Path": [
          "cumulus_pallet_dmp_queue",
          "PageIndexData"
        ],
        "TypeDef": "Composite"
      },
      "579": {
        "TypeId": 580,
        "TypeDef": "Sequence"
      },
      "580": {
        "TypeIds": [
          4,
          13
        ],
        "TypeDef": "Tuple"
      },
      "581": {
        "Variants": [
          {
            "Name": "Unknown",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The message index given is unknown."
            ]
          },
          {
            "Name": "OverLimit",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The amount of weight given is possibly not enough for executing the message."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_dmp_queue",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "582": {
        "TypeIds": [
          126,
          0
        ],
        "TypeDef": "Tuple"
      },
      "583": {
        "TypeIds": [
          126,
          307
        ],
        "TypeDef": "Tuple"
      },
      "584": {
        "TypeIds": [
          126,
          307,
          0
        ],
        "TypeDef": "Tuple"
      },
      "585": {
        "Variants": [
          {
            "Name": "CollectionDecimalPointLimitExceeded",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Decimal_points parameter must be lower than [`up_data_structs::MAX_DECIMAL_POINTS`]."
            ]
          },
          {
            "Name": "EmptyArgument",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Length of items properties must be greater than 0."
            ]
          },
          {
            "Name": "RepartitionCalledOnNonRefungibleCollection",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Repertition is only supported by refungible collection."
            ]
          }
        ],
        "Path": [
          "pallet_unique",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Errors for the common Unique transactions."
        ]
      },
      "586": {
        "Variants": [
          {
            "Name": "InconsistentConfiguration",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "pallet_configuration",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "587": {
        "TypeFields": [
          {
            "Name": "owner",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "mode",
            "TypeName": "CollectionMode",
            "TypeId": 271
          },
          {
            "Name": "name",
            "TypeName": "CollectionName",
            "TypeId": 267
          },
          {
            "Name": "description",
            "TypeName": "CollectionDescription",
            "TypeId": 269
          },
          {
            "Name": "token_prefix",
            "TypeName": "CollectionTokenPrefix",
            "TypeId": 270
          },
          {
            "Name": "sponsorship",
            "TypeName": "SponsorshipState<AccountId>",
            "TypeId": 588
          },
          {
            "Name": "limits",
            "TypeName": "CollectionLimits",
            "TypeId": 277
          },
          {
            "Name": "permissions",
            "TypeName": "CollectionPermissions",
            "TypeId": 282
          },
          {
            "Name": "flags",
            "TypeName": "CollectionFlags",
            "TypeId": 152
          }
        ],
        "Path": [
          "up_data_structs",
          "Collection"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "588": {
        "Variants": [
          {
            "Name": "Disabled",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Unconfirmed",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "Confirmed",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "up_data_structs",
          "SponsorshipState"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "589": {
        "TypeFields": [
          {
            "Name": "map",
            "TypeName": "PropertiesMap<PropertyValue>",
            "TypeId": 590
          },
          {
            "Name": "consumed_space",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "_reserved",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "up_data_structs",
          "Properties"
        ],
        "TypeDef": "Composite"
      },
      "590": {
        "TypeFields": [
          {
            "TypeName": "BoundedBTreeMap<PropertyKey, Value, ConstU32<MAX_PROPERTIES_PER_ITEM>>",
            "TypeId": 591
          }
        ],
        "Path": [
          "up_data_structs",
          "PropertiesMap"
        ],
        "TypeParams": [
          {
            "Name": "Value",
            "TypeId": 297
          }
        ],
        "TypeDef": "Composite"
      },
      "591": {
        "TypeFields": [
          {
            "TypeName": "BTreeMap<K, V>",
            "TypeId": 592
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_btree_map",
          "BoundedBTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 292
          },
          {
            "Name": "V",
            "TypeId": 297
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "592": {
        "TypeFields": [
          {
            "TypeId": 593
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 292
          },
          {
            "Name": "V",
            "TypeId": 297
          }
        ],
        "TypeDef": "Composite"
      },
      "593": {
        "TypeId": 594,
        "TypeDef": "Sequence"
      },
      "594": {
        "TypeIds": [
          292,
          297
        ],
        "TypeDef": "Tuple"
      },
      "595": {
        "TypeFields": [
          {
            "TypeName": "BoundedBTreeMap<PropertyKey, Value, ConstU32<MAX_PROPERTIES_PER_ITEM>>",
            "TypeId": 596
          }
        ],
        "Path": [
          "up_data_structs",
          "PropertiesMap"
        ],
        "TypeParams": [
          {
            "Name": "Value",
            "TypeId": 293
          }
        ],
        "TypeDef": "Composite"
      },
      "596": {
        "TypeFields": [
          {
            "TypeName": "BTreeMap<K, V>",
            "TypeId": 597
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_btree_map",
          "BoundedBTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 292
          },
          {
            "Name": "V",
            "TypeId": 293
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "597": {
        "TypeFields": [
          {
            "TypeId": 598
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 292
          },
          {
            "Name": "V",
            "TypeId": 293
          }
        ],
        "TypeDef": "Composite"
      },
      "598": {
        "TypeId": 599,
        "TypeDef": "Sequence"
      },
      "599": {
        "TypeIds": [
          292,
          293
        ],
        "TypeDef": "Tuple"
      },
      "600": {
        "TypeIds": [
          126,
          273
        ],
        "TypeDef": "Tuple"
      },
      "601": {
        "TypeIds": [
          602,
          126,
          307,
          603,
          604
        ],
        "TypeDef": "Tuple"
      },
      "602": {
        "TypeFields": [
          {
            "Name": "created",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "destroyed",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "alive",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "up_data_structs",
          "CollectionStats"
        ],
        "TypeDef": "Composite"
      },
      "603": {
        "TypeFields": [
          {
            "Name": "token",
            "TypeName": "TokenId",
            "TypeId": 307
          },
          {
            "Name": "collection",
            "TypeName": "CollectionId",
            "TypeId": 126
          }
        ],
        "Path": [
          "up_data_structs",
          "TokenChild"
        ],
        "TypeDef": "Composite"
      },
      "604": {
        "TypeFields": [
          {
            "TypeId": 617
          }
        ],
        "Path": [
          "PhantomType",
          "up_data_structs"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 605
          }
        ],
        "TypeDef": "Composite"
      },
      "605": {
        "TypeIds": [
          606,
          607,
          609
        ],
        "TypeDef": "Tuple"
      },
      "606": {
        "TypeFields": [
          {
            "Name": "properties",
            "TypeName": "Vec<Property>",
            "TypeId": 298
          },
          {
            "Name": "owner",
            "TypeName": "Option<CrossAccountId>",
            "TypeId": 300
          },
          {
            "Name": "pieces",
            "TypeName": "u128",
            "TypeId": 6
          }
        ],
        "Path": [
          "up_data_structs",
          "TokenData"
        ],
        "TypeParams": [
          {
            "Name": "CrossAccountId",
            "TypeId": 273
          }
        ],
        "TypeDef": "Composite"
      },
      "607": {
        "TypeFields": [
          {
            "Name": "owner",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "mode",
            "TypeName": "CollectionMode",
            "TypeId": 271
          },
          {
            "Name": "name",
            "TypeName": "Vec<u16>",
            "TypeId": 268
          },
          {
            "Name": "description",
            "TypeName": "Vec<u16>",
            "TypeId": 268
          },
          {
            "Name": "token_prefix",
            "TypeName": "Vec<u8>",
            "TypeId": 13
          },
          {
            "Name": "sponsorship",
            "TypeName": "SponsorshipState<AccountId>",
            "TypeId": 588
          },
          {
            "Name": "limits",
            "TypeName": "CollectionLimits",
            "TypeId": 277
          },
          {
            "Name": "permissions",
            "TypeName": "CollectionPermissions",
            "TypeId": 282
          },
          {
            "Name": "token_property_permissions",
            "TypeName": "Vec<PropertyKeyPermission>",
            "TypeId": 294
          },
          {
            "Name": "properties",
            "TypeName": "Vec<Property>",
            "TypeId": 298
          },
          {
            "Name": "read_only",
            "TypeName": "bool",
            "TypeId": 74
          },
          {
            "Name": "flags",
            "TypeName": "RpcCollectionFlags",
            "TypeId": 608
          }
        ],
        "Path": [
          "up_data_structs",
          "RpcCollection"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "608": {
        "TypeFields": [
          {
            "Name": "foreign",
            "TypeName": "bool",
            "TypeId": 74
          },
          {
            "Name": "erc721metadata",
            "TypeName": "bool",
            "TypeId": 74
          }
        ],
        "Path": [
          "up_data_structs",
          "RpcCollectionFlags"
        ],
        "TypeDef": "Composite"
      },
      "609": {
        "TypeFields": [
          {
            "Name": "proof_size",
            "TypeName": "u64",
            "TypeId": 11
          },
          {
            "Name": "compact_proof_size",
            "TypeName": "u64",
            "TypeId": 11
          },
          {
            "Name": "compressed_proof_size",
            "TypeName": "u64",
            "TypeId": 11
          },
          {
            "Name": "results",
            "TypeName": "Vec<ApplyExtrinsicResult>",
            "TypeId": 610
          },
          {
            "Name": "key_values",
            "TypeName": "Vec<TrieKeyValue>",
            "TypeId": 615
          }
        ],
        "Path": [
          "up_pov_estimate_rpc",
          "PovInfo"
        ],
        "TypeDef": "Composite"
      },
      "610": {
        "TypeId": 611,
        "TypeDef": "Sequence"
      },
      "611": {
        "Variants": [
          {
            "Name": "Ok",
            "TypeFields": [
              {
                "TypeId": 43
              }
            ],
            "Index": 0
          },
          {
            "Name": "Err",
            "TypeFields": [
              {
                "TypeId": 612
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Result"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 43
          },
          {
            "Name": "E",
            "TypeId": 612
          }
        ],
        "TypeDef": "Variant"
      },
      "612": {
        "Variants": [
          {
            "Name": "Invalid",
            "TypeFields": [
              {
                "TypeName": "InvalidTransaction",
                "TypeId": 613
              }
            ],
            "Index": 0
          },
          {
            "Name": "Unknown",
            "TypeFields": [
              {
                "TypeName": "UnknownTransaction",
                "TypeId": 614
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "sp_runtime",
          "transaction_validity",
          "TransactionValidityError"
        ],
        "TypeDef": "Variant"
      },
      "613": {
        "Variants": [
          {
            "Name": "Call",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Payment",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Future",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Stale",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "BadProof",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "AncientBirthBlock",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "ExhaustsResources",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Custom",
            "TypeFields": [
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 7
          },
          {
            "Name": "BadMandatory",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "MandatoryValidation",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "BadSigner",
            "TypeFields": null,
            "Index": 10
          }
        ],
        "Path": [
          "sp_runtime",
          "transaction_validity",
          "InvalidTransaction"
        ],
        "TypeDef": "Variant"
      },
      "614": {
        "Variants": [
          {
            "Name": "CannotLookup",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NoUnsignedValidator",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Custom",
            "TypeFields": [
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "sp_runtime",
          "transaction_validity",
          "UnknownTransaction"
        ],
        "TypeDef": "Variant"
      },
      "615": {
        "TypeId": 616,
        "TypeDef": "Sequence"
      },
      "616": {
        "TypeFields": [
          {
            "Name": "key",
            "TypeName": "Vec<u8>",
            "TypeId": 13
          },
          {
            "Name": "value",
            "TypeName": "Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "up_pov_estimate_rpc",
          "TrieKeyValue"
        ],
        "TypeDef": "Composite"
      },
      "617": {
        "Length": 0,
        "TypeId": 605,
        "TypeDef": "Array"
      },
      "618": {
        "Variants": [
          {
            "Name": "CollectionNotFound",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "This collection does not exist."
            ]
          },
          {
            "Name": "MustBeTokenOwner",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Sender parameter and item owner must be equal."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "No permission to perform action"
            ]
          },
          {
            "Name": "CantDestroyNotEmptyCollection",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Destroying only empty collections is allowed"
            ]
          },
          {
            "Name": "PublicMintingNotAllowed",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Collection is not in mint mode."
            ]
          },
          {
            "Name": "AddressNotInAllowlist",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Address is not in allow list."
            ]
          },
          {
            "Name": "CollectionNameLimitExceeded",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Collection name can not be longer than 63 char."
            ]
          },
          {
            "Name": "CollectionDescriptionLimitExceeded",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Collection description can not be longer than 255 char."
            ]
          },
          {
            "Name": "CollectionTokenPrefixLimitExceeded",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Token prefix can not be longer than 15 char."
            ]
          },
          {
            "Name": "TotalCollectionsLimitExceeded",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Total collections bound exceeded."
            ]
          },
          {
            "Name": "CollectionAdminCountExceeded",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "Exceeded max admin count"
            ]
          },
          {
            "Name": "CollectionLimitBoundsExceeded",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "Collection limit bounds per collection exceeded"
            ]
          },
          {
            "Name": "OwnerPermissionsCantBeReverted",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "Tried to enable permissions which are only permitted to be disabled"
            ]
          },
          {
            "Name": "TransferNotAllowed",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "Collection settings not allowing items transferring"
            ]
          },
          {
            "Name": "AccountTokenLimitExceeded",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "Account token limit exceeded per collection"
            ]
          },
          {
            "Name": "CollectionTokenLimitExceeded",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "Collection token limit exceeded"
            ]
          },
          {
            "Name": "MetadataFlagFrozen",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "Metadata flag frozen"
            ]
          },
          {
            "Name": "TokenNotFound",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "Item does not exist"
            ]
          },
          {
            "Name": "TokenValueTooLow",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "Item is balance not enough"
            ]
          },
          {
            "Name": "ApprovedValueTooLow",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "Requested value is more than the approved"
            ]
          },
          {
            "Name": "CantApproveMoreThanOwned",
            "TypeFields": null,
            "Index": 20,
            "Docs": [
              "Tried to approve more than owned"
            ]
          },
          {
            "Name": "AddressIsNotEthMirror",
            "TypeFields": null,
            "Index": 21,
            "Docs": [
              "Only spending from eth mirror could be approved"
            ]
          },
          {
            "Name": "AddressIsZero",
            "TypeFields": null,
            "Index": 22,
            "Docs": [
              "Can't transfer tokens to ethereum zero address"
            ]
          },
          {
            "Name": "UnsupportedOperation",
            "TypeFields": null,
            "Index": 23,
            "Docs": [
              "The operation is not supported"
            ]
          },
          {
            "Name": "NotSufficientFounds",
            "TypeFields": null,
            "Index": 24,
            "Docs": [
              "Insufficient funds to perform an action"
            ]
          },
          {
            "Name": "UserIsNotAllowedToNest",
            "TypeFields": null,
            "Index": 25,
            "Docs": [
              "User does not satisfy the nesting rule"
            ]
          },
          {
            "Name": "SourceCollectionIsNotAllowedToNest",
            "TypeFields": null,
            "Index": 26,
            "Docs": [
              "Only tokens from specific collections may nest tokens under this one"
            ]
          },
          {
            "Name": "CollectionFieldSizeExceeded",
            "TypeFields": null,
            "Index": 27,
            "Docs": [
              "Tried to store more data than allowed in collection field"
            ]
          },
          {
            "Name": "NoSpaceForProperty",
            "TypeFields": null,
            "Index": 28,
            "Docs": [
              "Tried to store more property data than allowed"
            ]
          },
          {
            "Name": "PropertyLimitReached",
            "TypeFields": null,
            "Index": 29,
            "Docs": [
              "Tried to store more property keys than allowed"
            ]
          },
          {
            "Name": "PropertyKeyIsTooLong",
            "TypeFields": null,
            "Index": 30,
            "Docs": [
              "Property key is too long"
            ]
          },
          {
            "Name": "InvalidCharacterInPropertyKey",
            "TypeFields": null,
            "Index": 31,
            "Docs": [
              "Only ASCII letters, digits, and symbols `_`, `-`, and `.` are allowed"
            ]
          },
          {
            "Name": "EmptyPropertyKey",
            "TypeFields": null,
            "Index": 32,
            "Docs": [
              "Empty property keys are forbidden"
            ]
          },
          {
            "Name": "CollectionIsExternal",
            "TypeFields": null,
            "Index": 33,
            "Docs": [
              "Tried to access an external collection with an internal API"
            ]
          },
          {
            "Name": "CollectionIsInternal",
            "TypeFields": null,
            "Index": 34,
            "Docs": [
              "Tried to access an internal collection with an external API"
            ]
          },
          {
            "Name": "ConfirmSponsorshipFail",
            "TypeFields": null,
            "Index": 35,
            "Docs": [
              "This address is not set as sponsor, use setCollectionSponsor first."
            ]
          },
          {
            "Name": "UserIsNotCollectionAdmin",
            "TypeFields": null,
            "Index": 36,
            "Docs": [
              "The user is not an administrator."
            ]
          },
          {
            "Name": "FungibleItemsHaveNoId",
            "TypeFields": null,
            "Index": 37,
            "Docs": [
              "Fungible tokens hold no ID, and the default value of TokenId for a fungible collection is 0."
            ]
          },
          {
            "Name": "NotFungibleDataUsedToMintFungibleCollectionToken",
            "TypeFields": null,
            "Index": 38,
            "Docs": [
              "Not Fungible item data used to mint in Fungible collection."
            ]
          }
        ],
        "Path": [
          "pallet_common",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "619": {
        "TypeIds": [
          126,
          273,
          273
        ],
        "TypeDef": "Tuple"
      },
      "620": {
        "Variants": [
          {
            "Name": "FungibleItemsDontHaveData",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Tried to set data for fungible item."
            ]
          },
          {
            "Name": "FungibleDisallowsNesting",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Fungible token does not support nesting."
            ]
          },
          {
            "Name": "SettingPropertiesNotAllowed",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Setting item properties is not allowed."
            ]
          },
          {
            "Name": "SettingAllowanceForAllNotAllowed",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Setting allowance for all is not allowed."
            ]
          },
          {
            "Name": "FungibleTokensAreAlwaysValid",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Only a fungible collection could be possibly broken; any fungible token is valid."
            ]
          }
        ],
        "Path": [
          "pallet_fungible",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "621": {
        "TypeFields": [
          {
            "Name": "map",
            "TypeName": "PropertiesMap<PropertyValue>",
            "TypeId": 590
          },
          {
            "Name": "consumed_space",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "_reserved",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "up_data_structs",
          "Properties"
        ],
        "TypeDef": "Composite"
      },
      "622": {
        "TypeIds": [
          126,
          273,
          307
        ],
        "TypeDef": "Tuple"
      },
      "623": {
        "TypeIds": [
          126,
          307,
          273
        ],
        "TypeDef": "Tuple"
      },
      "624": {
        "TypeIds": [
          126,
          307,
          273,
          273
        ],
        "TypeDef": "Tuple"
      },
      "625": {
        "Variants": [
          {
            "Name": "NotRefungibleDataUsedToMintFungibleCollectionToken",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Not Refungible item data used to mint in Refungible collection."
            ]
          },
          {
            "Name": "WrongRefungiblePieces",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Maximum refungibility exceeded."
            ]
          },
          {
            "Name": "RepartitionWhileNotOwningAllPieces",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Refungible token can't be repartitioned by user who isn't owns all pieces."
            ]
          },
          {
            "Name": "RefungibleDisallowsNesting",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Refungible token can't nest other tokens."
            ]
          },
          {
            "Name": "SettingPropertiesNotAllowed",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Setting item properties is not allowed."
            ]
          }
        ],
        "Path": [
          "pallet_refungible",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "626": {
        "TypeFields": [
          {
            "Name": "owner",
            "TypeName": "CrossAccountId",
            "TypeId": 273
          }
        ],
        "Path": [
          "pallet_nonfungible",
          "ItemData"
        ],
        "TypeParams": [
          {
            "Name": "CrossAccountId",
            "TypeId": 273
          }
        ],
        "TypeDef": "Composite"
      },
      "627": {
        "TypeIds": [
          126,
          307,
          628,
          292
        ],
        "TypeDef": "Tuple"
      },
      "628": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Rmrk",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "up_data_structs",
          "PropertyScope"
        ],
        "TypeDef": "Variant"
      },
      "629": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "630": {
        "TypeIds": [
          126,
          307,
          583
        ],
        "TypeDef": "Tuple"
      },
      "631": {
        "Variants": [
          {
            "Name": "NotNonfungibleDataUsedToMintFungibleCollectionToken",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Not Nonfungible item data used to mint in Nonfungible collection."
            ]
          },
          {
            "Name": "NonfungibleItemsHaveNoAmount",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Used amount > 1 with NFT"
            ]
          },
          {
            "Name": "CantBurnNftWithChildren",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Unable to burn NFT with children"
            ]
          }
        ],
        "Path": [
          "pallet_nonfungible",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "632": {
        "Variants": [
          {
            "Name": "OuroborosDetected",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "While nesting, encountered an already checked account, detecting a loop."
            ]
          },
          {
            "Name": "DepthLimit",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "While nesting, reached the depth limit of nesting, exceeding the provided budget."
            ]
          },
          {
            "Name": "BreadthLimit",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "While nesting, reached the breadth limit of nesting, exceeding the provided budget."
            ]
          },
          {
            "Name": "TokenNotFound",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Couldn't find the token owner that is itself a token."
            ]
          },
          {
            "Name": "CantNestTokenUnderCollection",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Tried to nest token under collection contract address, instead of token address"
            ]
          }
        ],
        "Path": [
          "pallet_structure",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "633": {
        "TypeIds": [
          0,
          4
        ],
        "TypeDef": "Tuple"
      },
      "634": {
        "TypeIds": [
          6,
          4
        ],
        "TypeDef": "Tuple"
      },
      "635": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 636
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 479
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "636": {
        "TypeId": 479,
        "TypeDef": "Sequence"
      },
      "637": {
        "Variants": [
          {
            "Name": "AdminNotSet",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Error due to action requiring admin to be set."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "No permission to perform an action."
            ]
          },
          {
            "Name": "NotSufficientFunds",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Insufficient funds to perform an action."
            ]
          },
          {
            "Name": "PendingForBlockOverflow",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Occurs when a pending unstake cannot be added in this block. PENDING_LIMIT_PER_BLOCK` limits exceeded."
            ]
          },
          {
            "Name": "SponsorNotSet",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The error is due to the fact that the collection/contract must already be sponsored in order to perform the action."
            ]
          },
          {
            "Name": "InsufficientStakedBalance",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Errors caused by insufficient staked balance."
            ]
          },
          {
            "Name": "InconsistencyState",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Errors caused by incorrect state of a staker in context of the pallet."
            ]
          }
        ],
        "Path": [
          "pallet_app_promotion",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "638": {
        "TypeIds": [
          126,
          63
        ],
        "TypeDef": "Tuple"
      },
      "639": {
        "Variants": [
          {
            "Name": "ForeignAssetAlreadyRegistered",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The foreign asset is already registered."
            ]
          },
          {
            "Name": "BadForeignAssetId",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The given asset ID could not be converted into the current XCM version."
            ]
          }
        ],
        "Path": [
          "pallet_foreign_assets",
          "module",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "640": {
        "TypeFields": [
          {
            "Name": "size",
            "TypeName": "u64",
            "TypeId": 11
          },
          {
            "Name": "hash",
            "TypeName": "H256",
            "TypeId": 12
          }
        ],
        "Path": [
          "pallet_evm",
          "CodeMetadata"
        ],
        "TypeDef": "Composite"
      },
      "641": {
        "TypeIds": [
          215,
          12
        ],
        "TypeDef": "Tuple"
      },
      "642": {
        "Variants": [
          {
            "Name": "BalanceLow",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Not enough balance to perform action"
            ]
          },
          {
            "Name": "FeeOverflow",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Calculating total fee overflowed"
            ]
          },
          {
            "Name": "PaymentOverflow",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Calculating total payment overflowed"
            ]
          },
          {
            "Name": "WithdrawFailed",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Withdraw fee failed"
            ]
          },
          {
            "Name": "GasPriceTooLow",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Gas price is too low."
            ]
          },
          {
            "Name": "InvalidNonce",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Nonce is invalid"
            ]
          },
          {
            "Name": "GasLimitTooLow",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Gas limit is too low."
            ]
          },
          {
            "Name": "GasLimitTooHigh",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Gas limit is too high."
            ]
          },
          {
            "Name": "Undefined",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Undefined error."
            ]
          },
          {
            "Name": "Reentrancy",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "EVM reentrancy"
            ]
          },
          {
            "Name": "TransactionMustComeFromEOA",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "EIP-3607,"
            ]
          }
        ],
        "Path": [
          "pallet_evm",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "643": {
        "TypeId": 644,
        "TypeDef": "Sequence"
      },
      "644": {
        "TypeIds": [
          340,
          645,
          649
        ],
        "TypeDef": "Tuple"
      },
      "645": {
        "TypeFields": [
          {
            "Name": "transaction_hash",
            "TypeName": "H256",
            "TypeId": 12
          },
          {
            "Name": "transaction_index",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "from",
            "TypeName": "H160",
            "TypeId": 215
          },
          {
            "Name": "to",
            "TypeName": "Option<H160>",
            "TypeId": 646
          },
          {
            "Name": "contract_address",
            "TypeName": "Option<H160>",
            "TypeId": 646
          },
          {
            "Name": "logs",
            "TypeName": "Vec<Log>",
            "TypeId": 354
          },
          {
            "Name": "logs_bloom",
            "TypeName": "Bloom",
            "TypeId": 647
          }
        ],
        "Path": [
          "fp_rpc",
          "TransactionStatus"
        ],
        "TypeDef": "Composite"
      },
      "646": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 215
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 215
          }
        ],
        "TypeDef": "Variant"
      },
      "647": {
        "TypeFields": [
          {
            "TypeName": "[u8; BLOOM_SIZE]",
            "TypeId": 648
          }
        ],
        "Path": [
          "ethbloom",
          "Bloom"
        ],
        "TypeDef": "Composite"
      },
      "648": {
        "Length": 256,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "649": {
        "Variants": [
          {
            "Name": "Legacy",
            "TypeFields": [
              {
                "TypeName": "EIP658ReceiptData",
                "TypeId": 650
              }
            ],
            "Index": 0
          },
          {
            "Name": "EIP2930",
            "TypeFields": [
              {
                "TypeName": "EIP2930ReceiptData",
                "TypeId": 650
              }
            ],
            "Index": 1
          },
          {
            "Name": "EIP1559",
            "TypeFields": [
              {
                "TypeName": "EIP1559ReceiptData",
                "TypeId": 650
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "ethereum",
          "receipt",
          "ReceiptV3"
        ],
        "TypeDef": "Variant"
      },
      "650": {
        "TypeFields": [
          {
            "Name": "status_code",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "used_gas",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "logs_bloom",
            "TypeName": "Bloom",
            "TypeId": 647
          },
          {
            "Name": "logs",
            "TypeName": "Vec<Log>",
            "TypeId": 354
          }
        ],
        "Path": [
          "ethereum",
          "receipt",
          "EIP658ReceiptData"
        ],
        "TypeDef": "Composite"
      },
      "651": {
        "TypeFields": [
          {
            "Name": "header",
            "TypeName": "Header",
            "TypeId": 652
          },
          {
            "Name": "transactions",
            "TypeName": "Vec<T>",
            "TypeId": 654
          },
          {
            "Name": "ommers",
            "TypeName": "Vec<Header>",
            "TypeId": 655
          }
        ],
        "Path": [
          "ethereum",
          "block",
          "Block"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 340
          }
        ],
        "TypeDef": "Composite"
      },
      "652": {
        "TypeFields": [
          {
            "Name": "parent_hash",
            "TypeName": "H256",
            "TypeId": 12
          },
          {
            "Name": "ommers_hash",
            "TypeName": "H256",
            "TypeId": 12
          },
          {
            "Name": "beneficiary",
            "TypeName": "H160",
            "TypeId": 215
          },
          {
            "Name": "state_root",
            "TypeName": "H256",
            "TypeId": 12
          },
          {
            "Name": "transactions_root",
            "TypeName": "H256",
            "TypeId": 12
          },
          {
            "Name": "receipts_root",
            "TypeName": "H256",
            "TypeId": 12
          },
          {
            "Name": "logs_bloom",
            "TypeName": "Bloom",
            "TypeId": 647
          },
          {
            "Name": "difficulty",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "number",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "gas_limit",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "gas_used",
            "TypeName": "U256",
            "TypeId": 334
          },
          {
            "Name": "timestamp",
            "TypeName": "u64",
            "TypeId": 11
          },
          {
            "Name": "extra_data",
            "TypeName": "Bytes",
            "TypeId": 13
          },
          {
            "Name": "mix_hash",
            "TypeName": "H256",
            "TypeId": 12
          },
          {
            "Name": "nonce",
            "TypeName": "H64",
            "TypeId": 653
          }
        ],
        "Path": [
          "ethereum",
          "header",
          "Header"
        ],
        "TypeDef": "Composite"
      },
      "653": {
        "TypeFields": [
          {
            "TypeName": "[u8; 8]",
            "TypeId": 64
          }
        ],
        "Path": [
          "ethereum_types",
          "hash",
          "H64"
        ],
        "TypeDef": "Composite"
      },
      "654": {
        "TypeId": 340,
        "TypeDef": "Sequence"
      },
      "655": {
        "TypeId": 652,
        "TypeDef": "Sequence"
      },
      "656": {
        "TypeId": 649,
        "TypeDef": "Sequence"
      },
      "657": {
        "TypeId": 645,
        "TypeDef": "Sequence"
      },
      "658": {
        "Variants": [
          {
            "Name": "InvalidSignature",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Signature is invalid."
            ]
          },
          {
            "Name": "PreLogExists",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Pre-log is present, therefore transact is not allowed."
            ]
          }
        ],
        "Path": [
          "pallet_ethereum",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "659": {
        "Variants": [
          {
            "Name": "OutOfGas",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "OutOfFund",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "pallet_evm_coder_substrate",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "DispatchError is opaque, but we need to somehow extract correct error in case of OutOfGas failure",
          "So we have this pallet, which defines OutOfGas error, and knews its own id to check if DispatchError",
          "is thrown because of it",
          "",
          "These errors shouldn't end in extrinsic results, as they only used in evm execution path"
        ]
      },
      "660": {
        "Variants": [
          {
            "Name": "Disabled",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Unconfirmed",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 273
              }
            ],
            "Index": 1
          },
          {
            "Name": "Confirmed",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 273
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "up_data_structs",
          "SponsorshipState"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 273
          }
        ],
        "TypeDef": "Variant"
      },
      "661": {
        "Variants": [
          {
            "Name": "Disabled",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Allowlisted",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Generous",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_evm_contract_helpers",
          "SponsoringModeT"
        ],
        "TypeDef": "Variant"
      },
      "662": {
        "TypeFields": [
          {
            "TypeName": "BTreeMap<K, V>",
            "TypeId": 663
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_btree_map",
          "BoundedBTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 4
          },
          {
            "Name": "V",
            "TypeId": 334
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "663": {
        "TypeFields": [
          {
            "TypeId": 664
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 4
          },
          {
            "Name": "V",
            "TypeId": 334
          }
        ],
        "TypeDef": "Composite"
      },
      "664": {
        "TypeId": 665,
        "TypeDef": "Sequence"
      },
      "665": {
        "TypeIds": [
          4,
          334
        ],
        "TypeDef": "Tuple"
      },
      "666": {
        "TypeIds": [
          215,
          215
        ],
        "TypeDef": "Tuple"
      },
      "667": {
        "Variants": [
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "This method is only executable by contract owner"
            ]
          },
          {
            "Name": "NoPendingSponsor",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "No pending sponsor for contract."
            ]
          },
          {
            "Name": "TooManyMethodsHaveSponsoredLimit",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Number of methods that sponsored limit is defined for exceeds maximum."
            ]
          }
        ],
        "Path": [
          "pallet_evm_contract_helpers",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "668": {
        "Variants": [
          {
            "Name": "AccountNotEmpty",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Can only migrate to empty address."
            ]
          },
          {
            "Name": "AccountIsNotMigrating",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Migration of this account is not yet started, or already finished."
            ]
          },
          {
            "Name": "BadEvent",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Failed to decode event bytes"
            ]
          }
        ],
        "Path": [
          "pallet_evm_migration",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "669": {
        "Variants": null,
        "Path": [
          "pallet_maintenance",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "670": {
        "Variants": [
          {
            "Name": "TooManyCalls",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Too many calls batched."
            ]
          }
        ],
        "Path": [
          "pallet_utility",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "671": {
        "Variants": [
          {
            "Name": "TestPalletDisabled",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "TriggerRollback",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "pallet_test_utils",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "672": {
        "TypeFields": [
          {
            "TypeName": "sp_runtime::generic::UncheckedExtrinsic<Address, Call, Signature, Extra\n>",
            "TypeId": 692
          }
        ],
        "Path": [
          "fp_self_contained",
          "unchecked_extrinsic",
          "UncheckedExtrinsic"
        ],
        "TypeParams": [
          {
            "Name": "Address",
            "TypeId": 116
          },
          {
            "Name": "Call",
            "TypeId": 84
          },
          {
            "Name": "Signature",
            "TypeId": 673
          },
          {
            "Name": "Extra",
            "TypeId": 679
          }
        ],
        "TypeDef": "Composite"
      },
      "673": {
        "Variants": [
          {
            "Name": "Ed25519",
            "TypeFields": [
              {
                "TypeName": "ed25519::Signature",
                "TypeId": 674
              }
            ],
            "Index": 0
          },
          {
            "Name": "Sr25519",
            "TypeFields": [
              {
                "TypeName": "sr25519::Signature",
                "TypeId": 676
              }
            ],
            "Index": 1
          },
          {
            "Name": "Ecdsa",
            "TypeFields": [
              {
                "TypeName": "ecdsa::Signature",
                "TypeId": 677
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "sp_runtime",
          "MultiSignature"
        ],
        "TypeDef": "Variant"
      },
      "674": {
        "TypeFields": [
          {
            "TypeName": "[u8; 64]",
            "TypeId": 675
          }
        ],
        "Path": [
          "sp_core",
          "ed25519",
          "Signature"
        ],
        "TypeDef": "Composite"
      },
      "675": {
        "Length": 64,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "676": {
        "TypeFields": [
          {
            "TypeName": "[u8; 64]",
            "TypeId": 675
          }
        ],
        "Path": [
          "sp_core",
          "sr25519",
          "Signature"
        ],
        "TypeDef": "Composite"
      },
      "677": {
        "TypeFields": [
          {
            "TypeName": "[u8; SIGNATURE_SERIALIZED_SIZE]",
            "TypeId": 678
          }
        ],
        "Path": [
          "sp_core",
          "ecdsa",
          "Signature"
        ],
        "TypeDef": "Composite"
      },
      "678": {
        "Length": 65,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "679": {
        "TypeIds": [
          680,
          681,
          682,
          683,
          685,
          686,
          687,
          688,
          689,
          691
        ],
        "TypeDef": "Tuple"
      },
      "680": {
        "Path": [
          "frame_system",
          "extensions",
          "check_spec_version",
          "CheckSpecVersion"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "681": {
        "Path": [
          "frame_system",
          "extensions",
          "check_tx_version",
          "CheckTxVersion"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "682": {
        "Path": [
          "frame_system",
          "extensions",
          "check_genesis",
          "CheckGenesis"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "683": {
        "TypeFields": [
          {
            "TypeName": "Era",
            "TypeId": 684
          }
        ],
        "Path": [
          "frame_system",
          "extensions",
          "check_mortality",
          "CheckMortality"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "684": {
        "Variants": [
          {
            "Name": "Immortal",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Mortal1",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 1
          },
          {
            "Name": "Mortal2",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 2
          },
          {
            "Name": "Mortal3",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 3
          },
          {
            "Name": "Mortal4",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 4
          },
          {
            "Name": "Mortal5",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 5
          },
          {
            "Name": "Mortal6",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 6
          },
          {
            "Name": "Mortal7",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 7
          },
          {
            "Name": "Mortal8",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 8
          },
          {
            "Name": "Mortal9",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 9
          },
          {
            "Name": "Mortal10",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 10
          },
          {
            "Name": "Mortal11",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 11
          },
          {
            "Name": "Mortal12",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 12
          },
          {
            "Name": "Mortal13",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 13
          },
          {
            "Name": "Mortal14",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 14
          },
          {
            "Name": "Mortal15",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 15
          },
          {
            "Name": "Mortal16",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 16
          },
          {
            "Name": "Mortal17",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 17
          },
          {
            "Name": "Mortal18",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 18
          },
          {
            "Name": "Mortal19",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 19
          },
          {
            "Name": "Mortal20",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 20
          },
          {
            "Name": "Mortal21",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 21
          },
          {
            "Name": "Mortal22",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 22
          },
          {
            "Name": "Mortal23",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 23
          },
          {
            "Name": "Mortal24",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 24
          },
          {
            "Name": "Mortal25",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 25
          },
          {
            "Name": "Mortal26",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 26
          },
          {
            "Name": "Mortal27",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 27
          },
          {
            "Name": "Mortal28",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 28
          },
          {
            "Name": "Mortal29",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 29
          },
          {
            "Name": "Mortal30",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 30
          },
          {
            "Name": "Mortal31",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 31
          },
          {
            "Name": "Mortal32",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 32
          },
          {
            "Name": "Mortal33",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 33
          },
          {
            "Name": "Mortal34",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 34
          },
          {
            "Name": "Mortal35",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 35
          },
          {
            "Name": "Mortal36",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 36
          },
          {
            "Name": "Mortal37",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 37
          },
          {
            "Name": "Mortal38",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 38
          },
          {
            "Name": "Mortal39",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 39
          },
          {
            "Name": "Mortal40",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 40
          },
          {
            "Name": "Mortal41",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 41
          },
          {
            "Name": "Mortal42",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 42
          },
          {
            "Name": "Mortal43",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 43
          },
          {
            "Name": "Mortal44",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 44
          },
          {
            "Name": "Mortal45",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 45
          },
          {
            "Name": "Mortal46",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 46
          },
          {
            "Name": "Mortal47",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 47
          },
          {
            "Name": "Mortal48",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 48
          },
          {
            "Name": "Mortal49",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 49
          },
          {
            "Name": "Mortal50",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 50
          },
          {
            "Name": "Mortal51",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 51
          },
          {
            "Name": "Mortal52",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 52
          },
          {
            "Name": "Mortal53",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 53
          },
          {
            "Name": "Mortal54",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 54
          },
          {
            "Name": "Mortal55",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 55
          },
          {
            "Name": "Mortal56",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 56
          },
          {
            "Name": "Mortal57",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 57
          },
          {
            "Name": "Mortal58",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 58
          },
          {
            "Name": "Mortal59",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 59
          },
          {
            "Name": "Mortal60",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 60
          },
          {
            "Name": "Mortal61",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 61
          },
          {
            "Name": "Mortal62",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 62
          },
          {
            "Name": "Mortal63",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 63
          },
          {
            "Name": "Mortal64",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 64
          },
          {
            "Name": "Mortal65",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 65
          },
          {
            "Name": "Mortal66",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 66
          },
          {
            "Name": "Mortal67",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 67
          },
          {
            "Name": "Mortal68",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 68
          },
          {
            "Name": "Mortal69",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 69
          },
          {
            "Name": "Mortal70",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 70
          },
          {
            "Name": "Mortal71",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 71
          },
          {
            "Name": "Mortal72",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 72
          },
          {
            "Name": "Mortal73",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 73
          },
          {
            "Name": "Mortal74",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 74
          },
          {
            "Name": "Mortal75",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 75
          },
          {
            "Name": "Mortal76",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 76
          },
          {
            "Name": "Mortal77",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 77
          },
          {
            "Name": "Mortal78",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 78
          },
          {
            "Name": "Mortal79",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 79
          },
          {
            "Name": "Mortal80",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 80
          },
          {
            "Name": "Mortal81",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 81
          },
          {
            "Name": "Mortal82",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 82
          },
          {
            "Name": "Mortal83",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 83
          },
          {
            "Name": "Mortal84",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 84
          },
          {
            "Name": "Mortal85",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 85
          },
          {
            "Name": "Mortal86",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 86
          },
          {
            "Name": "Mortal87",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 87
          },
          {
            "Name": "Mortal88",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 88
          },
          {
            "Name": "Mortal89",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 89
          },
          {
            "Name": "Mortal90",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 90
          },
          {
            "Name": "Mortal91",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 91
          },
          {
            "Name": "Mortal92",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 92
          },
          {
            "Name": "Mortal93",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 93
          },
          {
            "Name": "Mortal94",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 94
          },
          {
            "Name": "Mortal95",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 95
          },
          {
            "Name": "Mortal96",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 96
          },
          {
            "Name": "Mortal97",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 97
          },
          {
            "Name": "Mortal98",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 98
          },
          {
            "Name": "Mortal99",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 99
          },
          {
            "Name": "Mortal100",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 100
          },
          {
            "Name": "Mortal101",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 101
          },
          {
            "Name": "Mortal102",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 102
          },
          {
            "Name": "Mortal103",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 103
          },
          {
            "Name": "Mortal104",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 104
          },
          {
            "Name": "Mortal105",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 105
          },
          {
            "Name": "Mortal106",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 106
          },
          {
            "Name": "Mortal107",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 107
          },
          {
            "Name": "Mortal108",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 108
          },
          {
            "Name": "Mortal109",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 109
          },
          {
            "Name": "Mortal110",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 110
          },
          {
            "Name": "Mortal111",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 111
          },
          {
            "Name": "Mortal112",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 112
          },
          {
            "Name": "Mortal113",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 113
          },
          {
            "Name": "Mortal114",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 114
          },
          {
            "Name": "Mortal115",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 115
          },
          {
            "Name": "Mortal116",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 116
          },
          {
            "Name": "Mortal117",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 117
          },
          {
            "Name": "Mortal118",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 118
          },
          {
            "Name": "Mortal119",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 119
          },
          {
            "Name": "Mortal120",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 120
          },
          {
            "Name": "Mortal121",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 121
          },
          {
            "Name": "Mortal122",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 122
          },
          {
            "Name": "Mortal123",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 123
          },
          {
            "Name": "Mortal124",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 124
          },
          {
            "Name": "Mortal125",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 125
          },
          {
            "Name": "Mortal126",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 126
          },
          {
            "Name": "Mortal127",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 127
          },
          {
            "Name": "Mortal128",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 128
          },
          {
            "Name": "Mortal129",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 129
          },
          {
            "Name": "Mortal130",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 130
          },
          {
            "Name": "Mortal131",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 131
          },
          {
            "Name": "Mortal132",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 132
          },
          {
            "Name": "Mortal133",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 133
          },
          {
            "Name": "Mortal134",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 134
          },
          {
            "Name": "Mortal135",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 135
          },
          {
            "Name": "Mortal136",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 136
          },
          {
            "Name": "Mortal137",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 137
          },
          {
            "Name": "Mortal138",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 138
          },
          {
            "Name": "Mortal139",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 139
          },
          {
            "Name": "Mortal140",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 140
          },
          {
            "Name": "Mortal141",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 141
          },
          {
            "Name": "Mortal142",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 142
          },
          {
            "Name": "Mortal143",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 143
          },
          {
            "Name": "Mortal144",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 144
          },
          {
            "Name": "Mortal145",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 145
          },
          {
            "Name": "Mortal146",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 146
          },
          {
            "Name": "Mortal147",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 147
          },
          {
            "Name": "Mortal148",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 148
          },
          {
            "Name": "Mortal149",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 149
          },
          {
            "Name": "Mortal150",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 150
          },
          {
            "Name": "Mortal151",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 151
          },
          {
            "Name": "Mortal152",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 152
          },
          {
            "Name": "Mortal153",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 153
          },
          {
            "Name": "Mortal154",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 154
          },
          {
            "Name": "Mortal155",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 155
          },
          {
            "Name": "Mortal156",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 156
          },
          {
            "Name": "Mortal157",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 157
          },
          {
            "Name": "Mortal158",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 158
          },
          {
            "Name": "Mortal159",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 159
          },
          {
            "Name": "Mortal160",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 160
          },
          {
            "Name": "Mortal161",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 161
          },
          {
            "Name": "Mortal162",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 162
          },
          {
            "Name": "Mortal163",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 163
          },
          {
            "Name": "Mortal164",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 164
          },
          {
            "Name": "Mortal165",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 165
          },
          {
            "Name": "Mortal166",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 166
          },
          {
            "Name": "Mortal167",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 167
          },
          {
            "Name": "Mortal168",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 168
          },
          {
            "Name": "Mortal169",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 169
          },
          {
            "Name": "Mortal170",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 170
          },
          {
            "Name": "Mortal171",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 171
          },
          {
            "Name": "Mortal172",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 172
          },
          {
            "Name": "Mortal173",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 173
          },
          {
            "Name": "Mortal174",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 174
          },
          {
            "Name": "Mortal175",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 175
          },
          {
            "Name": "Mortal176",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 176
          },
          {
            "Name": "Mortal177",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 177
          },
          {
            "Name": "Mortal178",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 178
          },
          {
            "Name": "Mortal179",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 179
          },
          {
            "Name": "Mortal180",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 180
          },
          {
            "Name": "Mortal181",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 181
          },
          {
            "Name": "Mortal182",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 182
          },
          {
            "Name": "Mortal183",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 183
          },
          {
            "Name": "Mortal184",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 184
          },
          {
            "Name": "Mortal185",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 185
          },
          {
            "Name": "Mortal186",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 186
          },
          {
            "Name": "Mortal187",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 187
          },
          {
            "Name": "Mortal188",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 188
          },
          {
            "Name": "Mortal189",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 189
          },
          {
            "Name": "Mortal190",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 190
          },
          {
            "Name": "Mortal191",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 191
          },
          {
            "Name": "Mortal192",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 192
          },
          {
            "Name": "Mortal193",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 193
          },
          {
            "Name": "Mortal194",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 194
          },
          {
            "Name": "Mortal195",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 195
          },
          {
            "Name": "Mortal196",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 196
          },
          {
            "Name": "Mortal197",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 197
          },
          {
            "Name": "Mortal198",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 198
          },
          {
            "Name": "Mortal199",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 199
          },
          {
            "Name": "Mortal200",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 200
          },
          {
            "Name": "Mortal201",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 201
          },
          {
            "Name": "Mortal202",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 202
          },
          {
            "Name": "Mortal203",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 203
          },
          {
            "Name": "Mortal204",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 204
          },
          {
            "Name": "Mortal205",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 205
          },
          {
            "Name": "Mortal206",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 206
          },
          {
            "Name": "Mortal207",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 207
          },
          {
            "Name": "Mortal208",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 208
          },
          {
            "Name": "Mortal209",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 209
          },
          {
            "Name": "Mortal210",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 210
          },
          {
            "Name": "Mortal211",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 211
          },
          {
            "Name": "Mortal212",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 212
          },
          {
            "Name": "Mortal213",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 213
          },
          {
            "Name": "Mortal214",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 214
          },
          {
            "Name": "Mortal215",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 215
          },
          {
            "Name": "Mortal216",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 216
          },
          {
            "Name": "Mortal217",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 217
          },
          {
            "Name": "Mortal218",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 218
          },
          {
            "Name": "Mortal219",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 219
          },
          {
            "Name": "Mortal220",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 220
          },
          {
            "Name": "Mortal221",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 221
          },
          {
            "Name": "Mortal222",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 222
          },
          {
            "Name": "Mortal223",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 223
          },
          {
            "Name": "Mortal224",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 224
          },
          {
            "Name": "Mortal225",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 225
          },
          {
            "Name": "Mortal226",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 226
          },
          {
            "Name": "Mortal227",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 227
          },
          {
            "Name": "Mortal228",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 228
          },
          {
            "Name": "Mortal229",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 229
          },
          {
            "Name": "Mortal230",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 230
          },
          {
            "Name": "Mortal231",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 231
          },
          {
            "Name": "Mortal232",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 232
          },
          {
            "Name": "Mortal233",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 233
          },
          {
            "Name": "Mortal234",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 234
          },
          {
            "Name": "Mortal235",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 235
          },
          {
            "Name": "Mortal236",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 236
          },
          {
            "Name": "Mortal237",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 237
          },
          {
            "Name": "Mortal238",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 238
          },
          {
            "Name": "Mortal239",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 239
          },
          {
            "Name": "Mortal240",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 240
          },
          {
            "Name": "Mortal241",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 241
          },
          {
            "Name": "Mortal242",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 242
          },
          {
            "Name": "Mortal243",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 243
          },
          {
            "Name": "Mortal244",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 244
          },
          {
            "Name": "Mortal245",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 245
          },
          {
            "Name": "Mortal246",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 246
          },
          {
            "Name": "Mortal247",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 247
          },
          {
            "Name": "Mortal248",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 248
          },
          {
            "Name": "Mortal249",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 249
          },
          {
            "Name": "Mortal250",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 250
          },
          {
            "Name": "Mortal251",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 251
          },
          {
            "Name": "Mortal252",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 252
          },
          {
            "Name": "Mortal253",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 253
          },
          {
            "Name": "Mortal254",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 254
          },
          {
            "Name": "Mortal255",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 255
          }
        ],
        "Path": [
          "sp_runtime",
          "generic",
          "era",
          "Era"
        ],
        "TypeDef": "Variant"
      },
      "685": {
        "TypeFields": [
          {
            "TypeName": "T::Nonce",
            "TypeId": 56
          }
        ],
        "Path": [
          "pallet_template_transaction_payment",
          "CheckNonce"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "686": {
        "Path": [
          "frame_system",
          "extensions",
          "check_weight",
          "CheckWeight"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "687": {
        "Path": [
          "opal_runtime",
          "runtime_common",
          "maintenance",
          "CheckMaintenance"
        ],
        "TypeDef": "Composite"
      },
      "688": {
        "Path": [
          "opal_runtime",
          "runtime_common",
          "identity",
          "DisableIdentityCalls"
        ],
        "TypeDef": "Composite"
      },
      "689": {
        "TypeFields": [
          {
            "TypeName": "BalanceOf<T>",
            "TypeId": 47
          }
        ],
        "Path": [
          "pallet_template_transaction_payment",
          "ChargeTransactionPayment"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 690
          }
        ],
        "TypeDef": "Composite"
      },
      "690": {
        "Path": [
          "opal_runtime",
          "Runtime"
        ],
        "TypeDef": "Composite"
      },
      "691": {
        "Path": [
          "pallet_ethereum",
          "FakeTransactionFinalizer"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 690
          }
        ],
        "TypeDef": "Composite"
      },
      "692": {
        "TypeFields": [
          {
            "TypeId": 13
          }
        ],
        "Path": [
          "sp_runtime",
          "generic",
          "unchecked_extrinsic",
          "UncheckedExtrinsic"
        ],
        "TypeParams": [
          {
            "Name": "Address",
            "TypeId": 116
          },
          {
            "Name": "Call",
            "TypeId": 84
          },
          {
            "Name": "Signature",
            "TypeId": 673
          },
          {
            "Name": "Extra",
            "TypeId": 679
          }
        ],
        "TypeDef": "Composite"
      }
    },
    "Modules": {
      "0": {
        "Name": "System",
        "Storage": {
          "Prefix": "System",
          "Entries": [
            {
              "Name": "Account",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 3
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA=",
              "Docs": [
                " The full account information for a particular account ID."
              ]
            },
            {
              "Name": "ExtrinsicCount",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Total extrinsics count for the current block."
              ]
            },
            {
              "Name": "BlockWeight",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAAAA",
              "Docs": [
                " The current weight for the block."
              ]
            },
            {
              "Name": "AllExtrinsicsLen",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Total length (in bytes) for all extrinsics put together, for the current block."
              ]
            },
            {
              "Name": "BlockHash",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 12
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Map of block numbers to block hashes."
              ]
            },
            {
              "Name": "ExtrinsicData",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 13
                }
              },
              "Default": "AA==",
              "Docs": [
                " Extrinsics data for the current block (maps an extrinsic's index to its data)."
              ]
            },
            {
              "Name": "Number",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The current block number being processed. Set by `execute_block`."
              ]
            },
            {
              "Name": "ParentHash",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 12,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Hash of the previous block."
              ]
            },
            {
              "Name": "Digest",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 14,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Digest of the current block, also part of the block header."
              ]
            },
            {
              "Name": "Events",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 18,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Events deposited for the current block.",
                "",
                " NOTE: The item is unbound and should therefore never be read on chain.",
                " It could otherwise inflate the PoV size of a block.",
                "",
                " Events have a large in-memory size. Box the events to not go out-of-memory",
                " just in case someone still reads them from within the runtime."
              ]
            },
            {
              "Name": "EventCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of events in the `Events<T>` list."
              ]
            },
            {
              "Name": "EventTopics",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 12,
                  "Value": 389
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                " of events in the `<Events<T>>` list.",
                "",
                " All topic vectors have deterministic storage locations depending on the topic. This",
                " allows light-clients to leverage the changes trie storage tracking mechanism and",
                " in case of changes fetch the list of events of interest.",
                "",
                " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                " the `EventIndex` then in case if the topic has the same contents on the next block",
                " no notification will be triggered thus the event might be lost."
              ]
            },
            {
              "Name": "LastRuntimeUpgrade",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 390,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
              ]
            },
            {
              "Name": "UpgradedToU32RefCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 74,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
              ]
            },
            {
              "Name": "UpgradedToTripleRefCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 74,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                " (default) if not."
              ]
            },
            {
              "Name": "ExecutionPhase",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 388,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The execution phase of the block."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 85
        },
        "Events": {
          "TypeId": 21
        },
        "Constants": [
          {
            "Name": "BlockWeights",
            "TypeId": 391,
            "Value": "AlsfXQAHAIhSanQCAEABwqCpHQABB9AJGKRLAgDQAAEHAOa9T1cCAPAAAQAAwqCpHQABB9CrrL5oAgAgAQEHAIhSanQCAEABAQcAopQaHQIAUADCoKkdAAAAAA==",
            "Docs": [
              " Block & extrinsics weights: base values and limits."
            ]
          },
          {
            "Name": "BlockLength",
            "TypeId": 395,
            "Value": "AAA8AAAAUAAAAFAA",
            "Docs": [
              " The maximum length of a block (in bytes)."
            ]
          },
          {
            "Name": "BlockHashCount",
            "TypeId": 4,
            "Value": "YAkAAA==",
            "Docs": [
              " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
            ]
          },
          {
            "Name": "DbWeight",
            "TypeId": 397,
            "Value": "QHh9AQAAAAAA4fUFAAAAAA==",
            "Docs": [
              " The weight of runtime database operations the runtime can invoke."
            ]
          },
          {
            "Name": "Version",
            "TypeId": 398,
            "Value": "EG9wYWwQb3BhbAEAAAD3C5kAAAAAADxP3E0pc4s21QMAAAAUTzx2FvXIoQIAAADfastomQdgmwQAAAA345f8fJH15AIAAABA/jrUAfiVmgYAAADSvJiX7tCPFQMAAAD3iyeL5T9FTAIAAABYIhH2W7FLiQUAAACrPAVyKR/riwEAAADdcY1cxTJi1AEAAADqk+Pxbz1pYgIAAAC8nYmQT1uSPwEAAAA3yLsTUKmiqAQAAAAy1nrjYMrpRAEAAADmWwDkbO3QqgIAAAADAAAAAQ==",
            "Docs": [
              " Get the chain's current version."
            ]
          },
          {
            "Name": "SS58Prefix",
            "TypeId": 79,
            "Value": "KgA=",
            "Docs": [
              " The designated SS58 prefix of this chain.",
              "",
              " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
              " that the runtime should know about the prefix in order to make use of it as",
              " an identifier of the chain."
            ]
          }
        ],
        "Errors": {
          "TypeId": 402
        },
        "Index": 0
      },
      "1": {
        "Name": "StateTrieMigration",
        "Storage": {
          "Prefix": "StateTrieMigration",
          "Entries": [
            {
              "Name": "MigrationProcess",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 92,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Migration progress.",
                "",
                " This stores the snapshot of the last migrated keys. It can be set into motion and move",
                " forward by any of the means provided by this pallet."
              ]
            },
            {
              "Name": "AutoLimits",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 90,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The limits that are imposed on automatic migrations.",
                "",
                " If set to None, then no automatic migration happens."
              ]
            },
            {
              "Name": "SignedMigrationMaxLimits",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 91,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The maximum limits that the signed migration could use.",
                "",
                " If not set, no signed submission is allowed."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 89
        },
        "Events": {
          "TypeId": 30
        },
        "Constants": [
          {
            "Name": "MaxKeyLen",
            "TypeId": 4,
            "Value": "AAIAAA==",
            "Docs": [
              " Maximal number of bytes that a key can have.",
              "",
              " FRAME itself does not limit the key length.",
              " The concrete value must therefore depend on your storage usage.",
              " A [`frame_support::storage::StorageNMap`] for example can have an arbitrary number of",
              " keys which are then hashed and concatenated, resulting in arbitrarily long keys.",
              "",
              " Use the *state migration RPC* to retrieve the length of the longest key in your",
              " storage: <https://github.com/paritytech/substrate/issues/11642>",
              "",
              " The migration will halt with a `Halted` event if this value is too small.",
              " Since there is no real penalty from over-estimating, it is advised to use a large",
              " value. The default is 512 byte.",
              "",
              " Some key lengths for reference:",
              " - [`frame_support::storage::StorageValue`]: 32 byte",
              " - [`frame_support::storage::StorageMap`]: 64 byte",
              " - [`frame_support::storage::StorageDoubleMap`]: 96 byte",
              "",
              " For more info see",
              " <https://www.shawntabrizi.com/substrate/querying-substrate-storage-via-rpc/>"
            ]
          }
        ],
        "Errors": {
          "TypeId": 32
        },
        "Index": 1
      },
      "20": {
        "Name": "ParachainSystem",
        "Storage": {
          "Prefix": "ParachainSystem",
          "Entries": [
            {
              "Name": "UnincludedSegment",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 403,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Latest included block descendants the runtime accepted. In other words, these are",
                " ancestors of the currently executing block which have not been included in the observed",
                " relay-chain state.",
                "",
                " The segment length is limited by the capacity returned from the [`ConsensusHook`] configured",
                " in the pallet."
              ]
            },
            {
              "Name": "AggregatedUnincludedSegment",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 412,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Storage field that keeps track of bandwidth used by the unincluded segment along with the",
                " latest HRMP watermark. Used for limiting the acceptance of new blocks with",
                " respect to relay chain constraints."
              ]
            },
            {
              "Name": "PendingValidationCode",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 13,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " In case of a scheduled upgrade, this storage field contains the validation code to be",
                " applied.",
                "",
                " As soon as the relay chain gives us the go-ahead signal, we will overwrite the",
                " [`:code`][sp_core::storage::well_known_keys::CODE] which will result the next block process",
                " with the new validation code. This concludes the upgrade process."
              ]
            },
            {
              "Name": "NewValidationCode",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 13,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Validation code that is set by the parachain and is to be communicated to collator and",
                " consequently the relay-chain.",
                "",
                " This will be cleared in `on_initialize` of each new block if no other pallet already set",
                " the value."
              ]
            },
            {
              "Name": "ValidationData",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 97,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The [`PersistedValidationData`] set for this block.",
                " This value is expected to be set only once per block and it's never stored",
                " in the trie."
              ]
            },
            {
              "Name": "DidSetValidationCode",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 74,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Were the validation data set to notify the relay chain?"
              ]
            },
            {
              "Name": "LastRelayChainBlockNumber",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The relay chain block number associated with the last parachain block.",
                "",
                " This is updated in `on_finalize`."
              ]
            },
            {
              "Name": "UpgradeRestrictionSignal",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 413,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " An option which indicates if the relay-chain restricts signalling a validation code upgrade.",
                " In other words, if this is `Some` and [`NewValidationCode`] is `Some` then the produced",
                " candidate will be invalid.",
                "",
                " This storage item is a mirror of the corresponding value for the current parachain from the",
                " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                " set after the inherent."
              ]
            },
            {
              "Name": "UpgradeGoAhead",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 410,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Optional upgrade go-ahead signal from the relay-chain.",
                "",
                " This storage item is a mirror of the corresponding value for the current parachain from the",
                " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                " set after the inherent."
              ]
            },
            {
              "Name": "RelayStateProof",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 99,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The state proof for the last relay parent block.",
                "",
                " This field is meant to be updated each block with the validation data inherent. Therefore,",
                " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                "",
                " This data is also absent from the genesis."
              ]
            },
            {
              "Name": "RelevantMessagingState",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 415,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The snapshot of some state related to messaging relevant to the current parachain as per",
                " the relay parent.",
                "",
                " This field is meant to be updated each block with the validation data inherent. Therefore,",
                " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                "",
                " This data is also absent from the genesis."
              ]
            },
            {
              "Name": "HostConfiguration",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 420,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The parachain host configuration that was obtained from the relay parent.",
                "",
                " This field is meant to be updated each block with the validation data inherent. Therefore,",
                " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                "",
                " This data is also absent from the genesis."
              ]
            },
            {
              "Name": "LastDmqMqcHead",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 422,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " The last downward message queue chain head we have observed.",
                "",
                " This value is loaded before and saved after processing inbound downward messages carried",
                " by the system inherent."
              ]
            },
            {
              "Name": "LastHrmpMqcHeads",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 423,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The message queue chain heads we have observed per each channel incoming channel.",
                "",
                " This value is loaded before and saved after processing inbound downward messages carried",
                " by the system inherent."
              ]
            },
            {
              "Name": "ProcessedDownwardMessages",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Number of downward messages processed in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "Name": "HrmpWatermark",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " HRMP watermark that was set in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "Name": "HrmpOutboundMessages",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 426,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " HRMP messages that were sent in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "Name": "UpwardMessages",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 88,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Upward messages that were sent in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "Name": "PendingUpwardMessages",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 88,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Upward messages that are still pending and not yet send to the relay chain."
              ]
            },
            {
              "Name": "UpwardDeliveryFeeFactor",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 428,
                "Item2": null
              },
              "Default": "AABkp7O24A0AAAAAAAAAAA==",
              "Docs": [
                " The factor to multiply the base delivery fee by for UMP."
              ]
            },
            {
              "Name": "AnnouncedHrmpMessagesPerCandidate",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of HRMP messages we observed in `on_initialize` and thus used that number for",
                " announcing the weight of `on_initialize` and `on_finalize`."
              ]
            },
            {
              "Name": "ReservedXcmpWeightOverride",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 9,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The weight we reserve at the beginning of the block for processing XCMP messages. This",
                " overrides the amount set in the Config trait."
              ]
            },
            {
              "Name": "ReservedDmpWeightOverride",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 9,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The weight we reserve at the beginning of the block for processing DMP messages. This",
                " overrides the amount set in the Config trait."
              ]
            },
            {
              "Name": "AuthorizedUpgrade",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 429,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The next authorized upgrade, if there is one."
              ]
            },
            {
              "Name": "CustomValidationHeadData",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 13,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " A custom head data that should be returned as result of `validate_block`.",
                "",
                " See `Pallet::set_custom_validation_head_data` for more information."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 95
        },
        "Events": {
          "TypeId": 33
        },
        "Constants": [],
        "Errors": {
          "TypeId": 430
        },
        "Index": 20
      },
      "21": {
        "Name": "ParachainInfo",
        "Storage": {
          "Prefix": "ParachainInfo",
          "Entries": [
            {
              "Name": "ParachainId",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 104,
                "Item2": null
              },
              "Default": "ZAAAAA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 109
        },
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 21
      },
      "22": {
        "Name": "Authorship",
        "Storage": {
          "Prefix": "Authorship",
          "Entries": [
            {
              "Name": "Author",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Author of current block."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 22
      },
      "23": {
        "Name": "CollatorSelection",
        "Storage": {
          "Prefix": "CollatorSelection",
          "Entries": [
            {
              "Name": "Invulnerables",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 431,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The invulnerable, fixed collators."
              ]
            },
            {
              "Name": "LicenseDepositOf",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The (community) collation license holders."
              ]
            },
            {
              "Name": "Candidates",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 431,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The (community, limited) collation candidates."
              ]
            },
            {
              "Name": "LastAuthoredBlock",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Last block authored by collator."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 110
        },
        "Events": {
          "TypeId": 35
        },
        "Constants": [],
        "Errors": {
          "TypeId": 432
        },
        "Index": 23
      },
      "24": {
        "Name": "Session",
        "Storage": {
          "Prefix": "Session",
          "Entries": [
            {
              "Name": "Validators",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 118,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current set of validators."
              ]
            },
            {
              "Name": "CurrentIndex",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Current index of the session."
              ]
            },
            {
              "Name": "QueuedChanged",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 74,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " True if the underlying economic identities or weighting behind the validators",
                " has changed in the queued validator set."
              ]
            },
            {
              "Name": "QueuedKeys",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 433,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The queued keys for the next session. When the next session begins, these keys",
                " will be used to determine the validator's session keys."
              ]
            },
            {
              "Name": "DisabledValidators",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 329,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Indices of disabled validators.",
                "",
                " The vec is always kept sorted so that we can find whether a given validator is",
                " disabled using binary search. It gets cleared when `on_session_ending` returns",
                " a new set of identities."
              ]
            },
            {
              "Name": "NextKeys",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 112
                }
              },
              "Default": "AA==",
              "Docs": [
                " The next session keys for a validator."
              ]
            },
            {
              "Name": "KeyOwner",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 435,
                  "Value": 0
                }
              },
              "Default": "AA==",
              "Docs": [
                " The owner of a key. The key is the `KeyTypeId` + the encoded key."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 111
        },
        "Events": {
          "TypeId": 36
        },
        "Constants": [],
        "Errors": {
          "TypeId": 437
        },
        "Index": 24
      },
      "25": {
        "Name": "Aura",
        "Storage": {
          "Prefix": "Aura",
          "Entries": [
            {
              "Name": "Authorities",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 438,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current authority set."
              ]
            },
            {
              "Name": "CurrentSlot",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 440,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The current slot of this block.",
                "",
                " This will be set in `on_initialize`."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 25
      },
      "26": {
        "Name": "AuraExt",
        "Storage": {
          "Prefix": "AuraExt",
          "Entries": [
            {
              "Name": "Authorities",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 438,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Serves as cache for the authorities.",
                "",
                " The authorities in AuRa are overwritten in `on_initialize` when we switch to a new session,",
                " but we require the old authorities to verify the seal when validating a PoV. This will",
                " always be updated to the latest AuRa authorities in `on_finalize`."
              ]
            },
            {
              "Name": "SlotInfo",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 441,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Current slot paired with a number of authored blocks.",
                "",
                " Updated on each block initialization."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 26
      },
      "30": {
        "Name": "Balances",
        "Storage": {
          "Prefix": "Balances",
          "Entries": [
            {
              "Name": "TotalIssuance",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The total units issued in the system."
              ]
            },
            {
              "Name": "InactiveIssuance",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The total units of outstanding deactivated balance in the system."
              ]
            },
            {
              "Name": "Account",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 5
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgA==",
              "Docs": [
                " The Balances pallet example of storing the balance of an account.",
                "",
                " # Example",
                "",
                " ```nocompile",
                "  impl pallet_balances::Config for Runtime {",
                "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                "  }",
                " ```",
                "",
                " You can also store the balance of an account in the `System` pallet.",
                "",
                " # Example",
                "",
                " ```nocompile",
                "  impl pallet_balances::Config for Runtime {",
                "   type AccountStore = System",
                "  }",
                " ```",
                "",
                " But this comes with tradeoffs, storing account balances in the system pallet stores",
                " `frame_system` data alongside the account data contrary to storing account balances in the",
                " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                " NOTE: This is only used in the case that this pallet is used to store balances."
              ]
            },
            {
              "Name": "Locks",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 442
                }
              },
              "Default": "AA==",
              "Docs": [
                " Any liquidity locks on some account balances.",
                " NOTE: Should only be accessed when setting, changing and freeing a lock."
              ]
            },
            {
              "Name": "Reserves",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 446
                }
              },
              "Default": "AA==",
              "Docs": [
                " Named reserves on some account balances."
              ]
            },
            {
              "Name": "Holds",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 449
                }
              },
              "Default": "AA==",
              "Docs": [
                " Holds on account balances."
              ]
            },
            {
              "Name": "Freezes",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 455
                }
              },
              "Default": "AA==",
              "Docs": [
                " Freeze locks on account balances."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 115
        },
        "Events": {
          "TypeId": 37
        },
        "Constants": [
          {
            "Name": "ExistentialDeposit",
            "TypeId": 6,
            "Value": "AAAAAAAAAAAAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",
              "",
              " If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for",
              " this pallet. However, you do so at your own risk: this will open up a major DoS vector.",
              " In case you have multiple sources of provider references, you may also get unexpected",
              " behaviour if you set this to zero.",
              "",
              " Bottom line: Do yourself a favour and make it at least one!"
            ]
          },
          {
            "Name": "MaxLocks",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum number of locks that should exist on an account.",
              " Not strictly enforced, but used for weight estimation."
            ]
          },
          {
            "Name": "MaxReserves",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum number of named reserves that can exist on an account."
            ]
          },
          {
            "Name": "MaxHolds",
            "TypeId": 4,
            "Value": "CgAAAA==",
            "Docs": [
              " The maximum number of holds that can exist on an account at any time."
            ]
          },
          {
            "Name": "MaxFreezes",
            "TypeId": 4,
            "Value": "CgAAAA==",
            "Docs": [
              " The maximum number of individual freeze locks that can exist on an account at any time."
            ]
          }
        ],
        "Errors": {
          "TypeId": 458
        },
        "Index": 30
      },
      "32": {
        "Name": "Timestamp",
        "Storage": {
          "Prefix": "Timestamp",
          "Entries": [
            {
              "Name": "Now",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 11,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The current time for the current block."
              ]
            },
            {
              "Name": "DidUpdate",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 74,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Whether the timestamp has been updated in this block.",
                "",
                " This value is updated to `true` upon successful submission of a timestamp by a node.",
                " It is then checked at the end of each block execution in the `on_finalize` hook."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 119
        },
        "Events": null,
        "Constants": [
          {
            "Name": "MinimumPeriod",
            "TypeId": 11,
            "Value": "cBcAAAAAAAA=",
            "Docs": [
              " The minimum period between blocks.",
              "",
              " Be aware that this is different to the *expected* period that the block production",
              " apparatus provides. Your chosen consensus system will generally work with this to",
              " determine a sensible block time. For example, in the Aura pallet it will be double this",
              " period on default settings."
            ]
          }
        ],
        "Errors": null,
        "Index": 32
      },
      "33": {
        "Name": "TransactionPayment",
        "Storage": {
          "Prefix": "TransactionPayment",
          "Entries": [
            {
              "Name": "NextFeeMultiplier",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 428,
                "Item2": null
              },
              "Default": "AABkp7O24A0AAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "StorageVersion",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 459,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": null,
        "Events": {
          "TypeId": 39
        },
        "Constants": [
          {
            "Name": "OperationalFeeMultiplier",
            "TypeId": 2,
            "Value": "BQ==",
            "Docs": [
              " A fee mulitplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
              " `priority`",
              "",
              " This value is multipled by the `final_fee` to obtain a \"virtual tip\" that is later",
              " added to a tip component in regular `priority` calculations.",
              " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
              " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
              "",
              " ```rust,ignore",
              " // For `Normal`",
              " let priority = priority_calc(tip);",
              "",
              " // For `Operational`",
              " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
              " let priority = priority_calc(tip + virtual_tip);",
              " ```",
              "",
              " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
              " sent with the transaction. So, not only does the transaction get a priority bump based",
              " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
              " transactions."
            ]
          }
        ],
        "Errors": null,
        "Index": 33
      },
      "34": {
        "Name": "Treasury",
        "Storage": {
          "Prefix": "Treasury",
          "Entries": [
            {
              "Name": "ProposalCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Number of proposals that have been made."
              ]
            },
            {
              "Name": "Proposals",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 460
                }
              },
              "Default": "AA==",
              "Docs": [
                " Proposals that have been made."
              ]
            },
            {
              "Name": "Deactivated",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The amount which has been reported as inactive to Currency."
              ]
            },
            {
              "Name": "Approvals",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 461,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Proposal indices that have been approved but not yet awarded."
              ]
            },
            {
              "Name": "SpendCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The count of spends that have been made."
              ]
            },
            {
              "Name": "Spends",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 462
                }
              },
              "Default": "AA==",
              "Docs": [
                " Spends that have been approved and being processed."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 120
        },
        "Events": {
          "TypeId": 40
        },
        "Constants": [
          {
            "Name": "ProposalBond",
            "TypeId": 464,
            "Value": "UMMAAA==",
            "Docs": [
              " Fraction of a proposal's value that should be bonded in order to place the proposal.",
              " An accepted proposal gets these back. A rejected proposal does not."
            ]
          },
          {
            "Name": "ProposalBondMinimum",
            "TypeId": 6,
            "Value": "AABkp7O24A0AAAAAAAAAAA==",
            "Docs": [
              " Minimum amount of funds that should be placed in a deposit for making a proposal."
            ]
          },
          {
            "Name": "ProposalBondMaximum",
            "TypeId": 326,
            "Value": "AQAAoN7Frck1NgAAAAAAAAA=",
            "Docs": [
              " Maximum amount of funds that should be placed in a deposit for making a proposal."
            ]
          },
          {
            "Name": "SpendPeriod",
            "TypeId": 4,
            "Value": "GQAAAA==",
            "Docs": [
              " Period between successive spends."
            ]
          },
          {
            "Name": "Burn",
            "TypeId": 464,
            "Value": "AAAAAA==",
            "Docs": [
              " Percentage of spare funds (if any) that are burnt per spend period."
            ]
          },
          {
            "Name": "PalletId",
            "TypeId": 465,
            "Value": "cHkvdHJzcnk=",
            "Docs": [
              " The treasury's pallet id, used for deriving its sovereign account ID."
            ]
          },
          {
            "Name": "MaxApprovals",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of approvals that can wait in the spending queue.",
              "",
              " NOTE: This parameter is also used within the Bounties Pallet extension if enabled."
            ]
          },
          {
            "Name": "PayoutPeriod",
            "TypeId": 4,
            "Value": "CgAAAA==",
            "Docs": [
              " The period during which an approved treasury spend has to be claimed."
            ]
          }
        ],
        "Errors": {
          "TypeId": 466
        },
        "Index": 34
      },
      "35": {
        "Name": "Sudo",
        "Storage": {
          "Prefix": "Sudo",
          "Entries": [
            {
              "Name": "Key",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The `AccountId` of the sudo key."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 122
        },
        "Events": {
          "TypeId": 42
        },
        "Constants": [],
        "Errors": {
          "TypeId": 467
        },
        "Index": 35
      },
      "37": {
        "Name": "Vesting",
        "Storage": {
          "Prefix": "Vesting",
          "Entries": [
            {
              "Name": "VestingSchedules",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 468
                }
              },
              "Default": "AA==",
              "Docs": [
                " Vesting schedules of an account.",
                "",
                " VestingSchedules: map AccountId => Vec<VestingSchedule>"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 123
        },
        "Events": {
          "TypeId": 45
        },
        "Constants": [
          {
            "Name": "MinVestedTransfer",
            "TypeId": 6,
            "Value": "AADoiQQjx4oAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount transferred to call `vested_transfer`."
            ]
          }
        ],
        "Errors": {
          "TypeId": 469
        },
        "Index": 37
      },
      "38": {
        "Name": "XTokens",
        "Storage": null,
        "Calls": {
          "TypeId": 125
        },
        "Events": {
          "TypeId": 48
        },
        "Constants": [
          {
            "Name": "SelfLocation",
            "TypeId": 53,
            "Value": "AQEA1R8=",
            "Docs": [
              " Self chain location."
            ]
          },
          {
            "Name": "BaseXcmWeight",
            "TypeId": 9,
            "Value": "AoTXF6EP",
            "Docs": [
              " Base XCM weight.",
              "",
              " The actually weight for an XCM message is `T::BaseXcmWeight +",
              " T::Weigher::weight(&msg)`."
            ]
          }
        ],
        "Errors": {
          "TypeId": 470
        },
        "Index": 38
      },
      "40": {
        "Name": "Identity",
        "Storage": {
          "Prefix": "Identity",
          "Entries": [
            {
              "Name": "IdentityOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 188
                }
              },
              "Default": "AA==",
              "Docs": [
                " Information that is pertinent to identify the entity behind an account.",
                "",
                " TWOX-NOTE: OK ��� `AccountId` is a secure hash."
              ]
            },
            {
              "Name": "SuperOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 182
                }
              },
              "Default": "AA==",
              "Docs": [
                " The super-identity of an alternative \"sub\" identity together with its name, within that",
                " context. If the account is not some other account's sub-identity, then just `None`."
              ]
            },
            {
              "Name": "SubsOf",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 471
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Alternative \"sub\" identities of this account.",
                "",
                " The first item is the deposit, the second is a vector of the accounts.",
                "",
                " TWOX-NOTE: OK ��� `AccountId` is a secure hash."
              ]
            },
            {
              "Name": "Registrars",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 473,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The set of registrars. Not expected to get very big as can only be added through a",
                " special origin (likely a council motion).",
                "",
                " The index into this can be cast to `RegistrarIndex` to get a valid value."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 146
        },
        "Events": {
          "TypeId": 66
        },
        "Constants": [
          {
            "Name": "BasicDeposit",
            "TypeId": 6,
            "Value": "AADoiQQjx4oAAAAAAAAAAA==",
            "Docs": [
              " The amount held on deposit for a registered identity"
            ]
          },
          {
            "Name": "FieldDeposit",
            "TypeId": 6,
            "Value": "AIBiF17RWAAAAAAAAAAAAA==",
            "Docs": [
              " The amount held on deposit per additional field for a registered identity."
            ]
          },
          {
            "Name": "SubAccountDeposit",
            "TypeId": 6,
            "Value": "AADITmdtwRsAAAAAAAAAAA==",
            "Docs": [
              " The amount held on deposit for a registered subaccount. This should account for the fact",
              " that one storage item's value will increase by the size of an account ID, and there will",
              " be another trie item whose value is the size of an account ID plus 32 bytes."
            ]
          },
          {
            "Name": "MaxSubAccounts",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of sub-accounts allowed per identified account."
            ]
          },
          {
            "Name": "MaxAdditionalFields",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " Maximum number of additional fields that may be stored in an ID. Needed to bound the I/O",
              " required to access an identity, but can be pretty high."
            ]
          },
          {
            "Name": "MaxRegistrars",
            "TypeId": 4,
            "Value": "FAAAAA==",
            "Docs": [
              " Maxmimum number of registrars allowed in the system. Needed to bound the complexity",
              " of, e.g., updating judgements."
            ]
          }
        ],
        "Errors": {
          "TypeId": 477
        },
        "Index": 40
      },
      "41": {
        "Name": "Preimage",
        "Storage": {
          "Prefix": "Preimage",
          "Entries": [
            {
              "Name": "StatusFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 478
                }
              },
              "Default": "AA==",
              "Docs": [
                " The request status of a given hash."
              ]
            },
            {
              "Name": "RequestStatusFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 481
                }
              },
              "Default": "AA==",
              "Docs": [
                " The request status of a given hash."
              ]
            },
            {
              "Name": "PreimageFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 485,
                  "Value": 486
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 196
        },
        "Events": {
          "TypeId": 67
        },
        "Constants": [],
        "Errors": {
          "TypeId": 487
        },
        "Index": 41
      },
      "42": {
        "Name": "Democracy",
        "Storage": {
          "Prefix": "Democracy",
          "Entries": [
            {
              "Name": "PublicPropCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of (public) proposals that have been made so far."
              ]
            },
            {
              "Name": "PublicProps",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 488,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The public proposals. Unsorted. The second item is the proposal."
              ]
            },
            {
              "Name": "DepositOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 491
                }
              },
              "Default": "AA==",
              "Docs": [
                " Those who have locked a deposit.",
                "",
                " TWOX-NOTE: Safe, as increasing integer keys are safe."
              ]
            },
            {
              "Name": "ReferendumCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The next free referendum index, aka the number of referenda started so far."
              ]
            },
            {
              "Name": "LowestUnbaked",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The lowest referendum index representing an unbaked referendum. Equal to",
                " `ReferendumCount` if there isn't a unbaked referendum."
              ]
            },
            {
              "Name": "ReferendumInfoOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 493
                }
              },
              "Default": "AA==",
              "Docs": [
                " Information concerning any given referendum.",
                "",
                " TWOX-NOTE: SAFE as indexes are not under an attacker���s control."
              ]
            },
            {
              "Name": "VotingOf",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 496
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
              "Docs": [
                " All votes for a particular voter. We store the balance for the number of votes that we",
                " have recorded. The second item is the total amount of delegations, that will be added.",
                "",
                " TWOX-NOTE: SAFE as `AccountId`s are crypto hashes anyway."
              ]
            },
            {
              "Name": "LastTabledWasExternal",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 74,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " True if the last referendum tabled was submitted externally. False if it was a public",
                " proposal."
              ]
            },
            {
              "Name": "NextExternal",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 502,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The referendum to be tabled whenever it would be valid to table an external proposal.",
                " This happens when a referendum needs to be tabled and one of two conditions are met:",
                " - `LastTabledWasExternal` is `false`; or",
                " - `PublicProps` is empty."
              ]
            },
            {
              "Name": "Blacklist",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 503
                }
              },
              "Default": "AA==",
              "Docs": [
                " A record of who vetoed what. Maps proposal hash to a possible existent block number",
                " (until when it may not be resubmitted) and who vetoed it."
              ]
            },
            {
              "Name": "Cancellations",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 74
                }
              },
              "Default": "AA==",
              "Docs": [
                " Record of all proposals that have been subject to emergency cancellation."
              ]
            },
            {
              "Name": "MetadataOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 72,
                  "Value": 12
                }
              },
              "Default": "AA==",
              "Docs": [
                " General information concerning any proposal or referendum.",
                " The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON",
                " dump or IPFS hash of a JSON file.",
                "",
                " Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)",
                " large preimages."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 198
        },
        "Events": {
          "TypeId": 68
        },
        "Constants": [
          {
            "Name": "EnactmentPeriod",
            "TypeId": 4,
            "Value": "GQAAAA==",
            "Docs": [
              " The period between a proposal being approved and enacted.",
              "",
              " It should generally be a little more than the unstake period to ensure that",
              " voting stakers have an opportunity to remove themselves from the system in the case",
              " where they are on the losing side of a vote."
            ]
          },
          {
            "Name": "LaunchPeriod",
            "TypeId": 4,
            "Value": "LAEAAA==",
            "Docs": [
              " How often (in blocks) new public referenda are launched."
            ]
          },
          {
            "Name": "VotingPeriod",
            "TypeId": 4,
            "Value": "LAEAAA==",
            "Docs": [
              " How often (in blocks) to check for new votes."
            ]
          },
          {
            "Name": "VoteLockingPeriod",
            "TypeId": 4,
            "Value": "GQAAAA==",
            "Docs": [
              " The minimum period of vote locking.",
              "",
              " It should be no shorter than enactment period to ensure that in the case of an approval,",
              " those successful voters are locked into the consequences that their votes entail."
            ]
          },
          {
            "Name": "MinimumDeposit",
            "TypeId": 6,
            "Value": "AAAAAAAAAAAAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount to be used as a deposit for a public referendum proposal."
            ]
          },
          {
            "Name": "InstantAllowed",
            "TypeId": 74,
            "Value": "AA==",
            "Docs": [
              " Indicator for whether an emergency origin is even allowed to happen. Some chains may",
              " want to set this permanently to `false`, others may want to condition it on things such",
              " as an upgrade having happened recently."
            ]
          },
          {
            "Name": "FastTrackVotingPeriod",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": [
              " Minimum voting period allowed for a fast-track referendum."
            ]
          },
          {
            "Name": "CooloffPeriod",
            "TypeId": 4,
            "Value": "LAEAAA==",
            "Docs": [
              " Period in blocks where an external proposal may not be re-submitted after being vetoed."
            ]
          },
          {
            "Name": "MaxVotes",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of votes for an account.",
              "",
              " Also used to compute weight, an overly big value can",
              " lead to extrinsic with very big weight: see `delegate` for instance."
            ]
          },
          {
            "Name": "MaxProposals",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of public proposals that can exist at any time."
            ]
          },
          {
            "Name": "MaxDeposits",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of deposits a public proposal may have at any time."
            ]
          },
          {
            "Name": "MaxBlacklisted",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of items which can be blacklisted."
            ]
          }
        ],
        "Errors": {
          "TypeId": 504
        },
        "Index": 42
      },
      "43": {
        "Name": "Council",
        "Storage": {
          "Prefix": "Council",
          "Entries": [
            {
              "Name": "Proposals",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 505,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The hashes of the active proposals."
              ]
            },
            {
              "Name": "ProposalOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 84
                }
              },
              "Default": "AA==",
              "Docs": [
                " Actual proposal for a given hash, if it's current."
              ]
            },
            {
              "Name": "Voting",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 506
                }
              },
              "Default": "AA==",
              "Docs": [
                " Votes on a given proposal, if it is ongoing."
              ]
            },
            {
              "Name": "ProposalCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Proposals so far."
              ]
            },
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 118,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current members of the collective. This is stored sorted (just by value)."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The prime member that helps determine the default vote behavior in case of absentations."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 201
        },
        "Events": {
          "TypeId": 73
        },
        "Constants": [
          {
            "Name": "MaxProposalWeight",
            "TypeId": 9,
            "Value": "BwCg2yFdAgAAAQ==",
            "Docs": [
              " The maximum weight of a dispatch call that can be proposed and executed."
            ]
          }
        ],
        "Errors": {
          "TypeId": 507
        },
        "Index": 43
      },
      "44": {
        "Name": "TechnicalCommittee",
        "Storage": {
          "Prefix": "TechnicalCommittee",
          "Entries": [
            {
              "Name": "Proposals",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 508,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The hashes of the active proposals."
              ]
            },
            {
              "Name": "ProposalOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 84
                }
              },
              "Default": "AA==",
              "Docs": [
                " Actual proposal for a given hash, if it's current."
              ]
            },
            {
              "Name": "Voting",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 506
                }
              },
              "Default": "AA==",
              "Docs": [
                " Votes on a given proposal, if it is ongoing."
              ]
            },
            {
              "Name": "ProposalCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Proposals so far."
              ]
            },
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 118,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current members of the collective. This is stored sorted (just by value)."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The prime member that helps determine the default vote behavior in case of absentations."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 202
        },
        "Events": {
          "TypeId": 75
        },
        "Constants": [
          {
            "Name": "MaxProposalWeight",
            "TypeId": 9,
            "Value": "BwCg2yFdAgAAAQ==",
            "Docs": [
              " The maximum weight of a dispatch call that can be proposed and executed."
            ]
          }
        ],
        "Errors": {
          "TypeId": 509
        },
        "Index": 44
      },
      "45": {
        "Name": "CouncilMembership",
        "Storage": {
          "Prefix": "CouncilMembership",
          "Entries": [
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 510,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current membership, stored as an ordered Vec."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current prime member, if one exists."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 203
        },
        "Events": {
          "TypeId": 76
        },
        "Constants": [],
        "Errors": {
          "TypeId": 511
        },
        "Index": 45
      },
      "46": {
        "Name": "TechnicalCommitteeMembership",
        "Storage": {
          "Prefix": "TechnicalCommitteeMembership",
          "Entries": [
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 512,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current membership, stored as an ordered Vec."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current prime member, if one exists."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 204
        },
        "Events": {
          "TypeId": 77
        },
        "Constants": [],
        "Errors": {
          "TypeId": 513
        },
        "Index": 46
      },
      "47": {
        "Name": "FellowshipCollective",
        "Storage": {
          "Prefix": "FellowshipCollective",
          "Entries": [
            {
              "Name": "MemberCount",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 79,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of members in the collective who have at least the rank according to the index",
                " of the vec."
              ]
            },
            {
              "Name": "Members",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 514
                }
              },
              "Default": "AA==",
              "Docs": [
                " The current members of the collective."
              ]
            },
            {
              "Name": "IdToIndex",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 515,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " The index of each ranks's member into the group of members who have at least that rank."
              ]
            },
            {
              "Name": "IndexToId",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 516,
                  "Value": 0
                }
              },
              "Default": "AA==",
              "Docs": [
                " The members in the collective by index. All indices in the range `0..MemberCount` will",
                " return `Some`, however a member's index is not guaranteed to remain unchanged over time."
              ]
            },
            {
              "Name": "Voting",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 517,
                  "Value": 80
                }
              },
              "Default": "AA==",
              "Docs": [
                " Votes on a given proposal, if it is ongoing."
              ]
            },
            {
              "Name": "VotingCleanup",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 518
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 205
        },
        "Events": {
          "TypeId": 78
        },
        "Constants": [],
        "Errors": {
          "TypeId": 519
        },
        "Index": 47
      },
      "48": {
        "Name": "FellowshipReferenda",
        "Storage": {
          "Prefix": "FellowshipReferenda",
          "Entries": [
            {
              "Name": "ReferendumCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The next free referendum index, aka the number of referenda started so far."
              ]
            },
            {
              "Name": "ReferendumInfoFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 520
                }
              },
              "Default": "AA==",
              "Docs": [
                " Information concerning any given referendum."
              ]
            },
            {
              "Name": "TrackQueue",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 79,
                  "Value": 528
                }
              },
              "Default": "AA==",
              "Docs": [
                " The sorted list of referenda ready to be decided but not yet being decided, ordered by",
                " conviction-weighted approvals.",
                "",
                " This should be empty if `DecidingCount` is less than `TrackInfo::max_deciding`."
              ]
            },
            {
              "Name": "DecidingCount",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 79,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of referenda being decided currently."
              ]
            },
            {
              "Name": "MetadataOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 12
                }
              },
              "Default": "AA==",
              "Docs": [
                " The metadata is a general information concerning the referendum.",
                " The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON",
                " dump or IPFS hash of a JSON file.",
                "",
                " Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)",
                " large preimages."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 206
        },
        "Events": {
          "TypeId": 82
        },
        "Constants": [
          {
            "Name": "SubmissionDeposit",
            "TypeId": 6,
            "Value": "6AMAAAAAAAAAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount to be used as a deposit for a public referendum proposal."
            ]
          },
          {
            "Name": "MaxQueued",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " Maximum size of the referendum queue for a single track."
            ]
          },
          {
            "Name": "UndecidingTimeout",
            "TypeId": 4,
            "Value": "LAEAAA==",
            "Docs": [
              " The number of blocks after submission that a referendum must begin being decided by.",
              " Once this passes, then anyone may cancel the referendum."
            ]
          },
          {
            "Name": "AlarmInterval",
            "TypeId": 4,
            "Value": "AQAAAA==",
            "Docs": [
              " Quantization level for the referendum wakeup scheduler. A higher number will result in",
              " fewer storage reads/writes needed for smaller voters, but also result in delays to the",
              " automatic referendum status changes. Explicit servicing instructions are unaffected."
            ]
          },
          {
            "Name": "Tracks",
            "TypeId": 529,
            "Value": "BAoATGRlbW9jcmFjeV9wcm9wb3NhbHMKAAAAAADoiQQjx4oAAAAAAAAAABkAAAAsAQAAMgAAAAUAAAAAAMqaOwBlzR0Aypo7AADKmjsAAAAAAGXNHQ==",
            "Docs": [
              " Information concerning the different referendum tracks."
            ]
          }
        ],
        "Errors": {
          "TypeId": 535
        },
        "Index": 48
      },
      "49": {
        "Name": "Scheduler",
        "Storage": {
          "Prefix": "Scheduler",
          "Entries": [
            {
              "Name": "IncompleteSince",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "Agenda",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 536
                }
              },
              "Default": "AA==",
              "Docs": [
                " Items to be executed, indexed by the block number that they should be executed on."
              ]
            },
            {
              "Name": "Lookup",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 1,
                  "Value": 220
                }
              },
              "Default": "AA==",
              "Docs": [
                " Lookup from a name to the block number and index of the task.",
                "",
                " For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4",
                " identities."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 218
        },
        "Events": {
          "TypeId": 362
        },
        "Constants": [
          {
            "Name": "MaximumWeight",
            "TypeId": 9,
            "Value": "BwC4ZNlFAgDAAA==",
            "Docs": [
              " The maximum weight that may be scheduled per block for any dispatchables."
            ]
          },
          {
            "Name": "MaxScheduledPerBlock",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum number of scheduled calls in the queue for a single block.",
              "",
              " NOTE:",
              " + Dependent pallets' benchmarks might require a higher limit for the setting. Set a",
              " higher limit under `runtime-benchmarks` feature."
            ]
          }
        ],
        "Errors": {
          "TypeId": 540
        },
        "Index": 49
      },
      "99": {
        "Name": "Origins",
        "Storage": null,
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 99
      },
      "50": {
        "Name": "XcmpQueue",
        "Storage": {
          "Prefix": "XcmpQueue",
          "Entries": [
            {
              "Name": "InboundXcmpStatus",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 541,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Status of the inbound XCMP channels."
              ]
            },
            {
              "Name": "InboundXcmpMessages",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 547,
                  "Value": 13
                }
              },
              "Default": "AA==",
              "Docs": [
                " Inbound aggregate XCMP messages. It can only be one per ParaId/block."
              ]
            },
            {
              "Name": "OutboundXcmpStatus",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 548,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The non-empty XCMP channels in order of becoming non-empty, and the index of the first",
                " and last outbound message. If the two indices are equal, then it indicates an empty",
                " queue and there must be a non-`Ok` `OutboundStatus`. We assume queues grow no greater",
                " than 65535 items. Queue indices for normal messages begin at one; zero is reserved in",
                " case of the need to send a high-priority signal message this block.",
                " The bool is true if there is a signal message waiting to be sent."
              ]
            },
            {
              "Name": "OutboundXcmpMessages",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 551,
                  "Value": 13
                }
              },
              "Default": "AA==",
              "Docs": [
                " The messages outbound in a given XCMP channel."
              ]
            },
            {
              "Name": "SignalMessages",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 104,
                  "Value": 13
                }
              },
              "Default": "AA==",
              "Docs": [
                " Any signal messages waiting to be sent."
              ]
            },
            {
              "Name": "QueueConfig",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 552,
                "Item2": null
              },
              "Default": "AgAAAAUAAAABAAAAghoGAAAIAAcAyBeoBAIABAA=",
              "Docs": [
                " The configuration which controls the dynamics of the outbound queue."
              ]
            },
            {
              "Name": "Overweight",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 11,
                  "Value": 553
                }
              },
              "Default": "AA==",
              "Docs": [
                " The messages that exceeded max individual message weight budget.",
                "",
                " These message stay in this storage map until they are manually dispatched via",
                " `service_overweight`."
              ]
            },
            {
              "Name": "CounterForOverweight",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                "Counter for the related counted storage map"
              ]
            },
            {
              "Name": "OverweightCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 11,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The number of overweight messages ever recorded in `Overweight`. Also doubles as the next",
                " available free overweight index."
              ]
            },
            {
              "Name": "QueueSuspended",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 74,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Whether or not the XCMP queue is suspended from executing incoming XCMs or not."
              ]
            },
            {
              "Name": "DeliveryFeeFactor",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 104,
                  "Value": 428
                }
              },
              "Default": "AABkp7O24A0AAAAAAAAAAA==",
              "Docs": [
                " The factor to multiply the base delivery fee by."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 221
        },
        "Events": {
          "TypeId": 363
        },
        "Constants": [],
        "Errors": {
          "TypeId": 554
        },
        "Index": 50
      },
      "51": {
        "Name": "PolkadotXcm",
        "Storage": {
          "Prefix": "PolkadotXcm",
          "Entries": [
            {
              "Name": "QueryCounter",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 11,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The latest available query index."
              ]
            },
            {
              "Name": "Queries",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 11,
                  "Value": 555
                }
              },
              "Default": "AA==",
              "Docs": [
                " The ongoing queries."
              ]
            },
            {
              "Name": "AssetTraps",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The existing asset traps.",
                "",
                " Key is the blake2 256 hash of (origin, versioned `MultiAssets`) pair. Value is the number of",
                " times this pair has been trapped (usually just 1 if it exists at all)."
              ]
            },
            {
              "Name": "SafeXcmVersion",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Default version to encode XCM when latest version of destination is unknown. If `None`,",
                " then the destinations whose XCM version is unknown are considered unreachable."
              ]
            },
            {
              "Name": "SupportedVersion",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 560,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " The Latest versions that we know various locations support."
              ]
            },
            {
              "Name": "VersionNotifiers",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 560,
                  "Value": 11
                }
              },
              "Default": "AA==",
              "Docs": [
                " All locations that we have requested version notifications from."
              ]
            },
            {
              "Name": "VersionNotifyTargets",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 560,
                  "Value": 561
                }
              },
              "Default": "AA==",
              "Docs": [
                " The target locations that are subscribed to our version changes, as well as the most recent",
                " of our versions we informed them of."
              ]
            },
            {
              "Name": "VersionDiscoveryQueue",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 562,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Destinations whose latest XCM version we would like to know. Duplicates not allowed, and",
                " the `u32` counter is the number of times that a send to the destination has been attempted,",
                " which is used as a prioritization."
              ]
            },
            {
              "Name": "CurrentMigration",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 565,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current migration's stage, if any."
              ]
            },
            {
              "Name": "RemoteLockedFungibles",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 567,
                  "Value": 568
                }
              },
              "Default": "AA==",
              "Docs": [
                " Fungible assets which we know are locked on a remote chain."
              ]
            },
            {
              "Name": "LockedFungibles",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 572
                }
              },
              "Default": "AA==",
              "Docs": [
                " Fungible assets which we know are locked on this chain."
              ]
            },
            {
              "Name": "XcmExecutionSuspended",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 74,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Global suspension state of the XCM executor."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 222
        },
        "Events": {
          "TypeId": 364
        },
        "Constants": [],
        "Errors": {
          "TypeId": 575
        },
        "Index": 51
      },
      "52": {
        "Name": "CumulusXcm",
        "Storage": null,
        "Calls": {
          "TypeId": 263
        },
        "Events": {
          "TypeId": 366
        },
        "Constants": [],
        "Errors": {
          "TypeId": 576
        },
        "Index": 52
      },
      "53": {
        "Name": "DmpQueue",
        "Storage": {
          "Prefix": "DmpQueue",
          "Entries": [
            {
              "Name": "Configuration",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 577,
                "Item2": null
              },
              "Default": "BwDkC1QCAgAEAA==",
              "Docs": [
                " The configuration."
              ]
            },
            {
              "Name": "PageIndex",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 578,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The page index."
              ]
            },
            {
              "Name": "Pages",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 579
                }
              },
              "Default": "AA==",
              "Docs": [
                " The queue pages."
              ]
            },
            {
              "Name": "Overweight",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 11,
                  "Value": 580
                }
              },
              "Default": "AA==",
              "Docs": [
                " The overweight messages."
              ]
            },
            {
              "Name": "CounterForOverweight",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                "Counter for the related counted storage map"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 264
        },
        "Events": {
          "TypeId": 367
        },
        "Constants": [],
        "Errors": {
          "TypeId": 581
        },
        "Index": 53
      },
      "60": {
        "Name": "Inflation",
        "Storage": {
          "Prefix": "Inflation",
          "Entries": [
            {
              "Name": "StartingYearTotalIssuance",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " starting year total issuance"
              ]
            },
            {
              "Name": "BlockInflation",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Current inflation for `InflationBlockInterval` number of blocks"
              ]
            },
            {
              "Name": "NextInflationBlock",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Next target (relay) block when inflation will be applied"
              ]
            },
            {
              "Name": "NextRecalculationBlock",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Next target (relay) block when inflation is recalculated"
              ]
            },
            {
              "Name": "StartBlock",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Relay block when inflation has started"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 265
        },
        "Events": null,
        "Constants": [
          {
            "Name": "InflationBlockInterval",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " Number of blocks that pass between treasury balance updates due to inflation"
            ]
          }
        ],
        "Errors": null,
        "Index": 60
      },
      "61": {
        "Name": "Unique",
        "Storage": {
          "Prefix": "Unique",
          "Entries": [
            {
              "Name": "ChainVersion",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 11,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " Used for migrations"
              ]
            },
            {
              "Name": "CreateItemBasket",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 582,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " (Collection id (controlled?2), who created (real))",
                " TODO: Off chain worker should remove from this map when collection gets removed"
              ]
            },
            {
              "Name": "NftTransferBasket",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 583,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " Collection id (controlled?2), token id (controlled?2)"
              ]
            },
            {
              "Name": "FungibleTransferBasket",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 582,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " Collection id (controlled?2), owning user (real)"
              ]
            },
            {
              "Name": "ReFungibleTransferBasket",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 584,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " Collection id (controlled?2), token id (controlled?2)"
              ]
            },
            {
              "Name": "TokenPropertyBasket",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 583,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " Last sponsoring of token property setting // todo:doc rephrase this and the following"
              ]
            },
            {
              "Name": "NftApproveBasket",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 583,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " Last sponsoring of NFT approval in a collection"
              ]
            },
            {
              "Name": "FungibleApproveBasket",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 582,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " Last sponsoring of fungible tokens approval in a collection"
              ]
            },
            {
              "Name": "RefungibleApproveBasket",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 584,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " Last sponsoring of RFT approval in a collection"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 266
        },
        "Events": null,
        "Constants": [
          {
            "Name": "nesting_budget",
            "TypeId": 4,
            "Value": "BQAAAA==",
            "Docs": [
              " A maximum number of levels of depth in the token nesting tree."
            ]
          },
          {
            "Name": "max_collection_name_length",
            "TypeId": 4,
            "Value": "QAAAAA==",
            "Docs": [
              " Maximal length of a collection name."
            ]
          },
          {
            "Name": "max_collection_description_length",
            "TypeId": 4,
            "Value": "AAEAAA==",
            "Docs": [
              " Maximal length of a collection description."
            ]
          },
          {
            "Name": "max_token_prefix_length",
            "TypeId": 4,
            "Value": "EAAAAA==",
            "Docs": [
              " Maximal length of a token prefix."
            ]
          },
          {
            "Name": "collection_admins_limit",
            "TypeId": 4,
            "Value": "BQAAAA==",
            "Docs": [
              " Maximum admins per collection."
            ]
          },
          {
            "Name": "max_property_key_length",
            "TypeId": 4,
            "Value": "AAEAAA==",
            "Docs": [
              " Maximal length of a property key."
            ]
          },
          {
            "Name": "max_property_value_length",
            "TypeId": 4,
            "Value": "AIAAAA==",
            "Docs": [
              " Maximal length of a property value."
            ]
          },
          {
            "Name": "max_properties_per_item",
            "TypeId": 4,
            "Value": "QAAAAA==",
            "Docs": [
              " A maximum number of token properties."
            ]
          },
          {
            "Name": "max_collection_properties_size",
            "TypeId": 4,
            "Value": "AKAAAA==",
            "Docs": [
              " Maximum size for all collection properties."
            ]
          },
          {
            "Name": "max_token_properties_size",
            "TypeId": 4,
            "Value": "AIAAAA==",
            "Docs": [
              " Maximum size of all token properties."
            ]
          },
          {
            "Name": "nft_default_collection_limits",
            "TypeId": 277,
            "Value": "AQDh9QUBAAgAAAEAAf////8BBQAAAAEFAAAAAQABAQEB",
            "Docs": [
              " Default NFT collection limit."
            ]
          },
          {
            "Name": "rft_default_collection_limits",
            "TypeId": 277,
            "Value": "AQDh9QUBAAgAAAEAAf////8BBQAAAAEFAAAAAQABAQEB",
            "Docs": [
              " Default RFT collection limit."
            ]
          },
          {
            "Name": "ft_default_collection_limits",
            "TypeId": 277,
            "Value": "AQDh9QUBAAgAAAEAAf////8BBQAAAAEFAAAAAQABAQEB",
            "Docs": [
              " Default FT collection limit."
            ]
          }
        ],
        "Errors": {
          "TypeId": 585
        },
        "Index": 61
      },
      "63": {
        "Name": "Configuration",
        "Storage": {
          "Prefix": "Configuration",
          "Entries": [
            {
              "Name": "WeightToFeeCoefficientOverride",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 11,
                "Item2": null
              },
              "Default": "AZjeRDc7CAE=",
              "Docs": []
            },
            {
              "Name": "MinGasPriceOverride",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 11,
                "Item2": null
              },
              "Default": "K7wpOLQBAAA=",
              "Docs": []
            },
            {
              "Name": "AppPromomotionConfigurationOverride",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 322,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": []
            },
            {
              "Name": "CollatorSelectionDesiredCollatorsOverride",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "CgAAAA==",
              "Docs": []
            },
            {
              "Name": "CollatorSelectionLicenseBondOverride",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAQOrtdEbQnCyfDAAAAA==",
              "Docs": []
            },
            {
              "Name": "CollatorSelectionKickThresholdOverride",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "LAEAAA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 320
        },
        "Events": {
          "TypeId": 368
        },
        "Constants": [
          {
            "Name": "DefaultWeightToFeeCoefficient",
            "TypeId": 11,
            "Value": "AZjeRDc7CAE=",
            "Docs": []
          },
          {
            "Name": "DefaultMinGasPrice",
            "TypeId": 11,
            "Value": "K7wpOLQBAAA=",
            "Docs": []
          },
          {
            "Name": "MaxXcmAllowedLocations",
            "TypeId": 4,
            "Value": "EAAAAA==",
            "Docs": []
          },
          {
            "Name": "AppPromotionDailyRate",
            "TypeId": 324,
            "Value": "iOoGAA==",
            "Docs": []
          },
          {
            "Name": "DayRelayBlocks",
            "TypeId": 4,
            "Value": "QDgAAA==",
            "Docs": []
          },
          {
            "Name": "DefaultCollatorSelectionMaxCollators",
            "TypeId": 4,
            "Value": "CgAAAA==",
            "Docs": []
          },
          {
            "Name": "DefaultCollatorSelectionLicenseBond",
            "TypeId": 6,
            "Value": "AAAAQOrtdEbQnCyfDAAAAA==",
            "Docs": []
          },
          {
            "Name": "DefaultCollatorSelectionKickThreshold",
            "TypeId": 4,
            "Value": "LAEAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 586
        },
        "Index": 63
      },
      "64": {
        "Name": "Charging",
        "Storage": null,
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 64
      },
      "66": {
        "Name": "Common",
        "Storage": {
          "Prefix": "Common",
          "Entries": [
            {
              "Name": "CreatedCollectionCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 126,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Storage of the count of created collections. Essentially contains the last collection ID."
              ]
            },
            {
              "Name": "DestroyedCollectionCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 126,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Storage of the count of deleted collections."
              ]
            },
            {
              "Name": "CollectionById",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 126,
                  "Value": 587
                }
              },
              "Default": "AA==",
              "Docs": [
                " Storage of collection info."
              ]
            },
            {
              "Name": "CollectionProperties",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 126,
                  "Value": 589
                }
              },
              "Default": "AAAAAAAAAAAA",
              "Docs": [
                " Storage of collection properties."
              ]
            },
            {
              "Name": "CollectionPropertyPermissions",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 126,
                  "Value": 595
                }
              },
              "Default": "AA==",
              "Docs": [
                " Storage of token property permissions of a collection."
              ]
            },
            {
              "Name": "AdminAmount",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 126,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Storage of the amount of collection admins."
              ]
            },
            {
              "Name": "IsAdmin",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 600,
                  "Value": 74
                }
              },
              "Default": "AA==",
              "Docs": [
                " List of collection admins."
              ]
            },
            {
              "Name": "Allowlist",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 600,
                  "Value": 74
                }
              },
              "Default": "AA==",
              "Docs": [
                " Allowlisted collection users."
              ]
            },
            {
              "Name": "DummyStorageValue",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 601,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Not used by code, exists only to provide some types to metadata."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": {
          "TypeId": 369
        },
        "Constants": [
          {
            "Name": "CollectionCreationPrice",
            "TypeId": 6,
            "Value": "AADITmdtwRsAAAAAAAAAAA==",
            "Docs": [
              " Set price to create a collection."
            ]
          },
          {
            "Name": "ContractAddress",
            "TypeId": 215,
            "Value": "bE6f4a43pB6TzuQp6OGIGr3LtU8=",
            "Docs": [
              " Address under which the CollectionHelper contract would be available."
            ]
          },
          {
            "Name": "collection_admins_limit",
            "TypeId": 4,
            "Value": "BQAAAA==",
            "Docs": [
              " Maximum admins per collection."
            ]
          }
        ],
        "Errors": {
          "TypeId": 618
        },
        "Index": 66
      },
      "67": {
        "Name": "Fungible",
        "Storage": {
          "Prefix": "Fungible",
          "Entries": [
            {
              "Name": "TotalSupply",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 126,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Total amount of fungible tokens inside a collection."
              ]
            },
            {
              "Name": "Balance",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 600,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Amount of tokens owned by an account inside a collection."
              ]
            },
            {
              "Name": "Allowance",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 619,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Storage for assets delegated to a limited extent to other users."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": {
          "TypeId": 620
        },
        "Index": 67
      },
      "68": {
        "Name": "Refungible",
        "Storage": {
          "Prefix": "Refungible",
          "Entries": [
            {
              "Name": "TokensMinted",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 126,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Total amount of minted tokens in a collection."
              ]
            },
            {
              "Name": "TokensBurnt",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 126,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Amount of tokens burnt in a collection."
              ]
            },
            {
              "Name": "TokenProperties",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 583,
                  "Value": 621
                }
              },
              "Default": "AA==",
              "Docs": [
                " Amount of pieces a refungible token is split into."
              ]
            },
            {
              "Name": "TotalSupply",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 583,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Total amount of pieces for token"
              ]
            },
            {
              "Name": "Owned",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 622,
                  "Value": 74
                }
              },
              "Default": "AA==",
              "Docs": [
                " Used to enumerate tokens owned by account."
              ]
            },
            {
              "Name": "AccountBalance",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 600,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Amount of tokens (not pieces) partially owned by an account within a collection."
              ]
            },
            {
              "Name": "Balance",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 623,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Amount of token pieces owned by account."
              ]
            },
            {
              "Name": "Allowance",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat",
                    "BlakeTwo128",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 624,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Allowance set by a token owner for another user to perform one of certain transactions on a number of pieces of a token."
              ]
            },
            {
              "Name": "CollectionAllowance",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 619,
                  "Value": 74
                }
              },
              "Default": "AA==",
              "Docs": [
                " Spender set by a wallet owner that could perform certain transactions on all tokens in the wallet."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": {
          "TypeId": 625
        },
        "Index": 68
      },
      "69": {
        "Name": "Nonfungible",
        "Storage": {
          "Prefix": "Nonfungible",
          "Entries": [
            {
              "Name": "TokensMinted",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 126,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Total amount of minted tokens in a collection."
              ]
            },
            {
              "Name": "TokensBurnt",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 126,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Amount of burnt tokens in a collection."
              ]
            },
            {
              "Name": "TokenData",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 583,
                  "Value": 626
                }
              },
              "Default": "AA==",
              "Docs": [
                " Token data, used to partially describe a token."
              ]
            },
            {
              "Name": "TokenProperties",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 583,
                  "Value": 621
                }
              },
              "Default": "AA==",
              "Docs": [
                " Map of key-value pairs, describing the metadata of a token."
              ]
            },
            {
              "Name": "TokenAuxProperties",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat",
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 627,
                  "Value": 629
                }
              },
              "Default": "AA==",
              "Docs": [
                " Custom data of a token that is serialized to bytes,",
                " primarily reserved for on-chain operations,",
                " normally obscured from the external users.",
                "",
                " Auxiliary properties are slightly different from",
                " usual [`TokenProperties`] due to an unlimited number",
                " and separately stored and written-to key-value pairs.",
                "",
                " Currently unused."
              ]
            },
            {
              "Name": "Owned",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 622,
                  "Value": 74
                }
              },
              "Default": "AA==",
              "Docs": [
                " Used to enumerate tokens owned by account."
              ]
            },
            {
              "Name": "TokenChildren",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 630,
                  "Value": 74
                }
              },
              "Default": "AA==",
              "Docs": [
                " Used to enumerate token's children."
              ]
            },
            {
              "Name": "AccountBalance",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 600,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Amount of tokens owned by an account in a collection."
              ]
            },
            {
              "Name": "Allowance",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 583,
                  "Value": 273
                }
              },
              "Default": "AA==",
              "Docs": [
                " Allowance set by a token owner for another user to perform one of certain transactions on a token."
              ]
            },
            {
              "Name": "CollectionAllowance",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 619,
                  "Value": 74
                }
              },
              "Default": "AA==",
              "Docs": [
                " Operator set by a wallet owner that could perform certain transactions on all tokens in the wallet."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": {
          "TypeId": 631
        },
        "Index": 69
      },
      "70": {
        "Name": "Structure",
        "Storage": null,
        "Calls": {
          "TypeId": 327
        },
        "Events": {
          "TypeId": 370
        },
        "Constants": [],
        "Errors": {
          "TypeId": 632
        },
        "Index": 70
      },
      "73": {
        "Name": "AppPromotion",
        "Storage": {
          "Prefix": "AppPromotion",
          "Entries": [
            {
              "Name": "TotalStaked",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Stores the total staked amount."
              ]
            },
            {
              "Name": "Admin",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Stores the `admin` account. Some extrinsics can only be executed if they were signed by `admin`."
              ]
            },
            {
              "Name": "Staked",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 633,
                  "Value": 634
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Stores the amount of tokens staked by account in the blocknumber.",
                "",
                " * **Key1** - Staker account.",
                " * **Key2** - Relay block number when the stake was made.",
                " * **(Balance, BlockNumber)** - Balance of the stake.",
                " The number of the relay block in which we must perform the interest recalculation"
              ]
            },
            {
              "Name": "StakesPerAccount",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 2
                }
              },
              "Default": "AA==",
              "Docs": [
                " Stores number of stake records for an `Account`.",
                "",
                " * **Key** - Staker account.",
                " * **Value** - Amount of stakes."
              ]
            },
            {
              "Name": "PendingUnstake",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 635
                }
              },
              "Default": "AA==",
              "Docs": [
                " Pending unstake records for an `Account`.",
                "",
                " * **Key** - Staker account.",
                " * **Value** - Amount of stakes."
              ]
            },
            {
              "Name": "PreviousCalculatedRecord",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 633,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Stores a key for record for which the revenue recalculation was performed.",
                " If `None`, then recalculation has not yet been performed or calculations have been completed for all stakers."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 328
        },
        "Events": {
          "TypeId": 371
        },
        "Constants": [
          {
            "Name": "PalletId",
            "TypeId": 465,
            "Value": "YXBwc3Rha2U=",
            "Docs": [
              " The app's pallet id, used for deriving its sovereign account address."
            ]
          },
          {
            "Name": "FreezeIdentifier",
            "TypeId": 65,
            "Value": "YXBwc3Rha2VhcHBzdGFrZQ==",
            "Docs": [
              " Freeze identifier used by the pallet"
            ]
          },
          {
            "Name": "RecalculationInterval",
            "TypeId": 4,
            "Value": "QDgAAA==",
            "Docs": [
              " In relay blocks."
            ]
          },
          {
            "Name": "PendingInterval",
            "TypeId": 4,
            "Value": "4MQAAA==",
            "Docs": [
              " In parachain blocks."
            ]
          },
          {
            "Name": "IntervalIncome",
            "TypeId": 324,
            "Value": "iOoGAA==",
            "Docs": [
              " Rate of return for interval in blocks defined in `RecalculationInterval`."
            ]
          },
          {
            "Name": "Nominal",
            "TypeId": 6,
            "Value": "AABkp7O24A0AAAAAAAAAAA==",
            "Docs": [
              " Decimals for the `Currency`."
            ]
          }
        ],
        "Errors": {
          "TypeId": 637
        },
        "Index": 73
      },
      "80": {
        "Name": "ForeignAssets",
        "Storage": {
          "Prefix": "ForeignAssets",
          "Entries": [
            {
              "Name": "ForeignAssetToCollection",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 52,
                  "Value": 126
                }
              },
              "Default": "AA==",
              "Docs": [
                " The corresponding collections of foreign assets."
              ]
            },
            {
              "Name": "CollectionToForeignAsset",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 126,
                  "Value": 52
                }
              },
              "Default": "AA==",
              "Docs": [
                " The corresponding foreign assets of collections."
              ]
            },
            {
              "Name": "ForeignReserveAssetInstanceToTokenId",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 638,
                  "Value": 307
                }
              },
              "Default": "AA==",
              "Docs": [
                " The correponding NFT token id of reserve NFTs"
              ]
            },
            {
              "Name": "TokenIdToForeignReserveAssetInstance",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 583,
                  "Value": 63
                }
              },
              "Default": "AA==",
              "Docs": [
                " The correponding reserve NFT of a token ID"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 330
        },
        "Events": {
          "TypeId": 372
        },
        "Constants": [],
        "Errors": {
          "TypeId": 639
        },
        "Index": 80
      },
      "100": {
        "Name": "EVM",
        "Storage": {
          "Prefix": "EVM",
          "Entries": [
            {
              "Name": "AccountCodes",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 215,
                  "Value": 13
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "AccountCodesMetadata",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 215,
                  "Value": 640
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "AccountStorages",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 641,
                  "Value": 12
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": []
            },
            {
              "Name": "CurrentLogs",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 354,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Written on log, reset after transaction",
                " Should be empty between transactions"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 333
        },
        "Events": {
          "TypeId": 373
        },
        "Constants": [],
        "Errors": {
          "TypeId": 642
        },
        "Index": 100
      },
      "101": {
        "Name": "Ethereum",
        "Storage": {
          "Prefix": "Ethereum",
          "Entries": [
            {
              "Name": "Pending",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 643,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Current building block's transactions and receipts."
              ]
            },
            {
              "Name": "CurrentBlock",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 651,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current Ethereum block."
              ]
            },
            {
              "Name": "CurrentReceipts",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 656,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current Ethereum receipts."
              ]
            },
            {
              "Name": "CurrentTransactionStatuses",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 657,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current transaction statuses."
              ]
            },
            {
              "Name": "BlockHash",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 334,
                  "Value": 12
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": []
            },
            {
              "Name": "InjectedNonce",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 334,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Injected transactions should have unique nonce, here we store current"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 339
        },
        "Events": {
          "TypeId": 374
        },
        "Constants": [],
        "Errors": {
          "TypeId": 658
        },
        "Index": 101
      },
      "150": {
        "Name": "EvmCoderSubstrate",
        "Storage": null,
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": {
          "TypeId": 659
        },
        "Index": 150
      },
      "151": {
        "Name": "EvmContractHelpers",
        "Storage": {
          "Prefix": "EvmContractHelpers",
          "Entries": [
            {
              "Name": "Owner",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox128"
                  ],
                  "Key": 215,
                  "Value": 215
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Store owner for contract.",
                "",
                " * **Key** - contract address.",
                " * **Value** - owner for contract."
              ]
            },
            {
              "Name": "SelfSponsoring",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox128"
                  ],
                  "Key": 215,
                  "Value": 74
                }
              },
              "Default": "AA==",
              "Docs": [
                " Deprecated: this storage is deprecated"
              ]
            },
            {
              "Name": "Sponsoring",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 215,
                  "Value": 660
                }
              },
              "Default": "AA==",
              "Docs": [
                " Store for contract sponsorship state.",
                "",
                " * **Key** - contract address.",
                " * **Value** - sponsorship state."
              ]
            },
            {
              "Name": "SponsoringMode",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox128"
                  ],
                  "Key": 215,
                  "Value": 661
                }
              },
              "Default": "AA==",
              "Docs": [
                " Store for sponsoring mode.",
                "",
                " ### Usage",
                " Prefer to delete collection from storage if mode chaged to [`Disabled`](SponsoringModeT::Disabled).",
                "",
                " * **Key** - contract address.",
                " * **Value** - [`sponsoring mode`](SponsoringModeT)."
              ]
            },
            {
              "Name": "SponsoringRateLimit",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox128"
                  ],
                  "Key": 215,
                  "Value": 4
                }
              },
              "Default": "IBwAAA==",
              "Docs": [
                " Storage for sponsoring rate limit in blocks.",
                "",
                " * **Key** - contract address.",
                " * **Value** - amount of sponsored blocks."
              ]
            },
            {
              "Name": "SponsoringFeeLimit",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox128"
                  ],
                  "Key": 215,
                  "Value": 662
                }
              },
              "Default": "AA==",
              "Docs": [
                " Storage for last sponsored block.",
                "",
                " * **Key1** - contract address.",
                " * **Key2** - sponsored user address.",
                " * **Value** - last sponsored block number."
              ]
            },
            {
              "Name": "SponsorBasket",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox128",
                    "Twox128"
                  ],
                  "Key": 666,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "AllowlistEnabled",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox128"
                  ],
                  "Key": 215,
                  "Value": 74
                }
              },
              "Default": "AA==",
              "Docs": [
                " Storege for contracts with [`Allowlisted`](SponsoringModeT::Allowlisted) sponsoring mode.",
                "",
                " ### Usage",
                " Prefer to delete collection from storage if mode chaged to non `Allowlisted`, than set **Value** to **false**.",
                "",
                " * **Key** - contract address.",
                " * **Value** - is contract in [`Allowlisted`](SponsoringModeT::Allowlisted) mode."
              ]
            },
            {
              "Name": "Allowlist",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox128",
                    "Twox128"
                  ],
                  "Key": 666,
                  "Value": 74
                }
              },
              "Default": "AA==",
              "Docs": [
                " Storage for users that allowed for sponsorship.",
                "",
                " ### Usage",
                " Prefer to delete record from storage if user no more allowed for sponsorship.",
                "",
                " * **Key1** - contract address.",
                " * **Key2** - user that allowed for sponsorship.",
                " * **Value** - allowance for sponsorship."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 349
        },
        "Events": {
          "TypeId": 383
        },
        "Constants": [
          {
            "Name": "ContractAddress",
            "TypeId": 215,
            "Value": "hCiZ7POAVT6KTedb9TTN9vv2QEk=",
            "Docs": [
              " Address, under which magic contract will be available"
            ]
          }
        ],
        "Errors": {
          "TypeId": 667
        },
        "Index": 151
      },
      "152": {
        "Name": "EvmTransactionPayment",
        "Storage": null,
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 152
      },
      "153": {
        "Name": "EvmMigration",
        "Storage": {
          "Prefix": "EvmMigration",
          "Entries": [
            {
              "Name": "MigrationPending",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 215,
                  "Value": 74
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 351
        },
        "Events": {
          "TypeId": 384
        },
        "Constants": [],
        "Errors": {
          "TypeId": 668
        },
        "Index": 153
      },
      "154": {
        "Name": "Maintenance",
        "Storage": {
          "Prefix": "Maintenance",
          "Entries": [
            {
              "Name": "Enabled",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 74,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 356
        },
        "Events": {
          "TypeId": 385
        },
        "Constants": [],
        "Errors": {
          "TypeId": 669
        },
        "Index": 154
      },
      "155": {
        "Name": "BalancesAdapter",
        "Storage": null,
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 155
      },
      "156": {
        "Name": "Utility",
        "Storage": null,
        "Calls": {
          "TypeId": 357
        },
        "Events": {
          "TypeId": 386
        },
        "Constants": [
          {
            "Name": "batched_calls_limit",
            "TypeId": 4,
            "Value": "qioAAA==",
            "Docs": [
              " The limit on the number of batched calls."
            ]
          }
        ],
        "Errors": {
          "TypeId": 670
        },
        "Index": 156
      },
      "255": {
        "Name": "TestUtils",
        "Storage": {
          "Prefix": "TestUtils",
          "Entries": [
            {
              "Name": "Enabled",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 74,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "TestValue",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 359
        },
        "Events": {
          "TypeId": 387
        },
        "Constants": [],
        "Errors": {
          "TypeId": 671
        },
        "Index": 255
      }
    },
    "Extrinsic": {
      "TypeId": 672,
      "Version": 4,
      "SignedExtensions": [
        {
          "SignedIdentifier": "CheckSpecVersion",
          "SignedExtType": 680,
          "AddSignedExtType": 4
        },
        {
          "SignedIdentifier": "CheckTxVersion",
          "SignedExtType": 681,
          "AddSignedExtType": 4
        },
        {
          "SignedIdentifier": "CheckGenesis",
          "SignedExtType": 682,
          "AddSignedExtType": 12
        },
        {
          "SignedIdentifier": "CheckMortality",
          "SignedExtType": 683,
          "AddSignedExtType": 12
        },
        {
          "SignedIdentifier": "CheckNonce",
          "SignedExtType": 685,
          "AddSignedExtType": 41
        },
        {
          "SignedIdentifier": "CheckWeight",
          "SignedExtType": 686,
          "AddSignedExtType": 41
        },
        {
          "SignedIdentifier": "CheckMaintenance",
          "SignedExtType": 687,
          "AddSignedExtType": 41
        },
        {
          "SignedIdentifier": "DisableIdentityCalls",
          "SignedExtType": 688,
          "AddSignedExtType": 41
        },
        {
          "SignedIdentifier": "ChargeTransactionPayment",
          "SignedExtType": 689,
          "AddSignedExtType": 41
        },
        {
          "SignedIdentifier": "FakeTransactionFinalizer",
          "SignedExtType": 691,
          "AddSignedExtType": 41
        }
      ]
    },
    "TypeId": 690
  }
}