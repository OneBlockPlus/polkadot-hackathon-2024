//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Hydration.NetApi.Generated.Model.pallet_staking.types
{
    
    
    /// <summary>
    /// >> 594 - Composite[pallet_staking.types.Position]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class Position : BaseType
    {
        
        /// <summary>
        /// >> stake
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 Stake { get; set; }
        /// <summary>
        /// >> action_points
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 ActionPoints { get; set; }
        /// <summary>
        /// >> reward_per_stake
        /// </summary>
        public Hydration.NetApi.Generated.Model.sp_arithmetic.fixed_point.FixedU128 RewardPerStake { get; set; }
        /// <summary>
        /// >> created_at
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 CreatedAt { get; set; }
        /// <summary>
        /// >> accumulated_slash_points
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 AccumulatedSlashPoints { get; set; }
        /// <summary>
        /// >> accumulated_unpaid_rewards
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 AccumulatedUnpaidRewards { get; set; }
        /// <summary>
        /// >> accumulated_locked_rewards
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 AccumulatedLockedRewards { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "Position";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Stake.Encode());
            result.AddRange(ActionPoints.Encode());
            result.AddRange(RewardPerStake.Encode());
            result.AddRange(CreatedAt.Encode());
            result.AddRange(AccumulatedSlashPoints.Encode());
            result.AddRange(AccumulatedUnpaidRewards.Encode());
            result.AddRange(AccumulatedLockedRewards.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Stake = new Substrate.NetApi.Model.Types.Primitive.U128();
            Stake.Decode(byteArray, ref p);
            ActionPoints = new Substrate.NetApi.Model.Types.Primitive.U128();
            ActionPoints.Decode(byteArray, ref p);
            RewardPerStake = new Hydration.NetApi.Generated.Model.sp_arithmetic.fixed_point.FixedU128();
            RewardPerStake.Decode(byteArray, ref p);
            CreatedAt = new Substrate.NetApi.Model.Types.Primitive.U32();
            CreatedAt.Decode(byteArray, ref p);
            AccumulatedSlashPoints = new Substrate.NetApi.Model.Types.Primitive.U128();
            AccumulatedSlashPoints.Decode(byteArray, ref p);
            AccumulatedUnpaidRewards = new Substrate.NetApi.Model.Types.Primitive.U128();
            AccumulatedUnpaidRewards.Decode(byteArray, ref p);
            AccumulatedLockedRewards = new Substrate.NetApi.Model.Types.Primitive.U128();
            AccumulatedLockedRewards.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
