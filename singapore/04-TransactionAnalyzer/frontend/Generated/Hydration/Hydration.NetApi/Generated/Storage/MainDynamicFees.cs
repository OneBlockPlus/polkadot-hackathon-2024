//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Hydration.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> DynamicFeesStorage
    /// </summary>
    public sealed class DynamicFeesStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> DynamicFeesStorage Constructor
        /// </summary>
        public DynamicFeesStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("DynamicFees", "AssetFee"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(Hydration.NetApi.Generated.Model.pallet_dynamic_fees.types.FeeEntry)));
        }
        
        /// <summary>
        /// >> AssetFeeParams
        ///  Stores last calculated fee of an asset and block number in which it was changed..
        ///  Stored as (Asset fee, Protocol fee, Block number)
        /// </summary>
        public static string AssetFeeParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("DynamicFees", "AssetFee", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> AssetFeeDefault
        /// Default value as hex string
        /// </summary>
        public static string AssetFeeDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> AssetFee
        ///  Stores last calculated fee of an asset and block number in which it was changed..
        ///  Stored as (Asset fee, Protocol fee, Block number)
        /// </summary>
        public async Task<Hydration.NetApi.Generated.Model.pallet_dynamic_fees.types.FeeEntry> AssetFee(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = DynamicFeesStorage.AssetFeeParams(key);
            var result = await _client.GetStorageAsync<Hydration.NetApi.Generated.Model.pallet_dynamic_fees.types.FeeEntry>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> DynamicFeesCalls
    /// </summary>
    public sealed class DynamicFeesCalls
    {
    }
    
    /// <summary>
    /// >> DynamicFeesConstants
    /// </summary>
    public sealed class DynamicFeesConstants
    {
        
        /// <summary>
        /// >> AssetFeeParameters
        /// </summary>
        public Hydration.NetApi.Generated.Model.pallet_dynamic_fees.types.FeeParams AssetFeeParameters()
        {
            var result = new Hydration.NetApi.Generated.Model.pallet_dynamic_fees.types.FeeParams();
            result.Create("0xC409000050C3000000A0724E1809000000000000000000000000C84E676DC11B000000000000000" +
                    "0");
            return result;
        }
        
        /// <summary>
        /// >> ProtocolFeeParameters
        /// </summary>
        public Hydration.NetApi.Generated.Model.pallet_dynamic_fees.types.FeeParams ProtocolFeeParameters()
        {
            var result = new Hydration.NetApi.Generated.Model.pallet_dynamic_fees.types.FeeParams();
            result.Create("0xF4010000E8030000005039278C0400000000000000000000000064A7B3B6E00D000000000000000" +
                    "0");
            return result;
        }
    }
    
    /// <summary>
    /// >> DynamicFeesErrors
    /// </summary>
    public enum DynamicFeesErrors
    {
    }
}
