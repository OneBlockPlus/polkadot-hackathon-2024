//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Hydration.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> OtcSettlementsStorage
    /// </summary>
    public sealed class OtcSettlementsStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> OtcSettlementsStorage Constructor
        /// </summary>
        public OtcSettlementsStorage(SubstrateClientExt client)
        {
            this._client = client;
        }
    }
    
    /// <summary>
    /// >> OtcSettlementsCalls
    /// </summary>
    public sealed class OtcSettlementsCalls
    {
        
        /// <summary>
        /// >> settle_otc_order
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SettleOtcOrder(Substrate.NetApi.Model.Types.Primitive.U32 otc_id, Substrate.NetApi.Model.Types.Primitive.U128 amount, Substrate.NetApi.Model.Types.Base.BaseVec<Hydration.NetApi.Generated.Model.hydradx_traits.router.Trade> route)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(otc_id.Encode());
            byteArray.AddRange(amount.Encode());
            byteArray.AddRange(route.Encode());
            return new Method(72, "OtcSettlements", 0, "settle_otc_order", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> OtcSettlementsConstants
    /// </summary>
    public sealed class OtcSettlementsConstants
    {
        
        /// <summary>
        /// >> ProfitReceiver
        ///  Account who receives the profit.
        /// </summary>
        public Hydration.NetApi.Generated.Model.sp_core.crypto.AccountId32 ProfitReceiver()
        {
            var result = new Hydration.NetApi.Generated.Model.sp_core.crypto.AccountId32();
            result.Create("0x6D6F646C70792F74727372790000000000000000000000000000000000000000");
            return result;
        }
        
        /// <summary>
        /// >> MinProfitPercentage
        ///  Minimum profit in terms of percentage.
        /// </summary>
        public Hydration.NetApi.Generated.Model.sp_arithmetic.per_things.Perbill MinProfitPercentage()
        {
            var result = new Hydration.NetApi.Generated.Model.sp_arithmetic.per_things.Perbill();
            result.Create("0x10270000");
            return result;
        }
        
        /// <summary>
        /// >> PricePrecision
        ///  Determines when we consider an arbitrage as closed.
        /// </summary>
        public Hydration.NetApi.Generated.Model.sp_arithmetic.fixed_point.FixedU128 PricePrecision()
        {
            var result = new Hydration.NetApi.Generated.Model.sp_arithmetic.fixed_point.FixedU128();
            result.Create("0x0000C16FF28623000000000000000000");
            return result;
        }
        
        /// <summary>
        /// >> MinTradingLimit
        ///  Minimum trading limit.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 MinTradingLimit()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U128();
            result.Create("0xE8030000000000000000000000000000");
            return result;
        }
        
        /// <summary>
        /// >> MaxIterations
        ///  Maximum number of iterations used in the binary search algorithm to find the trade amount.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxIterations()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x28000000");
            return result;
        }
    }
    
    /// <summary>
    /// >> OtcSettlementsErrors
    /// </summary>
    public enum OtcSettlementsErrors
    {
        
        /// <summary>
        /// >> OrderNotFound
        /// Otc order not found
        /// </summary>
        OrderNotFound,
        
        /// <summary>
        /// >> NotPartiallyFillable
        /// OTC order is not partially fillable
        /// </summary>
        NotPartiallyFillable,
        
        /// <summary>
        /// >> InvalidRoute
        /// Provided route doesn't match the existing route
        /// </summary>
        InvalidRoute,
        
        /// <summary>
        /// >> BalanceInconsistency
        /// Initial and final balance are different
        /// </summary>
        BalanceInconsistency,
        
        /// <summary>
        /// >> TradeAmountTooHigh
        /// Trade amount higher than necessary
        /// </summary>
        TradeAmountTooHigh,
        
        /// <summary>
        /// >> TradeAmountTooLow
        /// Trade amount lower than necessary
        /// </summary>
        TradeAmountTooLow,
        
        /// <summary>
        /// >> PriceNotAvailable
        /// Price for a route is not available
        /// </summary>
        PriceNotAvailable,
    }
}
