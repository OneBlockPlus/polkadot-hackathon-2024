{
  "Origin": "",
  "Magic": "0x6D657461",
  "Version": 14,
  "NodeMetadata": {
    "Types": {
      "0": {
        "TypeFields": [
          {
            "TypeName": "[u8; 32]",
            "TypeId": 1
          }
        ],
        "Path": [
          "sp_core",
          "crypto",
          "AccountId32"
        ],
        "TypeDef": "Composite"
      },
      "1": {
        "Length": 32,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "2": {
        "Primitive": "U8",
        "TypeDef": "Primitive"
      },
      "3": {
        "TypeFields": [
          {
            "Name": "nonce",
            "TypeName": "Nonce",
            "TypeId": 4
          },
          {
            "Name": "consumers",
            "TypeName": "RefCount",
            "TypeId": 4
          },
          {
            "Name": "providers",
            "TypeName": "RefCount",
            "TypeId": 4
          },
          {
            "Name": "sufficients",
            "TypeName": "RefCount",
            "TypeId": 4
          },
          {
            "Name": "data",
            "TypeName": "AccountData",
            "TypeId": 5
          }
        ],
        "Path": [
          "frame_system",
          "AccountInfo"
        ],
        "TypeParams": [
          {
            "Name": "Nonce",
            "TypeId": 4
          },
          {
            "Name": "AccountData",
            "TypeId": 5
          }
        ],
        "TypeDef": "Composite"
      },
      "4": {
        "Primitive": "U32",
        "TypeDef": "Primitive"
      },
      "5": {
        "TypeFields": [
          {
            "Name": "free",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "reserved",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "frozen",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "flags",
            "TypeName": "ExtraFlags",
            "TypeId": 7
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "AccountData"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "6": {
        "Primitive": "U128",
        "TypeDef": "Primitive"
      },
      "7": {
        "TypeFields": [
          {
            "TypeName": "u128",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "ExtraFlags"
        ],
        "TypeDef": "Composite"
      },
      "8": {
        "TypeFields": [
          {
            "Name": "normal",
            "TypeName": "T",
            "TypeId": 9
          },
          {
            "Name": "operational",
            "TypeName": "T",
            "TypeId": 9
          },
          {
            "Name": "mandatory",
            "TypeName": "T",
            "TypeId": 9
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "PerDispatchClass"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 9
          }
        ],
        "TypeDef": "Composite"
      },
      "9": {
        "TypeFields": [
          {
            "Name": "ref_time",
            "TypeName": "u64",
            "TypeId": 10
          },
          {
            "Name": "proof_size",
            "TypeName": "u64",
            "TypeId": 10
          }
        ],
        "Path": [
          "sp_weights",
          "weight_v2",
          "Weight"
        ],
        "TypeDef": "Composite"
      },
      "10": {
        "TypeId": 11,
        "TypeDef": "Compact"
      },
      "11": {
        "Primitive": "U64",
        "TypeDef": "Primitive"
      },
      "12": {
        "TypeFields": [
          {
            "TypeName": "[u8; 32]",
            "TypeId": 1
          }
        ],
        "Path": [
          "primitive_types",
          "H256"
        ],
        "TypeDef": "Composite"
      },
      "13": {
        "TypeId": 2,
        "TypeDef": "Sequence"
      },
      "14": {
        "TypeFields": [
          {
            "Name": "logs",
            "TypeName": "Vec<DigestItem>",
            "TypeId": 15
          }
        ],
        "Path": [
          "sp_runtime",
          "generic",
          "digest",
          "Digest"
        ],
        "TypeDef": "Composite"
      },
      "15": {
        "TypeId": 16,
        "TypeDef": "Sequence"
      },
      "16": {
        "Variants": [
          {
            "Name": "PreRuntime",
            "TypeFields": [
              {
                "TypeName": "ConsensusEngineId",
                "TypeId": 17
              },
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 6
          },
          {
            "Name": "Consensus",
            "TypeFields": [
              {
                "TypeName": "ConsensusEngineId",
                "TypeId": 17
              },
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 4
          },
          {
            "Name": "Seal",
            "TypeFields": [
              {
                "TypeName": "ConsensusEngineId",
                "TypeId": 17
              },
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 5
          },
          {
            "Name": "Other",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0
          },
          {
            "Name": "RuntimeEnvironmentUpdated",
            "TypeFields": null,
            "Index": 8
          }
        ],
        "Path": [
          "sp_runtime",
          "generic",
          "digest",
          "DigestItem"
        ],
        "TypeDef": "Variant"
      },
      "17": {
        "Length": 4,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "18": {
        "TypeId": 19,
        "TypeDef": "Sequence"
      },
      "19": {
        "TypeFields": [
          {
            "Name": "phase",
            "TypeName": "Phase",
            "TypeId": 509
          },
          {
            "Name": "event",
            "TypeName": "E",
            "TypeId": 20
          },
          {
            "Name": "topics",
            "TypeName": "Vec<T>",
            "TypeId": 290
          }
        ],
        "Path": [
          "frame_system",
          "EventRecord"
        ],
        "TypeParams": [
          {
            "Name": "E",
            "TypeId": 20
          },
          {
            "Name": "T",
            "TypeId": 12
          }
        ],
        "TypeDef": "Composite"
      },
      "20": {
        "Variants": [
          {
            "Name": "System",
            "TypeFields": [
              {
                "TypeName": "frame_system::Event<Runtime>",
                "TypeId": 21
              }
            ],
            "Index": 0
          },
          {
            "Name": "Indices",
            "TypeFields": [
              {
                "TypeName": "pallet_indices::Event<Runtime>",
                "TypeId": 31
              }
            ],
            "Index": 2
          },
          {
            "Name": "ParachainSystem",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_parachain_system::Event<Runtime>",
                "TypeId": 32
              }
            ],
            "Index": 5
          },
          {
            "Name": "Balances",
            "TypeFields": [
              {
                "TypeName": "pallet_balances::Event<Runtime>",
                "TypeId": 34
              }
            ],
            "Index": 10
          },
          {
            "Name": "TransactionPayment",
            "TypeFields": [
              {
                "TypeName": "pallet_transaction_payment::Event<Runtime>",
                "TypeId": 36
              }
            ],
            "Index": 11
          },
          {
            "Name": "CollatorSelection",
            "TypeFields": [
              {
                "TypeName": "pallet_collator_selection::Event<Runtime>",
                "TypeId": 37
              }
            ],
            "Index": 21
          },
          {
            "Name": "Session",
            "TypeFields": [
              {
                "TypeName": "pallet_session::Event",
                "TypeId": 39
              }
            ],
            "Index": 22
          },
          {
            "Name": "Democracy",
            "TypeFields": [
              {
                "TypeName": "pallet_democracy::Event<Runtime>",
                "TypeId": 40
              }
            ],
            "Index": 30
          },
          {
            "Name": "Council",
            "TypeFields": [
              {
                "TypeName": "pallet_collective::Event<Runtime, pallet_collective::Instance1>",
                "TypeId": 45
              }
            ],
            "Index": 31
          },
          {
            "Name": "TechnicalCommittee",
            "TypeFields": [
              {
                "TypeName": "pallet_collective::Event<Runtime, pallet_collective::Instance2>",
                "TypeId": 48
              }
            ],
            "Index": 32
          },
          {
            "Name": "PhragmenElection",
            "TypeFields": [
              {
                "TypeName": "pallet_elections_phragmen::Event<Runtime>",
                "TypeId": 49
              }
            ],
            "Index": 33
          },
          {
            "Name": "CouncilMembership",
            "TypeFields": [
              {
                "TypeName": "pallet_membership::Event<Runtime, pallet_membership::Instance1>",
                "TypeId": 52
              }
            ],
            "Index": 34
          },
          {
            "Name": "TechnicalMembership",
            "TypeFields": [
              {
                "TypeName": "pallet_membership::Event<Runtime, pallet_membership::Instance2>",
                "TypeId": 53
              }
            ],
            "Index": 35
          },
          {
            "Name": "ConvictionVoting",
            "TypeFields": [
              {
                "TypeName": "pallet_conviction_voting::Event<Runtime>",
                "TypeId": 54
              }
            ],
            "Index": 36
          },
          {
            "Name": "Referenda",
            "TypeFields": [
              {
                "TypeName": "pallet_referenda::Event<Runtime>",
                "TypeId": 55
              }
            ],
            "Index": 37
          },
          {
            "Name": "Whitelist",
            "TypeFields": [
              {
                "TypeName": "pallet_whitelist::Event<Runtime>",
                "TypeId": 435
              }
            ],
            "Index": 39
          },
          {
            "Name": "XcmpQueue",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_xcmp_queue::Event<Runtime>",
                "TypeId": 440
              }
            ],
            "Index": 40
          },
          {
            "Name": "PolkadotXcm",
            "TypeFields": [
              {
                "TypeName": "pallet_xcm::Event<Runtime>",
                "TypeId": 441
              }
            ],
            "Index": 41
          },
          {
            "Name": "CumulusXcm",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_xcm::Event<Runtime>",
                "TypeId": 443
              }
            ],
            "Index": 42
          },
          {
            "Name": "MessageQueue",
            "TypeFields": [
              {
                "TypeName": "pallet_message_queue::Event<Runtime>",
                "TypeId": 444
              }
            ],
            "Index": 44
          },
          {
            "Name": "Utility",
            "TypeFields": [
              {
                "TypeName": "pallet_utility::Event",
                "TypeId": 446
              }
            ],
            "Index": 50
          },
          {
            "Name": "Scheduler",
            "TypeFields": [
              {
                "TypeName": "pallet_scheduler::Event<Runtime>",
                "TypeId": 447
              }
            ],
            "Index": 51
          },
          {
            "Name": "Proxy",
            "TypeFields": [
              {
                "TypeName": "pallet_proxy::Event<Runtime>",
                "TypeId": 448
              }
            ],
            "Index": 52
          },
          {
            "Name": "Multisig",
            "TypeFields": [
              {
                "TypeName": "pallet_multisig::Event<Runtime>",
                "TypeId": 449
              }
            ],
            "Index": 53
          },
          {
            "Name": "Identity",
            "TypeFields": [
              {
                "TypeName": "pallet_identity::Event<Runtime>",
                "TypeId": 450
              }
            ],
            "Index": 54
          },
          {
            "Name": "Vesting",
            "TypeFields": [
              {
                "TypeName": "bifrost_vesting::Event<Runtime>",
                "TypeId": 451
              }
            ],
            "Index": 60
          },
          {
            "Name": "Treasury",
            "TypeFields": [
              {
                "TypeName": "pallet_treasury::Event<Runtime>",
                "TypeId": 452
              }
            ],
            "Index": 61
          },
          {
            "Name": "Preimage",
            "TypeFields": [
              {
                "TypeName": "pallet_preimage::Event<Runtime>",
                "TypeId": 453
              }
            ],
            "Index": 64
          },
          {
            "Name": "XTokens",
            "TypeFields": [
              {
                "TypeName": "orml_xtokens::Event<Runtime>",
                "TypeId": 454
              }
            ],
            "Index": 70
          },
          {
            "Name": "Tokens",
            "TypeFields": [
              {
                "TypeName": "orml_tokens::Event<Runtime>",
                "TypeId": 455
              }
            ],
            "Index": 71
          },
          {
            "Name": "UnknownTokens",
            "TypeFields": [
              {
                "TypeName": "orml_unknown_tokens::Event",
                "TypeId": 456
              }
            ],
            "Index": 73
          },
          {
            "Name": "OrmlXcm",
            "TypeFields": [
              {
                "TypeName": "orml_xcm::Event<Runtime>",
                "TypeId": 457
              }
            ],
            "Index": 74
          },
          {
            "Name": "ZenlinkProtocol",
            "TypeFields": [
              {
                "TypeName": "zenlink_protocol::Event<Runtime>",
                "TypeId": 458
              }
            ],
            "Index": 80
          },
          {
            "Name": "MerkleDistributor",
            "TypeFields": [
              {
                "TypeName": "merkle_distributor::Event<Runtime>",
                "TypeId": 459
              }
            ],
            "Index": 81
          },
          {
            "Name": "FlexibleFee",
            "TypeFields": [
              {
                "TypeName": "bifrost_flexible_fee::Event<Runtime>",
                "TypeId": 460
              }
            ],
            "Index": 100
          },
          {
            "Name": "Salp",
            "TypeFields": [
              {
                "TypeName": "bifrost_salp::Event<Runtime>",
                "TypeId": 462
              }
            ],
            "Index": 105
          },
          {
            "Name": "CallSwitchgear",
            "TypeFields": [
              {
                "TypeName": "bifrost_call_switchgear::Event<Runtime>",
                "TypeId": 463
              }
            ],
            "Index": 112
          },
          {
            "Name": "AssetRegistry",
            "TypeFields": [
              {
                "TypeName": "bifrost_asset_registry::Event<Runtime>",
                "TypeId": 464
              }
            ],
            "Index": 114
          },
          {
            "Name": "VtokenMinting",
            "TypeFields": [
              {
                "TypeName": "bifrost_vtoken_minting::Event<Runtime>",
                "TypeId": 466
              }
            ],
            "Index": 115
          },
          {
            "Name": "Slp",
            "TypeFields": [
              {
                "TypeName": "bifrost_slp::Event<Runtime>",
                "TypeId": 468
              }
            ],
            "Index": 116
          },
          {
            "Name": "XcmInterface",
            "TypeFields": [
              {
                "TypeName": "bifrost_xcm_interface::Event<Runtime>",
                "TypeId": 478
              }
            ],
            "Index": 117
          },
          {
            "Name": "TokenConversion",
            "TypeFields": [
              {
                "TypeName": "bifrost_vstoken_conversion::Event<Runtime>",
                "TypeId": 479
              }
            ],
            "Index": 118
          },
          {
            "Name": "Farming",
            "TypeFields": [
              {
                "TypeName": "bifrost_farming::Event<Runtime>",
                "TypeId": 480
              }
            ],
            "Index": 119
          },
          {
            "Name": "SystemStaking",
            "TypeFields": [
              {
                "TypeName": "bifrost_system_staking::Event<Runtime>",
                "TypeId": 481
              }
            ],
            "Index": 120
          },
          {
            "Name": "SystemMaker",
            "TypeFields": [
              {
                "TypeName": "bifrost_system_maker::Event<Runtime>",
                "TypeId": 482
              }
            ],
            "Index": 121
          },
          {
            "Name": "FeeShare",
            "TypeFields": [
              {
                "TypeName": "bifrost_fee_share::Event<Runtime>",
                "TypeId": 483
              }
            ],
            "Index": 122
          },
          {
            "Name": "CrossInOut",
            "TypeFields": [
              {
                "TypeName": "bifrost_cross_in_out::Event<Runtime>",
                "TypeId": 486
              }
            ],
            "Index": 123
          },
          {
            "Name": "VeMinting",
            "TypeFields": [
              {
                "TypeName": "bifrost_ve_minting::Event<Runtime>",
                "TypeId": 487
              }
            ],
            "Index": 124
          },
          {
            "Name": "Slpx",
            "TypeFields": [
              {
                "TypeName": "bifrost_slpx::Event<Runtime>",
                "TypeId": 491
              }
            ],
            "Index": 125
          },
          {
            "Name": "FellowshipCollective",
            "TypeFields": [
              {
                "TypeName": "pallet_ranked_collective::Event<Runtime, pallet_ranked_collective::\nInstance1>",
                "TypeId": 494
              }
            ],
            "Index": 126
          },
          {
            "Name": "FellowshipReferenda",
            "TypeFields": [
              {
                "TypeName": "pallet_referenda::Event<Runtime, pallet_referenda::Instance2>",
                "TypeId": 497
              }
            ],
            "Index": 127
          },
          {
            "Name": "StableAsset",
            "TypeFields": [
              {
                "TypeName": "bifrost_stable_asset::Event<Runtime>",
                "TypeId": 498
              }
            ],
            "Index": 128
          },
          {
            "Name": "VtokenVoting",
            "TypeFields": [
              {
                "TypeName": "bifrost_vtoken_voting::Event<Runtime>",
                "TypeId": 499
              }
            ],
            "Index": 130
          },
          {
            "Name": "LendMarket",
            "TypeFields": [
              {
                "TypeName": "lend_market::Event<Runtime>",
                "TypeId": 500
              }
            ],
            "Index": 131
          },
          {
            "Name": "Prices",
            "TypeFields": [
              {
                "TypeName": "pallet_prices::Event<Runtime>",
                "TypeId": 501
              }
            ],
            "Index": 132
          },
          {
            "Name": "Oracle",
            "TypeFields": [
              {
                "TypeName": "orml_oracle::Event<Runtime, orml_oracle::Instance1>",
                "TypeId": 502
              }
            ],
            "Index": 133
          },
          {
            "Name": "OracleMembership",
            "TypeFields": [
              {
                "TypeName": "pallet_membership::Event<Runtime, pallet_membership::Instance3>",
                "TypeId": 503
              }
            ],
            "Index": 134
          },
          {
            "Name": "LeverageStaking",
            "TypeFields": [
              {
                "TypeName": "leverage_staking::Event<Runtime>",
                "TypeId": 504
              }
            ],
            "Index": 135
          },
          {
            "Name": "ChannelCommission",
            "TypeFields": [
              {
                "TypeName": "bifrost_channel_commission::Event<Runtime>",
                "TypeId": 505
              }
            ],
            "Index": 136
          },
          {
            "Name": "CloudsConvert",
            "TypeFields": [
              {
                "TypeName": "bifrost_clouds_convert::Event<Runtime>",
                "TypeId": 506
              }
            ],
            "Index": 137
          },
          {
            "Name": "BuyBack",
            "TypeFields": [
              {
                "TypeName": "bifrost_buy_back::Event<Runtime>",
                "TypeId": 507
              }
            ],
            "Index": 138
          }
        ],
        "Path": [
          "bifrost_polkadot_runtime",
          "RuntimeEvent"
        ],
        "TypeDef": "Variant"
      },
      "21": {
        "Variants": [
          {
            "Name": "ExtrinsicSuccess",
            "TypeFields": [
              {
                "Name": "dispatch_info",
                "TypeName": "DispatchInfo",
                "TypeId": 22
              }
            ],
            "Index": 0,
            "Docs": [
              "An extrinsic completed successfully."
            ]
          },
          {
            "Name": "ExtrinsicFailed",
            "TypeFields": [
              {
                "Name": "dispatch_error",
                "TypeName": "DispatchError",
                "TypeId": 25
              },
              {
                "Name": "dispatch_info",
                "TypeName": "DispatchInfo",
                "TypeId": 22
              }
            ],
            "Index": 1,
            "Docs": [
              "An extrinsic failed."
            ]
          },
          {
            "Name": "CodeUpdated",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "`:code` was updated."
            ]
          },
          {
            "Name": "NewAccount",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 3,
            "Docs": [
              "A new account was created."
            ]
          },
          {
            "Name": "KilledAccount",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 4,
            "Docs": [
              "An account was reaped."
            ]
          },
          {
            "Name": "Remarked",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "On on-chain remark happened."
            ]
          },
          {
            "Name": "UpgradeAuthorized",
            "TypeFields": [
              {
                "Name": "code_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "check_version",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 6,
            "Docs": [
              "An upgrade was authorized."
            ]
          }
        ],
        "Path": [
          "frame_system",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Event for the System pallet."
        ]
      },
      "22": {
        "TypeFields": [
          {
            "Name": "weight",
            "TypeName": "Weight",
            "TypeId": 9
          },
          {
            "Name": "class",
            "TypeName": "DispatchClass",
            "TypeId": 23
          },
          {
            "Name": "pays_fee",
            "TypeName": "Pays",
            "TypeId": 24
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "DispatchInfo"
        ],
        "TypeDef": "Composite"
      },
      "23": {
        "Variants": [
          {
            "Name": "Normal",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Operational",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Mandatory",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "DispatchClass"
        ],
        "TypeDef": "Variant"
      },
      "24": {
        "Variants": [
          {
            "Name": "Yes",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "No",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "Pays"
        ],
        "TypeDef": "Variant"
      },
      "25": {
        "Variants": [
          {
            "Name": "Other",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "CannotLookup",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "BadOrigin",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Module",
            "TypeFields": [
              {
                "TypeName": "ModuleError",
                "TypeId": 26
              }
            ],
            "Index": 3
          },
          {
            "Name": "ConsumerRemaining",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "NoProviders",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "TooManyConsumers",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Token",
            "TypeFields": [
              {
                "TypeName": "TokenError",
                "TypeId": 27
              }
            ],
            "Index": 7
          },
          {
            "Name": "Arithmetic",
            "TypeFields": [
              {
                "TypeName": "ArithmeticError",
                "TypeId": 28
              }
            ],
            "Index": 8
          },
          {
            "Name": "Transactional",
            "TypeFields": [
              {
                "TypeName": "TransactionalError",
                "TypeId": 29
              }
            ],
            "Index": 9
          },
          {
            "Name": "Exhausted",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "Corruption",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "Unavailable",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "RootNotAllowed",
            "TypeFields": null,
            "Index": 13
          }
        ],
        "Path": [
          "sp_runtime",
          "DispatchError"
        ],
        "TypeDef": "Variant"
      },
      "26": {
        "TypeFields": [
          {
            "Name": "index",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "error",
            "TypeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
            "TypeId": 17
          }
        ],
        "Path": [
          "sp_runtime",
          "ModuleError"
        ],
        "TypeDef": "Composite"
      },
      "27": {
        "Variants": [
          {
            "Name": "FundsUnavailable",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "OnlyProvider",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "BelowMinimum",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "CannotCreate",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "UnknownAsset",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Frozen",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Unsupported",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "CannotCreateHold",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "NotExpendable",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "Blocked",
            "TypeFields": null,
            "Index": 9
          }
        ],
        "Path": [
          "sp_runtime",
          "TokenError"
        ],
        "TypeDef": "Variant"
      },
      "28": {
        "Variants": [
          {
            "Name": "Underflow",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "DivisionByZero",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "sp_arithmetic",
          "ArithmeticError"
        ],
        "TypeDef": "Variant"
      },
      "29": {
        "Variants": [
          {
            "Name": "LimitReached",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NoLayer",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "sp_runtime",
          "TransactionalError"
        ],
        "TypeDef": "Variant"
      },
      "30": {
        "Primitive": "Bool",
        "TypeDef": "Primitive"
      },
      "31": {
        "Variants": [
          {
            "Name": "IndexAssigned",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "A account index was assigned."
            ]
          },
          {
            "Name": "IndexFreed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "A account index has been freed up (unassigned)."
            ]
          },
          {
            "Name": "IndexFrozen",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 2,
            "Docs": [
              "A account index has been frozen to its current account ID."
            ]
          }
        ],
        "Path": [
          "pallet_indices",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "32": {
        "Variants": [
          {
            "Name": "ValidationFunctionStored",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The validation function has been scheduled to apply."
            ]
          },
          {
            "Name": "ValidationFunctionApplied",
            "TypeFields": [
              {
                "Name": "relay_chain_block_num",
                "TypeName": "RelayChainBlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "The validation function was applied as of the contained relay chain block number."
            ]
          },
          {
            "Name": "ValidationFunctionDiscarded",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The relay-chain aborted the upgrade process."
            ]
          },
          {
            "Name": "DownwardMessagesReceived",
            "TypeFields": [
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "Some downward messages have been received and will be processed."
            ]
          },
          {
            "Name": "DownwardMessagesProcessed",
            "TypeFields": [
              {
                "Name": "weight_used",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "dmq_head",
                "TypeName": "relay_chain::Hash",
                "TypeId": 12
              }
            ],
            "Index": 4,
            "Docs": [
              "Downward messages were processed using the given weight."
            ]
          },
          {
            "Name": "UpwardMessageSent",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "Option<XcmHash>",
                "TypeId": 33
              }
            ],
            "Index": 5,
            "Docs": [
              "An upward message was sent to the relay chain."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "33": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 1
          }
        ],
        "TypeDef": "Variant"
      },
      "34": {
        "Variants": [
          {
            "Name": "Endowed",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "free_balance",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "An account was created with some free balance."
            ]
          },
          {
            "Name": "DustLost",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "An account was removed whose balance was non-zero but below ExistentialDeposit,",
              "resulting in an outright loss."
            ]
          },
          {
            "Name": "Transfer",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "Transfer succeeded."
            ]
          },
          {
            "Name": "BalanceSet",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "free",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 3,
            "Docs": [
              "A balance was set by root."
            ]
          },
          {
            "Name": "Reserved",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "Some balance was reserved (moved from free to reserved)."
            ]
          },
          {
            "Name": "Unreserved",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "Some balance was unreserved (moved from reserved to free)."
            ]
          },
          {
            "Name": "ReserveRepatriated",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "destination_status",
                "TypeName": "Status",
                "TypeId": 35
              }
            ],
            "Index": 6,
            "Docs": [
              "Some balance was moved from the reserve of the first account to the second account.",
              "Final argument indicates the destination balance type."
            ]
          },
          {
            "Name": "Deposit",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 7,
            "Docs": [
              "Some amount was deposited (e.g. for transaction fees)."
            ]
          },
          {
            "Name": "Withdraw",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "Some amount was withdrawn from the account (e.g. for transaction fees)."
            ]
          },
          {
            "Name": "Slashed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 9,
            "Docs": [
              "Some amount was removed from the account (e.g. for misbehavior)."
            ]
          },
          {
            "Name": "Minted",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 10,
            "Docs": [
              "Some amount was minted into an account."
            ]
          },
          {
            "Name": "Burned",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 11,
            "Docs": [
              "Some amount was burned from an account."
            ]
          },
          {
            "Name": "Suspended",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 12,
            "Docs": [
              "Some amount was suspended from an account (it can be restored later)."
            ]
          },
          {
            "Name": "Restored",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 13,
            "Docs": [
              "Some amount was restored into an account."
            ]
          },
          {
            "Name": "Upgraded",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 14,
            "Docs": [
              "An account was upgraded."
            ]
          },
          {
            "Name": "Issued",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 15,
            "Docs": [
              "Total issuance was increased by `amount`, creating a credit to be balanced."
            ]
          },
          {
            "Name": "Rescinded",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 16,
            "Docs": [
              "Total issuance was decreased by `amount`, creating a debt to be balanced."
            ]
          },
          {
            "Name": "Locked",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 17,
            "Docs": [
              "Some balance was locked."
            ]
          },
          {
            "Name": "Unlocked",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 18,
            "Docs": [
              "Some balance was unlocked."
            ]
          },
          {
            "Name": "Frozen",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 19,
            "Docs": [
              "Some balance was frozen."
            ]
          },
          {
            "Name": "Thawed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 20,
            "Docs": [
              "Some balance was thawed."
            ]
          },
          {
            "Name": "TotalIssuanceForced",
            "TypeFields": [
              {
                "Name": "old",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "new",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 21,
            "Docs": [
              "The `TotalIssuance` was forcefully changed."
            ]
          }
        ],
        "Path": [
          "pallet_balances",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "35": {
        "Variants": [
          {
            "Name": "Free",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Reserved",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "tokens",
          "misc",
          "BalanceStatus"
        ],
        "TypeDef": "Variant"
      },
      "36": {
        "Variants": [
          {
            "Name": "TransactionFeePaid",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "actual_fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "tip",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
              "has been paid by `who`."
            ]
          }
        ],
        "Path": [
          "pallet_transaction_payment",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "37": {
        "Variants": [
          {
            "Name": "NewInvulnerables",
            "TypeFields": [
              {
                "Name": "invulnerables",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              }
            ],
            "Index": 0,
            "Docs": [
              "New Invulnerables were set."
            ]
          },
          {
            "Name": "InvulnerableAdded",
            "TypeFields": [
              {
                "Name": "account_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1,
            "Docs": [
              "A new Invulnerable was added."
            ]
          },
          {
            "Name": "InvulnerableRemoved",
            "TypeFields": [
              {
                "Name": "account_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 2,
            "Docs": [
              "An Invulnerable was removed."
            ]
          },
          {
            "Name": "NewDesiredCandidates",
            "TypeFields": [
              {
                "Name": "desired_candidates",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "The number of desired candidates was set."
            ]
          },
          {
            "Name": "NewCandidacyBond",
            "TypeFields": [
              {
                "Name": "bond_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "The candidacy bond was set."
            ]
          },
          {
            "Name": "CandidateAdded",
            "TypeFields": [
              {
                "Name": "account_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "A new candidate joined."
            ]
          },
          {
            "Name": "CandidateBondUpdated",
            "TypeFields": [
              {
                "Name": "account_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "Bond of a candidate updated."
            ]
          },
          {
            "Name": "CandidateRemoved",
            "TypeFields": [
              {
                "Name": "account_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 7,
            "Docs": [
              "A candidate was removed."
            ]
          },
          {
            "Name": "CandidateReplaced",
            "TypeFields": [
              {
                "Name": "old",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "new",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "An account was replaced in the candidate list by another one."
            ]
          },
          {
            "Name": "InvalidInvulnerableSkipped",
            "TypeFields": [
              {
                "Name": "account_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 9,
            "Docs": [
              "An account was unable to be added to the Invulnerables because they did not have keys",
              "registered. Other Invulnerables may have been set."
            ]
          }
        ],
        "Path": [
          "pallet_collator_selection",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "38": {
        "TypeId": 0,
        "TypeDef": "Sequence"
      },
      "39": {
        "Variants": [
          {
            "Name": "NewSession",
            "TypeFields": [
              {
                "Name": "session_index",
                "TypeName": "SessionIndex",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "New session has happened. Note that the argument is the session index, not the",
              "block number as the type might suggest."
            ]
          }
        ],
        "Path": [
          "pallet_session",
          "pallet",
          "Event"
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "40": {
        "Variants": [
          {
            "Name": "Proposed",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "PropIndex",
                "TypeId": 4
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "A motion has been proposed by a public account."
            ]
          },
          {
            "Name": "Tabled",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "PropIndex",
                "TypeId": 4
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "A public proposal has been tabled for referendum vote."
            ]
          },
          {
            "Name": "ExternalTabled",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "An external proposal has been tabled."
            ]
          },
          {
            "Name": "Started",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              },
              {
                "Name": "threshold",
                "TypeName": "VoteThreshold",
                "TypeId": 41
              }
            ],
            "Index": 3,
            "Docs": [
              "A referendum has begun."
            ]
          },
          {
            "Name": "Passed",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "A proposal has been approved by referendum."
            ]
          },
          {
            "Name": "NotPassed",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "A proposal has been rejected by referendum."
            ]
          },
          {
            "Name": "Cancelled",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "A referendum has been cancelled."
            ]
          },
          {
            "Name": "Delegated",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "target",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 7,
            "Docs": [
              "An account has delegated their vote to another account."
            ]
          },
          {
            "Name": "Undelegated",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 8,
            "Docs": [
              "An account has cancelled a previous delegation operation."
            ]
          },
          {
            "Name": "Vetoed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "until",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 9,
            "Docs": [
              "An external proposal has been vetoed."
            ]
          },
          {
            "Name": "Blacklisted",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 10,
            "Docs": [
              "A proposal_hash has been blacklisted permanently."
            ]
          },
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "voter",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              },
              {
                "Name": "vote",
                "TypeName": "AccountVote<BalanceOf<T>>",
                "TypeId": 42
              }
            ],
            "Index": 11,
            "Docs": [
              "An account has voted in a referendum"
            ]
          },
          {
            "Name": "Seconded",
            "TypeFields": [
              {
                "Name": "seconder",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "prop_index",
                "TypeName": "PropIndex",
                "TypeId": 4
              }
            ],
            "Index": 12,
            "Docs": [
              "An account has secconded a proposal"
            ]
          },
          {
            "Name": "ProposalCanceled",
            "TypeFields": [
              {
                "Name": "prop_index",
                "TypeName": "PropIndex",
                "TypeId": 4
              }
            ],
            "Index": 13,
            "Docs": [
              "A proposal got canceled."
            ]
          },
          {
            "Name": "MetadataSet",
            "TypeFields": [
              {
                "Name": "owner",
                "TypeName": "MetadataOwner",
                "TypeId": 44,
                "Docs": [
                  "Metadata owner."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 14,
            "Docs": [
              "Metadata for a proposal or a referendum has been set."
            ]
          },
          {
            "Name": "MetadataCleared",
            "TypeFields": [
              {
                "Name": "owner",
                "TypeName": "MetadataOwner",
                "TypeId": 44,
                "Docs": [
                  "Metadata owner."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 15,
            "Docs": [
              "Metadata for a proposal or a referendum has been cleared."
            ]
          },
          {
            "Name": "MetadataTransferred",
            "TypeFields": [
              {
                "Name": "prev_owner",
                "TypeName": "MetadataOwner",
                "TypeId": 44,
                "Docs": [
                  "Previous metadata owner."
                ]
              },
              {
                "Name": "owner",
                "TypeName": "MetadataOwner",
                "TypeId": 44,
                "Docs": [
                  "New metadata owner."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 16,
            "Docs": [
              "Metadata has been transferred to new owner."
            ]
          }
        ],
        "Path": [
          "pallet_democracy",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "41": {
        "Variants": [
          {
            "Name": "SuperMajorityApprove",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "SuperMajorityAgainst",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "SimpleMajority",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote_threshold",
          "VoteThreshold"
        ],
        "TypeDef": "Variant"
      },
      "42": {
        "Variants": [
          {
            "Name": "Standard",
            "TypeFields": [
              {
                "Name": "vote",
                "TypeName": "Vote",
                "TypeId": 43
              },
              {
                "Name": "balance",
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "Split",
            "TypeFields": [
              {
                "Name": "aye",
                "TypeName": "Balance",
                "TypeId": 6
              },
              {
                "Name": "nay",
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote",
          "AccountVote"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "43": {
        "TypeFields": [
          {
            "TypeId": 2
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote",
          "Vote"
        ],
        "TypeDef": "Composite"
      },
      "44": {
        "Variants": [
          {
            "Name": "External",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Proposal",
            "TypeFields": [
              {
                "TypeName": "PropIndex",
                "TypeId": 4
              }
            ],
            "Index": 1
          },
          {
            "Name": "Referendum",
            "TypeFields": [
              {
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "MetadataOwner"
        ],
        "TypeDef": "Variant"
      },
      "45": {
        "Variants": [
          {
            "Name": "Proposed",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 4
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "threshold",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "A motion (given hash) has been proposed (by given account) with a threshold (given",
              "`MemberCount`)."
            ]
          },
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "voted",
                "TypeName": "bool",
                "TypeId": 30
              },
              {
                "Name": "yes",
                "TypeName": "MemberCount",
                "TypeId": 4
              },
              {
                "Name": "no",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "A motion (given hash) has been voted on by given account, leaving",
              "a tally (yes votes and no votes given respectively as `MemberCount`)."
            ]
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "A motion was approved by the required threshold."
            ]
          },
          {
            "Name": "Disapproved",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "A motion was not approved by the required threshold."
            ]
          },
          {
            "Name": "Executed",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 46
              }
            ],
            "Index": 4,
            "Docs": [
              "A motion was executed; result will be `Ok` if it returned without error."
            ]
          },
          {
            "Name": "MemberExecuted",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 46
              }
            ],
            "Index": 5,
            "Docs": [
              "A single member did some action; result will be `Ok` if it returned without error."
            ]
          },
          {
            "Name": "Closed",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "yes",
                "TypeName": "MemberCount",
                "TypeId": 4
              },
              {
                "Name": "no",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "A proposal was closed because its threshold was reached or after its duration was up."
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "46": {
        "Variants": [
          {
            "Name": "Ok",
            "TypeFields": [
              {
                "TypeId": 47
              }
            ],
            "Index": 0
          },
          {
            "Name": "Err",
            "TypeFields": [
              {
                "TypeId": 25
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Result"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 47
          },
          {
            "Name": "E",
            "TypeId": 25
          }
        ],
        "TypeDef": "Variant"
      },
      "47": {
        "TypeIds": [],
        "TypeDef": "Tuple"
      },
      "48": {
        "Variants": [
          {
            "Name": "Proposed",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 4
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "threshold",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "A motion (given hash) has been proposed (by given account) with a threshold (given",
              "`MemberCount`)."
            ]
          },
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "voted",
                "TypeName": "bool",
                "TypeId": 30
              },
              {
                "Name": "yes",
                "TypeName": "MemberCount",
                "TypeId": 4
              },
              {
                "Name": "no",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "A motion (given hash) has been voted on by given account, leaving",
              "a tally (yes votes and no votes given respectively as `MemberCount`)."
            ]
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "A motion was approved by the required threshold."
            ]
          },
          {
            "Name": "Disapproved",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "A motion was not approved by the required threshold."
            ]
          },
          {
            "Name": "Executed",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 46
              }
            ],
            "Index": 4,
            "Docs": [
              "A motion was executed; result will be `Ok` if it returned without error."
            ]
          },
          {
            "Name": "MemberExecuted",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 46
              }
            ],
            "Index": 5,
            "Docs": [
              "A single member did some action; result will be `Ok` if it returned without error."
            ]
          },
          {
            "Name": "Closed",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "yes",
                "TypeName": "MemberCount",
                "TypeId": 4
              },
              {
                "Name": "no",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "A proposal was closed because its threshold was reached or after its duration was up."
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "49": {
        "Variants": [
          {
            "Name": "NewTerm",
            "TypeFields": [
              {
                "Name": "new_members",
                "TypeName": "Vec<(<T as frame_system::Config>::AccountId, BalanceOf<T>)>",
                "TypeId": 50
              }
            ],
            "Index": 0,
            "Docs": [
              "A new term with new_members. This indicates that enough candidates existed to run",
              "the election, not that enough have has been elected. The inner value must be examined",
              "for this purpose. A `NewTerm(\\[\\])` indicates that some candidates got their bond",
              "slashed and none were elected, whilst `EmptyTerm` means that no candidates existed to",
              "begin with."
            ]
          },
          {
            "Name": "EmptyTerm",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "No (or not enough) candidates existed for this round. This is different from",
              "`NewTerm(\\[\\])`. See the description of `NewTerm`."
            ]
          },
          {
            "Name": "ElectionError",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Internal error happened while trying to perform election."
            ]
          },
          {
            "Name": "MemberKicked",
            "TypeFields": [
              {
                "Name": "member",
                "TypeName": "<T as frame_system::Config>::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 3,
            "Docs": [
              "A member has been removed. This should always be followed by either `NewTerm` or",
              "`EmptyTerm`."
            ]
          },
          {
            "Name": "Renounced",
            "TypeFields": [
              {
                "Name": "candidate",
                "TypeName": "<T as frame_system::Config>::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 4,
            "Docs": [
              "Someone has renounced their candidacy."
            ]
          },
          {
            "Name": "CandidateSlashed",
            "TypeFields": [
              {
                "Name": "candidate",
                "TypeName": "<T as frame_system::Config>::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "A candidate was slashed by amount due to failing to obtain a seat as member or",
              "runner-up.",
              "",
              "Note that old members and runners-up are also candidates."
            ]
          },
          {
            "Name": "SeatHolderSlashed",
            "TypeFields": [
              {
                "Name": "seat_holder",
                "TypeName": "<T as frame_system::Config>::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "A seat holder was slashed by amount by being forcefully removed from the set."
            ]
          }
        ],
        "Path": [
          "pallet_elections_phragmen",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "50": {
        "TypeId": 51,
        "TypeDef": "Sequence"
      },
      "51": {
        "TypeIds": [
          0,
          6
        ],
        "TypeDef": "Tuple"
      },
      "52": {
        "Variants": [
          {
            "Name": "MemberAdded",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The given member was added; see the transaction for who."
            ]
          },
          {
            "Name": "MemberRemoved",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The given member was removed; see the transaction for who."
            ]
          },
          {
            "Name": "MembersSwapped",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Two members were swapped; see the transaction for who."
            ]
          },
          {
            "Name": "MembersReset",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The membership was reset; see the transaction for who the new set is."
            ]
          },
          {
            "Name": "KeyChanged",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "One of the members' keys changed."
            ]
          },
          {
            "Name": "Dummy",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Phantom member, never used."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "53": {
        "Variants": [
          {
            "Name": "MemberAdded",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The given member was added; see the transaction for who."
            ]
          },
          {
            "Name": "MemberRemoved",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The given member was removed; see the transaction for who."
            ]
          },
          {
            "Name": "MembersSwapped",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Two members were swapped; see the transaction for who."
            ]
          },
          {
            "Name": "MembersReset",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The membership was reset; see the transaction for who the new set is."
            ]
          },
          {
            "Name": "KeyChanged",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "One of the members' keys changed."
            ]
          },
          {
            "Name": "Dummy",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Phantom member, never used."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "54": {
        "Variants": [
          {
            "Name": "Delegated",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0,
            "Docs": [
              "An account has delegated their vote to another account. \\[who, target\\]"
            ]
          },
          {
            "Name": "Undelegated",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1,
            "Docs": [
              "An \\[account\\] has cancelled a previous delegation operation."
            ]
          }
        ],
        "Path": [
          "pallet_conviction_voting",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "55": {
        "Variants": [
          {
            "Name": "Submitted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "track",
                "TypeName": "TrackIdOf<T, I>",
                "TypeId": 56,
                "Docs": [
                  "The track (and by extension proposal dispatch origin) of this referendum."
                ]
              },
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T, I>",
                "TypeId": 57,
                "Docs": [
                  "The proposal for the referendum."
                ]
              }
            ],
            "Index": 0,
            "Docs": [
              "A referendum has been submitted."
            ]
          },
          {
            "Name": "DecisionDepositPlaced",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "The account who placed the deposit."
                ]
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6,
                "Docs": [
                  "The amount placed by the account."
                ]
              }
            ],
            "Index": 1,
            "Docs": [
              "The decision deposit has been placed."
            ]
          },
          {
            "Name": "DecisionDepositRefunded",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "The account who placed the deposit."
                ]
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6,
                "Docs": [
                  "The amount placed by the account."
                ]
              }
            ],
            "Index": 2,
            "Docs": [
              "The decision deposit has been refunded."
            ]
          },
          {
            "Name": "DepositSlashed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "The account who placed the deposit."
                ]
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6,
                "Docs": [
                  "The amount placed by the account."
                ]
              }
            ],
            "Index": 3,
            "Docs": [
              "A deposit has been slashed."
            ]
          },
          {
            "Name": "DecisionStarted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "track",
                "TypeName": "TrackIdOf<T, I>",
                "TypeId": 56,
                "Docs": [
                  "The track (and by extension proposal dispatch origin) of this referendum."
                ]
              },
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T, I>",
                "TypeId": 57,
                "Docs": [
                  "The proposal for the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 434,
                "Docs": [
                  "The current tally of votes in this referendum."
                ]
              }
            ],
            "Index": 4,
            "Docs": [
              "A referendum has moved into the deciding phase."
            ]
          },
          {
            "Name": "ConfirmStarted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              }
            ],
            "Index": 5
          },
          {
            "Name": "ConfirmAborted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              }
            ],
            "Index": 6
          },
          {
            "Name": "Confirmed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 434,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 7,
            "Docs": [
              "A referendum has ended its confirmation phase and is ready for approval."
            ]
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              }
            ],
            "Index": 8,
            "Docs": [
              "A referendum has been approved and its proposal has been scheduled."
            ]
          },
          {
            "Name": "Rejected",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 434,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 9,
            "Docs": [
              "A proposal has been rejected by referendum."
            ]
          },
          {
            "Name": "TimedOut",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 434,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 10,
            "Docs": [
              "A referendum has been timed out without being decided."
            ]
          },
          {
            "Name": "Cancelled",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 434,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 11,
            "Docs": [
              "A referendum has been cancelled."
            ]
          },
          {
            "Name": "Killed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 434,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 12,
            "Docs": [
              "A referendum has been killed."
            ]
          },
          {
            "Name": "SubmissionDepositRefunded",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "The account who placed the deposit."
                ]
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6,
                "Docs": [
                  "The amount placed by the account."
                ]
              }
            ],
            "Index": 13,
            "Docs": [
              "The submission deposit has been refunded."
            ]
          },
          {
            "Name": "MetadataSet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 14,
            "Docs": [
              "Metadata for a referendum has been set."
            ]
          },
          {
            "Name": "MetadataCleared",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 15,
            "Docs": [
              "Metadata for a referendum has been cleared."
            ]
          }
        ],
        "Path": [
          "pallet_referenda",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "56": {
        "Primitive": "U16",
        "TypeDef": "Primitive"
      },
      "57": {
        "Variants": [
          {
            "Name": "Legacy",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "H::Output",
                "TypeId": 12
              }
            ],
            "Index": 0
          },
          {
            "Name": "Inline",
            "TypeFields": [
              {
                "TypeName": "BoundedInline",
                "TypeId": 433
              }
            ],
            "Index": 1
          },
          {
            "Name": "Lookup",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "H::Output",
                "TypeId": 12
              },
              {
                "Name": "len",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "preimages",
          "Bounded"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 58
          },
          {
            "Name": "H",
            "TypeId": 432
          }
        ],
        "TypeDef": "Variant"
      },
      "58": {
        "Variants": [
          {
            "Name": "System",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                "TypeId": 59
              }
            ],
            "Index": 0
          },
          {
            "Name": "Timestamp",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                "TypeId": 63
              }
            ],
            "Index": 1
          },
          {
            "Name": "Indices",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Indices, Runtime>",
                "TypeId": 64
              }
            ],
            "Index": 2
          },
          {
            "Name": "ParachainSystem",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainSystem, Runtime>",
                "TypeId": 68
              }
            ],
            "Index": 5
          },
          {
            "Name": "ParachainInfo",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainInfo, Runtime>",
                "TypeId": 82
              }
            ],
            "Index": 6
          },
          {
            "Name": "Balances",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                "TypeId": 83
              }
            ],
            "Index": 10
          },
          {
            "Name": "CollatorSelection",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CollatorSelection, Runtime>",
                "TypeId": 86
              }
            ],
            "Index": 21
          },
          {
            "Name": "Session",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                "TypeId": 87
              }
            ],
            "Index": 22
          },
          {
            "Name": "Democracy",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Democracy, Runtime>",
                "TypeId": 91
              }
            ],
            "Index": 30
          },
          {
            "Name": "Council",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Council, Runtime>",
                "TypeId": 95
              }
            ],
            "Index": 31
          },
          {
            "Name": "TechnicalCommittee",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalCommittee, Runtime>",
                "TypeId": 97
              }
            ],
            "Index": 32
          },
          {
            "Name": "PhragmenElection",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PhragmenElection, Runtime>",
                "TypeId": 98
              }
            ],
            "Index": 33
          },
          {
            "Name": "CouncilMembership",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CouncilMembership, Runtime>",
                "TypeId": 100
              }
            ],
            "Index": 34
          },
          {
            "Name": "TechnicalMembership",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalMembership, Runtime>",
                "TypeId": 101
              }
            ],
            "Index": 35
          },
          {
            "Name": "ConvictionVoting",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ConvictionVoting, Runtime>",
                "TypeId": 102
              }
            ],
            "Index": 36
          },
          {
            "Name": "Referenda",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Referenda, Runtime>",
                "TypeId": 107
              }
            ],
            "Index": 37
          },
          {
            "Name": "Whitelist",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Whitelist, Runtime>",
                "TypeId": 132
              }
            ],
            "Index": 39
          },
          {
            "Name": "XcmpQueue",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmpQueue, Runtime>",
                "TypeId": 133
              }
            ],
            "Index": 40
          },
          {
            "Name": "PolkadotXcm",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotXcm, Runtime>",
                "TypeId": 134
              }
            ],
            "Index": 41
          },
          {
            "Name": "CumulusXcm",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CumulusXcm, Runtime>",
                "TypeId": 226
              }
            ],
            "Index": 42
          },
          {
            "Name": "MessageQueue",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MessageQueue, Runtime>",
                "TypeId": 227
              }
            ],
            "Index": 44
          },
          {
            "Name": "Utility",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                "TypeId": 229
              }
            ],
            "Index": 50
          },
          {
            "Name": "Scheduler",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Scheduler, Runtime>",
                "TypeId": 231
              }
            ],
            "Index": 51
          },
          {
            "Name": "Proxy",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                "TypeId": 234
              }
            ],
            "Index": 52
          },
          {
            "Name": "Multisig",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>",
                "TypeId": 237
              }
            ],
            "Index": 53
          },
          {
            "Name": "Identity",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Identity, Runtime>",
                "TypeId": 240
              }
            ],
            "Index": 54
          },
          {
            "Name": "Vesting",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vesting, Runtime>",
                "TypeId": 286
              }
            ],
            "Index": 60
          },
          {
            "Name": "Treasury",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Treasury, Runtime>",
                "TypeId": 288
              }
            ],
            "Index": 61
          },
          {
            "Name": "Preimage",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Preimage, Runtime>",
                "TypeId": 289
              }
            ],
            "Index": 64
          },
          {
            "Name": "XTokens",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XTokens, Runtime>",
                "TypeId": 291
              }
            ],
            "Index": 70
          },
          {
            "Name": "Tokens",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Tokens, Runtime>",
                "TypeId": 297
              }
            ],
            "Index": 71
          },
          {
            "Name": "Currencies",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Currencies, Runtime>",
                "TypeId": 298
              }
            ],
            "Index": 72
          },
          {
            "Name": "OrmlXcm",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<OrmlXcm, Runtime>",
                "TypeId": 300
              }
            ],
            "Index": 74
          },
          {
            "Name": "ZenlinkProtocol",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ZenlinkProtocol, Runtime>",
                "TypeId": 301
              }
            ],
            "Index": 80
          },
          {
            "Name": "MerkleDistributor",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MerkleDistributor, Runtime>",
                "TypeId": 307
              }
            ],
            "Index": 81
          },
          {
            "Name": "FlexibleFee",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FlexibleFee, Runtime>",
                "TypeId": 308
              }
            ],
            "Index": 100
          },
          {
            "Name": "Salp",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Salp, Runtime>",
                "TypeId": 312
              }
            ],
            "Index": 105
          },
          {
            "Name": "CallSwitchgear",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CallSwitchgear, Runtime>",
                "TypeId": 315
              }
            ],
            "Index": 112
          },
          {
            "Name": "AssetRegistry",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AssetRegistry, Runtime>",
                "TypeId": 316
              }
            ],
            "Index": 114
          },
          {
            "Name": "VtokenMinting",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VtokenMinting, Runtime>",
                "TypeId": 321
              }
            ],
            "Index": 115
          },
          {
            "Name": "Slp",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Slp, Runtime>",
                "TypeId": 324
              }
            ],
            "Index": 116
          },
          {
            "Name": "XcmInterface",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmInterface, Runtime>",
                "TypeId": 362
              }
            ],
            "Index": 117
          },
          {
            "Name": "TokenConversion",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TokenConversion, Runtime>",
                "TypeId": 366
              }
            ],
            "Index": 118
          },
          {
            "Name": "Farming",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Farming, Runtime>",
                "TypeId": 371
              }
            ],
            "Index": 119
          },
          {
            "Name": "SystemStaking",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<SystemStaking, Runtime>",
                "TypeId": 383
              }
            ],
            "Index": 120
          },
          {
            "Name": "SystemMaker",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<SystemMaker, Runtime>",
                "TypeId": 388
              }
            ],
            "Index": 121
          },
          {
            "Name": "FeeShare",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FeeShare, Runtime>",
                "TypeId": 390
              }
            ],
            "Index": 122
          },
          {
            "Name": "CrossInOut",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CrossInOut, Runtime>",
                "TypeId": 395
              }
            ],
            "Index": 123
          },
          {
            "Name": "VeMinting",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VeMinting, Runtime>",
                "TypeId": 396
              }
            ],
            "Index": 124
          },
          {
            "Name": "Slpx",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Slpx, Runtime>",
                "TypeId": 398
              }
            ],
            "Index": 125
          },
          {
            "Name": "FellowshipCollective",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FellowshipCollective, Runtime>",
                "TypeId": 403
              }
            ],
            "Index": 126
          },
          {
            "Name": "FellowshipReferenda",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FellowshipReferenda, Runtime>",
                "TypeId": 404
              }
            ],
            "Index": 127
          },
          {
            "Name": "StablePool",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<StablePool, Runtime>",
                "TypeId": 405
              }
            ],
            "Index": 129
          },
          {
            "Name": "VtokenVoting",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VtokenVoting, Runtime>",
                "TypeId": 410
              }
            ],
            "Index": 130
          },
          {
            "Name": "LendMarket",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<LendMarket, Runtime>",
                "TypeId": 415
              }
            ],
            "Index": 131
          },
          {
            "Name": "Prices",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Prices, Runtime>",
                "TypeId": 422
              }
            ],
            "Index": 132
          },
          {
            "Name": "Oracle",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Oracle, Runtime>",
                "TypeId": 423
              }
            ],
            "Index": 133
          },
          {
            "Name": "OracleMembership",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<OracleMembership, Runtime>",
                "TypeId": 427
              }
            ],
            "Index": 134
          },
          {
            "Name": "LeverageStaking",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<LeverageStaking, Runtime>",
                "TypeId": 428
              }
            ],
            "Index": 135
          },
          {
            "Name": "ChannelCommission",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ChannelCommission, Runtime>",
                "TypeId": 429
              }
            ],
            "Index": 136
          },
          {
            "Name": "CloudsConvert",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CloudsConvert, Runtime>",
                "TypeId": 430
              }
            ],
            "Index": 137
          },
          {
            "Name": "BuyBack",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BuyBack, Runtime>",
                "TypeId": 431
              }
            ],
            "Index": 138
          }
        ],
        "Path": [
          "bifrost_polkadot_runtime",
          "RuntimeCall"
        ],
        "TypeDef": "Variant"
      },
      "59": {
        "Variants": [
          {
            "Name": "remark",
            "TypeFields": [
              {
                "Name": "remark",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::remark`]."
            ]
          },
          {
            "Name": "set_heap_pages",
            "TypeFields": [
              {
                "Name": "pages",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_heap_pages`]."
            ]
          },
          {
            "Name": "set_code",
            "TypeFields": [
              {
                "Name": "code",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::set_code`]."
            ]
          },
          {
            "Name": "set_code_without_checks",
            "TypeFields": [
              {
                "Name": "code",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::set_code_without_checks`]."
            ]
          },
          {
            "Name": "set_storage",
            "TypeFields": [
              {
                "Name": "items",
                "TypeName": "Vec<KeyValue>",
                "TypeId": 60
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::set_storage`]."
            ]
          },
          {
            "Name": "kill_storage",
            "TypeFields": [
              {
                "Name": "keys",
                "TypeName": "Vec<Key>",
                "TypeId": 62
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::kill_storage`]."
            ]
          },
          {
            "Name": "kill_prefix",
            "TypeFields": [
              {
                "Name": "prefix",
                "TypeName": "Key",
                "TypeId": 13
              },
              {
                "Name": "subkeys",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::kill_prefix`]."
            ]
          },
          {
            "Name": "remark_with_event",
            "TypeFields": [
              {
                "Name": "remark",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::remark_with_event`]."
            ]
          },
          {
            "Name": "authorize_upgrade",
            "TypeFields": [
              {
                "Name": "code_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::authorize_upgrade`]."
            ]
          },
          {
            "Name": "authorize_upgrade_without_checks",
            "TypeFields": [
              {
                "Name": "code_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::authorize_upgrade_without_checks`]."
            ]
          },
          {
            "Name": "apply_authorized_upgrade",
            "TypeFields": [
              {
                "Name": "code",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::apply_authorized_upgrade`]."
            ]
          }
        ],
        "Path": [
          "frame_system",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "60": {
        "TypeId": 61,
        "TypeDef": "Sequence"
      },
      "61": {
        "TypeIds": [
          13,
          13
        ],
        "TypeDef": "Tuple"
      },
      "62": {
        "TypeId": 13,
        "TypeDef": "Sequence"
      },
      "63": {
        "Variants": [
          {
            "Name": "set",
            "TypeFields": [
              {
                "Name": "now",
                "TypeName": "T::Moment",
                "TypeId": 10
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set`]."
            ]
          }
        ],
        "Path": [
          "pallet_timestamp",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "64": {
        "Variants": [
          {
            "Name": "claim",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::claim`]."
            ]
          },
          {
            "Name": "transfer",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::transfer`]."
            ]
          },
          {
            "Name": "free",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::free`]."
            ]
          },
          {
            "Name": "force_transfer",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              },
              {
                "Name": "freeze",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::force_transfer`]."
            ]
          },
          {
            "Name": "freeze",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::freeze`]."
            ]
          }
        ],
        "Path": [
          "pallet_indices",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "65": {
        "Variants": [
          {
            "Name": "Id",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "AccountIndex",
                "TypeId": 66
              }
            ],
            "Index": 1
          },
          {
            "Name": "Raw",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 2
          },
          {
            "Name": "Address32",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 3
          },
          {
            "Name": "Address20",
            "TypeFields": [
              {
                "TypeName": "[u8; 20]",
                "TypeId": 67
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "sp_runtime",
          "multiaddress",
          "MultiAddress"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "AccountIndex",
            "TypeId": 4
          }
        ],
        "TypeDef": "Variant"
      },
      "66": {
        "TypeId": 4,
        "TypeDef": "Compact"
      },
      "67": {
        "Length": 20,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "68": {
        "Variants": [
          {
            "Name": "set_validation_data",
            "TypeFields": [
              {
                "Name": "data",
                "TypeName": "ParachainInherentData",
                "TypeId": 69
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_validation_data`]."
            ]
          },
          {
            "Name": "sudo_send_upward_message",
            "TypeFields": [
              {
                "Name": "message",
                "TypeName": "UpwardMessage",
                "TypeId": 13
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::sudo_send_upward_message`]."
            ]
          },
          {
            "Name": "authorize_upgrade",
            "TypeFields": [
              {
                "Name": "code_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "check_version",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::authorize_upgrade`]."
            ]
          },
          {
            "Name": "enact_authorized_upgrade",
            "TypeFields": [
              {
                "Name": "code",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::enact_authorized_upgrade`]."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "69": {
        "TypeFields": [
          {
            "Name": "validation_data",
            "TypeName": "PersistedValidationData",
            "TypeId": 70
          },
          {
            "Name": "relay_chain_state",
            "TypeName": "sp_trie::StorageProof",
            "TypeId": 72
          },
          {
            "Name": "downward_messages",
            "TypeName": "Vec<InboundDownwardMessage>",
            "TypeId": 74
          },
          {
            "Name": "horizontal_messages",
            "TypeName": "BTreeMap<ParaId, Vec<InboundHrmpMessage>>",
            "TypeId": 76
          }
        ],
        "Path": [
          "cumulus_primitives_parachain_inherent",
          "ParachainInherentData"
        ],
        "TypeDef": "Composite"
      },
      "70": {
        "TypeFields": [
          {
            "Name": "parent_head",
            "TypeName": "HeadData",
            "TypeId": 71
          },
          {
            "Name": "relay_parent_number",
            "TypeName": "N",
            "TypeId": 4
          },
          {
            "Name": "relay_parent_storage_root",
            "TypeName": "H",
            "TypeId": 12
          },
          {
            "Name": "max_pov_size",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "PersistedValidationData"
        ],
        "TypeParams": [
          {
            "Name": "H",
            "TypeId": 12
          },
          {
            "Name": "N",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "71": {
        "TypeFields": [
          {
            "TypeName": "Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "polkadot_parachain_primitives",
          "primitives",
          "HeadData"
        ],
        "TypeDef": "Composite"
      },
      "72": {
        "TypeFields": [
          {
            "Name": "trie_nodes",
            "TypeName": "BTreeSet<Vec<u8>>",
            "TypeId": 73
          }
        ],
        "Path": [
          "sp_trie",
          "storage_proof",
          "StorageProof"
        ],
        "TypeDef": "Composite"
      },
      "73": {
        "TypeFields": [
          {
            "TypeId": 62
          }
        ],
        "Path": [
          "BTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 13
          }
        ],
        "TypeDef": "Composite"
      },
      "74": {
        "TypeId": 75,
        "TypeDef": "Sequence"
      },
      "75": {
        "TypeFields": [
          {
            "Name": "sent_at",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "msg",
            "TypeName": "DownwardMessage",
            "TypeId": 13
          }
        ],
        "Path": [
          "polkadot_core_primitives",
          "InboundDownwardMessage"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "76": {
        "TypeFields": [
          {
            "TypeId": 80
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 77
          },
          {
            "Name": "V",
            "TypeId": 78
          }
        ],
        "TypeDef": "Composite"
      },
      "77": {
        "TypeFields": [
          {
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "polkadot_parachain_primitives",
          "primitives",
          "Id"
        ],
        "TypeDef": "Composite"
      },
      "78": {
        "TypeId": 79,
        "TypeDef": "Sequence"
      },
      "79": {
        "TypeFields": [
          {
            "Name": "sent_at",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "data",
            "TypeName": "sp_std::vec::Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "polkadot_core_primitives",
          "InboundHrmpMessage"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "80": {
        "TypeId": 81,
        "TypeDef": "Sequence"
      },
      "81": {
        "TypeIds": [
          77,
          78
        ],
        "TypeDef": "Tuple"
      },
      "82": {
        "Variants": null,
        "Path": [
          "staging_parachain_info",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "83": {
        "Variants": [
          {
            "Name": "transfer_allow_death",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "value",
                "TypeName": "T::Balance",
                "TypeId": 84
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::transfer_allow_death`]."
            ]
          },
          {
            "Name": "force_transfer",
            "TypeFields": [
              {
                "Name": "source",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "value",
                "TypeName": "T::Balance",
                "TypeId": 84
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::force_transfer`]."
            ]
          },
          {
            "Name": "transfer_keep_alive",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "value",
                "TypeName": "T::Balance",
                "TypeId": 84
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::transfer_keep_alive`]."
            ]
          },
          {
            "Name": "transfer_all",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "keep_alive",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::transfer_all`]."
            ]
          },
          {
            "Name": "force_unreserve",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::force_unreserve`]."
            ]
          },
          {
            "Name": "upgrade_accounts",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::upgrade_accounts`]."
            ]
          },
          {
            "Name": "force_set_balance",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "new_free",
                "TypeName": "T::Balance",
                "TypeId": 84
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::force_set_balance`]."
            ]
          },
          {
            "Name": "force_adjust_total_issuance",
            "TypeFields": [
              {
                "Name": "direction",
                "TypeName": "AdjustmentDirection",
                "TypeId": 85
              },
              {
                "Name": "delta",
                "TypeName": "T::Balance",
                "TypeId": 84
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::force_adjust_total_issuance`]."
            ]
          }
        ],
        "Path": [
          "pallet_balances",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "84": {
        "TypeId": 6,
        "TypeDef": "Compact"
      },
      "85": {
        "Variants": [
          {
            "Name": "Increase",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Decrease",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "AdjustmentDirection"
        ],
        "TypeDef": "Variant"
      },
      "86": {
        "Variants": [
          {
            "Name": "set_invulnerables",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_invulnerables`]."
            ]
          },
          {
            "Name": "set_desired_candidates",
            "TypeFields": [
              {
                "Name": "max",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_desired_candidates`]."
            ]
          },
          {
            "Name": "set_candidacy_bond",
            "TypeFields": [
              {
                "Name": "bond",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::set_candidacy_bond`]."
            ]
          },
          {
            "Name": "register_as_candidate",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "See [`Pallet::register_as_candidate`]."
            ]
          },
          {
            "Name": "leave_intent",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "See [`Pallet::leave_intent`]."
            ]
          },
          {
            "Name": "add_invulnerable",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::add_invulnerable`]."
            ]
          },
          {
            "Name": "remove_invulnerable",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::remove_invulnerable`]."
            ]
          },
          {
            "Name": "update_bond",
            "TypeFields": [
              {
                "Name": "new_deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::update_bond`]."
            ]
          },
          {
            "Name": "take_candidate_slot",
            "TypeFields": [
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "target",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::take_candidate_slot`]."
            ]
          }
        ],
        "Path": [
          "pallet_collator_selection",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "87": {
        "Variants": [
          {
            "Name": "set_keys",
            "TypeFields": [
              {
                "Name": "keys",
                "TypeName": "T::Keys",
                "TypeId": 88
              },
              {
                "Name": "proof",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_keys`]."
            ]
          },
          {
            "Name": "purge_keys",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "See [`Pallet::purge_keys`]."
            ]
          }
        ],
        "Path": [
          "pallet_session",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "88": {
        "TypeFields": [
          {
            "Name": "aura",
            "TypeName": "<Aura as $crate::BoundToRuntimeAppPublic>::Public",
            "TypeId": 89
          }
        ],
        "Path": [
          "bifrost_polkadot_runtime",
          "SessionKeys"
        ],
        "TypeDef": "Composite"
      },
      "89": {
        "TypeFields": [
          {
            "TypeName": "sr25519::Public",
            "TypeId": 90
          }
        ],
        "Path": [
          "sp_consensus_aura",
          "sr25519",
          "app_sr25519",
          "Public"
        ],
        "TypeDef": "Composite"
      },
      "90": {
        "TypeFields": [
          {
            "TypeName": "[u8; 32]",
            "TypeId": 1
          }
        ],
        "Path": [
          "sp_core",
          "sr25519",
          "Public"
        ],
        "TypeDef": "Composite"
      },
      "91": {
        "Variants": [
          {
            "Name": "propose",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T>",
                "TypeId": 57
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::propose`]."
            ]
          },
          {
            "Name": "second",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "PropIndex",
                "TypeId": 66
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::second`]."
            ]
          },
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 66
              },
              {
                "Name": "vote",
                "TypeName": "AccountVote<BalanceOf<T>>",
                "TypeId": 42
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "emergency_cancel",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::emergency_cancel`]."
            ]
          },
          {
            "Name": "external_propose",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T>",
                "TypeId": 57
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::external_propose`]."
            ]
          },
          {
            "Name": "external_propose_majority",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T>",
                "TypeId": 57
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::external_propose_majority`]."
            ]
          },
          {
            "Name": "external_propose_default",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T>",
                "TypeId": 57
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::external_propose_default`]."
            ]
          },
          {
            "Name": "fast_track",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "voting_period",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::fast_track`]."
            ]
          },
          {
            "Name": "veto_external",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::veto_external`]."
            ]
          },
          {
            "Name": "cancel_referendum",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 66
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::cancel_referendum`]."
            ]
          },
          {
            "Name": "delegate",
            "TypeFields": [
              {
                "Name": "to",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "conviction",
                "TypeName": "Conviction",
                "TypeId": 92
              },
              {
                "Name": "balance",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::delegate`]."
            ]
          },
          {
            "Name": "undelegate",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "See [`Pallet::undelegate`]."
            ]
          },
          {
            "Name": "clear_public_proposals",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "See [`Pallet::clear_public_proposals`]."
            ]
          },
          {
            "Name": "unlock",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::unlock`]."
            ]
          },
          {
            "Name": "remove_vote",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::remove_vote`]."
            ]
          },
          {
            "Name": "remove_other_vote",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::remove_other_vote`]."
            ]
          },
          {
            "Name": "blacklist",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "maybe_ref_index",
                "TypeName": "Option<ReferendumIndex>",
                "TypeId": 93
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::blacklist`]."
            ]
          },
          {
            "Name": "cancel_proposal",
            "TypeFields": [
              {
                "Name": "prop_index",
                "TypeName": "PropIndex",
                "TypeId": 66
              }
            ],
            "Index": 17,
            "Docs": [
              "See [`Pallet::cancel_proposal`]."
            ]
          },
          {
            "Name": "set_metadata",
            "TypeFields": [
              {
                "Name": "owner",
                "TypeName": "MetadataOwner",
                "TypeId": 44
              },
              {
                "Name": "maybe_hash",
                "TypeName": "Option<T::Hash>",
                "TypeId": 94
              }
            ],
            "Index": 18,
            "Docs": [
              "See [`Pallet::set_metadata`]."
            ]
          }
        ],
        "Path": [
          "pallet_democracy",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "92": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Locked1x",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Locked2x",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Locked3x",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Locked4x",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Locked5x",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Locked6x",
            "TypeFields": null,
            "Index": 6
          }
        ],
        "Path": [
          "pallet_democracy",
          "conviction",
          "Conviction"
        ],
        "TypeDef": "Variant"
      },
      "93": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 4
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 4
          }
        ],
        "TypeDef": "Variant"
      },
      "94": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 12
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          }
        ],
        "TypeDef": "Variant"
      },
      "95": {
        "Variants": [
          {
            "Name": "set_members",
            "TypeFields": [
              {
                "Name": "new_members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              },
              {
                "Name": "prime",
                "TypeName": "Option<T::AccountId>",
                "TypeId": 96
              },
              {
                "Name": "old_count",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_members`]."
            ]
          },
          {
            "Name": "execute",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "Box<<T as Config<I>>::Proposal>",
                "TypeId": 58
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::execute`]."
            ]
          },
          {
            "Name": "propose",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "MemberCount",
                "TypeId": 66
              },
              {
                "Name": "proposal",
                "TypeName": "Box<<T as Config<I>>::Proposal>",
                "TypeId": 58
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::propose`]."
            ]
          },
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "index",
                "TypeName": "ProposalIndex",
                "TypeId": 66
              },
              {
                "Name": "approve",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "disapprove_proposal",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::disapprove_proposal`]."
            ]
          },
          {
            "Name": "close",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "index",
                "TypeName": "ProposalIndex",
                "TypeId": 66
              },
              {
                "Name": "proposal_weight_bound",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::close`]."
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "96": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 0
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "97": {
        "Variants": [
          {
            "Name": "set_members",
            "TypeFields": [
              {
                "Name": "new_members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              },
              {
                "Name": "prime",
                "TypeName": "Option<T::AccountId>",
                "TypeId": 96
              },
              {
                "Name": "old_count",
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_members`]."
            ]
          },
          {
            "Name": "execute",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "Box<<T as Config<I>>::Proposal>",
                "TypeId": 58
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::execute`]."
            ]
          },
          {
            "Name": "propose",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "MemberCount",
                "TypeId": 66
              },
              {
                "Name": "proposal",
                "TypeName": "Box<<T as Config<I>>::Proposal>",
                "TypeId": 58
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::propose`]."
            ]
          },
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "index",
                "TypeName": "ProposalIndex",
                "TypeId": 66
              },
              {
                "Name": "approve",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "disapprove_proposal",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::disapprove_proposal`]."
            ]
          },
          {
            "Name": "close",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "index",
                "TypeName": "ProposalIndex",
                "TypeId": 66
              },
              {
                "Name": "proposal_weight_bound",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::close`]."
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "98": {
        "Variants": [
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "votes",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "remove_voter",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "See [`Pallet::remove_voter`]."
            ]
          },
          {
            "Name": "submit_candidacy",
            "TypeFields": [
              {
                "Name": "candidate_count",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::submit_candidacy`]."
            ]
          },
          {
            "Name": "renounce_candidacy",
            "TypeFields": [
              {
                "Name": "renouncing",
                "TypeName": "Renouncing",
                "TypeId": 99
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::renounce_candidacy`]."
            ]
          },
          {
            "Name": "remove_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "slash_bond",
                "TypeName": "bool",
                "TypeId": 30
              },
              {
                "Name": "rerun_election",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::remove_member`]."
            ]
          },
          {
            "Name": "clean_defunct_voters",
            "TypeFields": [
              {
                "Name": "num_voters",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "num_defunct",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::clean_defunct_voters`]."
            ]
          }
        ],
        "Path": [
          "pallet_elections_phragmen",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "99": {
        "Variants": [
          {
            "Name": "Member",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "RunnerUp",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Candidate",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "pallet_elections_phragmen",
          "Renouncing"
        ],
        "TypeDef": "Variant"
      },
      "100": {
        "Variants": [
          {
            "Name": "add_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_member`]."
            ]
          },
          {
            "Name": "remove_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::remove_member`]."
            ]
          },
          {
            "Name": "swap_member",
            "TypeFields": [
              {
                "Name": "remove",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "add",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::swap_member`]."
            ]
          },
          {
            "Name": "reset_members",
            "TypeFields": [
              {
                "Name": "members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::reset_members`]."
            ]
          },
          {
            "Name": "change_key",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::change_key`]."
            ]
          },
          {
            "Name": "set_prime",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::set_prime`]."
            ]
          },
          {
            "Name": "clear_prime",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "See [`Pallet::clear_prime`]."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "101": {
        "Variants": [
          {
            "Name": "add_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_member`]."
            ]
          },
          {
            "Name": "remove_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::remove_member`]."
            ]
          },
          {
            "Name": "swap_member",
            "TypeFields": [
              {
                "Name": "remove",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "add",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::swap_member`]."
            ]
          },
          {
            "Name": "reset_members",
            "TypeFields": [
              {
                "Name": "members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::reset_members`]."
            ]
          },
          {
            "Name": "change_key",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::change_key`]."
            ]
          },
          {
            "Name": "set_prime",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::set_prime`]."
            ]
          },
          {
            "Name": "clear_prime",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "See [`Pallet::clear_prime`]."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "102": {
        "Variants": [
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "poll_index",
                "TypeName": "PollIndexOf<T, I>",
                "TypeId": 66
              },
              {
                "Name": "vote",
                "TypeName": "AccountVote<BalanceOf<T, I>>",
                "TypeId": 103
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "delegate",
            "TypeFields": [
              {
                "Name": "class",
                "TypeName": "ClassOf<T, I>",
                "TypeId": 56
              },
              {
                "Name": "to",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "conviction",
                "TypeName": "Conviction",
                "TypeId": 105
              },
              {
                "Name": "balance",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::delegate`]."
            ]
          },
          {
            "Name": "undelegate",
            "TypeFields": [
              {
                "Name": "class",
                "TypeName": "ClassOf<T, I>",
                "TypeId": 56
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::undelegate`]."
            ]
          },
          {
            "Name": "unlock",
            "TypeFields": [
              {
                "Name": "class",
                "TypeName": "ClassOf<T, I>",
                "TypeId": 56
              },
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::unlock`]."
            ]
          },
          {
            "Name": "remove_vote",
            "TypeFields": [
              {
                "Name": "class",
                "TypeName": "Option<ClassOf<T, I>>",
                "TypeId": 106
              },
              {
                "Name": "index",
                "TypeName": "PollIndexOf<T, I>",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::remove_vote`]."
            ]
          },
          {
            "Name": "remove_other_vote",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "class",
                "TypeName": "ClassOf<T, I>",
                "TypeId": 56
              },
              {
                "Name": "index",
                "TypeName": "PollIndexOf<T, I>",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::remove_other_vote`]."
            ]
          }
        ],
        "Path": [
          "pallet_conviction_voting",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "103": {
        "Variants": [
          {
            "Name": "Standard",
            "TypeFields": [
              {
                "Name": "vote",
                "TypeName": "Vote",
                "TypeId": 104
              },
              {
                "Name": "balance",
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "Split",
            "TypeFields": [
              {
                "Name": "aye",
                "TypeName": "Balance",
                "TypeId": 6
              },
              {
                "Name": "nay",
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 1
          },
          {
            "Name": "SplitAbstain",
            "TypeFields": [
              {
                "Name": "aye",
                "TypeName": "Balance",
                "TypeId": 6
              },
              {
                "Name": "nay",
                "TypeName": "Balance",
                "TypeId": 6
              },
              {
                "Name": "abstain",
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "pallet_conviction_voting",
          "vote",
          "AccountVote"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "104": {
        "TypeFields": [
          {
            "TypeId": 2
          }
        ],
        "Path": [
          "pallet_conviction_voting",
          "vote",
          "Vote"
        ],
        "TypeDef": "Composite"
      },
      "105": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Locked1x",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Locked2x",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Locked3x",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Locked4x",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Locked5x",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Locked6x",
            "TypeFields": null,
            "Index": 6
          }
        ],
        "Path": [
          "pallet_conviction_voting",
          "conviction",
          "Conviction"
        ],
        "TypeDef": "Variant"
      },
      "106": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 56
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 56
          }
        ],
        "TypeDef": "Variant"
      },
      "107": {
        "Variants": [
          {
            "Name": "submit",
            "TypeFields": [
              {
                "Name": "proposal_origin",
                "TypeName": "Box<PalletsOriginOf<T>>",
                "TypeId": 108
              },
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T, I>",
                "TypeId": 57
              },
              {
                "Name": "enactment_moment",
                "TypeName": "DispatchTime<BlockNumberFor<T>>",
                "TypeId": 131
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::submit`]."
            ]
          },
          {
            "Name": "place_decision_deposit",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::place_decision_deposit`]."
            ]
          },
          {
            "Name": "refund_decision_deposit",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::refund_decision_deposit`]."
            ]
          },
          {
            "Name": "cancel",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::cancel`]."
            ]
          },
          {
            "Name": "kill",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::kill`]."
            ]
          },
          {
            "Name": "nudge_referendum",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::nudge_referendum`]."
            ]
          },
          {
            "Name": "one_fewer_deciding",
            "TypeFields": [
              {
                "Name": "track",
                "TypeName": "TrackIdOf<T, I>",
                "TypeId": 56
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::one_fewer_deciding`]."
            ]
          },
          {
            "Name": "refund_submission_deposit",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::refund_submission_deposit`]."
            ]
          },
          {
            "Name": "set_metadata",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              },
              {
                "Name": "maybe_hash",
                "TypeName": "Option<T::Hash>",
                "TypeId": 94
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::set_metadata`]."
            ]
          }
        ],
        "Path": [
          "pallet_referenda",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "108": {
        "Variants": [
          {
            "Name": "system",
            "TypeFields": [
              {
                "TypeName": "frame_system::Origin<Runtime>",
                "TypeId": 109
              }
            ],
            "Index": 0
          },
          {
            "Name": "Council",
            "TypeFields": [
              {
                "TypeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance1>",
                "TypeId": 110
              }
            ],
            "Index": 31
          },
          {
            "Name": "TechnicalCommittee",
            "TypeFields": [
              {
                "TypeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance2>",
                "TypeId": 111
              }
            ],
            "Index": 32
          },
          {
            "Name": "Origins",
            "TypeFields": [
              {
                "TypeName": "custom_origins::Origin",
                "TypeId": 112
              }
            ],
            "Index": 38
          },
          {
            "Name": "PolkadotXcm",
            "TypeFields": [
              {
                "TypeName": "pallet_xcm::Origin",
                "TypeId": 113
              }
            ],
            "Index": 41
          },
          {
            "Name": "CumulusXcm",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_xcm::Origin",
                "TypeId": 129
              }
            ],
            "Index": 42
          },
          {
            "Name": "Void",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::\n__private::Void",
                "TypeId": 130
              }
            ],
            "Index": 6
          }
        ],
        "Path": [
          "bifrost_polkadot_runtime",
          "OriginCaller"
        ],
        "TypeDef": "Variant"
      },
      "109": {
        "Variants": [
          {
            "Name": "Root",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Signed",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "RawOrigin"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "110": {
        "Variants": [
          {
            "Name": "Members",
            "TypeFields": [
              {
                "TypeName": "MemberCount",
                "TypeId": 4
              },
              {
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "Member",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "_Phantom",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_collective",
          "RawOrigin"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant"
      },
      "111": {
        "Variants": [
          {
            "Name": "Members",
            "TypeFields": [
              {
                "TypeName": "MemberCount",
                "TypeId": 4
              },
              {
                "TypeName": "MemberCount",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "Member",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "_Phantom",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_collective",
          "RawOrigin"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant"
      },
      "112": {
        "Variants": [
          {
            "Name": "WhitelistedCaller",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "FellowshipAdmin",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "ReferendumCanceller",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "ReferendumKiller",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "LiquidStaking",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "SALPAdmin",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "FellowshipInitiates",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Fellows",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "FellowshipExperts",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "FellowshipMasters",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "Fellowship1Dan",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "Fellowship2Dan",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "Fellowship3Dan",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "Fellowship4Dan",
            "TypeFields": null,
            "Index": 13
          },
          {
            "Name": "Fellowship5Dan",
            "TypeFields": null,
            "Index": 14
          },
          {
            "Name": "Fellowship6Dan",
            "TypeFields": null,
            "Index": 15
          },
          {
            "Name": "Fellowship7Dan",
            "TypeFields": null,
            "Index": 16
          },
          {
            "Name": "Fellowship8Dan",
            "TypeFields": null,
            "Index": 17
          },
          {
            "Name": "Fellowship9Dan",
            "TypeFields": null,
            "Index": 18
          },
          {
            "Name": "TechAdmin",
            "TypeFields": null,
            "Index": 19
          },
          {
            "Name": "CoreAdmin",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "TreasurySpend",
            "TypeFields": null,
            "Index": 21
          }
        ],
        "Path": [
          "bifrost_polkadot_runtime",
          "governance",
          "origins",
          "custom_origins",
          "Origin"
        ],
        "TypeDef": "Variant"
      },
      "113": {
        "Variants": [
          {
            "Name": "Xcm",
            "TypeFields": [
              {
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 0
          },
          {
            "Name": "Response",
            "TypeFields": [
              {
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "Origin"
        ],
        "TypeDef": "Variant"
      },
      "114": {
        "TypeFields": [
          {
            "Name": "parents",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "interior",
            "TypeName": "Junctions",
            "TypeId": 115
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "location",
          "Location"
        ],
        "TypeDef": "Composite"
      },
      "115": {
        "Variants": [
          {
            "Name": "Here",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "X1",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 1]>",
                "TypeId": 116
              }
            ],
            "Index": 1
          },
          {
            "Name": "X2",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 2]>",
                "TypeId": 122
              }
            ],
            "Index": 2
          },
          {
            "Name": "X3",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 3]>",
                "TypeId": 123
              }
            ],
            "Index": 3
          },
          {
            "Name": "X4",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 4]>",
                "TypeId": 124
              }
            ],
            "Index": 4
          },
          {
            "Name": "X5",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 5]>",
                "TypeId": 125
              }
            ],
            "Index": 5
          },
          {
            "Name": "X6",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 6]>",
                "TypeId": 126
              }
            ],
            "Index": 6
          },
          {
            "Name": "X7",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 7]>",
                "TypeId": 127
              }
            ],
            "Index": 7
          },
          {
            "Name": "X8",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 8]>",
                "TypeId": 128
              }
            ],
            "Index": 8
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "junctions",
          "Junctions"
        ],
        "TypeDef": "Variant"
      },
      "116": {
        "Length": 1,
        "TypeId": 117,
        "TypeDef": "Array"
      },
      "117": {
        "Variants": [
          {
            "Name": "Parachain",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 0
          },
          {
            "Name": "AccountId32",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 118
              },
              {
                "Name": "id",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "AccountIndex64",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 118
              },
              {
                "Name": "index",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 2
          },
          {
            "Name": "AccountKey20",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 118
              },
              {
                "Name": "key",
                "TypeName": "[u8; 20]",
                "TypeId": 67
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletInstance",
            "TypeFields": [
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 4
          },
          {
            "Name": "GeneralIndex",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 84
              }
            ],
            "Index": 5
          },
          {
            "Name": "GeneralKey",
            "TypeFields": [
              {
                "Name": "length",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "data",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 6
          },
          {
            "Name": "OnlyChild",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Plurality",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "BodyId",
                "TypeId": 120
              },
              {
                "Name": "part",
                "TypeName": "BodyPart",
                "TypeId": 121
              }
            ],
            "Index": 8
          },
          {
            "Name": "GlobalConsensus",
            "TypeFields": [
              {
                "TypeName": "NetworkId",
                "TypeId": 119
              }
            ],
            "Index": 9
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "junction",
          "Junction"
        ],
        "TypeDef": "Variant"
      },
      "118": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 119
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 119
          }
        ],
        "TypeDef": "Variant"
      },
      "119": {
        "Variants": [
          {
            "Name": "ByGenesis",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 0
          },
          {
            "Name": "ByFork",
            "TypeFields": [
              {
                "Name": "block_number",
                "TypeName": "u64",
                "TypeId": 11
              },
              {
                "Name": "block_hash",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "Polkadot",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Kusama",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Westend",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Rococo",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Wococo",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Ethereum",
            "TypeFields": [
              {
                "Name": "chain_id",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 7
          },
          {
            "Name": "BitcoinCore",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "BitcoinCash",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "PolkadotBulletin",
            "TypeFields": null,
            "Index": 10
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "junction",
          "NetworkId"
        ],
        "TypeDef": "Variant"
      },
      "120": {
        "Variants": [
          {
            "Name": "Unit",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Moniker",
            "TypeFields": [
              {
                "TypeName": "[u8; 4]",
                "TypeId": 17
              }
            ],
            "Index": 1
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 2
          },
          {
            "Name": "Executive",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Technical",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Legislative",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Judicial",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Defense",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Administration",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "Treasury",
            "TypeFields": null,
            "Index": 9
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junction",
          "BodyId"
        ],
        "TypeDef": "Variant"
      },
      "121": {
        "Variants": [
          {
            "Name": "Voice",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Members",
            "TypeFields": [
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 1
          },
          {
            "Name": "Fraction",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 2
          },
          {
            "Name": "AtLeastProportion",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 3
          },
          {
            "Name": "MoreThanProportion",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junction",
          "BodyPart"
        ],
        "TypeDef": "Variant"
      },
      "122": {
        "Length": 2,
        "TypeId": 117,
        "TypeDef": "Array"
      },
      "123": {
        "Length": 3,
        "TypeId": 117,
        "TypeDef": "Array"
      },
      "124": {
        "Length": 4,
        "TypeId": 117,
        "TypeDef": "Array"
      },
      "125": {
        "Length": 5,
        "TypeId": 117,
        "TypeDef": "Array"
      },
      "126": {
        "Length": 6,
        "TypeId": 117,
        "TypeDef": "Array"
      },
      "127": {
        "Length": 7,
        "TypeId": 117,
        "TypeDef": "Array"
      },
      "128": {
        "Length": 8,
        "TypeId": 117,
        "TypeDef": "Array"
      },
      "129": {
        "Variants": [
          {
            "Name": "Relay",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "SiblingParachain",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 77
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "cumulus_pallet_xcm",
          "pallet",
          "Origin"
        ],
        "TypeDef": "Variant"
      },
      "130": {
        "Variants": null,
        "Path": [
          "sp_core",
          "Void"
        ],
        "TypeDef": "Variant"
      },
      "131": {
        "Variants": [
          {
            "Name": "At",
            "TypeFields": [
              {
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "After",
            "TypeFields": [
              {
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "schedule",
          "DispatchTime"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Variant"
      },
      "132": {
        "Variants": [
          {
            "Name": "whitelist_call",
            "TypeFields": [
              {
                "Name": "call_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::whitelist_call`]."
            ]
          },
          {
            "Name": "remove_whitelisted_call",
            "TypeFields": [
              {
                "Name": "call_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::remove_whitelisted_call`]."
            ]
          },
          {
            "Name": "dispatch_whitelisted_call",
            "TypeFields": [
              {
                "Name": "call_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "call_encoded_len",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "call_weight_witness",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::dispatch_whitelisted_call`]."
            ]
          },
          {
            "Name": "dispatch_whitelisted_call_with_preimage",
            "TypeFields": [
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 58
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::dispatch_whitelisted_call_with_preimage`]."
            ]
          }
        ],
        "Path": [
          "pallet_whitelist",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "133": {
        "Variants": [
          {
            "Name": "suspend_xcm_execution",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "See [`Pallet::suspend_xcm_execution`]."
            ]
          },
          {
            "Name": "resume_xcm_execution",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "See [`Pallet::resume_xcm_execution`]."
            ]
          },
          {
            "Name": "update_suspend_threshold",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::update_suspend_threshold`]."
            ]
          },
          {
            "Name": "update_drop_threshold",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::update_drop_threshold`]."
            ]
          },
          {
            "Name": "update_resume_threshold",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::update_resume_threshold`]."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "134": {
        "Variants": [
          {
            "Name": "send",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "message",
                "TypeName": "Box<VersionedXcm<()>>",
                "TypeId": 148
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::send`]."
            ]
          },
          {
            "Name": "teleport_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 214
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::teleport_assets`]."
            ]
          },
          {
            "Name": "reserve_transfer_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 214
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::reserve_transfer_assets`]."
            ]
          },
          {
            "Name": "execute",
            "TypeFields": [
              {
                "Name": "message",
                "TypeName": "Box<VersionedXcm<<T as Config>::RuntimeCall>>",
                "TypeId": 215
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::execute`]."
            ]
          },
          {
            "Name": "force_xcm_version",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Box<Location>",
                "TypeId": 114
              },
              {
                "Name": "version",
                "TypeName": "XcmVersion",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::force_xcm_version`]."
            ]
          },
          {
            "Name": "force_default_xcm_version",
            "TypeFields": [
              {
                "Name": "maybe_xcm_version",
                "TypeName": "Option<XcmVersion>",
                "TypeId": 93
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::force_default_xcm_version`]."
            ]
          },
          {
            "Name": "force_subscribe_version_notify",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::force_subscribe_version_notify`]."
            ]
          },
          {
            "Name": "force_unsubscribe_version_notify",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::force_unsubscribe_version_notify`]."
            ]
          },
          {
            "Name": "limited_reserve_transfer_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 214
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::limited_reserve_transfer_assets`]."
            ]
          },
          {
            "Name": "limited_teleport_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 214
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::limited_teleport_assets`]."
            ]
          },
          {
            "Name": "force_suspension",
            "TypeFields": [
              {
                "Name": "suspended",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::force_suspension`]."
            ]
          },
          {
            "Name": "transfer_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 214
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::transfer_assets`]."
            ]
          },
          {
            "Name": "claim_assets",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 214
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::claim_assets`]."
            ]
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "135": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::MultiLocation",
                "TypeId": 136
              }
            ],
            "Index": 1
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::Location",
                "TypeId": 114
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedLocation"
        ],
        "TypeDef": "Variant"
      },
      "136": {
        "TypeFields": [
          {
            "Name": "parents",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "interior",
            "TypeName": "Junctions",
            "TypeId": 137
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multilocation",
          "MultiLocation"
        ],
        "TypeDef": "Composite"
      },
      "137": {
        "Variants": [
          {
            "Name": "Here",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "X1",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 138
              }
            ],
            "Index": 1
          },
          {
            "Name": "X2",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              }
            ],
            "Index": 2
          },
          {
            "Name": "X3",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              }
            ],
            "Index": 3
          },
          {
            "Name": "X4",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              }
            ],
            "Index": 4
          },
          {
            "Name": "X5",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              }
            ],
            "Index": 5
          },
          {
            "Name": "X6",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              }
            ],
            "Index": 6
          },
          {
            "Name": "X7",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              }
            ],
            "Index": 7
          },
          {
            "Name": "X8",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              },
              {
                "TypeName": "Junction",
                "TypeId": 138
              }
            ],
            "Index": 8
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multilocation",
          "Junctions"
        ],
        "TypeDef": "Variant"
      },
      "138": {
        "Variants": [
          {
            "Name": "Parachain",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 0
          },
          {
            "Name": "AccountId32",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 139
              },
              {
                "Name": "id",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "AccountIndex64",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 139
              },
              {
                "Name": "index",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 2
          },
          {
            "Name": "AccountKey20",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 139
              },
              {
                "Name": "key",
                "TypeName": "[u8; 20]",
                "TypeId": 67
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletInstance",
            "TypeFields": [
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 4
          },
          {
            "Name": "GeneralIndex",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 84
              }
            ],
            "Index": 5
          },
          {
            "Name": "GeneralKey",
            "TypeFields": [
              {
                "TypeName": "WeakBoundedVec<u8, ConstU32<32>>",
                "TypeId": 140
              }
            ],
            "Index": 6
          },
          {
            "Name": "OnlyChild",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Plurality",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "BodyId",
                "TypeId": 141
              },
              {
                "Name": "part",
                "TypeName": "BodyPart",
                "TypeId": 142
              }
            ],
            "Index": 8
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "junction",
          "Junction"
        ],
        "TypeDef": "Variant"
      },
      "139": {
        "Variants": [
          {
            "Name": "Any",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Named",
            "TypeFields": [
              {
                "TypeName": "WeakBoundedVec<u8, ConstU32<32>>",
                "TypeId": 140
              }
            ],
            "Index": 1
          },
          {
            "Name": "Polkadot",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Kusama",
            "TypeFields": null,
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "NetworkId"
        ],
        "TypeDef": "Variant"
      },
      "140": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "weak_bounded_vec",
          "WeakBoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "141": {
        "Variants": [
          {
            "Name": "Unit",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Named",
            "TypeFields": [
              {
                "TypeName": "WeakBoundedVec<u8, ConstU32<32>>",
                "TypeId": 140
              }
            ],
            "Index": 1
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 2
          },
          {
            "Name": "Executive",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Technical",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Legislative",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Judicial",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Defense",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Administration",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "Treasury",
            "TypeFields": null,
            "Index": 9
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "BodyId"
        ],
        "TypeDef": "Variant"
      },
      "142": {
        "Variants": [
          {
            "Name": "Voice",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Members",
            "TypeFields": [
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 1
          },
          {
            "Name": "Fraction",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 2
          },
          {
            "Name": "AtLeastProportion",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 3
          },
          {
            "Name": "MoreThanProportion",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "BodyPart"
        ],
        "TypeDef": "Variant"
      },
      "143": {
        "TypeFields": [
          {
            "Name": "parents",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "interior",
            "TypeName": "Junctions",
            "TypeId": 144
          }
        ],
        "Path": [
          "staging_xcm",
          "v3",
          "multilocation",
          "MultiLocation"
        ],
        "TypeDef": "Composite"
      },
      "144": {
        "Variants": [
          {
            "Name": "Here",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "X1",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 145
              }
            ],
            "Index": 1
          },
          {
            "Name": "X2",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              }
            ],
            "Index": 2
          },
          {
            "Name": "X3",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              }
            ],
            "Index": 3
          },
          {
            "Name": "X4",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              }
            ],
            "Index": 4
          },
          {
            "Name": "X5",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              }
            ],
            "Index": 5
          },
          {
            "Name": "X6",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              }
            ],
            "Index": 6
          },
          {
            "Name": "X7",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              }
            ],
            "Index": 7
          },
          {
            "Name": "X8",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              },
              {
                "TypeName": "Junction",
                "TypeId": 145
              }
            ],
            "Index": 8
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junctions",
          "Junctions"
        ],
        "TypeDef": "Variant"
      },
      "145": {
        "Variants": [
          {
            "Name": "Parachain",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 0
          },
          {
            "Name": "AccountId32",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 146
              },
              {
                "Name": "id",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "AccountIndex64",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 146
              },
              {
                "Name": "index",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 2
          },
          {
            "Name": "AccountKey20",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 146
              },
              {
                "Name": "key",
                "TypeName": "[u8; 20]",
                "TypeId": 67
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletInstance",
            "TypeFields": [
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 4
          },
          {
            "Name": "GeneralIndex",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 84
              }
            ],
            "Index": 5
          },
          {
            "Name": "GeneralKey",
            "TypeFields": [
              {
                "Name": "length",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "data",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 6
          },
          {
            "Name": "OnlyChild",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Plurality",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "BodyId",
                "TypeId": 120
              },
              {
                "Name": "part",
                "TypeName": "BodyPart",
                "TypeId": 121
              }
            ],
            "Index": 8
          },
          {
            "Name": "GlobalConsensus",
            "TypeFields": [
              {
                "TypeName": "NetworkId",
                "TypeId": 147
              }
            ],
            "Index": 9
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junction",
          "Junction"
        ],
        "TypeDef": "Variant"
      },
      "146": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 147
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 147
          }
        ],
        "TypeDef": "Variant"
      },
      "147": {
        "Variants": [
          {
            "Name": "ByGenesis",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 0
          },
          {
            "Name": "ByFork",
            "TypeFields": [
              {
                "Name": "block_number",
                "TypeName": "u64",
                "TypeId": 11
              },
              {
                "Name": "block_hash",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "Polkadot",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Kusama",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Westend",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Rococo",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Wococo",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Ethereum",
            "TypeFields": [
              {
                "Name": "chain_id",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 7
          },
          {
            "Name": "BitcoinCore",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "BitcoinCash",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "PolkadotBulletin",
            "TypeFields": null,
            "Index": 10
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junction",
          "NetworkId"
        ],
        "TypeDef": "Variant"
      },
      "148": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::Xcm<RuntimeCall>",
                "TypeId": 149
              }
            ],
            "Index": 2
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::Xcm<RuntimeCall>",
                "TypeId": 170
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::Xcm<RuntimeCall>",
                "TypeId": 195
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedXcm"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Variant"
      },
      "149": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<RuntimeCall>>",
            "TypeId": 150
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Composite"
      },
      "150": {
        "TypeId": 151,
        "TypeDef": "Sequence"
      },
      "151": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 152
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 152
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 152
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 160
              },
              {
                "Name": "max_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 152
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 136
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 152
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 149
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_type",
                "TypeName": "OriginKind",
                "TypeId": 164
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "u64",
                "TypeId": 10
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<RuntimeCall>",
                "TypeId": 165
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorMultiLocation",
                "TypeId": 137
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 166
              },
              {
                "Name": "max_assets",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 136
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 166
              },
              {
                "Name": "max_assets",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 149
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "MultiAssetFilter",
                "TypeId": 166
              },
              {
                "Name": "receive",
                "TypeName": "MultiAssets",
                "TypeId": 152
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 166
              },
              {
                "Name": "reserve",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 149
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 166
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 149
              }
            ],
            "Index": 17
          },
          {
            "Name": "QueryHolding",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 166
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "MultiAsset",
                "TypeId": 154
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 169
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<RuntimeCall>",
                "TypeId": 149
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<RuntimeCall>",
                "TypeId": 149
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 152
              },
              {
                "Name": "ticket",
                "TypeName": "MultiLocation",
                "TypeId": 136
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Variant"
      },
      "152": {
        "TypeFields": [
          {
            "TypeName": "Vec<MultiAsset>",
            "TypeId": 153
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "MultiAssets"
        ],
        "TypeDef": "Composite"
      },
      "153": {
        "TypeId": 154,
        "TypeDef": "Sequence"
      },
      "154": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "AssetId",
            "TypeId": 155
          },
          {
            "Name": "fun",
            "TypeName": "Fungibility",
            "TypeId": 156
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "MultiAsset"
        ],
        "TypeDef": "Composite"
      },
      "155": {
        "Variants": [
          {
            "Name": "Concrete",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 136
              }
            ],
            "Index": 0
          },
          {
            "Name": "Abstract",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "AssetId"
        ],
        "TypeDef": "Variant"
      },
      "156": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 84
              }
            ],
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": [
              {
                "TypeName": "AssetInstance",
                "TypeId": 157
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "Fungibility"
        ],
        "TypeDef": "Variant"
      },
      "157": {
        "Variants": [
          {
            "Name": "Undefined",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 84
              }
            ],
            "Index": 1
          },
          {
            "Name": "Array4",
            "TypeFields": [
              {
                "TypeName": "[u8; 4]",
                "TypeId": 17
              }
            ],
            "Index": 2
          },
          {
            "Name": "Array8",
            "TypeFields": [
              {
                "TypeName": "[u8; 8]",
                "TypeId": 158
              }
            ],
            "Index": 3
          },
          {
            "Name": "Array16",
            "TypeFields": [
              {
                "TypeName": "[u8; 16]",
                "TypeId": 159
              }
            ],
            "Index": 4
          },
          {
            "Name": "Array32",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 5
          },
          {
            "Name": "Blob",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 6
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "AssetInstance"
        ],
        "TypeDef": "Variant"
      },
      "158": {
        "Length": 8,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "159": {
        "Length": 16,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "160": {
        "Variants": [
          {
            "Name": "Null",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Assets",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 152
              }
            ],
            "Index": 1
          },
          {
            "Name": "ExecutionResult",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 161
              }
            ],
            "Index": 2
          },
          {
            "Name": "Version",
            "TypeFields": [
              {
                "TypeName": "super::Version",
                "TypeId": 4
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Response"
        ],
        "TypeDef": "Variant"
      },
      "161": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 162
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 162
          }
        ],
        "TypeDef": "Variant"
      },
      "162": {
        "TypeIds": [
          4,
          163
        ],
        "TypeDef": "Tuple"
      },
      "163": {
        "Variants": [
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Unimplemented",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "UntrustedReserveLocation",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "UntrustedTeleportLocation",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "MultiLocationFull",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "MultiLocationNotInvertible",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "BadOrigin",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "InvalidLocation",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "AssetNotFound",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "FailedToTransactAsset",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "NotWithdrawable",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "LocationCannotHold",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "ExceedsMaxMessageSize",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "DestinationUnsupported",
            "TypeFields": null,
            "Index": 13
          },
          {
            "Name": "Transport",
            "TypeFields": null,
            "Index": 14
          },
          {
            "Name": "Unroutable",
            "TypeFields": null,
            "Index": 15
          },
          {
            "Name": "UnknownClaim",
            "TypeFields": null,
            "Index": 16
          },
          {
            "Name": "FailedToDecode",
            "TypeFields": null,
            "Index": 17
          },
          {
            "Name": "MaxWeightInvalid",
            "TypeFields": null,
            "Index": 18
          },
          {
            "Name": "NotHoldingFees",
            "TypeFields": null,
            "Index": 19
          },
          {
            "Name": "TooExpensive",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 21
          },
          {
            "Name": "UnhandledXcmVersion",
            "TypeFields": null,
            "Index": 22
          },
          {
            "Name": "WeightLimitReached",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 11
              }
            ],
            "Index": 23
          },
          {
            "Name": "Barrier",
            "TypeFields": null,
            "Index": 24
          },
          {
            "Name": "WeightNotComputable",
            "TypeFields": null,
            "Index": 25
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "traits",
          "Error"
        ],
        "TypeDef": "Variant"
      },
      "164": {
        "Variants": [
          {
            "Name": "Native",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "SovereignAccount",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Superuser",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Xcm",
            "TypeFields": null,
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "OriginKind"
        ],
        "TypeDef": "Variant"
      },
      "165": {
        "TypeFields": [
          {
            "Name": "encoded",
            "TypeName": "Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "xcm",
          "double_encoded",
          "DoubleEncoded"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "166": {
        "Variants": [
          {
            "Name": "Definite",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 152
              }
            ],
            "Index": 0
          },
          {
            "Name": "Wild",
            "TypeFields": [
              {
                "TypeName": "WildMultiAsset",
                "TypeId": 167
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "MultiAssetFilter"
        ],
        "TypeDef": "Variant"
      },
      "167": {
        "Variants": [
          {
            "Name": "All",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "AllOf",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 155
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 168
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "WildMultiAsset"
        ],
        "TypeDef": "Variant"
      },
      "168": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "WildFungibility"
        ],
        "TypeDef": "Variant"
      },
      "169": {
        "Variants": [
          {
            "Name": "Unlimited",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Limited",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "WeightLimit"
        ],
        "TypeDef": "Variant"
      },
      "170": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<Call>>",
            "TypeId": 171
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Composite"
      },
      "171": {
        "TypeId": 172,
        "TypeDef": "Sequence"
      },
      "172": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 179
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "querier",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 173
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 173
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 170
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_kind",
                "TypeName": "OriginKind",
                "TypeId": 164
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<Call>",
                "TypeId": 165
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorMultiLocation",
                "TypeId": 144
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 190
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 191
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 191
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 170
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "MultiAssetFilter",
                "TypeId": 191
              },
              {
                "Name": "want",
                "TypeName": "MultiAssets",
                "TypeId": 173
              },
              {
                "Name": "maximal",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 191
              },
              {
                "Name": "reserve",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 170
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 191
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 170
              }
            ],
            "Index": 17
          },
          {
            "Name": "ReportHolding",
            "TypeFields": [
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 190
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 191
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "MultiAsset",
                "TypeId": 175
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 170
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 170
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 173
              },
              {
                "Name": "ticket",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "max_response_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "BurnAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 28
          },
          {
            "Name": "ExpectAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 29
          },
          {
            "Name": "ExpectOrigin",
            "TypeFields": [
              {
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              }
            ],
            "Index": 30
          },
          {
            "Name": "ExpectError",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 180
              }
            ],
            "Index": 31
          },
          {
            "Name": "ExpectTransactStatus",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 187
              }
            ],
            "Index": 32
          },
          {
            "Name": "QueryPallet",
            "TypeFields": [
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 190
              }
            ],
            "Index": 33
          },
          {
            "Name": "ExpectPallet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "crate_major",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "min_crate_minor",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 34
          },
          {
            "Name": "ReportTransactStatus",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 190
              }
            ],
            "Index": 35
          },
          {
            "Name": "ClearTransactStatus",
            "TypeFields": null,
            "Index": 36
          },
          {
            "Name": "UniversalOrigin",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 145
              }
            ],
            "Index": 37
          },
          {
            "Name": "ExportMessage",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 147
              },
              {
                "Name": "destination",
                "TypeName": "InteriorMultiLocation",
                "TypeId": 144
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 170
              }
            ],
            "Index": 38
          },
          {
            "Name": "LockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 175
              },
              {
                "Name": "unlocker",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 39
          },
          {
            "Name": "UnlockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 175
              },
              {
                "Name": "target",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 40
          },
          {
            "Name": "NoteUnlockable",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 175
              },
              {
                "Name": "owner",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 41
          },
          {
            "Name": "RequestUnlock",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 175
              },
              {
                "Name": "locker",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 42
          },
          {
            "Name": "SetFeesMode",
            "TypeFields": [
              {
                "Name": "jit_withdraw",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 43
          },
          {
            "Name": "SetTopic",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 44
          },
          {
            "Name": "ClearTopic",
            "TypeFields": null,
            "Index": 45
          },
          {
            "Name": "AliasOrigin",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 46
          },
          {
            "Name": "UnpaidExecution",
            "TypeFields": [
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              },
              {
                "Name": "check_origin",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              }
            ],
            "Index": 47
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Variant"
      },
      "173": {
        "TypeFields": [
          {
            "TypeName": "Vec<MultiAsset>",
            "TypeId": 174
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "MultiAssets"
        ],
        "TypeDef": "Composite"
      },
      "174": {
        "TypeId": 175,
        "TypeDef": "Sequence"
      },
      "175": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "AssetId",
            "TypeId": 176
          },
          {
            "Name": "fun",
            "TypeName": "Fungibility",
            "TypeId": 177
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "MultiAsset"
        ],
        "TypeDef": "Composite"
      },
      "176": {
        "Variants": [
          {
            "Name": "Concrete",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 0
          },
          {
            "Name": "Abstract",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "AssetId"
        ],
        "TypeDef": "Variant"
      },
      "177": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 84
              }
            ],
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": [
              {
                "TypeName": "AssetInstance",
                "TypeId": 178
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "Fungibility"
        ],
        "TypeDef": "Variant"
      },
      "178": {
        "Variants": [
          {
            "Name": "Undefined",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 84
              }
            ],
            "Index": 1
          },
          {
            "Name": "Array4",
            "TypeFields": [
              {
                "TypeName": "[u8; 4]",
                "TypeId": 17
              }
            ],
            "Index": 2
          },
          {
            "Name": "Array8",
            "TypeFields": [
              {
                "TypeName": "[u8; 8]",
                "TypeId": 158
              }
            ],
            "Index": 3
          },
          {
            "Name": "Array16",
            "TypeFields": [
              {
                "TypeName": "[u8; 16]",
                "TypeId": 159
              }
            ],
            "Index": 4
          },
          {
            "Name": "Array32",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "AssetInstance"
        ],
        "TypeDef": "Variant"
      },
      "179": {
        "Variants": [
          {
            "Name": "Null",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Assets",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 1
          },
          {
            "Name": "ExecutionResult",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 180
              }
            ],
            "Index": 2
          },
          {
            "Name": "Version",
            "TypeFields": [
              {
                "TypeName": "super::Version",
                "TypeId": 4
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletsInfo",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<PalletInfo, MaxPalletsInfo>",
                "TypeId": 183
              }
            ],
            "Index": 4
          },
          {
            "Name": "DispatchResult",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 187
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Response"
        ],
        "TypeDef": "Variant"
      },
      "180": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 181
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 181
          }
        ],
        "TypeDef": "Variant"
      },
      "181": {
        "TypeIds": [
          4,
          182
        ],
        "TypeDef": "Tuple"
      },
      "182": {
        "Variants": [
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Unimplemented",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "UntrustedReserveLocation",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "UntrustedTeleportLocation",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "LocationFull",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "LocationNotInvertible",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "BadOrigin",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "InvalidLocation",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "AssetNotFound",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "FailedToTransactAsset",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "NotWithdrawable",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "LocationCannotHold",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "ExceedsMaxMessageSize",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "DestinationUnsupported",
            "TypeFields": null,
            "Index": 13
          },
          {
            "Name": "Transport",
            "TypeFields": null,
            "Index": 14
          },
          {
            "Name": "Unroutable",
            "TypeFields": null,
            "Index": 15
          },
          {
            "Name": "UnknownClaim",
            "TypeFields": null,
            "Index": 16
          },
          {
            "Name": "FailedToDecode",
            "TypeFields": null,
            "Index": 17
          },
          {
            "Name": "MaxWeightInvalid",
            "TypeFields": null,
            "Index": 18
          },
          {
            "Name": "NotHoldingFees",
            "TypeFields": null,
            "Index": 19
          },
          {
            "Name": "TooExpensive",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 21
          },
          {
            "Name": "ExpectationFalse",
            "TypeFields": null,
            "Index": 22
          },
          {
            "Name": "PalletNotFound",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "NameMismatch",
            "TypeFields": null,
            "Index": 24
          },
          {
            "Name": "VersionIncompatible",
            "TypeFields": null,
            "Index": 25
          },
          {
            "Name": "HoldingWouldOverflow",
            "TypeFields": null,
            "Index": 26
          },
          {
            "Name": "ExportError",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "ReanchorFailed",
            "TypeFields": null,
            "Index": 28
          },
          {
            "Name": "NoDeal",
            "TypeFields": null,
            "Index": 29
          },
          {
            "Name": "FeesNotMet",
            "TypeFields": null,
            "Index": 30
          },
          {
            "Name": "LockError",
            "TypeFields": null,
            "Index": 31
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 32
          },
          {
            "Name": "Unanchored",
            "TypeFields": null,
            "Index": 33
          },
          {
            "Name": "NotDepositable",
            "TypeFields": null,
            "Index": 34
          },
          {
            "Name": "UnhandledXcmVersion",
            "TypeFields": null,
            "Index": 35
          },
          {
            "Name": "WeightLimitReached",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 36
          },
          {
            "Name": "Barrier",
            "TypeFields": null,
            "Index": 37
          },
          {
            "Name": "WeightNotComputable",
            "TypeFields": null,
            "Index": 38
          },
          {
            "Name": "ExceedsStackLimit",
            "TypeFields": null,
            "Index": 39
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "traits",
          "Error"
        ],
        "TypeDef": "Variant"
      },
      "183": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 186
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 184
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "184": {
        "TypeFields": [
          {
            "Name": "index",
            "TypeName": "u32",
            "TypeId": 66
          },
          {
            "Name": "name",
            "TypeName": "BoundedVec<u8, MaxPalletNameLen>",
            "TypeId": 185
          },
          {
            "Name": "module_name",
            "TypeName": "BoundedVec<u8, MaxPalletNameLen>",
            "TypeId": 185
          },
          {
            "Name": "major",
            "TypeName": "u32",
            "TypeId": 66
          },
          {
            "Name": "minor",
            "TypeName": "u32",
            "TypeId": 66
          },
          {
            "Name": "patch",
            "TypeName": "u32",
            "TypeId": 66
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "PalletInfo"
        ],
        "TypeDef": "Composite"
      },
      "185": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "186": {
        "TypeId": 184,
        "TypeDef": "Sequence"
      },
      "187": {
        "Variants": [
          {
            "Name": "Success",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Error",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                "TypeId": 188
              }
            ],
            "Index": 1
          },
          {
            "Name": "TruncatedError",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                "TypeId": 188
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "MaybeErrorCode"
        ],
        "TypeDef": "Variant"
      },
      "188": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "189": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 143
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 143
          }
        ],
        "TypeDef": "Variant"
      },
      "190": {
        "TypeFields": [
          {
            "Name": "destination",
            "TypeName": "MultiLocation",
            "TypeId": 143
          },
          {
            "Name": "query_id",
            "TypeName": "QueryId",
            "TypeId": 10
          },
          {
            "Name": "max_weight",
            "TypeName": "Weight",
            "TypeId": 9
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "QueryResponseInfo"
        ],
        "TypeDef": "Composite"
      },
      "191": {
        "Variants": [
          {
            "Name": "Definite",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 0
          },
          {
            "Name": "Wild",
            "TypeFields": [
              {
                "TypeName": "WildMultiAsset",
                "TypeId": 192
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "MultiAssetFilter"
        ],
        "TypeDef": "Variant"
      },
      "192": {
        "Variants": [
          {
            "Name": "All",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "AllOf",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 176
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 193
              }
            ],
            "Index": 1
          },
          {
            "Name": "AllCounted",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 2
          },
          {
            "Name": "AllOfCounted",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 176
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 193
              },
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "WildMultiAsset"
        ],
        "TypeDef": "Variant"
      },
      "193": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "WildFungibility"
        ],
        "TypeDef": "Variant"
      },
      "194": {
        "Variants": [
          {
            "Name": "Unlimited",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Limited",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "WeightLimit"
        ],
        "TypeDef": "Variant"
      },
      "195": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<Call>>",
            "TypeId": 196
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Composite"
      },
      "196": {
        "TypeId": 197,
        "TypeDef": "Sequence"
      },
      "197": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 204
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "querier",
                "TypeName": "Option<Location>",
                "TypeId": 209
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "beneficiary",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 195
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_kind",
                "TypeName": "OriginKind",
                "TypeId": 164
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<Call>",
                "TypeId": 165
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorLocation",
                "TypeId": 115
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 210
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 211
              },
              {
                "Name": "beneficiary",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 211
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 195
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "AssetFilter",
                "TypeId": 211
              },
              {
                "Name": "want",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "maximal",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 211
              },
              {
                "Name": "reserve",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 195
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 211
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 195
              }
            ],
            "Index": 17
          },
          {
            "Name": "ReportHolding",
            "TypeFields": [
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 210
              },
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 211
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 195
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 195
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "ticket",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "max_response_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "BurnAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 28
          },
          {
            "Name": "ExpectAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 29
          },
          {
            "Name": "ExpectOrigin",
            "TypeFields": [
              {
                "TypeName": "Option<Location>",
                "TypeId": 209
              }
            ],
            "Index": 30
          },
          {
            "Name": "ExpectError",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 180
              }
            ],
            "Index": 31
          },
          {
            "Name": "ExpectTransactStatus",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 187
              }
            ],
            "Index": 32
          },
          {
            "Name": "QueryPallet",
            "TypeFields": [
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 210
              }
            ],
            "Index": 33
          },
          {
            "Name": "ExpectPallet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "crate_major",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "min_crate_minor",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 34
          },
          {
            "Name": "ReportTransactStatus",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 210
              }
            ],
            "Index": 35
          },
          {
            "Name": "ClearTransactStatus",
            "TypeFields": null,
            "Index": 36
          },
          {
            "Name": "UniversalOrigin",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 117
              }
            ],
            "Index": 37
          },
          {
            "Name": "ExportMessage",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 119
              },
              {
                "Name": "destination",
                "TypeName": "InteriorLocation",
                "TypeId": 115
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 195
              }
            ],
            "Index": 38
          },
          {
            "Name": "LockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "unlocker",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 39
          },
          {
            "Name": "UnlockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "target",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 40
          },
          {
            "Name": "NoteUnlockable",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "owner",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 41
          },
          {
            "Name": "RequestUnlock",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "locker",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 42
          },
          {
            "Name": "SetFeesMode",
            "TypeFields": [
              {
                "Name": "jit_withdraw",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 43
          },
          {
            "Name": "SetTopic",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 44
          },
          {
            "Name": "ClearTopic",
            "TypeFields": null,
            "Index": 45
          },
          {
            "Name": "AliasOrigin",
            "TypeFields": [
              {
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 46
          },
          {
            "Name": "UnpaidExecution",
            "TypeFields": [
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              },
              {
                "Name": "check_origin",
                "TypeName": "Option<Location>",
                "TypeId": 209
              }
            ],
            "Index": 47
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Variant"
      },
      "198": {
        "TypeFields": [
          {
            "TypeName": "Vec<Asset>",
            "TypeId": 199
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "Assets"
        ],
        "TypeDef": "Composite"
      },
      "199": {
        "TypeId": 200,
        "TypeDef": "Sequence"
      },
      "200": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "AssetId",
            "TypeId": 201
          },
          {
            "Name": "fun",
            "TypeName": "Fungibility",
            "TypeId": 202
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "Asset"
        ],
        "TypeDef": "Composite"
      },
      "201": {
        "TypeFields": [
          {
            "TypeName": "Location",
            "TypeId": 114
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "AssetId"
        ],
        "TypeDef": "Composite"
      },
      "202": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 84
              }
            ],
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": [
              {
                "TypeName": "AssetInstance",
                "TypeId": 203
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "Fungibility"
        ],
        "TypeDef": "Variant"
      },
      "203": {
        "Variants": [
          {
            "Name": "Undefined",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 84
              }
            ],
            "Index": 1
          },
          {
            "Name": "Array4",
            "TypeFields": [
              {
                "TypeName": "[u8; 4]",
                "TypeId": 17
              }
            ],
            "Index": 2
          },
          {
            "Name": "Array8",
            "TypeFields": [
              {
                "TypeName": "[u8; 8]",
                "TypeId": 158
              }
            ],
            "Index": 3
          },
          {
            "Name": "Array16",
            "TypeFields": [
              {
                "TypeName": "[u8; 16]",
                "TypeId": 159
              }
            ],
            "Index": 4
          },
          {
            "Name": "Array32",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "AssetInstance"
        ],
        "TypeDef": "Variant"
      },
      "204": {
        "Variants": [
          {
            "Name": "Null",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Assets",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 1
          },
          {
            "Name": "ExecutionResult",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 180
              }
            ],
            "Index": 2
          },
          {
            "Name": "Version",
            "TypeFields": [
              {
                "TypeName": "super::Version",
                "TypeId": 4
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletsInfo",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<PalletInfo, MaxPalletsInfo>",
                "TypeId": 205
              }
            ],
            "Index": 4
          },
          {
            "Name": "DispatchResult",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 187
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "Response"
        ],
        "TypeDef": "Variant"
      },
      "205": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 208
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 206
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "206": {
        "TypeFields": [
          {
            "Name": "index",
            "TypeName": "u32",
            "TypeId": 66
          },
          {
            "Name": "name",
            "TypeName": "BoundedVec<u8, MaxPalletNameLen>",
            "TypeId": 207
          },
          {
            "Name": "module_name",
            "TypeName": "BoundedVec<u8, MaxPalletNameLen>",
            "TypeId": 207
          },
          {
            "Name": "major",
            "TypeName": "u32",
            "TypeId": 66
          },
          {
            "Name": "minor",
            "TypeName": "u32",
            "TypeId": 66
          },
          {
            "Name": "patch",
            "TypeName": "u32",
            "TypeId": 66
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "PalletInfo"
        ],
        "TypeDef": "Composite"
      },
      "207": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "208": {
        "TypeId": 206,
        "TypeDef": "Sequence"
      },
      "209": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 114
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 114
          }
        ],
        "TypeDef": "Variant"
      },
      "210": {
        "TypeFields": [
          {
            "Name": "destination",
            "TypeName": "Location",
            "TypeId": 114
          },
          {
            "Name": "query_id",
            "TypeName": "QueryId",
            "TypeId": 10
          },
          {
            "Name": "max_weight",
            "TypeName": "Weight",
            "TypeId": 9
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "QueryResponseInfo"
        ],
        "TypeDef": "Composite"
      },
      "211": {
        "Variants": [
          {
            "Name": "Definite",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 0
          },
          {
            "Name": "Wild",
            "TypeFields": [
              {
                "TypeName": "WildAsset",
                "TypeId": 212
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "AssetFilter"
        ],
        "TypeDef": "Variant"
      },
      "212": {
        "Variants": [
          {
            "Name": "All",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "AllOf",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 201
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 213
              }
            ],
            "Index": 1
          },
          {
            "Name": "AllCounted",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 2
          },
          {
            "Name": "AllOfCounted",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 201
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 213
              },
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "WildAsset"
        ],
        "TypeDef": "Variant"
      },
      "213": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "WildFungibility"
        ],
        "TypeDef": "Variant"
      },
      "214": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::MultiAssets",
                "TypeId": 152
              }
            ],
            "Index": 1
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::Assets",
                "TypeId": 198
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedAssets"
        ],
        "TypeDef": "Variant"
      },
      "215": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::Xcm<RuntimeCall>",
                "TypeId": 216
              }
            ],
            "Index": 2
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::Xcm<RuntimeCall>",
                "TypeId": 220
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::Xcm<RuntimeCall>",
                "TypeId": 223
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedXcm"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Variant"
      },
      "216": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<RuntimeCall>>",
            "TypeId": 217
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Composite"
      },
      "217": {
        "TypeId": 218,
        "TypeDef": "Sequence"
      },
      "218": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 152
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 152
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 152
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 160
              },
              {
                "Name": "max_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 152
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 136
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 152
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 149
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_type",
                "TypeName": "OriginKind",
                "TypeId": 164
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "u64",
                "TypeId": 10
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<RuntimeCall>",
                "TypeId": 219
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorMultiLocation",
                "TypeId": 137
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 166
              },
              {
                "Name": "max_assets",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 136
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 166
              },
              {
                "Name": "max_assets",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 149
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "MultiAssetFilter",
                "TypeId": 166
              },
              {
                "Name": "receive",
                "TypeName": "MultiAssets",
                "TypeId": 152
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 166
              },
              {
                "Name": "reserve",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 149
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 166
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 149
              }
            ],
            "Index": 17
          },
          {
            "Name": "QueryHolding",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 166
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "MultiAsset",
                "TypeId": 154
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 169
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<RuntimeCall>",
                "TypeId": 216
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<RuntimeCall>",
                "TypeId": 216
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 152
              },
              {
                "Name": "ticket",
                "TypeName": "MultiLocation",
                "TypeId": 136
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Variant"
      },
      "219": {
        "TypeFields": [
          {
            "Name": "encoded",
            "TypeName": "Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "xcm",
          "double_encoded",
          "DoubleEncoded"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "220": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<Call>>",
            "TypeId": 221
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Composite"
      },
      "221": {
        "TypeId": 222,
        "TypeDef": "Sequence"
      },
      "222": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 179
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "querier",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 173
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 173
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 170
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_kind",
                "TypeName": "OriginKind",
                "TypeId": 164
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<Call>",
                "TypeId": 219
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorMultiLocation",
                "TypeId": 144
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 190
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 191
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 191
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 170
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "MultiAssetFilter",
                "TypeId": 191
              },
              {
                "Name": "want",
                "TypeName": "MultiAssets",
                "TypeId": 173
              },
              {
                "Name": "maximal",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 191
              },
              {
                "Name": "reserve",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 170
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 191
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 170
              }
            ],
            "Index": 17
          },
          {
            "Name": "ReportHolding",
            "TypeFields": [
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 190
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 191
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "MultiAsset",
                "TypeId": 175
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 220
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 220
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 173
              },
              {
                "Name": "ticket",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "max_response_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "BurnAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 28
          },
          {
            "Name": "ExpectAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 173
              }
            ],
            "Index": 29
          },
          {
            "Name": "ExpectOrigin",
            "TypeFields": [
              {
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              }
            ],
            "Index": 30
          },
          {
            "Name": "ExpectError",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 180
              }
            ],
            "Index": 31
          },
          {
            "Name": "ExpectTransactStatus",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 187
              }
            ],
            "Index": 32
          },
          {
            "Name": "QueryPallet",
            "TypeFields": [
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 190
              }
            ],
            "Index": 33
          },
          {
            "Name": "ExpectPallet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "crate_major",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "min_crate_minor",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 34
          },
          {
            "Name": "ReportTransactStatus",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 190
              }
            ],
            "Index": 35
          },
          {
            "Name": "ClearTransactStatus",
            "TypeFields": null,
            "Index": 36
          },
          {
            "Name": "UniversalOrigin",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 145
              }
            ],
            "Index": 37
          },
          {
            "Name": "ExportMessage",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 147
              },
              {
                "Name": "destination",
                "TypeName": "InteriorMultiLocation",
                "TypeId": 144
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 170
              }
            ],
            "Index": 38
          },
          {
            "Name": "LockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 175
              },
              {
                "Name": "unlocker",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 39
          },
          {
            "Name": "UnlockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 175
              },
              {
                "Name": "target",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 40
          },
          {
            "Name": "NoteUnlockable",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 175
              },
              {
                "Name": "owner",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 41
          },
          {
            "Name": "RequestUnlock",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 175
              },
              {
                "Name": "locker",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 42
          },
          {
            "Name": "SetFeesMode",
            "TypeFields": [
              {
                "Name": "jit_withdraw",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 43
          },
          {
            "Name": "SetTopic",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 44
          },
          {
            "Name": "ClearTopic",
            "TypeFields": null,
            "Index": 45
          },
          {
            "Name": "AliasOrigin",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 46
          },
          {
            "Name": "UnpaidExecution",
            "TypeFields": [
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              },
              {
                "Name": "check_origin",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              }
            ],
            "Index": 47
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Variant"
      },
      "223": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<Call>>",
            "TypeId": 224
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Composite"
      },
      "224": {
        "TypeId": 225,
        "TypeDef": "Sequence"
      },
      "225": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 204
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "querier",
                "TypeName": "Option<Location>",
                "TypeId": 209
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "beneficiary",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 195
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_kind",
                "TypeName": "OriginKind",
                "TypeId": 164
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<Call>",
                "TypeId": 219
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorLocation",
                "TypeId": 115
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 210
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 211
              },
              {
                "Name": "beneficiary",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 211
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 195
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "AssetFilter",
                "TypeId": 211
              },
              {
                "Name": "want",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "maximal",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 211
              },
              {
                "Name": "reserve",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 195
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 211
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 195
              }
            ],
            "Index": 17
          },
          {
            "Name": "ReportHolding",
            "TypeFields": [
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 210
              },
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 211
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 223
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 223
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "ticket",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 10
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "max_response_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "BurnAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 28
          },
          {
            "Name": "ExpectAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 29
          },
          {
            "Name": "ExpectOrigin",
            "TypeFields": [
              {
                "TypeName": "Option<Location>",
                "TypeId": 209
              }
            ],
            "Index": 30
          },
          {
            "Name": "ExpectError",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 180
              }
            ],
            "Index": 31
          },
          {
            "Name": "ExpectTransactStatus",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 187
              }
            ],
            "Index": 32
          },
          {
            "Name": "QueryPallet",
            "TypeFields": [
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 210
              }
            ],
            "Index": 33
          },
          {
            "Name": "ExpectPallet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "crate_major",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "min_crate_minor",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 34
          },
          {
            "Name": "ReportTransactStatus",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 210
              }
            ],
            "Index": 35
          },
          {
            "Name": "ClearTransactStatus",
            "TypeFields": null,
            "Index": 36
          },
          {
            "Name": "UniversalOrigin",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 117
              }
            ],
            "Index": 37
          },
          {
            "Name": "ExportMessage",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 119
              },
              {
                "Name": "destination",
                "TypeName": "InteriorLocation",
                "TypeId": 115
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 195
              }
            ],
            "Index": 38
          },
          {
            "Name": "LockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "unlocker",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 39
          },
          {
            "Name": "UnlockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "target",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 40
          },
          {
            "Name": "NoteUnlockable",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "owner",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 41
          },
          {
            "Name": "RequestUnlock",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "locker",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 42
          },
          {
            "Name": "SetFeesMode",
            "TypeFields": [
              {
                "Name": "jit_withdraw",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 43
          },
          {
            "Name": "SetTopic",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 44
          },
          {
            "Name": "ClearTopic",
            "TypeFields": null,
            "Index": 45
          },
          {
            "Name": "AliasOrigin",
            "TypeFields": [
              {
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 46
          },
          {
            "Name": "UnpaidExecution",
            "TypeFields": [
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              },
              {
                "Name": "check_origin",
                "TypeName": "Option<Location>",
                "TypeId": 209
              }
            ],
            "Index": 47
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Variant"
      },
      "226": {
        "Variants": null,
        "Path": [
          "cumulus_pallet_xcm",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "227": {
        "Variants": [
          {
            "Name": "reap_page",
            "TypeFields": [
              {
                "Name": "message_origin",
                "TypeName": "MessageOriginOf<T>",
                "TypeId": 228
              },
              {
                "Name": "page_index",
                "TypeName": "PageIndex",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::reap_page`]."
            ]
          },
          {
            "Name": "execute_overweight",
            "TypeFields": [
              {
                "Name": "message_origin",
                "TypeName": "MessageOriginOf<T>",
                "TypeId": 228
              },
              {
                "Name": "page",
                "TypeName": "PageIndex",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "T::Size",
                "TypeId": 4
              },
              {
                "Name": "weight_limit",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::execute_overweight`]."
            ]
          }
        ],
        "Path": [
          "pallet_message_queue",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "228": {
        "Variants": [
          {
            "Name": "Here",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Parent",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Sibling",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 77
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "cumulus_primitives_core",
          "AggregateMessageOrigin"
        ],
        "TypeDef": "Variant"
      },
      "229": {
        "Variants": [
          {
            "Name": "batch",
            "TypeFields": [
              {
                "Name": "calls",
                "TypeName": "Vec<<T as Config>::RuntimeCall>",
                "TypeId": 230
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::batch`]."
            ]
          },
          {
            "Name": "as_derivative",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u16",
                "TypeId": 56
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 58
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::as_derivative`]."
            ]
          },
          {
            "Name": "batch_all",
            "TypeFields": [
              {
                "Name": "calls",
                "TypeName": "Vec<<T as Config>::RuntimeCall>",
                "TypeId": 230
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::batch_all`]."
            ]
          },
          {
            "Name": "dispatch_as",
            "TypeFields": [
              {
                "Name": "as_origin",
                "TypeName": "Box<T::PalletsOrigin>",
                "TypeId": 108
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 58
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::dispatch_as`]."
            ]
          },
          {
            "Name": "force_batch",
            "TypeFields": [
              {
                "Name": "calls",
                "TypeName": "Vec<<T as Config>::RuntimeCall>",
                "TypeId": 230
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::force_batch`]."
            ]
          },
          {
            "Name": "with_weight",
            "TypeFields": [
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 58
              },
              {
                "Name": "weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::with_weight`]."
            ]
          }
        ],
        "Path": [
          "pallet_utility",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "230": {
        "TypeId": 58,
        "TypeDef": "Sequence"
      },
      "231": {
        "Variants": [
          {
            "Name": "schedule",
            "TypeFields": [
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "maybe_periodic",
                "TypeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                "TypeId": 232
              },
              {
                "Name": "priority",
                "TypeName": "schedule::Priority",
                "TypeId": 2
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 58
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::schedule`]."
            ]
          },
          {
            "Name": "cancel",
            "TypeFields": [
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::cancel`]."
            ]
          },
          {
            "Name": "schedule_named",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "TaskName",
                "TypeId": 1
              },
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "maybe_periodic",
                "TypeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                "TypeId": 232
              },
              {
                "Name": "priority",
                "TypeName": "schedule::Priority",
                "TypeId": 2
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 58
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::schedule_named`]."
            ]
          },
          {
            "Name": "cancel_named",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "TaskName",
                "TypeId": 1
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::cancel_named`]."
            ]
          },
          {
            "Name": "schedule_after",
            "TypeFields": [
              {
                "Name": "after",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "maybe_periodic",
                "TypeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                "TypeId": 232
              },
              {
                "Name": "priority",
                "TypeName": "schedule::Priority",
                "TypeId": 2
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 58
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::schedule_after`]."
            ]
          },
          {
            "Name": "schedule_named_after",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "TaskName",
                "TypeId": 1
              },
              {
                "Name": "after",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "maybe_periodic",
                "TypeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                "TypeId": 232
              },
              {
                "Name": "priority",
                "TypeName": "schedule::Priority",
                "TypeId": 2
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 58
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::schedule_named_after`]."
            ]
          }
        ],
        "Path": [
          "pallet_scheduler",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "232": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 233
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 233
          }
        ],
        "TypeDef": "Variant"
      },
      "233": {
        "TypeIds": [
          4,
          4
        ],
        "TypeDef": "Tuple"
      },
      "234": {
        "Variants": [
          {
            "Name": "proxy",
            "TypeFields": [
              {
                "Name": "real",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "force_proxy_type",
                "TypeName": "Option<T::ProxyType>",
                "TypeId": 235
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 58
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::proxy`]."
            ]
          },
          {
            "Name": "add_proxy",
            "TypeFields": [
              {
                "Name": "delegate",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 236
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::add_proxy`]."
            ]
          },
          {
            "Name": "remove_proxy",
            "TypeFields": [
              {
                "Name": "delegate",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 236
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::remove_proxy`]."
            ]
          },
          {
            "Name": "remove_proxies",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "See [`Pallet::remove_proxies`]."
            ]
          },
          {
            "Name": "create_pure",
            "TypeFields": [
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 236
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "u16",
                "TypeId": 56
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::create_pure`]."
            ]
          },
          {
            "Name": "kill_pure",
            "TypeFields": [
              {
                "Name": "spawner",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 236
              },
              {
                "Name": "index",
                "TypeName": "u16",
                "TypeId": 56
              },
              {
                "Name": "height",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 66
              },
              {
                "Name": "ext_index",
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::kill_pure`]."
            ]
          },
          {
            "Name": "announce",
            "TypeFields": [
              {
                "Name": "real",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::announce`]."
            ]
          },
          {
            "Name": "remove_announcement",
            "TypeFields": [
              {
                "Name": "real",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::remove_announcement`]."
            ]
          },
          {
            "Name": "reject_announcement",
            "TypeFields": [
              {
                "Name": "delegate",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::reject_announcement`]."
            ]
          },
          {
            "Name": "proxy_announced",
            "TypeFields": [
              {
                "Name": "delegate",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "real",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "force_proxy_type",
                "TypeName": "Option<T::ProxyType>",
                "TypeId": 235
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 58
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::proxy_announced`]."
            ]
          }
        ],
        "Path": [
          "pallet_proxy",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "235": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 236
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 236
          }
        ],
        "TypeDef": "Variant"
      },
      "236": {
        "Variants": [
          {
            "Name": "Any",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NonTransfer",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Governance",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "CancelProxy",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "IdentityJudgement",
            "TypeFields": null,
            "Index": 4
          }
        ],
        "Path": [
          "bifrost_polkadot_runtime",
          "ProxyType"
        ],
        "TypeDef": "Variant"
      },
      "237": {
        "Variants": [
          {
            "Name": "as_multi_threshold_1",
            "TypeFields": [
              {
                "Name": "other_signatories",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 58
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::as_multi_threshold_1`]."
            ]
          },
          {
            "Name": "as_multi",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "u16",
                "TypeId": 56
              },
              {
                "Name": "other_signatories",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              },
              {
                "Name": "maybe_timepoint",
                "TypeName": "Option<Timepoint<BlockNumberFor<T>>>",
                "TypeId": 238
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 58
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::as_multi`]."
            ]
          },
          {
            "Name": "approve_as_multi",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "u16",
                "TypeId": 56
              },
              {
                "Name": "other_signatories",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              },
              {
                "Name": "maybe_timepoint",
                "TypeName": "Option<Timepoint<BlockNumberFor<T>>>",
                "TypeId": 238
              },
              {
                "Name": "call_hash",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::approve_as_multi`]."
            ]
          },
          {
            "Name": "cancel_as_multi",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "u16",
                "TypeId": 56
              },
              {
                "Name": "other_signatories",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              },
              {
                "Name": "timepoint",
                "TypeName": "Timepoint<BlockNumberFor<T>>",
                "TypeId": 239
              },
              {
                "Name": "call_hash",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::cancel_as_multi`]."
            ]
          }
        ],
        "Path": [
          "pallet_multisig",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "238": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 239
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 239
          }
        ],
        "TypeDef": "Variant"
      },
      "239": {
        "TypeFields": [
          {
            "Name": "height",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "index",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_multisig",
          "Timepoint"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "240": {
        "Variants": [
          {
            "Name": "add_registrar",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_registrar`]."
            ]
          },
          {
            "Name": "set_identity",
            "TypeFields": [
              {
                "Name": "info",
                "TypeName": "Box<T::IdentityInformation>",
                "TypeId": 241
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_identity`]."
            ]
          },
          {
            "Name": "set_subs",
            "TypeFields": [
              {
                "Name": "subs",
                "TypeName": "Vec<(T::AccountId, Data)>",
                "TypeId": 275
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::set_subs`]."
            ]
          },
          {
            "Name": "clear_identity",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "See [`Pallet::clear_identity`]."
            ]
          },
          {
            "Name": "request_judgement",
            "TypeFields": [
              {
                "Name": "reg_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 66
              },
              {
                "Name": "max_fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::request_judgement`]."
            ]
          },
          {
            "Name": "cancel_request",
            "TypeFields": [
              {
                "Name": "reg_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::cancel_request`]."
            ]
          },
          {
            "Name": "set_fee",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "RegistrarIndex",
                "TypeId": 66
              },
              {
                "Name": "fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::set_fee`]."
            ]
          },
          {
            "Name": "set_account_id",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "RegistrarIndex",
                "TypeId": 66
              },
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::set_account_id`]."
            ]
          },
          {
            "Name": "set_fields",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "RegistrarIndex",
                "TypeId": 66
              },
              {
                "Name": "fields",
                "TypeName": "<T::IdentityInformation as IdentityInformationProvider>::\nFieldsIdentifier",
                "TypeId": 11
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::set_fields`]."
            ]
          },
          {
            "Name": "provide_judgement",
            "TypeFields": [
              {
                "Name": "reg_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 66
              },
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "judgement",
                "TypeName": "Judgement<BalanceOf<T>>",
                "TypeId": 277
              },
              {
                "Name": "identity",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::provide_judgement`]."
            ]
          },
          {
            "Name": "kill_identity",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::kill_identity`]."
            ]
          },
          {
            "Name": "add_sub",
            "TypeFields": [
              {
                "Name": "sub",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "data",
                "TypeName": "Data",
                "TypeId": 244
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::add_sub`]."
            ]
          },
          {
            "Name": "rename_sub",
            "TypeFields": [
              {
                "Name": "sub",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "data",
                "TypeName": "Data",
                "TypeId": 244
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::rename_sub`]."
            ]
          },
          {
            "Name": "remove_sub",
            "TypeFields": [
              {
                "Name": "sub",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::remove_sub`]."
            ]
          },
          {
            "Name": "quit_sub",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "See [`Pallet::quit_sub`]."
            ]
          },
          {
            "Name": "add_username_authority",
            "TypeFields": [
              {
                "Name": "authority",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "suffix",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "allocation",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::add_username_authority`]."
            ]
          },
          {
            "Name": "remove_username_authority",
            "TypeFields": [
              {
                "Name": "authority",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::remove_username_authority`]."
            ]
          },
          {
            "Name": "set_username_for",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "username",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "signature",
                "TypeName": "Option<T::OffchainSignature>",
                "TypeId": 278
              }
            ],
            "Index": 17,
            "Docs": [
              "See [`Pallet::set_username_for`]."
            ]
          },
          {
            "Name": "accept_username",
            "TypeFields": [
              {
                "Name": "username",
                "TypeName": "Username<T>",
                "TypeId": 285
              }
            ],
            "Index": 18,
            "Docs": [
              "See [`Pallet::accept_username`]."
            ]
          },
          {
            "Name": "remove_expired_approval",
            "TypeFields": [
              {
                "Name": "username",
                "TypeName": "Username<T>",
                "TypeId": 285
              }
            ],
            "Index": 19,
            "Docs": [
              "See [`Pallet::remove_expired_approval`]."
            ]
          },
          {
            "Name": "set_primary_username",
            "TypeFields": [
              {
                "Name": "username",
                "TypeName": "Username<T>",
                "TypeId": 285
              }
            ],
            "Index": 20,
            "Docs": [
              "See [`Pallet::set_primary_username`]."
            ]
          },
          {
            "Name": "remove_dangling_username",
            "TypeFields": [
              {
                "Name": "username",
                "TypeName": "Username<T>",
                "TypeId": 285
              }
            ],
            "Index": 21,
            "Docs": [
              "See [`Pallet::remove_dangling_username`]."
            ]
          }
        ],
        "Path": [
          "pallet_identity",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Identity pallet declaration."
        ]
      },
      "241": {
        "TypeFields": [
          {
            "Name": "additional",
            "TypeName": "BoundedVec<(Data, Data), FieldLimit>",
            "TypeId": 242
          },
          {
            "Name": "display",
            "TypeName": "Data",
            "TypeId": 244
          },
          {
            "Name": "legal",
            "TypeName": "Data",
            "TypeId": 244
          },
          {
            "Name": "web",
            "TypeName": "Data",
            "TypeId": 244
          },
          {
            "Name": "riot",
            "TypeName": "Data",
            "TypeId": 244
          },
          {
            "Name": "email",
            "TypeName": "Data",
            "TypeId": 244
          },
          {
            "Name": "pgp_fingerprint",
            "TypeName": "Option<[u8; 20]>",
            "TypeId": 274
          },
          {
            "Name": "image",
            "TypeName": "Data",
            "TypeId": 244
          },
          {
            "Name": "twitter",
            "TypeName": "Data",
            "TypeId": 244
          }
        ],
        "Path": [
          "pallet_identity",
          "legacy",
          "IdentityInfo"
        ],
        "TypeParams": [
          {
            "Name": "FieldLimit"
          }
        ],
        "TypeDef": "Composite"
      },
      "242": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 273
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 243
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "243": {
        "TypeIds": [
          244,
          244
        ],
        "TypeDef": "Tuple"
      },
      "244": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Raw0",
            "TypeFields": [
              {
                "TypeId": 245
              }
            ],
            "Index": 1
          },
          {
            "Name": "Raw1",
            "TypeFields": [
              {
                "TypeId": 246
              }
            ],
            "Index": 2
          },
          {
            "Name": "Raw2",
            "TypeFields": [
              {
                "TypeId": 247
              }
            ],
            "Index": 3
          },
          {
            "Name": "Raw3",
            "TypeFields": [
              {
                "TypeId": 248
              }
            ],
            "Index": 4
          },
          {
            "Name": "Raw4",
            "TypeFields": [
              {
                "TypeId": 17
              }
            ],
            "Index": 5
          },
          {
            "Name": "Raw5",
            "TypeFields": [
              {
                "TypeId": 249
              }
            ],
            "Index": 6
          },
          {
            "Name": "Raw6",
            "TypeFields": [
              {
                "TypeId": 250
              }
            ],
            "Index": 7
          },
          {
            "Name": "Raw7",
            "TypeFields": [
              {
                "TypeId": 251
              }
            ],
            "Index": 8
          },
          {
            "Name": "Raw8",
            "TypeFields": [
              {
                "TypeId": 158
              }
            ],
            "Index": 9
          },
          {
            "Name": "Raw9",
            "TypeFields": [
              {
                "TypeId": 252
              }
            ],
            "Index": 10
          },
          {
            "Name": "Raw10",
            "TypeFields": [
              {
                "TypeId": 253
              }
            ],
            "Index": 11
          },
          {
            "Name": "Raw11",
            "TypeFields": [
              {
                "TypeId": 254
              }
            ],
            "Index": 12
          },
          {
            "Name": "Raw12",
            "TypeFields": [
              {
                "TypeId": 255
              }
            ],
            "Index": 13
          },
          {
            "Name": "Raw13",
            "TypeFields": [
              {
                "TypeId": 256
              }
            ],
            "Index": 14
          },
          {
            "Name": "Raw14",
            "TypeFields": [
              {
                "TypeId": 257
              }
            ],
            "Index": 15
          },
          {
            "Name": "Raw15",
            "TypeFields": [
              {
                "TypeId": 258
              }
            ],
            "Index": 16
          },
          {
            "Name": "Raw16",
            "TypeFields": [
              {
                "TypeId": 159
              }
            ],
            "Index": 17
          },
          {
            "Name": "Raw17",
            "TypeFields": [
              {
                "TypeId": 259
              }
            ],
            "Index": 18
          },
          {
            "Name": "Raw18",
            "TypeFields": [
              {
                "TypeId": 260
              }
            ],
            "Index": 19
          },
          {
            "Name": "Raw19",
            "TypeFields": [
              {
                "TypeId": 261
              }
            ],
            "Index": 20
          },
          {
            "Name": "Raw20",
            "TypeFields": [
              {
                "TypeId": 67
              }
            ],
            "Index": 21
          },
          {
            "Name": "Raw21",
            "TypeFields": [
              {
                "TypeId": 262
              }
            ],
            "Index": 22
          },
          {
            "Name": "Raw22",
            "TypeFields": [
              {
                "TypeId": 263
              }
            ],
            "Index": 23
          },
          {
            "Name": "Raw23",
            "TypeFields": [
              {
                "TypeId": 264
              }
            ],
            "Index": 24
          },
          {
            "Name": "Raw24",
            "TypeFields": [
              {
                "TypeId": 265
              }
            ],
            "Index": 25
          },
          {
            "Name": "Raw25",
            "TypeFields": [
              {
                "TypeId": 266
              }
            ],
            "Index": 26
          },
          {
            "Name": "Raw26",
            "TypeFields": [
              {
                "TypeId": 267
              }
            ],
            "Index": 27
          },
          {
            "Name": "Raw27",
            "TypeFields": [
              {
                "TypeId": 268
              }
            ],
            "Index": 28
          },
          {
            "Name": "Raw28",
            "TypeFields": [
              {
                "TypeId": 269
              }
            ],
            "Index": 29
          },
          {
            "Name": "Raw29",
            "TypeFields": [
              {
                "TypeId": 270
              }
            ],
            "Index": 30
          },
          {
            "Name": "Raw30",
            "TypeFields": [
              {
                "TypeId": 271
              }
            ],
            "Index": 31
          },
          {
            "Name": "Raw31",
            "TypeFields": [
              {
                "TypeId": 272
              }
            ],
            "Index": 32
          },
          {
            "Name": "Raw32",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 33
          },
          {
            "Name": "BlakeTwo256",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 34
          },
          {
            "Name": "Sha256",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 35
          },
          {
            "Name": "Keccak256",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 36
          },
          {
            "Name": "ShaThree256",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 37
          }
        ],
        "Path": [
          "pallet_identity",
          "types",
          "Data"
        ],
        "TypeDef": "Variant"
      },
      "245": {
        "Length": 0,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "246": {
        "Length": 1,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "247": {
        "Length": 2,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "248": {
        "Length": 3,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "249": {
        "Length": 5,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "250": {
        "Length": 6,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "251": {
        "Length": 7,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "252": {
        "Length": 9,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "253": {
        "Length": 10,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "254": {
        "Length": 11,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "255": {
        "Length": 12,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "256": {
        "Length": 13,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "257": {
        "Length": 14,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "258": {
        "Length": 15,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "259": {
        "Length": 17,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "260": {
        "Length": 18,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "261": {
        "Length": 19,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "262": {
        "Length": 21,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "263": {
        "Length": 22,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "264": {
        "Length": 23,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "265": {
        "Length": 24,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "266": {
        "Length": 25,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "267": {
        "Length": 26,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "268": {
        "Length": 27,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "269": {
        "Length": 28,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "270": {
        "Length": 29,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "271": {
        "Length": 30,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "272": {
        "Length": 31,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "273": {
        "TypeId": 243,
        "TypeDef": "Sequence"
      },
      "274": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 67
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 67
          }
        ],
        "TypeDef": "Variant"
      },
      "275": {
        "TypeId": 276,
        "TypeDef": "Sequence"
      },
      "276": {
        "TypeIds": [
          0,
          244
        ],
        "TypeDef": "Tuple"
      },
      "277": {
        "Variants": [
          {
            "Name": "Unknown",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "FeePaid",
            "TypeFields": [
              {
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 1
          },
          {
            "Name": "Reasonable",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "KnownGood",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "OutOfDate",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "LowQuality",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Erroneous",
            "TypeFields": null,
            "Index": 6
          }
        ],
        "Path": [
          "pallet_identity",
          "types",
          "Judgement"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "278": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 279
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 279
          }
        ],
        "TypeDef": "Variant"
      },
      "279": {
        "Variants": [
          {
            "Name": "Ed25519",
            "TypeFields": [
              {
                "TypeName": "ed25519::Signature",
                "TypeId": 280
              }
            ],
            "Index": 0
          },
          {
            "Name": "Sr25519",
            "TypeFields": [
              {
                "TypeName": "sr25519::Signature",
                "TypeId": 282
              }
            ],
            "Index": 1
          },
          {
            "Name": "Ecdsa",
            "TypeFields": [
              {
                "TypeName": "ecdsa::Signature",
                "TypeId": 283
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "sp_runtime",
          "MultiSignature"
        ],
        "TypeDef": "Variant"
      },
      "280": {
        "TypeFields": [
          {
            "TypeName": "[u8; 64]",
            "TypeId": 281
          }
        ],
        "Path": [
          "sp_core",
          "ed25519",
          "Signature"
        ],
        "TypeDef": "Composite"
      },
      "281": {
        "Length": 64,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "282": {
        "TypeFields": [
          {
            "TypeName": "[u8; 64]",
            "TypeId": 281
          }
        ],
        "Path": [
          "sp_core",
          "sr25519",
          "Signature"
        ],
        "TypeDef": "Composite"
      },
      "283": {
        "TypeFields": [
          {
            "TypeName": "[u8; SIGNATURE_SERIALIZED_SIZE]",
            "TypeId": 284
          }
        ],
        "Path": [
          "sp_core",
          "ecdsa",
          "Signature"
        ],
        "TypeDef": "Composite"
      },
      "284": {
        "Length": 65,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "285": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "286": {
        "Variants": [
          {
            "Name": "vest",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "See [`Pallet::vest`]."
            ]
          },
          {
            "Name": "vest_other",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::vest_other`]."
            ]
          },
          {
            "Name": "vested_transfer",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "schedule",
                "TypeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                "TypeId": 287
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::vested_transfer`]."
            ]
          },
          {
            "Name": "force_vested_transfer",
            "TypeFields": [
              {
                "Name": "source",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "schedule",
                "TypeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                "TypeId": 287
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::force_vested_transfer`]."
            ]
          },
          {
            "Name": "init_vesting_start_at",
            "TypeFields": [
              {
                "Name": "vesting_start_at",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::init_vesting_start_at`]."
            ]
          },
          {
            "Name": "set_vesting_per_block",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "per_block",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::set_vesting_per_block`]."
            ]
          },
          {
            "Name": "force_set_cliff",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "cliff_block",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::force_set_cliff`]."
            ]
          },
          {
            "Name": "merge_schedules",
            "TypeFields": [
              {
                "Name": "schedule1_index",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "schedule2_index",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::merge_schedules`]."
            ]
          }
        ],
        "Path": [
          "bifrost_vesting",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "287": {
        "TypeFields": [
          {
            "Name": "locked",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "per_block",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "starting_block",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "bifrost_vesting",
          "vesting_info",
          "VestingInfo"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "288": {
        "Variants": [
          {
            "Name": "propose_spend",
            "TypeFields": [
              {
                "Name": "value",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 84
              },
              {
                "Name": "beneficiary",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::propose_spend`]."
            ]
          },
          {
            "Name": "reject_proposal",
            "TypeFields": [
              {
                "Name": "proposal_id",
                "TypeName": "ProposalIndex",
                "TypeId": 66
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::reject_proposal`]."
            ]
          },
          {
            "Name": "approve_proposal",
            "TypeFields": [
              {
                "Name": "proposal_id",
                "TypeName": "ProposalIndex",
                "TypeId": 66
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::approve_proposal`]."
            ]
          },
          {
            "Name": "spend_local",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 84
              },
              {
                "Name": "beneficiary",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::spend_local`]."
            ]
          },
          {
            "Name": "remove_approval",
            "TypeFields": [
              {
                "Name": "proposal_id",
                "TypeName": "ProposalIndex",
                "TypeId": 66
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::remove_approval`]."
            ]
          },
          {
            "Name": "spend",
            "TypeFields": [
              {
                "Name": "asset_kind",
                "TypeName": "Box<T::AssetKind>",
                "TypeId": 47
              },
              {
                "Name": "amount",
                "TypeName": "AssetBalanceOf<T, I>",
                "TypeId": 84
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<BeneficiaryLookupOf<T, I>>",
                "TypeId": 0
              },
              {
                "Name": "valid_from",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 93
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::spend`]."
            ]
          },
          {
            "Name": "payout",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::payout`]."
            ]
          },
          {
            "Name": "check_status",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::check_status`]."
            ]
          },
          {
            "Name": "void_spend",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::void_spend`]."
            ]
          }
        ],
        "Path": [
          "pallet_treasury",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "289": {
        "Variants": [
          {
            "Name": "note_preimage",
            "TypeFields": [
              {
                "Name": "bytes",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::note_preimage`]."
            ]
          },
          {
            "Name": "unnote_preimage",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::unnote_preimage`]."
            ]
          },
          {
            "Name": "request_preimage",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::request_preimage`]."
            ]
          },
          {
            "Name": "unrequest_preimage",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::unrequest_preimage`]."
            ]
          },
          {
            "Name": "ensure_updated",
            "TypeFields": [
              {
                "Name": "hashes",
                "TypeName": "Vec<T::Hash>",
                "TypeId": 290
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::ensure_updated`]."
            ]
          }
        ],
        "Path": [
          "pallet_preimage",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "290": {
        "TypeId": 12,
        "TypeDef": "Sequence"
      },
      "291": {
        "Variants": [
          {
            "Name": "transfer",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "dest_weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::transfer`]."
            ]
          },
          {
            "Name": "transfer_multiasset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Box<VersionedAsset>",
                "TypeId": 294
              },
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "dest_weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::transfer_multiasset`]."
            ]
          },
          {
            "Name": "transfer_with_fee",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "fee",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "dest_weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::transfer_with_fee`]."
            ]
          },
          {
            "Name": "transfer_multiasset_with_fee",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Box<VersionedAsset>",
                "TypeId": 294
              },
              {
                "Name": "fee",
                "TypeName": "Box<VersionedAsset>",
                "TypeId": 294
              },
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "dest_weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::transfer_multiasset_with_fee`]."
            ]
          },
          {
            "Name": "transfer_multicurrencies",
            "TypeFields": [
              {
                "Name": "currencies",
                "TypeName": "Vec<(T::CurrencyId, T::Balance)>",
                "TypeId": 295
              },
              {
                "Name": "fee_item",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "dest_weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::transfer_multicurrencies`]."
            ]
          },
          {
            "Name": "transfer_multiassets",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 214
              },
              {
                "Name": "fee_item",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "dest_weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 194
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::transfer_multiassets`]."
            ]
          }
        ],
        "Path": [
          "orml_xtokens",
          "module",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "292": {
        "Variants": [
          {
            "Name": "Native",
            "TypeFields": [
              {
                "TypeName": "TokenSymbol",
                "TypeId": 293
              }
            ],
            "Index": 0
          },
          {
            "Name": "VToken",
            "TypeFields": [
              {
                "TypeName": "TokenSymbol",
                "TypeId": 293
              }
            ],
            "Index": 1
          },
          {
            "Name": "Token",
            "TypeFields": [
              {
                "TypeName": "TokenSymbol",
                "TypeId": 293
              }
            ],
            "Index": 2
          },
          {
            "Name": "Stable",
            "TypeFields": [
              {
                "TypeName": "TokenSymbol",
                "TypeId": 293
              }
            ],
            "Index": 3
          },
          {
            "Name": "VSToken",
            "TypeFields": [
              {
                "TypeName": "TokenSymbol",
                "TypeId": 293
              }
            ],
            "Index": 4
          },
          {
            "Name": "VSBond",
            "TypeFields": [
              {
                "TypeName": "TokenSymbol",
                "TypeId": 293
              },
              {
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "TypeName": "LeasePeriod",
                "TypeId": 4
              },
              {
                "TypeName": "LeasePeriod",
                "TypeId": 4
              }
            ],
            "Index": 5
          },
          {
            "Name": "LPToken",
            "TypeFields": [
              {
                "TypeName": "TokenSymbol",
                "TypeId": 293
              },
              {
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "TypeName": "TokenSymbol",
                "TypeId": 293
              },
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 6
          },
          {
            "Name": "ForeignAsset",
            "TypeFields": [
              {
                "TypeName": "ForeignAssetId",
                "TypeId": 4
              }
            ],
            "Index": 7
          },
          {
            "Name": "Token2",
            "TypeFields": [
              {
                "TypeName": "TokenId",
                "TypeId": 2
              }
            ],
            "Index": 8
          },
          {
            "Name": "VToken2",
            "TypeFields": [
              {
                "TypeName": "TokenId",
                "TypeId": 2
              }
            ],
            "Index": 9
          },
          {
            "Name": "VSToken2",
            "TypeFields": [
              {
                "TypeName": "TokenId",
                "TypeId": 2
              }
            ],
            "Index": 10
          },
          {
            "Name": "VSBond2",
            "TypeFields": [
              {
                "TypeName": "TokenId",
                "TypeId": 2
              },
              {
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "TypeName": "LeasePeriod",
                "TypeId": 4
              },
              {
                "TypeName": "LeasePeriod",
                "TypeId": 4
              }
            ],
            "Index": 11
          },
          {
            "Name": "StableLpToken",
            "TypeFields": [
              {
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 12
          },
          {
            "Name": "BLP",
            "TypeFields": [
              {
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 13
          },
          {
            "Name": "Lend",
            "TypeFields": [
              {
                "TypeName": "TokenId",
                "TypeId": 2
              }
            ],
            "Index": 14
          }
        ],
        "Path": [
          "bifrost_primitives",
          "currency",
          "CurrencyId"
        ],
        "TypeDef": "Variant"
      },
      "293": {
        "Variants": [
          {
            "Name": "ASG",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "BNC",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "KUSD",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "DOT",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "KSM",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "ETH",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "KAR",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "ZLK",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "PHA",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "RMRK",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "MOVR",
            "TypeFields": null,
            "Index": 10
          }
        ],
        "Path": [
          "bifrost_primitives",
          "currency",
          "TokenSymbol"
        ],
        "TypeDef": "Variant"
      },
      "294": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::MultiAsset",
                "TypeId": 154
              }
            ],
            "Index": 1
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::MultiAsset",
                "TypeId": 175
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::Asset",
                "TypeId": 200
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedAsset"
        ],
        "TypeDef": "Variant"
      },
      "295": {
        "TypeId": 296,
        "TypeDef": "Sequence"
      },
      "296": {
        "TypeIds": [
          292,
          6
        ],
        "TypeDef": "Tuple"
      },
      "297": {
        "Variants": [
          {
            "Name": "transfer",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 84
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::transfer`]."
            ]
          },
          {
            "Name": "transfer_all",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "keep_alive",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::transfer_all`]."
            ]
          },
          {
            "Name": "transfer_keep_alive",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 84
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::transfer_keep_alive`]."
            ]
          },
          {
            "Name": "force_transfer",
            "TypeFields": [
              {
                "Name": "source",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "dest",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 84
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::force_transfer`]."
            ]
          },
          {
            "Name": "set_balance",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "new_free",
                "TypeName": "T::Balance",
                "TypeId": 84
              },
              {
                "Name": "new_reserved",
                "TypeName": "T::Balance",
                "TypeId": 84
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::set_balance`]."
            ]
          }
        ],
        "Path": [
          "orml_tokens",
          "module",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "298": {
        "Variants": [
          {
            "Name": "transfer",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::transfer`]."
            ]
          },
          {
            "Name": "transfer_native_currency",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::transfer_native_currency`]."
            ]
          },
          {
            "Name": "update_balance",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "AmountOf<T>",
                "TypeId": 299
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::update_balance`]."
            ]
          }
        ],
        "Path": [
          "bifrost_currencies",
          "module",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "299": {
        "Primitive": "I128",
        "TypeDef": "Primitive"
      },
      "300": {
        "Variants": [
          {
            "Name": "send_as_sovereign",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "message",
                "TypeName": "Box<VersionedXcm<()>>",
                "TypeId": 148
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::send_as_sovereign`]."
            ]
          }
        ],
        "Path": [
          "orml_xcm",
          "module",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "301": {
        "Variants": [
          {
            "Name": "set_fee_receiver",
            "TypeFields": [
              {
                "Name": "send_to",
                "TypeName": "Option<<T::Lookup as StaticLookup>::Source>",
                "TypeId": 302
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_fee_receiver`]."
            ]
          },
          {
            "Name": "set_fee_point",
            "TypeFields": [
              {
                "Name": "fee_point",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_fee_point`]."
            ]
          },
          {
            "Name": "transfer",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "recipient",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "amount",
                "TypeName": "AssetBalance",
                "TypeId": 84
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::transfer`]."
            ]
          },
          {
            "Name": "create_pair",
            "TypeFields": [
              {
                "Name": "asset_0",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "asset_1",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "fee_recipient",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::create_pair`]."
            ]
          },
          {
            "Name": "add_liquidity",
            "TypeFields": [
              {
                "Name": "asset_0",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "asset_1",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "amount_0_desired",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "amount_1_desired",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "amount_0_min",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "amount_1_min",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "deadline",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 66
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::add_liquidity`]."
            ]
          },
          {
            "Name": "remove_liquidity",
            "TypeFields": [
              {
                "Name": "asset_0",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "asset_1",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "liquidity",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "amount_0_min",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "amount_1_min",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "recipient",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "deadline",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 66
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::remove_liquidity`]."
            ]
          },
          {
            "Name": "swap_exact_assets_for_assets",
            "TypeFields": [
              {
                "Name": "amount_in",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "amount_out_min",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "path",
                "TypeName": "Vec<T::AssetId>",
                "TypeId": 304
              },
              {
                "Name": "recipient",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "deadline",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 66
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::swap_exact_assets_for_assets`]."
            ]
          },
          {
            "Name": "swap_assets_for_exact_assets",
            "TypeFields": [
              {
                "Name": "amount_out",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "amount_in_max",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "path",
                "TypeName": "Vec<T::AssetId>",
                "TypeId": 304
              },
              {
                "Name": "recipient",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "deadline",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 66
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::swap_assets_for_exact_assets`]."
            ]
          },
          {
            "Name": "bootstrap_create",
            "TypeFields": [
              {
                "Name": "asset_0",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "asset_1",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "target_supply_0",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "target_supply_1",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "capacity_supply_0",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "capacity_supply_1",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "end",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 66
              },
              {
                "Name": "rewards",
                "TypeName": "Vec<T::AssetId>",
                "TypeId": 304
              },
              {
                "Name": "limits",
                "TypeName": "Vec<(T::AssetId, AssetBalance)>",
                "TypeId": 305
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::bootstrap_create`]."
            ]
          },
          {
            "Name": "bootstrap_contribute",
            "TypeFields": [
              {
                "Name": "asset_0",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "asset_1",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "amount_0_contribute",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "amount_1_contribute",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "deadline",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 66
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::bootstrap_contribute`]."
            ]
          },
          {
            "Name": "bootstrap_claim",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "asset_0",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "asset_1",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "deadline",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 66
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::bootstrap_claim`]."
            ]
          },
          {
            "Name": "bootstrap_end",
            "TypeFields": [
              {
                "Name": "asset_0",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "asset_1",
                "TypeName": "T::AssetId",
                "TypeId": 303
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::bootstrap_end`]."
            ]
          },
          {
            "Name": "bootstrap_update",
            "TypeFields": [
              {
                "Name": "asset_0",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "asset_1",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "target_supply_0",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "target_supply_1",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "capacity_supply_0",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "capacity_supply_1",
                "TypeName": "AssetBalance",
                "TypeId": 84
              },
              {
                "Name": "end",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 66
              },
              {
                "Name": "rewards",
                "TypeName": "Vec<T::AssetId>",
                "TypeId": 304
              },
              {
                "Name": "limits",
                "TypeName": "Vec<(T::AssetId, AssetBalance)>",
                "TypeId": 305
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::bootstrap_update`]."
            ]
          },
          {
            "Name": "bootstrap_refund",
            "TypeFields": [
              {
                "Name": "asset_0",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "asset_1",
                "TypeName": "T::AssetId",
                "TypeId": 303
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::bootstrap_refund`]."
            ]
          },
          {
            "Name": "bootstrap_charge_reward",
            "TypeFields": [
              {
                "Name": "asset_0",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "asset_1",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "charge_rewards",
                "TypeName": "Vec<(T::AssetId, AssetBalance)>",
                "TypeId": 305
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::bootstrap_charge_reward`]."
            ]
          },
          {
            "Name": "bootstrap_withdraw_reward",
            "TypeFields": [
              {
                "Name": "asset_0",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "asset_1",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "recipient",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::bootstrap_withdraw_reward`]."
            ]
          },
          {
            "Name": "set_new_fee_receiver",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "Name": "send_to",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::set_new_fee_receiver`]."
            ]
          }
        ],
        "Path": [
          "zenlink_protocol",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "302": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 65
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 65
          }
        ],
        "TypeDef": "Variant"
      },
      "303": {
        "TypeFields": [
          {
            "Name": "chain_id",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "asset_type",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "asset_index",
            "TypeName": "u64",
            "TypeId": 11
          }
        ],
        "Path": [
          "zenlink_protocol",
          "primitives",
          "AssetId"
        ],
        "TypeDef": "Composite"
      },
      "304": {
        "TypeId": 303,
        "TypeDef": "Sequence"
      },
      "305": {
        "TypeId": 306,
        "TypeDef": "Sequence"
      },
      "306": {
        "TypeIds": [
          303,
          6
        ],
        "TypeDef": "Tuple"
      },
      "307": {
        "Variants": [
          {
            "Name": "add_to_create_whitelist",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_to_create_whitelist`]."
            ]
          },
          {
            "Name": "remove_from_create_whitelist",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::remove_from_create_whitelist`]."
            ]
          },
          {
            "Name": "create_merkle_distributor",
            "TypeFields": [
              {
                "Name": "merkle_root",
                "TypeName": "H256",
                "TypeId": 12
              },
              {
                "Name": "description",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "distribute_currency",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "distribute_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::create_merkle_distributor`]."
            ]
          },
          {
            "Name": "claim",
            "TypeFields": [
              {
                "Name": "merkle_distributor_id",
                "TypeName": "T::MerkleDistributorId",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "account",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "amount",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "merkle_proof",
                "TypeName": "Vec<H256>",
                "TypeId": 290
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::claim`]."
            ]
          },
          {
            "Name": "charge",
            "TypeFields": [
              {
                "Name": "merkle_distributor_id",
                "TypeName": "T::MerkleDistributorId",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::charge`]."
            ]
          },
          {
            "Name": "emergency_withdraw",
            "TypeFields": [
              {
                "Name": "merkle_distributor_id",
                "TypeName": "T::MerkleDistributorId",
                "TypeId": 4
              },
              {
                "Name": "recipient",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::emergency_withdraw`]."
            ]
          }
        ],
        "Path": [
          "merkle_distributor",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "308": {
        "Variants": [
          {
            "Name": "set_user_default_fee_currency",
            "TypeFields": [
              {
                "Name": "maybe_fee_currency",
                "TypeName": "Option<CurrencyIdOf<T>>",
                "TypeId": 309
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_user_default_fee_currency`]."
            ]
          },
          {
            "Name": "set_universal_fee_currency_order_list",
            "TypeFields": [
              {
                "Name": "default_list",
                "TypeName": "BoundedVec<CurrencyIdOf<T>, T::MaxFeeCurrencyOrderListLen>",
                "TypeId": 310
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_universal_fee_currency_order_list`]."
            ]
          }
        ],
        "Path": [
          "bifrost_flexible_fee",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "309": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 292
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 292
          }
        ],
        "TypeDef": "Variant"
      },
      "310": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 311
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 292
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "311": {
        "TypeId": 292,
        "TypeDef": "Sequence"
      },
      "312": {
        "Variants": [
          {
            "Name": "set_multisig_confirm_account",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_multisig_confirm_account`]."
            ]
          },
          {
            "Name": "fund_success",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::fund_success`]."
            ]
          },
          {
            "Name": "fund_fail",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::fund_fail`]."
            ]
          },
          {
            "Name": "continue_fund",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              },
              {
                "Name": "first_slot",
                "TypeName": "LeasePeriod",
                "TypeId": 66
              },
              {
                "Name": "last_slot",
                "TypeName": "LeasePeriod",
                "TypeId": 66
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::continue_fund`]."
            ]
          },
          {
            "Name": "fund_retire",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::fund_retire`]."
            ]
          },
          {
            "Name": "fund_end",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::fund_end`]."
            ]
          },
          {
            "Name": "create",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              },
              {
                "Name": "cap",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "first_slot",
                "TypeName": "LeasePeriod",
                "TypeId": 66
              },
              {
                "Name": "last_slot",
                "TypeName": "LeasePeriod",
                "TypeId": 66
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::create`]."
            ]
          },
          {
            "Name": "edit",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              },
              {
                "Name": "cap",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "raised",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "first_slot",
                "TypeName": "LeasePeriod",
                "TypeId": 66
              },
              {
                "Name": "last_slot",
                "TypeName": "LeasePeriod",
                "TypeId": 66
              },
              {
                "Name": "fund_status",
                "TypeName": "Option<FundStatus>",
                "TypeId": 313
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::edit`]."
            ]
          },
          {
            "Name": "contribute",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::contribute`]."
            ]
          },
          {
            "Name": "confirm_contribute",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "is_success",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::confirm_contribute`]."
            ]
          },
          {
            "Name": "unlock",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::unlock`]."
            ]
          },
          {
            "Name": "unlock_by_vsbond",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "vsbond",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::unlock_by_vsbond`]."
            ]
          },
          {
            "Name": "unlock_vstoken",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::unlock_vstoken`]."
            ]
          },
          {
            "Name": "batch_unlock",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::batch_unlock`]."
            ]
          },
          {
            "Name": "withdraw",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::withdraw`]."
            ]
          },
          {
            "Name": "refund",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              },
              {
                "Name": "first_slot",
                "TypeName": "LeasePeriod",
                "TypeId": 66
              },
              {
                "Name": "last_slot",
                "TypeName": "LeasePeriod",
                "TypeId": 66
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::refund`]."
            ]
          },
          {
            "Name": "redeem",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::redeem`]."
            ]
          },
          {
            "Name": "dissolve_refunded",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              },
              {
                "Name": "first_slot",
                "TypeName": "LeasePeriod",
                "TypeId": 66
              },
              {
                "Name": "last_slot",
                "TypeName": "LeasePeriod",
                "TypeId": 66
              }
            ],
            "Index": 17,
            "Docs": [
              "See [`Pallet::dissolve_refunded`]."
            ]
          },
          {
            "Name": "dissolve",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 66
              }
            ],
            "Index": 18,
            "Docs": [
              "See [`Pallet::dissolve`]."
            ]
          },
          {
            "Name": "buyback",
            "TypeFields": [
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 19,
            "Docs": [
              "See [`Pallet::buyback`]."
            ]
          },
          {
            "Name": "confirm_contribution",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 204
              }
            ],
            "Index": 20,
            "Docs": [
              "See [`Pallet::confirm_contribution`]."
            ]
          },
          {
            "Name": "buyback_vstoken_by_stable_pool",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "currency_id_in",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 21,
            "Docs": [
              "See [`Pallet::buyback_vstoken_by_stable_pool`]."
            ]
          },
          {
            "Name": "reserve",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "if_mint",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 22,
            "Docs": [
              "See [`Pallet::reserve`]."
            ]
          },
          {
            "Name": "batch_handle_reserve",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 23,
            "Docs": [
              "See [`Pallet::batch_handle_reserve`]."
            ]
          },
          {
            "Name": "cancel_reservation",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 24,
            "Docs": [
              "See [`Pallet::cancel_reservation`]."
            ]
          }
        ],
        "Path": [
          "bifrost_salp",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "313": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 314
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 314
          }
        ],
        "TypeDef": "Variant"
      },
      "314": {
        "Variants": [
          {
            "Name": "Ongoing",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Retired",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Success",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Failed",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "RefundWithdrew",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "RedeemWithdrew",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "FailedToContinue",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "End",
            "TypeFields": null,
            "Index": 7
          }
        ],
        "Path": [
          "bifrost_salp",
          "FundStatus"
        ],
        "TypeDef": "Variant"
      },
      "315": {
        "Variants": [
          {
            "Name": "switchoff_transaction",
            "TypeFields": [
              {
                "Name": "pallet_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "function_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::switchoff_transaction`]."
            ]
          },
          {
            "Name": "switchon_transaction",
            "TypeFields": [
              {
                "Name": "pallet_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "function_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::switchon_transaction`]."
            ]
          },
          {
            "Name": "disable_transfers",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::disable_transfers`]."
            ]
          },
          {
            "Name": "enable_transfers",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::enable_transfers`]."
            ]
          }
        ],
        "Path": [
          "bifrost_call_switchgear",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "316": {
        "Variants": [
          {
            "Name": "register_native_asset",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "location",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "metadata",
                "TypeName": "Box<AssetMetadata<BalanceOf<T>>>",
                "TypeId": 317
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::register_native_asset`]."
            ]
          },
          {
            "Name": "update_native_asset",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "location",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "metadata",
                "TypeName": "Box<AssetMetadata<BalanceOf<T>>>",
                "TypeId": 317
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::update_native_asset`]."
            ]
          },
          {
            "Name": "register_token_metadata",
            "TypeFields": [
              {
                "Name": "metadata",
                "TypeName": "Box<AssetMetadata<BalanceOf<T>>>",
                "TypeId": 317
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::register_token_metadata`]."
            ]
          },
          {
            "Name": "register_vtoken_metadata",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "TokenId",
                "TypeId": 2
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::register_vtoken_metadata`]."
            ]
          },
          {
            "Name": "register_vstoken_metadata",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "TokenId",
                "TypeId": 2
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::register_vstoken_metadata`]."
            ]
          },
          {
            "Name": "register_vsbond_metadata",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "TokenId",
                "TypeId": 2
              },
              {
                "Name": "para_id",
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "Name": "first_slot",
                "TypeName": "LeasePeriod",
                "TypeId": 4
              },
              {
                "Name": "last_slot",
                "TypeName": "LeasePeriod",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::register_vsbond_metadata`]."
            ]
          },
          {
            "Name": "register_location",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "location",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::register_location`]."
            ]
          },
          {
            "Name": "force_set_location",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "location",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 135
              },
              {
                "Name": "weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::force_set_location`]."
            ]
          },
          {
            "Name": "update_currency_metadata",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "asset_name",
                "TypeName": "Option<Vec<u8>>",
                "TypeId": 318
              },
              {
                "Name": "asset_symbol",
                "TypeName": "Option<Vec<u8>>",
                "TypeId": 318
              },
              {
                "Name": "asset_decimals",
                "TypeName": "Option<u8>",
                "TypeId": 319
              },
              {
                "Name": "asset_minimal_balance",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::update_currency_metadata`]."
            ]
          }
        ],
        "Path": [
          "bifrost_asset_registry",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "317": {
        "TypeFields": [
          {
            "Name": "name",
            "TypeName": "Vec<u8>",
            "TypeId": 13
          },
          {
            "Name": "symbol",
            "TypeName": "Vec<u8>",
            "TypeId": 13
          },
          {
            "Name": "decimals",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "minimal_balance",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "bifrost_asset_registry",
          "pallet",
          "AssetMetadata"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "318": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 13
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 13
          }
        ],
        "TypeDef": "Variant"
      },
      "319": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          }
        ],
        "TypeDef": "Variant"
      },
      "320": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 6
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "321": {
        "Variants": [
          {
            "Name": "mint",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "token_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "remark",
                "TypeName": "BoundedVec<u8, ConstU32<32>>",
                "TypeId": 285
              },
              {
                "Name": "channel_id",
                "TypeName": "Option<u32>",
                "TypeId": 93
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::mint`]."
            ]
          },
          {
            "Name": "redeem",
            "TypeFields": [
              {
                "Name": "vtoken_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vtoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::redeem`]."
            ]
          },
          {
            "Name": "rebond",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "token_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::rebond`]."
            ]
          },
          {
            "Name": "rebond_by_unlock_id",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "unlock_id",
                "TypeName": "UnlockId",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::rebond_by_unlock_id`]."
            ]
          },
          {
            "Name": "set_unlock_duration",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "unlock_duration",
                "TypeName": "TimeUnit",
                "TypeId": 322
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::set_unlock_duration`]."
            ]
          },
          {
            "Name": "set_minimum_mint",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::set_minimum_mint`]."
            ]
          },
          {
            "Name": "set_minimum_redeem",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::set_minimum_redeem`]."
            ]
          },
          {
            "Name": "add_support_rebond_token",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::add_support_rebond_token`]."
            ]
          },
          {
            "Name": "remove_support_rebond_token",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::remove_support_rebond_token`]."
            ]
          },
          {
            "Name": "set_fees",
            "TypeFields": [
              {
                "Name": "mint_fee",
                "TypeName": "Permill",
                "TypeId": 323
              },
              {
                "Name": "redeem_fee",
                "TypeName": "Permill",
                "TypeId": 323
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::set_fees`]."
            ]
          },
          {
            "Name": "set_hook_iteration_limit",
            "TypeFields": [
              {
                "Name": "limit",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::set_hook_iteration_limit`]."
            ]
          },
          {
            "Name": "set_unlocking_total",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::set_unlocking_total`]."
            ]
          },
          {
            "Name": "set_min_time_unit",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "time_unit",
                "TypeName": "TimeUnit",
                "TypeId": 322
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::set_min_time_unit`]."
            ]
          },
          {
            "Name": "recreate_currency_ongoing_time_unit",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "time_unit",
                "TypeName": "TimeUnit",
                "TypeId": 322
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::recreate_currency_ongoing_time_unit`]."
            ]
          },
          {
            "Name": "mint_with_lock",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "token_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "remark",
                "TypeName": "BoundedVec<u8, ConstU32<32>>",
                "TypeId": 285
              },
              {
                "Name": "channel_id",
                "TypeName": "Option<u32>",
                "TypeId": 93
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::mint_with_lock`]."
            ]
          },
          {
            "Name": "unlock_incentive_minted_vtoken",
            "TypeFields": [
              {
                "Name": "vtoken_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::unlock_incentive_minted_vtoken`]."
            ]
          },
          {
            "Name": "set_incentive_coef",
            "TypeFields": [
              {
                "Name": "vtoken_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "new_coef_op",
                "TypeName": "Option<u128>",
                "TypeId": 320
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::set_incentive_coef`]."
            ]
          },
          {
            "Name": "set_vtoken_incentive_lock_blocks",
            "TypeFields": [
              {
                "Name": "vtoken_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "new_blockes_op",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 93
              }
            ],
            "Index": 17,
            "Docs": [
              "See [`Pallet::set_vtoken_incentive_lock_blocks`]."
            ]
          }
        ],
        "Path": [
          "bifrost_vtoken_minting",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "322": {
        "Variants": [
          {
            "Name": "Era",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 0
          },
          {
            "Name": "SlashingSpan",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 1
          },
          {
            "Name": "Round",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 2
          },
          {
            "Name": "Kblock",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 3
          },
          {
            "Name": "Hour",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 66
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "bifrost_primitives",
          "TimeUnit"
        ],
        "TypeDef": "Variant"
      },
      "323": {
        "TypeFields": [
          {
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "sp_arithmetic",
          "per_things",
          "Permill"
        ],
        "TypeDef": "Composite"
      },
      "324": {
        "Variants": [
          {
            "Name": "initialize_delegator",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator_location",
                "TypeName": "Option<Box<MultiLocation>>",
                "TypeId": 325
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::initialize_delegator`]."
            ]
          },
          {
            "Name": "bond",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "validator",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::bond`]."
            ]
          },
          {
            "Name": "bond_extra",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "validator",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::bond_extra`]."
            ]
          },
          {
            "Name": "unbond",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "validator",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::unbond`]."
            ]
          },
          {
            "Name": "unbond_all",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::unbond_all`]."
            ]
          },
          {
            "Name": "rebond",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "validator",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              },
              {
                "Name": "amount",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::rebond`]."
            ]
          },
          {
            "Name": "delegate",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "targets",
                "TypeName": "Vec<MultiLocation>",
                "TypeId": 328
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::delegate`]."
            ]
          },
          {
            "Name": "undelegate",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "targets",
                "TypeName": "Vec<MultiLocation>",
                "TypeId": 328
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::undelegate`]."
            ]
          },
          {
            "Name": "redelegate",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "targets",
                "TypeName": "Option<Vec<MultiLocation>>",
                "TypeId": 329
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::redelegate`]."
            ]
          },
          {
            "Name": "payout",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "validator",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "when",
                "TypeName": "Option<TimeUnit>",
                "TypeId": 330
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::payout`]."
            ]
          },
          {
            "Name": "liquidize",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "when",
                "TypeName": "Option<TimeUnit>",
                "TypeId": 330
              },
              {
                "Name": "validator",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              },
              {
                "Name": "amount",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::liquidize`]."
            ]
          },
          {
            "Name": "chill",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::chill`]."
            ]
          },
          {
            "Name": "transfer_back",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "from",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "to",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::transfer_back`]."
            ]
          },
          {
            "Name": "transfer_to",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "from",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "to",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::transfer_to`]."
            ]
          },
          {
            "Name": "convert_asset",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "if_from_currency",
                "TypeName": "bool",
                "TypeId": 30
              },
              {
                "Name": "weight_and_fee",
                "TypeName": "Option<(Weight, BalanceOf<T>)>",
                "TypeId": 326
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::convert_asset`]."
            ]
          },
          {
            "Name": "increase_token_pool",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::increase_token_pool`]."
            ]
          },
          {
            "Name": "decrease_token_pool",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::decrease_token_pool`]."
            ]
          },
          {
            "Name": "update_ongoing_time_unit",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "time_unit",
                "TypeName": "TimeUnit",
                "TypeId": 322
              }
            ],
            "Index": 17,
            "Docs": [
              "See [`Pallet::update_ongoing_time_unit`]."
            ]
          },
          {
            "Name": "refund_currency_due_unbond",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 18,
            "Docs": [
              "See [`Pallet::refund_currency_due_unbond`]."
            ]
          },
          {
            "Name": "supplement_fee_reserve",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "dest",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              }
            ],
            "Index": 19,
            "Docs": [
              "See [`Pallet::supplement_fee_reserve`]."
            ]
          },
          {
            "Name": "charge_host_fee_and_tune_vtoken_exchange_rate",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "who",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              }
            ],
            "Index": 20,
            "Docs": [
              "See [`Pallet::charge_host_fee_and_tune_vtoken_exchange_rate`]."
            ]
          },
          {
            "Name": "set_operate_origin",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Option<AccountIdOf<T>>",
                "TypeId": 96
              }
            ],
            "Index": 22,
            "Docs": [
              "See [`Pallet::set_operate_origin`]."
            ]
          },
          {
            "Name": "set_fee_source",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who_and_fee",
                "TypeName": "Option<(MultiLocation, BalanceOf<T>)>",
                "TypeId": 331
              }
            ],
            "Index": 23,
            "Docs": [
              "See [`Pallet::set_fee_source`]."
            ]
          },
          {
            "Name": "add_delegator",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "index",
                "TypeName": "u16",
                "TypeId": 333
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              }
            ],
            "Index": 24,
            "Docs": [
              "See [`Pallet::add_delegator`]."
            ]
          },
          {
            "Name": "remove_delegator",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              }
            ],
            "Index": 25,
            "Docs": [
              "See [`Pallet::remove_delegator`]."
            ]
          },
          {
            "Name": "add_validator",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              }
            ],
            "Index": 26,
            "Docs": [
              "See [`Pallet::add_validator`]."
            ]
          },
          {
            "Name": "remove_validator",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              }
            ],
            "Index": 27,
            "Docs": [
              "See [`Pallet::remove_validator`]."
            ]
          },
          {
            "Name": "set_validators_by_delegator",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "validators",
                "TypeName": "Vec<MultiLocation>",
                "TypeId": 328
              }
            ],
            "Index": 28,
            "Docs": [
              "See [`Pallet::set_validators_by_delegator`]."
            ]
          },
          {
            "Name": "set_delegator_ledger",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              },
              {
                "Name": "ledger",
                "TypeName": "Box<Option<Ledger<BalanceOf<T>>>>",
                "TypeId": 334
              }
            ],
            "Index": 29,
            "Docs": [
              "See [`Pallet::set_delegator_ledger`]."
            ]
          },
          {
            "Name": "set_minimums_and_maximums",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "constraints",
                "TypeName": "Option<MinimumsMaximums<BalanceOf<T>>>",
                "TypeId": 354
              }
            ],
            "Index": 30,
            "Docs": [
              "See [`Pallet::set_minimums_and_maximums`]."
            ]
          },
          {
            "Name": "set_currency_delays",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "maybe_delays",
                "TypeName": "Option<Delays>",
                "TypeId": 356
              }
            ],
            "Index": 31,
            "Docs": [
              "See [`Pallet::set_currency_delays`]."
            ]
          },
          {
            "Name": "set_hosting_fees",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "maybe_fee_set",
                "TypeName": "Option<(Permill, MultiLocation)>",
                "TypeId": 358
              }
            ],
            "Index": 32,
            "Docs": [
              "See [`Pallet::set_hosting_fees`]."
            ]
          },
          {
            "Name": "set_currency_tune_exchange_rate_limit",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "maybe_tune_exchange_rate_limit",
                "TypeName": "Option<(u32, Permill)>",
                "TypeId": 360
              }
            ],
            "Index": 33,
            "Docs": [
              "See [`Pallet::set_currency_tune_exchange_rate_limit`]."
            ]
          },
          {
            "Name": "set_ongoing_time_unit_update_interval",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "maybe_interval",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 93
              }
            ],
            "Index": 34,
            "Docs": [
              "See [`Pallet::set_ongoing_time_unit_update_interval`]."
            ]
          },
          {
            "Name": "add_supplement_fee_account_to_whitelist",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              }
            ],
            "Index": 35,
            "Docs": [
              "See [`Pallet::add_supplement_fee_account_to_whitelist`]."
            ]
          },
          {
            "Name": "remove_supplement_fee_account_from_whitelist",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              }
            ],
            "Index": 36,
            "Docs": [
              "See [`Pallet::remove_supplement_fee_account_from_whitelist`]."
            ]
          },
          {
            "Name": "confirm_delegator_ledger_query_response",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              }
            ],
            "Index": 37,
            "Docs": [
              "See [`Pallet::confirm_delegator_ledger_query_response`]."
            ]
          },
          {
            "Name": "fail_delegator_ledger_query_response",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              }
            ],
            "Index": 38,
            "Docs": [
              "See [`Pallet::fail_delegator_ledger_query_response`]."
            ]
          },
          {
            "Name": "confirm_validators_by_delegator_query_response",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              }
            ],
            "Index": 39,
            "Docs": [
              "See [`Pallet::confirm_validators_by_delegator_query_response`]."
            ]
          },
          {
            "Name": "fail_validators_by_delegator_query_response",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              }
            ],
            "Index": 40,
            "Docs": [
              "See [`Pallet::fail_validators_by_delegator_query_response`]."
            ]
          },
          {
            "Name": "confirm_delegator_ledger",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 179
              }
            ],
            "Index": 41,
            "Docs": [
              "See [`Pallet::confirm_delegator_ledger`]."
            ]
          },
          {
            "Name": "confirm_validators_by_delegator",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 179
              }
            ],
            "Index": 42,
            "Docs": [
              "See [`Pallet::confirm_validators_by_delegator`]."
            ]
          },
          {
            "Name": "reset_validators",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "validator_list",
                "TypeName": "Vec<MultiLocation>",
                "TypeId": 328
              }
            ],
            "Index": 43,
            "Docs": [
              "See [`Pallet::reset_validators`]."
            ]
          },
          {
            "Name": "set_validator_boost_list",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "validator_list",
                "TypeName": "Vec<MultiLocation>",
                "TypeId": 328
              }
            ],
            "Index": 44,
            "Docs": [
              "See [`Pallet::set_validator_boost_list`]."
            ]
          },
          {
            "Name": "add_to_validator_boost_list",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              }
            ],
            "Index": 45,
            "Docs": [
              "See [`Pallet::add_to_validator_boost_list`]."
            ]
          },
          {
            "Name": "remove_from_validator_boot_list",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 143
              }
            ],
            "Index": 46,
            "Docs": [
              "See [`Pallet::remove_from_validator_boot_list`]."
            ]
          },
          {
            "Name": "convert_treasury_vtoken",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 47,
            "Docs": [
              "See [`Pallet::convert_treasury_vtoken`]."
            ]
          },
          {
            "Name": "clean_outdated_validator_boost_list",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "page",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 48,
            "Docs": [
              "See [`Pallet::clean_outdated_validator_boost_list`]."
            ]
          }
        ],
        "Path": [
          "bifrost_slp",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "325": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 143
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 143
          }
        ],
        "TypeDef": "Variant"
      },
      "326": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 327
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 327
          }
        ],
        "TypeDef": "Variant"
      },
      "327": {
        "TypeIds": [
          9,
          6
        ],
        "TypeDef": "Tuple"
      },
      "328": {
        "TypeId": 143,
        "TypeDef": "Sequence"
      },
      "329": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 328
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 328
          }
        ],
        "TypeDef": "Variant"
      },
      "330": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 322
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 322
          }
        ],
        "TypeDef": "Variant"
      },
      "331": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 332
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 332
          }
        ],
        "TypeDef": "Variant"
      },
      "332": {
        "TypeIds": [
          143,
          6
        ],
        "TypeDef": "Tuple"
      },
      "333": {
        "TypeId": 56,
        "TypeDef": "Compact"
      },
      "334": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 335
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 335
          }
        ],
        "TypeDef": "Variant"
      },
      "335": {
        "Variants": [
          {
            "Name": "Substrate",
            "TypeFields": [
              {
                "TypeName": "SubstrateLedger<Balance>",
                "TypeId": 336
              }
            ],
            "Index": 0
          },
          {
            "Name": "Moonbeam",
            "TypeFields": [
              {
                "TypeName": "OneToManyLedger<Balance>",
                "TypeId": 339
              }
            ],
            "Index": 1
          },
          {
            "Name": "ParachainStaking",
            "TypeFields": [
              {
                "TypeName": "OneToManyLedger<Balance>",
                "TypeId": 339
              }
            ],
            "Index": 2
          },
          {
            "Name": "Filecoin",
            "TypeFields": [
              {
                "TypeName": "FilecoinLedger<Balance>",
                "TypeId": 350
              }
            ],
            "Index": 3
          },
          {
            "Name": "Phala",
            "TypeFields": [
              {
                "TypeName": "PhalaLedger<Balance>",
                "TypeId": 351
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "Ledger"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "336": {
        "TypeFields": [
          {
            "Name": "account",
            "TypeName": "MultiLocation",
            "TypeId": 143
          },
          {
            "Name": "total",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "active",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "unlocking",
            "TypeName": "Vec<UnlockChunk<Balance>>",
            "TypeId": 337
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "polkadot_primitives",
          "SubstrateLedger"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "337": {
        "TypeId": 338,
        "TypeDef": "Sequence"
      },
      "338": {
        "TypeFields": [
          {
            "Name": "value",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "unlock_time",
            "TypeName": "TimeUnit",
            "TypeId": 322
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "polkadot_primitives",
          "UnlockChunk"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "339": {
        "TypeFields": [
          {
            "Name": "account",
            "TypeName": "MultiLocation",
            "TypeId": 143
          },
          {
            "Name": "delegations",
            "TypeName": "BTreeMap<MultiLocation, Balance>",
            "TypeId": 340
          },
          {
            "Name": "total",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "less_total",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "requests",
            "TypeName": "Vec<OneToManyScheduledRequest<Balance>>",
            "TypeId": 342
          },
          {
            "Name": "request_briefs",
            "TypeName": "BTreeMap<MultiLocation, (TimeUnit, Balance)>",
            "TypeId": 345
          },
          {
            "Name": "status",
            "TypeName": "OneToManyDelegatorStatus",
            "TypeId": 349
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "parachain_staking_primitives",
          "OneToManyLedger"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "340": {
        "TypeFields": [
          {
            "TypeId": 341
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 143
          },
          {
            "Name": "V",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "341": {
        "TypeId": 332,
        "TypeDef": "Sequence"
      },
      "342": {
        "TypeId": 343,
        "TypeDef": "Sequence"
      },
      "343": {
        "TypeFields": [
          {
            "Name": "validator",
            "TypeName": "MultiLocation",
            "TypeId": 143
          },
          {
            "Name": "when_executable",
            "TypeName": "TimeUnit",
            "TypeId": 322
          },
          {
            "Name": "action",
            "TypeName": "OneToManyDelegationAction<Balance>",
            "TypeId": 344
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "parachain_staking_primitives",
          "OneToManyScheduledRequest"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "344": {
        "Variants": [
          {
            "Name": "Revoke",
            "TypeFields": [
              {
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "Decrease",
            "TypeFields": [
              {
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "parachain_staking_primitives",
          "OneToManyDelegationAction"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "345": {
        "TypeFields": [
          {
            "TypeId": 347
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 143
          },
          {
            "Name": "V",
            "TypeId": 346
          }
        ],
        "TypeDef": "Composite"
      },
      "346": {
        "TypeIds": [
          322,
          6
        ],
        "TypeDef": "Tuple"
      },
      "347": {
        "TypeId": 348,
        "TypeDef": "Sequence"
      },
      "348": {
        "TypeIds": [
          143,
          346
        ],
        "TypeDef": "Tuple"
      },
      "349": {
        "Variants": [
          {
            "Name": "Active",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Leaving",
            "TypeFields": [
              {
                "TypeName": "TimeUnit",
                "TypeId": 322
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "parachain_staking_primitives",
          "OneToManyDelegatorStatus"
        ],
        "TypeDef": "Variant"
      },
      "350": {
        "TypeFields": [
          {
            "Name": "account",
            "TypeName": "MultiLocation",
            "TypeId": 143
          },
          {
            "Name": "initial_pledge",
            "TypeName": "Balance",
            "TypeId": 84
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "filecoin_primitives",
          "FilecoinLedger"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "351": {
        "TypeFields": [
          {
            "Name": "account",
            "TypeName": "MultiLocation",
            "TypeId": 143
          },
          {
            "Name": "active_shares",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "unlocking_shares",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "unlocking_time_unit",
            "TypeName": "Option<TimeUnit>",
            "TypeId": 330
          },
          {
            "Name": "bonded_pool_id",
            "TypeName": "Option<u64>",
            "TypeId": 352
          },
          {
            "Name": "bonded_pool_collection_id",
            "TypeName": "Option<u32>",
            "TypeId": 93
          },
          {
            "Name": "bonded_is_vault",
            "TypeName": "Option<bool>",
            "TypeId": 353
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "phala_primitives",
          "PhalaLedger"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "352": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 11
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 11
          }
        ],
        "TypeDef": "Variant"
      },
      "353": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 30
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 30
          }
        ],
        "TypeDef": "Variant"
      },
      "354": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 355
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 355
          }
        ],
        "TypeDef": "Variant"
      },
      "355": {
        "TypeFields": [
          {
            "Name": "delegator_bonded_minimum",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "bond_extra_minimum",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "unbond_minimum",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "rebond_minimum",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "unbond_record_maximum",
            "TypeName": "u32",
            "TypeId": 66
          },
          {
            "Name": "validators_back_maximum",
            "TypeName": "u32",
            "TypeId": 66
          },
          {
            "Name": "delegator_active_staking_maximum",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "validators_reward_maximum",
            "TypeName": "u32",
            "TypeId": 66
          },
          {
            "Name": "delegation_amount_minimum",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "delegators_maximum",
            "TypeName": "u16",
            "TypeId": 333
          },
          {
            "Name": "validators_maximum",
            "TypeName": "u16",
            "TypeId": 333
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "MinimumsMaximums"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "356": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 357
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 357
          }
        ],
        "TypeDef": "Variant"
      },
      "357": {
        "TypeFields": [
          {
            "Name": "unlock_delay",
            "TypeName": "TimeUnit",
            "TypeId": 322
          },
          {
            "Name": "leave_delegators_delay",
            "TypeName": "TimeUnit",
            "TypeId": 322
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "Delays"
        ],
        "TypeDef": "Composite"
      },
      "358": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 359
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 359
          }
        ],
        "TypeDef": "Variant"
      },
      "359": {
        "TypeIds": [
          323,
          143
        ],
        "TypeDef": "Tuple"
      },
      "360": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 361
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 361
          }
        ],
        "TypeDef": "Variant"
      },
      "361": {
        "TypeIds": [
          4,
          323
        ],
        "TypeDef": "Tuple"
      },
      "362": {
        "Variants": [
          {
            "Name": "update_xcm_dest_weight_and_fee",
            "TypeFields": [
              {
                "Name": "updates",
                "TypeName": "Vec<(CurrencyIdOf<T>, XcmOperationType, Weight, BalanceOf<T>)>",
                "TypeId": 363
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::update_xcm_dest_weight_and_fee`]."
            ]
          },
          {
            "Name": "transfer_statemine_assets",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "asset_id",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "dest",
                "TypeName": "Option<AccountIdOf<T>>",
                "TypeId": 96
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::transfer_statemine_assets`]."
            ]
          }
        ],
        "Path": [
          "bifrost_xcm_interface",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "363": {
        "TypeId": 364,
        "TypeDef": "Sequence"
      },
      "364": {
        "TypeIds": [
          292,
          365,
          9,
          6
        ],
        "TypeDef": "Tuple"
      },
      "365": {
        "Variants": [
          {
            "Name": "UmpContributeTransact",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "StatemineTransfer",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Bond",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "WithdrawUnbonded",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "BondExtra",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Unbond",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Rebond",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Delegate",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Payout",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "Liquidize",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "TransferBack",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "TransferTo",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "Chill",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "Undelegate",
            "TypeFields": null,
            "Index": 13
          },
          {
            "Name": "CancelLeave",
            "TypeFields": null,
            "Index": 14
          },
          {
            "Name": "XtokensTransferBack",
            "TypeFields": null,
            "Index": 15
          },
          {
            "Name": "ExecuteLeave",
            "TypeFields": null,
            "Index": 16
          },
          {
            "Name": "ConvertAsset",
            "TypeFields": null,
            "Index": 17
          },
          {
            "Name": "Vote",
            "TypeFields": null,
            "Index": 18
          },
          {
            "Name": "RemoveVote",
            "TypeFields": null,
            "Index": 19
          },
          {
            "Name": "Any",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SupplementaryFee",
            "TypeFields": null,
            "Index": 21
          }
        ],
        "Path": [
          "bifrost_primitives",
          "XcmOperationType"
        ],
        "TypeDef": "Variant"
      },
      "366": {
        "Variants": [
          {
            "Name": "vsbond_convert_to_vstoken",
            "TypeFields": [
              {
                "Name": "vs_bond_currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vsbond_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "minimum_vstoken",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::vsbond_convert_to_vstoken`]."
            ]
          },
          {
            "Name": "vstoken_convert_to_vsbond",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vstoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "minimum_vsbond",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::vstoken_convert_to_vsbond`]."
            ]
          },
          {
            "Name": "set_exchange_fee",
            "TypeFields": [
              {
                "Name": "exchange_fee",
                "TypeName": "VstokenConversionExchangeFee<BalanceOf<T>>",
                "TypeId": 367
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::set_exchange_fee`]."
            ]
          },
          {
            "Name": "set_exchange_rate",
            "TypeFields": [
              {
                "Name": "lease",
                "TypeName": "i32",
                "TypeId": 368
              },
              {
                "Name": "exchange_rate",
                "TypeName": "VstokenConversionExchangeRate",
                "TypeId": 369
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::set_exchange_rate`]."
            ]
          },
          {
            "Name": "set_relaychain_lease",
            "TypeFields": [
              {
                "Name": "lease",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::set_relaychain_lease`]."
            ]
          }
        ],
        "Path": [
          "bifrost_vstoken_conversion",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "367": {
        "TypeFields": [
          {
            "Name": "vstoken_exchange_fee",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "vsbond_exchange_fee_of_vstoken",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "bifrost_vstoken_conversion",
          "primitives",
          "VstokenConversionExchangeFee"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "368": {
        "Primitive": "I32",
        "TypeDef": "Primitive"
      },
      "369": {
        "TypeFields": [
          {
            "Name": "vsbond_convert_to_vstoken",
            "TypeName": "Percent",
            "TypeId": 370
          },
          {
            "Name": "vstoken_convert_to_vsbond",
            "TypeName": "Percent",
            "TypeId": 370
          }
        ],
        "Path": [
          "bifrost_vstoken_conversion",
          "primitives",
          "VstokenConversionExchangeRate"
        ],
        "TypeDef": "Composite"
      },
      "370": {
        "TypeFields": [
          {
            "TypeName": "u8",
            "TypeId": 2
          }
        ],
        "Path": [
          "sp_arithmetic",
          "per_things",
          "Percent"
        ],
        "TypeDef": "Composite"
      },
      "371": {
        "Variants": [
          {
            "Name": "create_farming_pool",
            "TypeFields": [
              {
                "Name": "tokens_proportion",
                "TypeName": "Vec<(CurrencyIdOf<T>, Perbill)>",
                "TypeId": 372
              },
              {
                "Name": "basic_rewards",
                "TypeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>",
                "TypeId": 295
              },
              {
                "Name": "gauge_init",
                "TypeName": "Option<\n(BlockNumberFor<T>, Vec<(CurrencyIdOf<T>, BalanceOf<T>)>)>",
                "TypeId": 375
              },
              {
                "Name": "min_deposit_to_start",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "after_block_to_start",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 66
              },
              {
                "Name": "withdraw_limit_time",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 66
              },
              {
                "Name": "claim_limit_time",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 66
              },
              {
                "Name": "withdraw_limit_count",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::create_farming_pool`]."
            ]
          },
          {
            "Name": "charge",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              },
              {
                "Name": "rewards",
                "TypeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>",
                "TypeId": 295
              },
              {
                "Name": "if_gauge",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::charge`]."
            ]
          },
          {
            "Name": "deposit",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              },
              {
                "Name": "add_value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "gauge_info",
                "TypeName": "Option<(BalanceOf<T>, BlockNumberFor<T>)>",
                "TypeId": 377
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::deposit`]."
            ]
          },
          {
            "Name": "withdraw",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              },
              {
                "Name": "remove_value",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::withdraw`]."
            ]
          },
          {
            "Name": "claim",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::claim`]."
            ]
          },
          {
            "Name": "withdraw_claim",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::withdraw_claim`]."
            ]
          },
          {
            "Name": "force_retire_pool",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::force_retire_pool`]."
            ]
          },
          {
            "Name": "set_retire_limit",
            "TypeFields": [
              {
                "Name": "limit",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::set_retire_limit`]."
            ]
          },
          {
            "Name": "close_pool",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::close_pool`]."
            ]
          },
          {
            "Name": "reset_pool",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              },
              {
                "Name": "basic_rewards",
                "TypeName": "Option<Vec<(CurrencyIdOf<T>, BalanceOf<T>)>>",
                "TypeId": 379
              },
              {
                "Name": "min_deposit_to_start",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              },
              {
                "Name": "after_block_to_start",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 93
              },
              {
                "Name": "withdraw_limit_time",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 93
              },
              {
                "Name": "claim_limit_time",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 93
              },
              {
                "Name": "withdraw_limit_count",
                "TypeName": "Option<u8>",
                "TypeId": 319
              },
              {
                "Name": "gauge_init",
                "TypeName": "Option<\n(BlockNumberFor<T>, Vec<(CurrencyIdOf<T>, BalanceOf<T>)>)>",
                "TypeId": 375
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::reset_pool`]."
            ]
          },
          {
            "Name": "kill_pool",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::kill_pool`]."
            ]
          },
          {
            "Name": "edit_pool",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              },
              {
                "Name": "basic_rewards",
                "TypeName": "Option<Vec<(CurrencyIdOf<T>, BalanceOf<T>)>>",
                "TypeId": 379
              },
              {
                "Name": "withdraw_limit_time",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 93
              },
              {
                "Name": "claim_limit_time",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 93
              },
              {
                "Name": "gauge_basic_rewards",
                "TypeName": "Option<Vec<(CurrencyIdOf<T>, BalanceOf<T>)>>",
                "TypeId": 379
              },
              {
                "Name": "withdraw_limit_count",
                "TypeName": "Option<u8>",
                "TypeId": 319
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::edit_pool`]."
            ]
          },
          {
            "Name": "gauge_withdraw",
            "TypeFields": [
              {
                "Name": "gid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::gauge_withdraw`]."
            ]
          },
          {
            "Name": "force_gauge_claim",
            "TypeFields": [
              {
                "Name": "gid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::force_gauge_claim`]."
            ]
          },
          {
            "Name": "add_boost_pool_whitelist",
            "TypeFields": [
              {
                "Name": "whitelist",
                "TypeName": "Vec<PoolId>",
                "TypeId": 380
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::add_boost_pool_whitelist`]."
            ]
          },
          {
            "Name": "set_next_round_whitelist",
            "TypeFields": [
              {
                "Name": "whitelist",
                "TypeName": "Vec<PoolId>",
                "TypeId": 380
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::set_next_round_whitelist`]."
            ]
          },
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "vote_list",
                "TypeName": "Vec<(PoolId, Percent)>",
                "TypeId": 381
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "start_boost_round",
            "TypeFields": [
              {
                "Name": "round_length",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 17,
            "Docs": [
              "See [`Pallet::start_boost_round`]."
            ]
          },
          {
            "Name": "end_boost_round",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "See [`Pallet::end_boost_round`]."
            ]
          },
          {
            "Name": "charge_boost",
            "TypeFields": [
              {
                "Name": "rewards",
                "TypeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>",
                "TypeId": 295
              }
            ],
            "Index": 19,
            "Docs": [
              "See [`Pallet::charge_boost`]."
            ]
          }
        ],
        "Path": [
          "bifrost_farming",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "372": {
        "TypeId": 373,
        "TypeDef": "Sequence"
      },
      "373": {
        "TypeIds": [
          292,
          374
        ],
        "TypeDef": "Tuple"
      },
      "374": {
        "TypeFields": [
          {
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "sp_arithmetic",
          "per_things",
          "Perbill"
        ],
        "TypeDef": "Composite"
      },
      "375": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 376
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 376
          }
        ],
        "TypeDef": "Variant"
      },
      "376": {
        "TypeIds": [
          4,
          295
        ],
        "TypeDef": "Tuple"
      },
      "377": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 378
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 378
          }
        ],
        "TypeDef": "Variant"
      },
      "378": {
        "TypeIds": [
          6,
          4
        ],
        "TypeDef": "Tuple"
      },
      "379": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 295
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 295
          }
        ],
        "TypeDef": "Variant"
      },
      "380": {
        "TypeId": 4,
        "TypeDef": "Sequence"
      },
      "381": {
        "TypeId": 382,
        "TypeDef": "Sequence"
      },
      "382": {
        "TypeIds": [
          4,
          370
        ],
        "TypeDef": "Tuple"
      },
      "383": {
        "Variants": [
          {
            "Name": "token_config",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "exec_delay",
                "TypeName": "Option<u32>",
                "TypeId": 93
              },
              {
                "Name": "system_stakable_farming_rate",
                "TypeName": "Option<Permill>",
                "TypeId": 384
              },
              {
                "Name": "add_or_sub",
                "TypeName": "Option<bool>",
                "TypeId": 353
              },
              {
                "Name": "system_stakable_base",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              },
              {
                "Name": "farming_poolids",
                "TypeName": "Option<Vec<PoolId>>",
                "TypeId": 385
              },
              {
                "Name": "lptoken_rates",
                "TypeName": "Option<Vec<Perbill>>",
                "TypeId": 386
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::token_config`]."
            ]
          },
          {
            "Name": "delete_token",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::delete_token`]."
            ]
          },
          {
            "Name": "refresh_token_info",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::refresh_token_info`]."
            ]
          },
          {
            "Name": "payout",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::payout`]."
            ]
          }
        ],
        "Path": [
          "bifrost_system_staking",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "384": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 323
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 323
          }
        ],
        "TypeDef": "Variant"
      },
      "385": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 380
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 380
          }
        ],
        "TypeDef": "Variant"
      },
      "386": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 387
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 387
          }
        ],
        "TypeDef": "Variant"
      },
      "387": {
        "TypeId": 374,
        "TypeDef": "Sequence"
      },
      "388": {
        "Variants": [
          {
            "Name": "set_config",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "info",
                "TypeName": "Info<BalanceOf<T>>",
                "TypeId": 389
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_config`]."
            ]
          },
          {
            "Name": "charge",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::charge`]."
            ]
          },
          {
            "Name": "close",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::close`]."
            ]
          },
          {
            "Name": "payout",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::payout`]."
            ]
          }
        ],
        "Path": [
          "bifrost_system_maker",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "389": {
        "TypeFields": [
          {
            "Name": "vcurrency_id",
            "TypeName": "CurrencyId",
            "TypeId": 292
          },
          {
            "Name": "annualization",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "granularity",
            "TypeName": "BalanceOf",
            "TypeId": 6
          },
          {
            "Name": "minimum_redeem",
            "TypeName": "BalanceOf",
            "TypeId": 6
          }
        ],
        "Path": [
          "bifrost_system_maker",
          "pallet",
          "Info"
        ],
        "TypeParams": [
          {
            "Name": "BalanceOf",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "390": {
        "Variants": [
          {
            "Name": "create_distribution",
            "TypeFields": [
              {
                "Name": "token_type",
                "TypeName": "Vec<CurrencyId>",
                "TypeId": 311
              },
              {
                "Name": "tokens_proportion",
                "TypeName": "Vec<(AccountIdOf<T>, Perbill)>",
                "TypeId": 391
              },
              {
                "Name": "if_auto",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::create_distribution`]."
            ]
          },
          {
            "Name": "edit_distribution",
            "TypeFields": [
              {
                "Name": "distribution_id",
                "TypeName": "DistributionId",
                "TypeId": 4
              },
              {
                "Name": "token_type",
                "TypeName": "Option<Vec<CurrencyId>>",
                "TypeId": 393
              },
              {
                "Name": "tokens_proportion",
                "TypeName": "Option<Vec<(AccountIdOf<T>, Perbill)>>",
                "TypeId": 394
              },
              {
                "Name": "if_auto",
                "TypeName": "Option<bool>",
                "TypeId": 353
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::edit_distribution`]."
            ]
          },
          {
            "Name": "set_era_length",
            "TypeFields": [
              {
                "Name": "era_length",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::set_era_length`]."
            ]
          },
          {
            "Name": "execute_distribute",
            "TypeFields": [
              {
                "Name": "distribution_id",
                "TypeName": "DistributionId",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::execute_distribute`]."
            ]
          },
          {
            "Name": "delete_distribution",
            "TypeFields": [
              {
                "Name": "distribution_id",
                "TypeName": "DistributionId",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::delete_distribution`]."
            ]
          }
        ],
        "Path": [
          "bifrost_fee_share",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "391": {
        "TypeId": 392,
        "TypeDef": "Sequence"
      },
      "392": {
        "TypeIds": [
          0,
          374
        ],
        "TypeDef": "Tuple"
      },
      "393": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 311
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 311
          }
        ],
        "TypeDef": "Variant"
      },
      "394": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 391
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 391
          }
        ],
        "TypeDef": "Variant"
      },
      "395": {
        "Variants": [
          {
            "Name": "cross_in",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 136
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "remark",
                "TypeName": "Option<Vec<u8>>",
                "TypeId": 318
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::cross_in`]."
            ]
          },
          {
            "Name": "cross_out",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::cross_out`]."
            ]
          },
          {
            "Name": "register_linked_account",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "foreign_location",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 136
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::register_linked_account`]."
            ]
          },
          {
            "Name": "change_outer_linked_account",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "foreign_location",
                "TypeName": "Box<MultiLocation>",
                "TypeId": 136
              },
              {
                "Name": "account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::change_outer_linked_account`]."
            ]
          },
          {
            "Name": "register_currency_for_cross_in_out",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::register_currency_for_cross_in_out`]."
            ]
          },
          {
            "Name": "deregister_currency_for_cross_in_out",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::deregister_currency_for_cross_in_out`]."
            ]
          },
          {
            "Name": "add_to_issue_whitelist",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::add_to_issue_whitelist`]."
            ]
          },
          {
            "Name": "remove_from_issue_whitelist",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::remove_from_issue_whitelist`]."
            ]
          },
          {
            "Name": "add_to_register_whitelist",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::add_to_register_whitelist`]."
            ]
          },
          {
            "Name": "remove_from_register_whitelist",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::remove_from_register_whitelist`]."
            ]
          },
          {
            "Name": "set_crossing_minimum_amount",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "cross_in_minimum",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "cross_out_minimum",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::set_crossing_minimum_amount`]."
            ]
          }
        ],
        "Path": [
          "bifrost_cross_in_out",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "396": {
        "Variants": [
          {
            "Name": "set_config",
            "TypeFields": [
              {
                "Name": "min_mint",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              },
              {
                "Name": "min_block",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 93
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_config`]."
            ]
          },
          {
            "Name": "create_lock",
            "TypeFields": [
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "unlock_time",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::create_lock`]."
            ]
          },
          {
            "Name": "increase_amount",
            "TypeFields": [
              {
                "Name": "position",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::increase_amount`]."
            ]
          },
          {
            "Name": "increase_unlock_time",
            "TypeFields": [
              {
                "Name": "position",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "time",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::increase_unlock_time`]."
            ]
          },
          {
            "Name": "withdraw",
            "TypeFields": [
              {
                "Name": "position",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::withdraw`]."
            ]
          },
          {
            "Name": "notify_rewards",
            "TypeFields": [
              {
                "Name": "incentive_from",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "rewards_duration",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 93
              },
              {
                "Name": "rewards",
                "TypeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>",
                "TypeId": 295
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::notify_rewards`]."
            ]
          },
          {
            "Name": "get_rewards",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "See [`Pallet::get_rewards`]."
            ]
          },
          {
            "Name": "redeem_unlock",
            "TypeFields": [
              {
                "Name": "position",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::redeem_unlock`]."
            ]
          },
          {
            "Name": "set_markup_coefficient",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "markup",
                "TypeName": "FixedU128",
                "TypeId": 397
              },
              {
                "Name": "hardcap",
                "TypeName": "FixedU128",
                "TypeId": 397
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::set_markup_coefficient`]."
            ]
          },
          {
            "Name": "deposit_markup",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::deposit_markup`]."
            ]
          },
          {
            "Name": "withdraw_markup",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::withdraw_markup`]."
            ]
          },
          {
            "Name": "refresh",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::refresh`]."
            ]
          }
        ],
        "Path": [
          "bifrost_ve_minting",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "397": {
        "TypeFields": [
          {
            "TypeName": "u128",
            "TypeId": 6
          }
        ],
        "Path": [
          "sp_arithmetic",
          "fixed_point",
          "FixedU128"
        ],
        "TypeDef": "Composite"
      },
      "398": {
        "Variants": [
          {
            "Name": "mint",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              },
              {
                "Name": "remark",
                "TypeName": "BoundedVec<u8, ConstU32<32>>",
                "TypeId": 285
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::mint`]."
            ]
          },
          {
            "Name": "zenlink_swap",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "currency_id_in",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "currency_id_out",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "currency_id_out_min",
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::zenlink_swap`]."
            ]
          },
          {
            "Name": "redeem",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "vtoken_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::redeem`]."
            ]
          },
          {
            "Name": "stable_pool_swap",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "currency_id_in",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "currency_id_out",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "min_dy",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::stable_pool_swap`]."
            ]
          },
          {
            "Name": "add_whitelist",
            "TypeFields": [
              {
                "Name": "support_chain",
                "TypeName": "SupportChain",
                "TypeId": 401
              },
              {
                "Name": "evm_contract_account_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::add_whitelist`]."
            ]
          },
          {
            "Name": "remove_whitelist",
            "TypeFields": [
              {
                "Name": "support_chain",
                "TypeName": "SupportChain",
                "TypeId": 401
              },
              {
                "Name": "evm_contract_account_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::remove_whitelist`]."
            ]
          },
          {
            "Name": "set_execution_fee",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "execution_fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::set_execution_fee`]."
            ]
          },
          {
            "Name": "set_transfer_to_fee",
            "TypeFields": [
              {
                "Name": "support_chain",
                "TypeName": "SupportChain",
                "TypeId": 401
              },
              {
                "Name": "transfer_to_fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::set_transfer_to_fee`]."
            ]
          },
          {
            "Name": "set_currency_ethereum_call_switch",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "is_support",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::set_currency_ethereum_call_switch`]."
            ]
          },
          {
            "Name": "set_ethereum_call_configration",
            "TypeFields": [
              {
                "Name": "xcm_fee",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "xcm_weight",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "period",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "contract",
                "TypeName": "H160",
                "TypeId": 399
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::set_ethereum_call_configration`]."
            ]
          },
          {
            "Name": "set_currency_support_xcm_fee",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "is_support",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::set_currency_support_xcm_fee`]."
            ]
          },
          {
            "Name": "set_delay_block",
            "TypeFields": [
              {
                "Name": "delay_block",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::set_delay_block`]."
            ]
          },
          {
            "Name": "force_add_order",
            "TypeFields": [
              {
                "Name": "slpx_contract_derivative_account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              },
              {
                "Name": "remark",
                "TypeName": "BoundedVec<u8, ConstU32<32>>",
                "TypeId": 285
              },
              {
                "Name": "order_type",
                "TypeName": "OrderType",
                "TypeId": 402
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::force_add_order`]."
            ]
          },
          {
            "Name": "mint_with_channel_id",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              },
              {
                "Name": "remark",
                "TypeName": "BoundedVec<u8, ConstU32<32>>",
                "TypeId": 285
              },
              {
                "Name": "channel_id",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::mint_with_channel_id`]."
            ]
          }
        ],
        "Path": [
          "bifrost_slpx",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "399": {
        "TypeFields": [
          {
            "TypeName": "[u8; 20]",
            "TypeId": 67
          }
        ],
        "Path": [
          "primitive_types",
          "H160"
        ],
        "TypeDef": "Composite"
      },
      "400": {
        "Variants": [
          {
            "Name": "Astar",
            "TypeFields": [
              {
                "TypeName": "H160",
                "TypeId": 399
              }
            ],
            "Index": 0
          },
          {
            "Name": "Moonbeam",
            "TypeFields": [
              {
                "TypeName": "H160",
                "TypeId": 399
              }
            ],
            "Index": 1
          },
          {
            "Name": "Hydradx",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 2
          },
          {
            "Name": "Interlay",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 3
          },
          {
            "Name": "Manta",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "bifrost_slpx",
          "types",
          "TargetChain"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "401": {
        "Variants": [
          {
            "Name": "Astar",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Moonbeam",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Hydradx",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Interlay",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Manta",
            "TypeFields": null,
            "Index": 4
          }
        ],
        "Path": [
          "bifrost_slpx",
          "types",
          "SupportChain"
        ],
        "TypeDef": "Variant"
      },
      "402": {
        "Variants": [
          {
            "Name": "Mint",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Redeem",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "bifrost_slpx",
          "types",
          "OrderType"
        ],
        "TypeDef": "Variant"
      },
      "403": {
        "Variants": [
          {
            "Name": "add_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_member`]."
            ]
          },
          {
            "Name": "promote_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::promote_member`]."
            ]
          },
          {
            "Name": "demote_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::demote_member`]."
            ]
          },
          {
            "Name": "remove_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "min_rank",
                "TypeName": "Rank",
                "TypeId": 56
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::remove_member`]."
            ]
          },
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "poll",
                "TypeName": "PollIndexOf<T, I>",
                "TypeId": 4
              },
              {
                "Name": "aye",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "cleanup_poll",
            "TypeFields": [
              {
                "Name": "poll_index",
                "TypeName": "PollIndexOf<T, I>",
                "TypeId": 4
              },
              {
                "Name": "max",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::cleanup_poll`]."
            ]
          },
          {
            "Name": "exchange_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "new_who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::exchange_member`]."
            ]
          }
        ],
        "Path": [
          "pallet_ranked_collective",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "404": {
        "Variants": [
          {
            "Name": "submit",
            "TypeFields": [
              {
                "Name": "proposal_origin",
                "TypeName": "Box<PalletsOriginOf<T>>",
                "TypeId": 108
              },
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T, I>",
                "TypeId": 57
              },
              {
                "Name": "enactment_moment",
                "TypeName": "DispatchTime<BlockNumberFor<T>>",
                "TypeId": 131
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::submit`]."
            ]
          },
          {
            "Name": "place_decision_deposit",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::place_decision_deposit`]."
            ]
          },
          {
            "Name": "refund_decision_deposit",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::refund_decision_deposit`]."
            ]
          },
          {
            "Name": "cancel",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::cancel`]."
            ]
          },
          {
            "Name": "kill",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::kill`]."
            ]
          },
          {
            "Name": "nudge_referendum",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::nudge_referendum`]."
            ]
          },
          {
            "Name": "one_fewer_deciding",
            "TypeFields": [
              {
                "Name": "track",
                "TypeName": "TrackIdOf<T, I>",
                "TypeId": 56
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::one_fewer_deciding`]."
            ]
          },
          {
            "Name": "refund_submission_deposit",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::refund_submission_deposit`]."
            ]
          },
          {
            "Name": "set_metadata",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4
              },
              {
                "Name": "maybe_hash",
                "TypeName": "Option<T::Hash>",
                "TypeId": 94
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::set_metadata`]."
            ]
          }
        ],
        "Path": [
          "pallet_referenda",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "405": {
        "Variants": [
          {
            "Name": "create_pool",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Vec<AssetIdOf<T>>",
                "TypeId": 311
              },
              {
                "Name": "precisions",
                "TypeName": "Vec<AtLeast64BitUnsignedOf<T>>",
                "TypeId": 406
              },
              {
                "Name": "mint_fee",
                "TypeName": "AtLeast64BitUnsignedOf<T>",
                "TypeId": 6
              },
              {
                "Name": "swap_fee",
                "TypeName": "AtLeast64BitUnsignedOf<T>",
                "TypeId": 6
              },
              {
                "Name": "redeem_fee",
                "TypeName": "AtLeast64BitUnsignedOf<T>",
                "TypeId": 6
              },
              {
                "Name": "initial_a",
                "TypeName": "AtLeast64BitUnsignedOf<T>",
                "TypeId": 6
              },
              {
                "Name": "fee_recipient",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "yield_recipient",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "precision",
                "TypeName": "AtLeast64BitUnsignedOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::create_pool`]."
            ]
          },
          {
            "Name": "add_liquidity",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "amounts",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "min_mint_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::add_liquidity`]."
            ]
          },
          {
            "Name": "swap",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "i",
                "TypeName": "PoolTokenIndex",
                "TypeId": 4
              },
              {
                "Name": "j",
                "TypeName": "PoolTokenIndex",
                "TypeId": 4
              },
              {
                "Name": "dx",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "min_dy",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::swap`]."
            ]
          },
          {
            "Name": "redeem_proportion",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "min_redeem_amounts",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::redeem_proportion`]."
            ]
          },
          {
            "Name": "redeem_single",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "i",
                "TypeName": "PoolTokenIndex",
                "TypeId": 4
              },
              {
                "Name": "min_redeem_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "asset_length",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::redeem_single`]."
            ]
          },
          {
            "Name": "redeem_multi",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "amounts",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "max_redeem_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::redeem_multi`]."
            ]
          },
          {
            "Name": "modify_a",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "a",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              },
              {
                "Name": "future_a_block",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::modify_a`]."
            ]
          },
          {
            "Name": "modify_fees",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "mint_fee",
                "TypeName": "Option<T::AtLeast64BitUnsigned>",
                "TypeId": 320
              },
              {
                "Name": "swap_fee",
                "TypeName": "Option<T::AtLeast64BitUnsigned>",
                "TypeId": 320
              },
              {
                "Name": "redeem_fee",
                "TypeName": "Option<T::AtLeast64BitUnsigned>",
                "TypeId": 320
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::modify_fees`]."
            ]
          },
          {
            "Name": "modify_recipients",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "fee_recipient",
                "TypeName": "Option<T::AccountId>",
                "TypeId": 96
              },
              {
                "Name": "yield_recipient",
                "TypeName": "Option<T::AccountId>",
                "TypeId": 96
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::modify_recipients`]."
            ]
          },
          {
            "Name": "edit_token_rate",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "token_rate_info",
                "TypeName": "Vec<\n(AssetIdOf<T>,\n(AtLeast64BitUnsignedOf<T>, AtLeast64BitUnsignedOf<T>),)>",
                "TypeId": 407
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::edit_token_rate`]."
            ]
          },
          {
            "Name": "config_vtoken_auto_refresh",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "hardcap",
                "TypeName": "Permill",
                "TypeId": 323
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::config_vtoken_auto_refresh`]."
            ]
          },
          {
            "Name": "remove_vtoken_auto_refresh",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::remove_vtoken_auto_refresh`]."
            ]
          }
        ],
        "Path": [
          "bifrost_stable_pool",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "406": {
        "TypeId": 6,
        "TypeDef": "Sequence"
      },
      "407": {
        "TypeId": 408,
        "TypeDef": "Sequence"
      },
      "408": {
        "TypeIds": [
          292,
          409
        ],
        "TypeDef": "Tuple"
      },
      "409": {
        "TypeIds": [
          6,
          6
        ],
        "TypeDef": "Tuple"
      },
      "410": {
        "Variants": [
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "poll_index",
                "TypeName": "PollIndex",
                "TypeId": 66
              },
              {
                "Name": "vtoken_vote",
                "TypeName": "AccountVote<BalanceOf<T>>",
                "TypeId": 411
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "unlock",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "poll_index",
                "TypeName": "PollIndex",
                "TypeId": 66
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::unlock`]."
            ]
          },
          {
            "Name": "remove_delegator_vote",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "poll_index",
                "TypeName": "PollIndex",
                "TypeId": 66
              },
              {
                "Name": "derivative_index",
                "TypeName": "DerivativeIndex",
                "TypeId": 333
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::remove_delegator_vote`]."
            ]
          },
          {
            "Name": "kill_referendum",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "poll_index",
                "TypeName": "PollIndex",
                "TypeId": 66
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::kill_referendum`]."
            ]
          },
          {
            "Name": "add_delegator",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "derivative_index",
                "TypeName": "DerivativeIndex",
                "TypeId": 333
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::add_delegator`]."
            ]
          },
          {
            "Name": "set_referendum_status",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "poll_index",
                "TypeName": "PollIndex",
                "TypeId": 66
              },
              {
                "Name": "info",
                "TypeName": "ReferendumInfoOf<T>",
                "TypeId": 412
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::set_referendum_status`]."
            ]
          },
          {
            "Name": "set_vote_locking_period",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "locking_period",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::set_vote_locking_period`]."
            ]
          },
          {
            "Name": "set_undeciding_timeout",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "undeciding_timeout",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::set_undeciding_timeout`]."
            ]
          },
          {
            "Name": "notify_vote",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 204
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::notify_vote`]."
            ]
          },
          {
            "Name": "notify_remove_delegator_vote",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 204
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::notify_remove_delegator_vote`]."
            ]
          },
          {
            "Name": "set_vote_cap_ratio",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vote_cap_ratio",
                "TypeName": "Perbill",
                "TypeId": 374
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::set_vote_cap_ratio`]."
            ]
          }
        ],
        "Path": [
          "bifrost_vtoken_voting",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "411": {
        "Variants": [
          {
            "Name": "Standard",
            "TypeFields": [
              {
                "Name": "vote",
                "TypeName": "Vote",
                "TypeId": 104
              },
              {
                "Name": "balance",
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "Split",
            "TypeFields": [
              {
                "Name": "aye",
                "TypeName": "Balance",
                "TypeId": 6
              },
              {
                "Name": "nay",
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 1
          },
          {
            "Name": "SplitAbstain",
            "TypeFields": [
              {
                "Name": "aye",
                "TypeName": "Balance",
                "TypeId": 6
              },
              {
                "Name": "nay",
                "TypeName": "Balance",
                "TypeId": 6
              },
              {
                "Name": "abstain",
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "bifrost_vtoken_voting",
          "vote",
          "AccountVote"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "412": {
        "Variants": [
          {
            "Name": "Ongoing",
            "TypeFields": [
              {
                "TypeName": "ReferendumStatus<Moment, Tally>",
                "TypeId": 414
              }
            ],
            "Index": 0
          },
          {
            "Name": "Completed",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              }
            ],
            "Index": 1
          },
          {
            "Name": "Killed",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "bifrost_vtoken_voting",
          "vote",
          "ReferendumInfo"
        ],
        "TypeParams": [
          {
            "Name": "Moment",
            "TypeId": 4
          },
          {
            "Name": "Tally",
            "TypeId": 413
          }
        ],
        "TypeDef": "Variant"
      },
      "413": {
        "TypeFields": [
          {
            "Name": "ayes",
            "TypeName": "Votes",
            "TypeId": 6
          },
          {
            "Name": "nays",
            "TypeName": "Votes",
            "TypeId": 6
          },
          {
            "Name": "support",
            "TypeName": "Votes",
            "TypeId": 6
          }
        ],
        "Path": [
          "bifrost_vtoken_voting",
          "vote",
          "Tally"
        ],
        "TypeParams": [
          {
            "Name": "Votes",
            "TypeId": 6
          },
          {
            "Name": "Total"
          }
        ],
        "TypeDef": "Composite"
      },
      "414": {
        "TypeFields": [
          {
            "Name": "submitted",
            "TypeName": "Option<Moment>",
            "TypeId": 93
          },
          {
            "Name": "tally",
            "TypeName": "Tally",
            "TypeId": 413
          }
        ],
        "Path": [
          "bifrost_vtoken_voting",
          "vote",
          "ReferendumStatus"
        ],
        "TypeParams": [
          {
            "Name": "Moment",
            "TypeId": 4
          },
          {
            "Name": "Tally",
            "TypeId": 413
          }
        ],
        "TypeDef": "Composite"
      },
      "415": {
        "Variants": [
          {
            "Name": "add_market",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "market",
                "TypeName": "Market<BalanceOf<T>>",
                "TypeId": 416
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_market`]."
            ]
          },
          {
            "Name": "activate_market",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::activate_market`]."
            ]
          },
          {
            "Name": "update_rate_model",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "rate_model",
                "TypeName": "InterestRateModel",
                "TypeId": 417
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::update_rate_model`]."
            ]
          },
          {
            "Name": "update_market",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "collateral_factor",
                "TypeName": "Option<Ratio>",
                "TypeId": 384
              },
              {
                "Name": "liquidation_threshold",
                "TypeName": "Option<Ratio>",
                "TypeId": 384
              },
              {
                "Name": "reserve_factor",
                "TypeName": "Option<Ratio>",
                "TypeId": 384
              },
              {
                "Name": "close_factor",
                "TypeName": "Option<Ratio>",
                "TypeId": 384
              },
              {
                "Name": "liquidate_incentive_reserved_factor",
                "TypeName": "Option<Ratio>",
                "TypeId": 384
              },
              {
                "Name": "liquidate_incentive",
                "TypeName": "Option<Rate>",
                "TypeId": 421
              },
              {
                "Name": "supply_cap",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              },
              {
                "Name": "borrow_cap",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::update_market`]."
            ]
          },
          {
            "Name": "force_update_market",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "market",
                "TypeName": "Market<BalanceOf<T>>",
                "TypeId": 416
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::force_update_market`]."
            ]
          },
          {
            "Name": "add_reward",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::add_reward`]."
            ]
          },
          {
            "Name": "withdraw_missing_reward",
            "TypeFields": [
              {
                "Name": "target_account",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::withdraw_missing_reward`]."
            ]
          },
          {
            "Name": "update_market_reward_speed",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "supply_reward_per_block",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              },
              {
                "Name": "borrow_reward_per_block",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::update_market_reward_speed`]."
            ]
          },
          {
            "Name": "claim_reward",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "See [`Pallet::claim_reward`]."
            ]
          },
          {
            "Name": "claim_reward_for_market",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::claim_reward_for_market`]."
            ]
          },
          {
            "Name": "mint",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "mint_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::mint`]."
            ]
          },
          {
            "Name": "redeem",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "redeem_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::redeem`]."
            ]
          },
          {
            "Name": "redeem_all",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::redeem_all`]."
            ]
          },
          {
            "Name": "borrow",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "borrow_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::borrow`]."
            ]
          },
          {
            "Name": "repay_borrow",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "repay_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::repay_borrow`]."
            ]
          },
          {
            "Name": "repay_borrow_all",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::repay_borrow_all`]."
            ]
          },
          {
            "Name": "collateral_asset",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "enable",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::collateral_asset`]."
            ]
          },
          {
            "Name": "liquidate_borrow",
            "TypeFields": [
              {
                "Name": "borrower",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "liquidation_asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "repay_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "collateral_asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 17,
            "Docs": [
              "See [`Pallet::liquidate_borrow`]."
            ]
          },
          {
            "Name": "add_reserves",
            "TypeFields": [
              {
                "Name": "payer",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "add_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 18,
            "Docs": [
              "See [`Pallet::add_reserves`]."
            ]
          },
          {
            "Name": "reduce_reserves",
            "TypeFields": [
              {
                "Name": "receiver",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "reduce_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 19,
            "Docs": [
              "See [`Pallet::reduce_reserves`]."
            ]
          },
          {
            "Name": "reduce_incentive_reserves",
            "TypeFields": [
              {
                "Name": "receiver",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 65
              },
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "redeem_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 20,
            "Docs": [
              "See [`Pallet::reduce_incentive_reserves`]."
            ]
          },
          {
            "Name": "update_liquidation_free_collateral",
            "TypeFields": [
              {
                "Name": "collaterals",
                "TypeName": "Vec<AssetIdOf<T>>",
                "TypeId": 311
              }
            ],
            "Index": 21,
            "Docs": [
              "See [`Pallet::update_liquidation_free_collateral`]."
            ]
          }
        ],
        "Path": [
          "lend_market",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "416": {
        "TypeFields": [
          {
            "Name": "collateral_factor",
            "TypeName": "Ratio",
            "TypeId": 323
          },
          {
            "Name": "liquidation_threshold",
            "TypeName": "Ratio",
            "TypeId": 323
          },
          {
            "Name": "reserve_factor",
            "TypeName": "Ratio",
            "TypeId": 323
          },
          {
            "Name": "close_factor",
            "TypeName": "Ratio",
            "TypeId": 323
          },
          {
            "Name": "liquidate_incentive",
            "TypeName": "Rate",
            "TypeId": 397
          },
          {
            "Name": "liquidate_incentive_reserved_factor",
            "TypeName": "Ratio",
            "TypeId": 323
          },
          {
            "Name": "rate_model",
            "TypeName": "InterestRateModel",
            "TypeId": 417
          },
          {
            "Name": "state",
            "TypeName": "MarketState",
            "TypeId": 420
          },
          {
            "Name": "supply_cap",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "borrow_cap",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "lend_token_id",
            "TypeName": "CurrencyId",
            "TypeId": 292
          }
        ],
        "Path": [
          "lend_market",
          "types",
          "Market"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "417": {
        "Variants": [
          {
            "Name": "Jump",
            "TypeFields": [
              {
                "TypeName": "JumpModel",
                "TypeId": 418
              }
            ],
            "Index": 0
          },
          {
            "Name": "Curve",
            "TypeFields": [
              {
                "TypeName": "CurveModel",
                "TypeId": 419
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "lend_market",
          "rate_model",
          "InterestRateModel"
        ],
        "TypeDef": "Variant"
      },
      "418": {
        "TypeFields": [
          {
            "Name": "base_rate",
            "TypeName": "Rate",
            "TypeId": 397
          },
          {
            "Name": "jump_rate",
            "TypeName": "Rate",
            "TypeId": 397
          },
          {
            "Name": "full_rate",
            "TypeName": "Rate",
            "TypeId": 397
          },
          {
            "Name": "jump_utilization",
            "TypeName": "Ratio",
            "TypeId": 323
          }
        ],
        "Path": [
          "lend_market",
          "rate_model",
          "JumpModel"
        ],
        "TypeDef": "Composite"
      },
      "419": {
        "TypeFields": [
          {
            "Name": "base_rate",
            "TypeName": "Rate",
            "TypeId": 397
          }
        ],
        "Path": [
          "lend_market",
          "rate_model",
          "CurveModel"
        ],
        "TypeDef": "Composite"
      },
      "420": {
        "Variants": [
          {
            "Name": "Active",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Pending",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Supervision",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "lend_market",
          "types",
          "MarketState"
        ],
        "TypeDef": "Variant"
      },
      "421": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 397
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 397
          }
        ],
        "TypeDef": "Variant"
      },
      "422": {
        "Variants": [
          {
            "Name": "set_price",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "price",
                "TypeName": "Price",
                "TypeId": 397
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_price`]."
            ]
          },
          {
            "Name": "reset_price",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::reset_price`]."
            ]
          },
          {
            "Name": "set_foreign_asset",
            "TypeFields": [
              {
                "Name": "foreign_asset_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "asset_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::set_foreign_asset`]."
            ]
          }
        ],
        "Path": [
          "pallet_prices",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "423": {
        "Variants": [
          {
            "Name": "feed_values",
            "TypeFields": [
              {
                "Name": "values",
                "TypeName": "BoundedVec<(T::OracleKey, T::OracleValue), T::MaxFeedValues>",
                "TypeId": 424
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::feed_values`]."
            ]
          }
        ],
        "Path": [
          "orml_oracle",
          "module",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "424": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 426
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 425
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "425": {
        "TypeIds": [
          292,
          397
        ],
        "TypeDef": "Tuple"
      },
      "426": {
        "TypeId": 425,
        "TypeDef": "Sequence"
      },
      "427": {
        "Variants": [
          {
            "Name": "add_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_member`]."
            ]
          },
          {
            "Name": "remove_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::remove_member`]."
            ]
          },
          {
            "Name": "swap_member",
            "TypeFields": [
              {
                "Name": "remove",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              },
              {
                "Name": "add",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::swap_member`]."
            ]
          },
          {
            "Name": "reset_members",
            "TypeFields": [
              {
                "Name": "members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 38
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::reset_members`]."
            ]
          },
          {
            "Name": "change_key",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::change_key`]."
            ]
          },
          {
            "Name": "set_prime",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 65
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::set_prime`]."
            ]
          },
          {
            "Name": "clear_prime",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "See [`Pallet::clear_prime`]."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "428": {
        "Variants": [
          {
            "Name": "flash_loan_deposit",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "rate",
                "TypeName": "Rate",
                "TypeId": 397
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::flash_loan_deposit`]."
            ]
          }
        ],
        "Path": [
          "leverage_staking",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "429": {
        "Variants": [
          {
            "Name": "register_channel",
            "TypeFields": [
              {
                "Name": "channel_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "receive_account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::register_channel`]."
            ]
          },
          {
            "Name": "remove_channel",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::remove_channel`]."
            ]
          },
          {
            "Name": "update_channel_receive_account",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              },
              {
                "Name": "receive_account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::update_channel_receive_account`]."
            ]
          },
          {
            "Name": "set_channel_commission_token",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              },
              {
                "Name": "vtoken",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "rate",
                "TypeName": "Percent",
                "TypeId": 370
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::set_channel_commission_token`]."
            ]
          },
          {
            "Name": "set_commission_tokens",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "commission_token_op",
                "TypeName": "Option<CurrencyId>",
                "TypeId": 309
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::set_commission_tokens`]."
            ]
          },
          {
            "Name": "claim_commissions",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::claim_commissions`]."
            ]
          },
          {
            "Name": "set_channel_vtoken_shares",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              },
              {
                "Name": "vtoken",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "shares",
                "TypeName": "Permill",
                "TypeId": 323
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::set_channel_vtoken_shares`]."
            ]
          }
        ],
        "Path": [
          "bifrost_channel_commission",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "430": {
        "Variants": [
          {
            "Name": "clouds_to_vebnc",
            "TypeFields": [
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "expected_min_vebnc",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::clouds_to_vebnc`]."
            ]
          },
          {
            "Name": "charge_vbnc",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::charge_vbnc`]."
            ]
          }
        ],
        "Path": [
          "bifrost_clouds_convert",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "431": {
        "Variants": [
          {
            "Name": "set_vtoken",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "proportion",
                "TypeName": "Permill",
                "TypeId": 323
              },
              {
                "Name": "buyback_duration",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "add_liquidity_duration",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "if_auto",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_vtoken`]."
            ]
          },
          {
            "Name": "charge",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::charge`]."
            ]
          },
          {
            "Name": "remove_vtoken",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::remove_vtoken`]."
            ]
          }
        ],
        "Path": [
          "bifrost_buy_back",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "432": {
        "Path": [
          "sp_runtime",
          "traits",
          "BlakeTwo256"
        ],
        "TypeDef": "Composite"
      },
      "433": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "434": {
        "TypeFields": [
          {
            "Name": "ayes",
            "TypeName": "Votes",
            "TypeId": 6
          },
          {
            "Name": "nays",
            "TypeName": "Votes",
            "TypeId": 6
          },
          {
            "Name": "support",
            "TypeName": "Votes",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_conviction_voting",
          "types",
          "Tally"
        ],
        "TypeParams": [
          {
            "Name": "Votes",
            "TypeId": 6
          },
          {
            "Name": "Total"
          }
        ],
        "TypeDef": "Composite"
      },
      "435": {
        "Variants": [
          {
            "Name": "CallWhitelisted",
            "TypeFields": [
              {
                "Name": "call_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 0
          },
          {
            "Name": "WhitelistedCallRemoved",
            "TypeFields": [
              {
                "Name": "call_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 1
          },
          {
            "Name": "WhitelistedCallDispatched",
            "TypeFields": [
              {
                "Name": "call_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResultWithPostInfo",
                "TypeId": 436
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "pallet_whitelist",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "436": {
        "Variants": [
          {
            "Name": "Ok",
            "TypeFields": [
              {
                "TypeId": 437
              }
            ],
            "Index": 0
          },
          {
            "Name": "Err",
            "TypeFields": [
              {
                "TypeId": 439
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Result"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 437
          },
          {
            "Name": "E",
            "TypeId": 439
          }
        ],
        "TypeDef": "Variant"
      },
      "437": {
        "TypeFields": [
          {
            "Name": "actual_weight",
            "TypeName": "Option<Weight>",
            "TypeId": 438
          },
          {
            "Name": "pays_fee",
            "TypeName": "Pays",
            "TypeId": 24
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "PostDispatchInfo"
        ],
        "TypeDef": "Composite"
      },
      "438": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 9
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 9
          }
        ],
        "TypeDef": "Variant"
      },
      "439": {
        "TypeFields": [
          {
            "Name": "post_info",
            "TypeName": "Info",
            "TypeId": 437
          },
          {
            "Name": "error",
            "TypeName": "DispatchError",
            "TypeId": 25
          }
        ],
        "Path": [
          "sp_runtime",
          "DispatchErrorWithPostInfo"
        ],
        "TypeParams": [
          {
            "Name": "Info",
            "TypeId": 437
          }
        ],
        "TypeDef": "Composite"
      },
      "440": {
        "Variants": [
          {
            "Name": "XcmpMessageSent",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 0,
            "Docs": [
              "An HRMP message was sent to a sibling parachain."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "441": {
        "Variants": [
          {
            "Name": "Attempted",
            "TypeFields": [
              {
                "Name": "outcome",
                "TypeName": "xcm::latest::Outcome",
                "TypeId": 442
              }
            ],
            "Index": 0,
            "Docs": [
              "Execution of an XCM message was attempted."
            ]
          },
          {
            "Name": "Sent",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "destination",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "message",
                "TypeName": "Xcm<()>",
                "TypeId": 195
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 1,
            "Docs": [
              "A XCM message was sent."
            ]
          },
          {
            "Name": "UnexpectedResponse",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              }
            ],
            "Index": 2,
            "Docs": [
              "Query response received which does not match a registered query. This may be because a",
              "matching query was never registered, it may be because it is a duplicate response, or",
              "because the query timed out."
            ]
          },
          {
            "Name": "ResponseReady",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 204
              }
            ],
            "Index": 3,
            "Docs": [
              "Query response has been received and is ready for taking with `take_response`. There is",
              "no registered notification call."
            ]
          },
          {
            "Name": "Notified",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "pallet_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "call_index",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 4,
            "Docs": [
              "Query response has been received and query is removed. The registered notification has",
              "been dispatched and executed successfully."
            ]
          },
          {
            "Name": "NotifyOverweight",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "pallet_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "call_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "actual_weight",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "max_budgeted_weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 5,
            "Docs": [
              "Query response has been received and query is removed. The registered notification",
              "could not be dispatched because the dispatch weight is greater than the maximum weight",
              "originally budgeted by this runtime for the query result."
            ]
          },
          {
            "Name": "NotifyDispatchError",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "pallet_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "call_index",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 6,
            "Docs": [
              "Query response has been received and query is removed. There was a general error with",
              "dispatching the notification call."
            ]
          },
          {
            "Name": "NotifyDecodeFailed",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "pallet_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "call_index",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 7,
            "Docs": [
              "Query response has been received and query is removed. The dispatch was unable to be",
              "decoded into a `Call`; this might be due to dispatch function having a signature which",
              "is not `(origin, QueryId, Response)`."
            ]
          },
          {
            "Name": "InvalidResponder",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "expected_location",
                "TypeName": "Option<Location>",
                "TypeId": 209
              }
            ],
            "Index": 8,
            "Docs": [
              "Expected query response has been received but the origin location of the response does",
              "not match that expected. The query remains registered for a later, valid, response to",
              "be received and acted upon."
            ]
          },
          {
            "Name": "InvalidResponderVersion",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              }
            ],
            "Index": 9,
            "Docs": [
              "Expected query response has been received but the expected origin location placed in",
              "storage by this runtime previously cannot be decoded. The query remains registered.",
              "",
              "This is unexpected (since a location placed in storage in a previously executing",
              "runtime should be readable prior to query timeout) and dangerous since the possibly",
              "valid response will be dropped. Manual governance intervention is probably going to be",
              "needed."
            ]
          },
          {
            "Name": "ResponseTaken",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              }
            ],
            "Index": 10,
            "Docs": [
              "Received query response has been read and removed."
            ]
          },
          {
            "Name": "AssetsTrapped",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "H256",
                "TypeId": 12
              },
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "assets",
                "TypeName": "VersionedAssets",
                "TypeId": 214
              }
            ],
            "Index": 11,
            "Docs": [
              "Some assets have been placed in an asset trap."
            ]
          },
          {
            "Name": "VersionChangeNotified",
            "TypeFields": [
              {
                "Name": "destination",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "result",
                "TypeName": "XcmVersion",
                "TypeId": 4
              },
              {
                "Name": "cost",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 12,
            "Docs": [
              "An XCM version change notification message has been attempted to be sent.",
              "",
              "The cost of sending it (borne by the chain) is included."
            ]
          },
          {
            "Name": "SupportedVersionChanged",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "version",
                "TypeName": "XcmVersion",
                "TypeId": 4
              }
            ],
            "Index": 13,
            "Docs": [
              "The supported version of a location has been changed. This might be through an",
              "automatic notification or a manual intervention."
            ]
          },
          {
            "Name": "NotifyTargetSendFail",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "error",
                "TypeName": "XcmError",
                "TypeId": 182
              }
            ],
            "Index": 14,
            "Docs": [
              "A given location which had a version change subscription was dropped owing to an error",
              "sending the notification to it."
            ]
          },
          {
            "Name": "NotifyTargetMigrationFail",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "VersionedLocation",
                "TypeId": 135
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              }
            ],
            "Index": 15,
            "Docs": [
              "A given location which had a version change subscription was dropped owing to an error",
              "migrating the location to our new XCM format."
            ]
          },
          {
            "Name": "InvalidQuerierVersion",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              }
            ],
            "Index": 16,
            "Docs": [
              "Expected query response has been received but the expected querier location placed in",
              "storage by this runtime previously cannot be decoded. The query remains registered.",
              "",
              "This is unexpected (since a location placed in storage in a previously executing",
              "runtime should be readable prior to query timeout) and dangerous since the possibly",
              "valid response will be dropped. Manual governance intervention is probably going to be",
              "needed."
            ]
          },
          {
            "Name": "InvalidQuerier",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "expected_querier",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "maybe_actual_querier",
                "TypeName": "Option<Location>",
                "TypeId": 209
              }
            ],
            "Index": 17,
            "Docs": [
              "Expected query response has been received but the querier location of the response does",
              "not match the expected. The query remains registered for a later, valid, response to",
              "be received and acted upon."
            ]
          },
          {
            "Name": "VersionNotifyStarted",
            "TypeFields": [
              {
                "Name": "destination",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "cost",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 18,
            "Docs": [
              "A remote has requested XCM version change notification from us and we have honored it.",
              "A version information message is sent to them and its cost is included."
            ]
          },
          {
            "Name": "VersionNotifyRequested",
            "TypeFields": [
              {
                "Name": "destination",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "cost",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 19,
            "Docs": [
              "We have requested that a remote chain send us XCM version change notifications."
            ]
          },
          {
            "Name": "VersionNotifyUnrequested",
            "TypeFields": [
              {
                "Name": "destination",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "cost",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 20,
            "Docs": [
              "We have requested that a remote chain stops sending us XCM version change",
              "notifications."
            ]
          },
          {
            "Name": "FeesPaid",
            "TypeFields": [
              {
                "Name": "paying",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "fees",
                "TypeName": "Assets",
                "TypeId": 198
              }
            ],
            "Index": 21,
            "Docs": [
              "Fees were paid from a location for an operation (often for using `SendXcm`)."
            ]
          },
          {
            "Name": "AssetsClaimed",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "H256",
                "TypeId": 12
              },
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "assets",
                "TypeName": "VersionedAssets",
                "TypeId": 214
              }
            ],
            "Index": 22,
            "Docs": [
              "Some assets have been claimed from an asset trap"
            ]
          },
          {
            "Name": "VersionMigrationFinished",
            "TypeFields": [
              {
                "Name": "version",
                "TypeName": "XcmVersion",
                "TypeId": 4
              }
            ],
            "Index": 23,
            "Docs": [
              "A XCM version migration finished."
            ]
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "442": {
        "Variants": [
          {
            "Name": "Complete",
            "TypeFields": [
              {
                "Name": "used",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 0
          },
          {
            "Name": "Incomplete",
            "TypeFields": [
              {
                "Name": "used",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "error",
                "TypeName": "Error",
                "TypeId": 182
              }
            ],
            "Index": 1
          },
          {
            "Name": "Error",
            "TypeFields": [
              {
                "Name": "error",
                "TypeName": "Error",
                "TypeId": 182
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "traits",
          "Outcome"
        ],
        "TypeDef": "Variant"
      },
      "443": {
        "Variants": [
          {
            "Name": "InvalidFormat",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 0,
            "Docs": [
              "Downward message is invalid XCM.",
              "\\[ id \\]"
            ]
          },
          {
            "Name": "UnsupportedVersion",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1,
            "Docs": [
              "Downward message is unsupported version of XCM.",
              "\\[ id \\]"
            ]
          },
          {
            "Name": "ExecutedDownward",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              },
              {
                "TypeName": "Outcome",
                "TypeId": 442
              }
            ],
            "Index": 2,
            "Docs": [
              "Downward message executed with the given outcome.",
              "\\[ id, outcome \\]"
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_xcm",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "444": {
        "Variants": [
          {
            "Name": "ProcessingFailed",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "H256",
                "TypeId": 12,
                "Docs": [
                  "The `blake2_256` hash of the message."
                ]
              },
              {
                "Name": "origin",
                "TypeName": "MessageOriginOf<T>",
                "TypeId": 228,
                "Docs": [
                  "The queue of the message."
                ]
              },
              {
                "Name": "error",
                "TypeName": "ProcessMessageError",
                "TypeId": 445,
                "Docs": [
                  "The error that occurred.",
                  "",
                  "This error is pretty opaque. More fine-grained errors need to be emitted as events",
                  "by the `MessageProcessor`."
                ]
              }
            ],
            "Index": 0,
            "Docs": [
              "Message discarded due to an error in the `MessageProcessor` (usually a format error)."
            ]
          },
          {
            "Name": "Processed",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "H256",
                "TypeId": 12,
                "Docs": [
                  "The `blake2_256` hash of the message."
                ]
              },
              {
                "Name": "origin",
                "TypeName": "MessageOriginOf<T>",
                "TypeId": 228,
                "Docs": [
                  "The queue of the message."
                ]
              },
              {
                "Name": "weight_used",
                "TypeName": "Weight",
                "TypeId": 9,
                "Docs": [
                  "How much weight was used to process the message."
                ]
              },
              {
                "Name": "success",
                "TypeName": "bool",
                "TypeId": 30,
                "Docs": [
                  "Whether the message was processed.",
                  "",
                  "Note that this does not mean that the underlying `MessageProcessor` was internally",
                  "successful. It *solely* means that the MQ pallet will treat this as a success",
                  "condition and discard the message. Any internal error needs to be emitted as events",
                  "by the `MessageProcessor`."
                ]
              }
            ],
            "Index": 1,
            "Docs": [
              "Message is processed."
            ]
          },
          {
            "Name": "OverweightEnqueued",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "[u8; 32]",
                "TypeId": 1,
                "Docs": [
                  "The `blake2_256` hash of the message."
                ]
              },
              {
                "Name": "origin",
                "TypeName": "MessageOriginOf<T>",
                "TypeId": 228,
                "Docs": [
                  "The queue of the message."
                ]
              },
              {
                "Name": "page_index",
                "TypeName": "PageIndex",
                "TypeId": 4,
                "Docs": [
                  "The page of the message."
                ]
              },
              {
                "Name": "message_index",
                "TypeName": "T::Size",
                "TypeId": 4,
                "Docs": [
                  "The index of the message within the page."
                ]
              }
            ],
            "Index": 2,
            "Docs": [
              "Message placed in overweight queue."
            ]
          },
          {
            "Name": "PageReaped",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "MessageOriginOf<T>",
                "TypeId": 228,
                "Docs": [
                  "The queue of the page."
                ]
              },
              {
                "Name": "index",
                "TypeName": "PageIndex",
                "TypeId": 4,
                "Docs": [
                  "The index of the page."
                ]
              }
            ],
            "Index": 3,
            "Docs": [
              "This page was reaped."
            ]
          }
        ],
        "Path": [
          "pallet_message_queue",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "445": {
        "Variants": [
          {
            "Name": "BadFormat",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Corrupt",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Unsupported",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Overweight",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 3
          },
          {
            "Name": "Yield",
            "TypeFields": null,
            "Index": 4
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "messages",
          "ProcessMessageError"
        ],
        "TypeDef": "Variant"
      },
      "446": {
        "Variants": [
          {
            "Name": "BatchInterrupted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "error",
                "TypeName": "DispatchError",
                "TypeId": 25
              }
            ],
            "Index": 0,
            "Docs": [
              "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
              "well as the error."
            ]
          },
          {
            "Name": "BatchCompleted",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Batch of dispatches completed fully with no error."
            ]
          },
          {
            "Name": "BatchCompletedWithErrors",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Batch of dispatches completed but has errors."
            ]
          },
          {
            "Name": "ItemCompleted",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "A single item within a Batch of dispatches has completed with no error."
            ]
          },
          {
            "Name": "ItemFailed",
            "TypeFields": [
              {
                "Name": "error",
                "TypeName": "DispatchError",
                "TypeId": 25
              }
            ],
            "Index": 4,
            "Docs": [
              "A single item within a Batch of dispatches has completed with error."
            ]
          },
          {
            "Name": "DispatchedAs",
            "TypeFields": [
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 46
              }
            ],
            "Index": 5,
            "Docs": [
              "A call was dispatched."
            ]
          }
        ],
        "Path": [
          "pallet_utility",
          "pallet",
          "Event"
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "447": {
        "Variants": [
          {
            "Name": "Scheduled",
            "TypeFields": [
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "Scheduled some task."
            ]
          },
          {
            "Name": "Canceled",
            "TypeFields": [
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "Canceled some task."
            ]
          },
          {
            "Name": "Dispatched",
            "TypeFields": [
              {
                "Name": "task",
                "TypeName": "TaskAddress<BlockNumberFor<T>>",
                "TypeId": 233
              },
              {
                "Name": "id",
                "TypeName": "Option<TaskName>",
                "TypeId": 33
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 46
              }
            ],
            "Index": 2,
            "Docs": [
              "Dispatched some task."
            ]
          },
          {
            "Name": "CallUnavailable",
            "TypeFields": [
              {
                "Name": "task",
                "TypeName": "TaskAddress<BlockNumberFor<T>>",
                "TypeId": 233
              },
              {
                "Name": "id",
                "TypeName": "Option<TaskName>",
                "TypeId": 33
              }
            ],
            "Index": 3,
            "Docs": [
              "The call for the provided hash was not found so the task has been aborted."
            ]
          },
          {
            "Name": "PeriodicFailed",
            "TypeFields": [
              {
                "Name": "task",
                "TypeName": "TaskAddress<BlockNumberFor<T>>",
                "TypeId": 233
              },
              {
                "Name": "id",
                "TypeName": "Option<TaskName>",
                "TypeId": 33
              }
            ],
            "Index": 4,
            "Docs": [
              "The given task was unable to be renewed since the agenda is full at that block."
            ]
          },
          {
            "Name": "PermanentlyOverweight",
            "TypeFields": [
              {
                "Name": "task",
                "TypeName": "TaskAddress<BlockNumberFor<T>>",
                "TypeId": 233
              },
              {
                "Name": "id",
                "TypeName": "Option<TaskName>",
                "TypeId": 33
              }
            ],
            "Index": 5,
            "Docs": [
              "The given task can never be executed since it is overweight."
            ]
          }
        ],
        "Path": [
          "pallet_scheduler",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Events type."
        ]
      },
      "448": {
        "Variants": [
          {
            "Name": "ProxyExecuted",
            "TypeFields": [
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 46
              }
            ],
            "Index": 0,
            "Docs": [
              "A proxy was executed correctly, with the given."
            ]
          },
          {
            "Name": "PureCreated",
            "TypeFields": [
              {
                "Name": "pure",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 236
              },
              {
                "Name": "disambiguation_index",
                "TypeName": "u16",
                "TypeId": 56
              }
            ],
            "Index": 1,
            "Docs": [
              "A pure account has been created by new proxy with given",
              "disambiguation index and proxy type."
            ]
          },
          {
            "Name": "Announced",
            "TypeFields": [
              {
                "Name": "real",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proxy",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "An announcement was placed to make a call in the future."
            ]
          },
          {
            "Name": "ProxyAdded",
            "TypeFields": [
              {
                "Name": "delegator",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "delegatee",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 236
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "A proxy was added."
            ]
          },
          {
            "Name": "ProxyRemoved",
            "TypeFields": [
              {
                "Name": "delegator",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "delegatee",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 236
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "A proxy was removed."
            ]
          }
        ],
        "Path": [
          "pallet_proxy",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "449": {
        "Variants": [
          {
            "Name": "NewMultisig",
            "TypeFields": [
              {
                "Name": "approving",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "multisig",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHash",
                "TypeId": 1
              }
            ],
            "Index": 0,
            "Docs": [
              "A new multisig operation has begun."
            ]
          },
          {
            "Name": "MultisigApproval",
            "TypeFields": [
              {
                "Name": "approving",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "timepoint",
                "TypeName": "Timepoint<BlockNumberFor<T>>",
                "TypeId": 239
              },
              {
                "Name": "multisig",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHash",
                "TypeId": 1
              }
            ],
            "Index": 1,
            "Docs": [
              "A multisig operation has been approved by someone."
            ]
          },
          {
            "Name": "MultisigExecuted",
            "TypeFields": [
              {
                "Name": "approving",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "timepoint",
                "TypeName": "Timepoint<BlockNumberFor<T>>",
                "TypeId": 239
              },
              {
                "Name": "multisig",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHash",
                "TypeId": 1
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 46
              }
            ],
            "Index": 2,
            "Docs": [
              "A multisig operation has been executed."
            ]
          },
          {
            "Name": "MultisigCancelled",
            "TypeFields": [
              {
                "Name": "cancelling",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "timepoint",
                "TypeName": "Timepoint<BlockNumberFor<T>>",
                "TypeId": 239
              },
              {
                "Name": "multisig",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHash",
                "TypeId": 1
              }
            ],
            "Index": 3,
            "Docs": [
              "A multisig operation has been cancelled."
            ]
          }
        ],
        "Path": [
          "pallet_multisig",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "450": {
        "Variants": [
          {
            "Name": "IdentitySet",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0,
            "Docs": [
              "A name was set or reset (which will remove all judgements)."
            ]
          },
          {
            "Name": "IdentityCleared",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "A name was cleared, and the given balance returned."
            ]
          },
          {
            "Name": "IdentityKilled",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "A name was removed and the given balance slashed."
            ]
          },
          {
            "Name": "JudgementRequested",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "registrar_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "A judgement was asked from a registrar."
            ]
          },
          {
            "Name": "JudgementUnrequested",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "registrar_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "A judgement request was retracted."
            ]
          },
          {
            "Name": "JudgementGiven",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "registrar_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 4
              }
            ],
            "Index": 5,
            "Docs": [
              "A judgement was given by a registrar."
            ]
          },
          {
            "Name": "RegistrarAdded",
            "TypeFields": [
              {
                "Name": "registrar_index",
                "TypeName": "RegistrarIndex",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "A registrar was added."
            ]
          },
          {
            "Name": "SubIdentityAdded",
            "TypeFields": [
              {
                "Name": "sub",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "main",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 7,
            "Docs": [
              "A sub-identity was added to an identity and the deposit paid."
            ]
          },
          {
            "Name": "SubIdentityRemoved",
            "TypeFields": [
              {
                "Name": "sub",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "main",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "A sub-identity was removed from an identity and the deposit freed."
            ]
          },
          {
            "Name": "SubIdentityRevoked",
            "TypeFields": [
              {
                "Name": "sub",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "main",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 9,
            "Docs": [
              "A sub-identity was cleared, and the given deposit repatriated from the",
              "main identity account to the sub-identity account."
            ]
          },
          {
            "Name": "AuthorityAdded",
            "TypeFields": [
              {
                "Name": "authority",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 10,
            "Docs": [
              "A username authority was added."
            ]
          },
          {
            "Name": "AuthorityRemoved",
            "TypeFields": [
              {
                "Name": "authority",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 11,
            "Docs": [
              "A username authority was removed."
            ]
          },
          {
            "Name": "UsernameSet",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "username",
                "TypeName": "Username<T>",
                "TypeId": 285
              }
            ],
            "Index": 12,
            "Docs": [
              "A username was set for `who`."
            ]
          },
          {
            "Name": "UsernameQueued",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "username",
                "TypeName": "Username<T>",
                "TypeId": 285
              },
              {
                "Name": "expiration",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 13,
            "Docs": [
              "A username was queued, but `who` must accept it prior to `expiration`."
            ]
          },
          {
            "Name": "PreapprovalExpired",
            "TypeFields": [
              {
                "Name": "whose",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 14,
            "Docs": [
              "A queued username passed its expiration without being claimed and was removed."
            ]
          },
          {
            "Name": "PrimaryUsernameSet",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "username",
                "TypeName": "Username<T>",
                "TypeId": 285
              }
            ],
            "Index": 15,
            "Docs": [
              "A username was set as a primary and can be looked up from `who`."
            ]
          },
          {
            "Name": "DanglingUsernameRemoved",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "username",
                "TypeName": "Username<T>",
                "TypeId": 285
              }
            ],
            "Index": 16,
            "Docs": [
              "A dangling username (as in, a username corresponding to an account that has removed its",
              "identity) has been removed."
            ]
          }
        ],
        "Path": [
          "pallet_identity",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "451": {
        "Variants": [
          {
            "Name": "VestingUpdated",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "unvested",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "The amount vested has been updated. This could indicate a change in funds available.",
              "The balance given is the amount which is left unvested (and thus locked)."
            ]
          },
          {
            "Name": "VestingCompleted",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1,
            "Docs": [
              "An \\[account\\] has become fully vested."
            ]
          }
        ],
        "Path": [
          "bifrost_vesting",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "452": {
        "Variants": [
          {
            "Name": "Proposed",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "New proposal."
            ]
          },
          {
            "Name": "Spending",
            "TypeFields": [
              {
                "Name": "budget_remaining",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "We have ended a spend period and will now allocate funds."
            ]
          },
          {
            "Name": "Awarded",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 4
              },
              {
                "Name": "award",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 2,
            "Docs": [
              "Some funds have been allocated."
            ]
          },
          {
            "Name": "Rejected",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 4
              },
              {
                "Name": "slashed",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 3,
            "Docs": [
              "A proposal was rejected; funds were slashed."
            ]
          },
          {
            "Name": "Burnt",
            "TypeFields": [
              {
                "Name": "burnt_funds",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "Some of our funds have been burnt."
            ]
          },
          {
            "Name": "Rollover",
            "TypeFields": [
              {
                "Name": "rollover_balance",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "Spending has finished; this is the amount that rolls over until next spend."
            ]
          },
          {
            "Name": "Deposit",
            "TypeFields": [
              {
                "Name": "value",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "Some funds have been deposited."
            ]
          },
          {
            "Name": "SpendApproved",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 4
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "beneficiary",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 7,
            "Docs": [
              "A new spend proposal has been approved."
            ]
          },
          {
            "Name": "UpdatedInactive",
            "TypeFields": [
              {
                "Name": "reactivated",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "deactivated",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "The inactive funds of the pallet have been updated."
            ]
          },
          {
            "Name": "AssetSpendApproved",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              },
              {
                "Name": "asset_kind",
                "TypeName": "T::AssetKind",
                "TypeId": 47
              },
              {
                "Name": "amount",
                "TypeName": "AssetBalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "beneficiary",
                "TypeName": "T::Beneficiary",
                "TypeId": 0
              },
              {
                "Name": "valid_from",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "expire_at",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 9,
            "Docs": [
              "A new asset spend proposal has been approved."
            ]
          },
          {
            "Name": "AssetSpendVoided",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              }
            ],
            "Index": 10,
            "Docs": [
              "An approved spend was voided."
            ]
          },
          {
            "Name": "Paid",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              },
              {
                "Name": "payment_id",
                "TypeName": "<T::Paymaster as Pay>::Id",
                "TypeId": 47
              }
            ],
            "Index": 11,
            "Docs": [
              "A payment happened."
            ]
          },
          {
            "Name": "PaymentFailed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              },
              {
                "Name": "payment_id",
                "TypeName": "<T::Paymaster as Pay>::Id",
                "TypeId": 47
              }
            ],
            "Index": 12,
            "Docs": [
              "A payment failed and can be retried."
            ]
          },
          {
            "Name": "SpendProcessed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 4
              }
            ],
            "Index": 13,
            "Docs": [
              "A spend was processed and removed from the storage. It might have been successfully",
              "paid or it may have expired."
            ]
          }
        ],
        "Path": [
          "pallet_treasury",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "453": {
        "Variants": [
          {
            "Name": "Noted",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 0,
            "Docs": [
              "A preimage has been noted."
            ]
          },
          {
            "Name": "Requested",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 1,
            "Docs": [
              "A preimage has been requested."
            ]
          },
          {
            "Name": "Cleared",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "A preimage has ben cleared."
            ]
          }
        ],
        "Path": [
          "pallet_preimage",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "454": {
        "Variants": [
          {
            "Name": "TransferredAssets",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 198
              },
              {
                "Name": "fee",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 0,
            "Docs": [
              "Transferred `Asset` with fee."
            ]
          }
        ],
        "Path": [
          "orml_xtokens",
          "module",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "455": {
        "Variants": [
          {
            "Name": "Endowed",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "An account was created with some free balance."
            ]
          },
          {
            "Name": "DustLost",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "An account was removed whose balance was non-zero but below",
              "ExistentialDeposit, resulting in an outright loss."
            ]
          },
          {
            "Name": "Transfer",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "Transfer succeeded."
            ]
          },
          {
            "Name": "Reserved",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 3,
            "Docs": [
              "Some balance was reserved (moved from free to reserved)."
            ]
          },
          {
            "Name": "Unreserved",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "Some balance was unreserved (moved from reserved to free)."
            ]
          },
          {
            "Name": "ReserveRepatriated",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "status",
                "TypeName": "BalanceStatus",
                "TypeId": 35
              }
            ],
            "Index": 5,
            "Docs": [
              "Some reserved balance was repatriated (moved from reserved to",
              "another account)."
            ]
          },
          {
            "Name": "BalanceSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "free",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "reserved",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "A balance was set by root."
            ]
          },
          {
            "Name": "TotalIssuanceSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 7,
            "Docs": [
              "The total issuance of an currency has been set"
            ]
          },
          {
            "Name": "Withdrawn",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "Some balances were withdrawn (e.g. pay for transaction fee)"
            ]
          },
          {
            "Name": "Slashed",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "free_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "reserved_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 9,
            "Docs": [
              "Some balances were slashed (e.g. due to mis-behavior)"
            ]
          },
          {
            "Name": "Deposited",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 10,
            "Docs": [
              "Deposited some balance into an account"
            ]
          },
          {
            "Name": "LockSet",
            "TypeFields": [
              {
                "Name": "lock_id",
                "TypeName": "LockIdentifier",
                "TypeId": 158
              },
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 11,
            "Docs": [
              "Some funds are locked"
            ]
          },
          {
            "Name": "LockRemoved",
            "TypeFields": [
              {
                "Name": "lock_id",
                "TypeName": "LockIdentifier",
                "TypeId": 158
              },
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 12,
            "Docs": [
              "Some locked funds were unlocked"
            ]
          },
          {
            "Name": "Locked",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 13,
            "Docs": [
              "Some free balance was locked."
            ]
          },
          {
            "Name": "Unlocked",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 14,
            "Docs": [
              "Some locked balance was freed."
            ]
          },
          {
            "Name": "Issued",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 15
          },
          {
            "Name": "Rescinded",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "T::CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 16
          }
        ],
        "Path": [
          "orml_tokens",
          "module",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "456": {
        "Variants": [
          {
            "Name": "Deposited",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "who",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 0,
            "Docs": [
              "Deposit success."
            ]
          },
          {
            "Name": "Withdrawn",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 200
              },
              {
                "Name": "who",
                "TypeName": "Location",
                "TypeId": 114
              }
            ],
            "Index": 1,
            "Docs": [
              "Withdraw success."
            ]
          }
        ],
        "Path": [
          "orml_unknown_tokens",
          "module",
          "Event"
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "457": {
        "Variants": [
          {
            "Name": "Sent",
            "TypeFields": [
              {
                "Name": "to",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "message",
                "TypeName": "Xcm<()>",
                "TypeId": 195
              }
            ],
            "Index": 0,
            "Docs": [
              "XCM message sent. \\[to, message\\]"
            ]
          }
        ],
        "Path": [
          "orml_xcm",
          "module",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "458": {
        "Variants": [
          {
            "Name": "Transferred",
            "TypeFields": [
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "Foreign Asset",
              "Some assets were transferred. \\[asset_id, owner, target, amount\\]"
            ]
          },
          {
            "Name": "Burned",
            "TypeFields": [
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "Some assets were burned. \\[asset_id, owner, amount\\]"
            ]
          },
          {
            "Name": "Minted",
            "TypeFields": [
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "Some assets were minted. \\[asset_id, owner, amount\\]"
            ]
          },
          {
            "Name": "PairCreated",
            "TypeFields": [
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              }
            ],
            "Index": 3,
            "Docs": [
              "Swap",
              "Create a trading pair. \\[asset_0, asset_1\\]"
            ]
          },
          {
            "Name": "LiquidityAdded",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "Add liquidity. \\[owner, asset_0, asset_1, add_balance_0, add_balance_1,",
              "mint_balance_lp\\]"
            ]
          },
          {
            "Name": "LiquidityRemoved",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "Remove liquidity. \\[owner, recipient, asset_0, asset_1, rm_balance_0, rm_balance_1,",
              "burn_balance_lp\\]"
            ]
          },
          {
            "Name": "AssetSwap",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "Vec<T::AssetId>",
                "TypeId": 304
              },
              {
                "TypeName": "Vec<AssetBalance>",
                "TypeId": 406
              }
            ],
            "Index": 6,
            "Docs": [
              "Transact in trading \\[owner, recipient, swap_path, balances\\]"
            ]
          },
          {
            "Name": "TransferredToParachain",
            "TypeFields": [
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "ParaId",
                "TypeId": 77
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 7,
            "Docs": [
              "Transfer by xcm",
              "Transferred to parachain. \\[asset_id, src, para_id, dest, amount, used_weight\\]"
            ]
          },
          {
            "Name": "BootstrapContribute",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "Contribute to bootstrap pair. \\[who, asset_0, asset_0_contribute, asset_1_contribute\\]"
            ]
          },
          {
            "Name": "BootstrapEnd",
            "TypeFields": [
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              }
            ],
            "Index": 9,
            "Docs": [
              "A bootstrap pair end. \\[asset_0, asset_1, asset_0_amount, asset_1_amount,",
              "total_lp_supply]"
            ]
          },
          {
            "Name": "BootstrapCreated",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 10,
            "Docs": [
              "Create a bootstrap pair. \\[bootstrap_pair_account, asset_0, asset_1,",
              "total_supply_0,total_supply_1, capacity_supply_0,capacity_supply_1, end\\]"
            ]
          },
          {
            "Name": "BootstrapClaim",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              }
            ],
            "Index": 11,
            "Docs": [
              "Claim a bootstrap pair. \\[bootstrap_pair_account, claimer, receiver, asset_0, asset_1,",
              "asset_0_refund, asset_1_refund, lp_amount\\]"
            ]
          },
          {
            "Name": "BootstrapUpdate",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 12,
            "Docs": [
              "Update a bootstrap pair. \\[caller, asset_0, asset_1,",
              "total_supply_0,total_supply_1, capacity_supply_0,capacity_supply_1\\]"
            ]
          },
          {
            "Name": "BootstrapRefund",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              },
              {
                "TypeName": "AssetBalance",
                "TypeId": 6
              }
            ],
            "Index": 13,
            "Docs": [
              "Refund from disable bootstrap pair. \\[bootstrap_pair_account, caller, asset_0, asset_1,",
              "asset_0_refund, asset_1_refund\\]"
            ]
          },
          {
            "Name": "DistributeReward",
            "TypeFields": [
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "Vec<(T::AssetId, AssetBalance)>",
                "TypeId": 305
              }
            ],
            "Index": 14,
            "Docs": [
              "Bootstrap distribute some rewards to contributors."
            ]
          },
          {
            "Name": "ChargeReward",
            "TypeFields": [
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "Vec<(T::AssetId, AssetBalance)>",
                "TypeId": 305
              }
            ],
            "Index": 15,
            "Docs": [
              "Charge reward into a bootstrap."
            ]
          },
          {
            "Name": "WithdrawReward",
            "TypeFields": [
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AssetId",
                "TypeId": 303
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 16,
            "Docs": [
              "Withdraw all reward from a bootstrap."
            ]
          }
        ],
        "Path": [
          "zenlink_protocol",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "459": {
        "Variants": [
          {
            "Name": "Create",
            "TypeFields": [
              {
                "TypeName": "T::MerkleDistributorId",
                "TypeId": 4
              },
              {
                "TypeName": "H256",
                "TypeId": 12
              },
              {
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "create a merkle distributor. \\ [merkle distributor id, merkle tree root, total reward",
              "balance]"
            ]
          },
          {
            "Name": "Claim",
            "TypeFields": [
              {
                "TypeName": "T::MerkleDistributorId",
                "TypeId": 4
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "claim reward. \\[merkle distributor id, account, balance]"
            ]
          },
          {
            "Name": "Withdraw",
            "TypeFields": [
              {
                "TypeName": "T::MerkleDistributorId",
                "TypeId": 4
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "withdraw reward. \\ [merkle distributor id, account, balance]"
            ]
          },
          {
            "Name": "AddToWhiteList",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 3,
            "Docs": [
              "add account who can create merkle distributor. \\ [account]"
            ]
          },
          {
            "Name": "RemoveFromWhiteList",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 4,
            "Docs": [
              "remove account from the set who can create merkle distributor. \\ [account]"
            ]
          }
        ],
        "Path": [
          "merkle_distributor",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "460": {
        "Variants": [
          {
            "Name": "FlexibleFeeExchanged",
            "TypeFields": [
              {
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "PalletBalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "FixedRateFeeExchanged",
            "TypeFields": [
              {
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "PalletBalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1
          },
          {
            "Name": "ExtraFeeDeducted",
            "TypeFields": [
              {
                "TypeName": "ExtraFeeName",
                "TypeId": 461
              },
              {
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "PalletBalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "PalletBalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "bifrost_flexible_fee",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "461": {
        "Variants": [
          {
            "Name": "SalpContribute",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "StatemineTransfer",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "VoteVtoken",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "VoteRemoveDelegatorVote",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "NoExtraFee",
            "TypeFields": null,
            "Index": 4
          }
        ],
        "Path": [
          "bifrost_primitives",
          "ExtraFeeName"
        ],
        "TypeDef": "Variant"
      },
      "462": {
        "Variants": [
          {
            "Name": "Created",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "Create a new crowdloaning campaign. [fund_index]"
            ]
          },
          {
            "Name": "Contributing",
            "TypeFields": [
              {
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "MessageId",
                "TypeId": 1
              }
            ],
            "Index": 1,
            "Docs": [
              "Contributing to a crowd sale. [who, fund_index, amount]"
            ]
          },
          {
            "Name": "Contributed",
            "TypeFields": [
              {
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "Contributed to a crowd sale. [who, fund_index, amount]"
            ]
          },
          {
            "Name": "ContributeFailed",
            "TypeFields": [
              {
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 3,
            "Docs": [
              "Fail on contribute to crowd sale. [who, fund_index, amount]"
            ]
          },
          {
            "Name": "Withdrew",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "Withdrew full balance of a contributor. [who, fund_index, amount]"
            ]
          },
          {
            "Name": "Refunded",
            "TypeFields": [
              {
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "TypeName": "LeasePeriod",
                "TypeId": 4
              },
              {
                "TypeName": "LeasePeriod",
                "TypeId": 4
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "refund to account. [who, fund_index,value]"
            ]
          },
          {
            "Name": "AllRefunded",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 6,
            "Docs": [
              "all refund"
            ]
          },
          {
            "Name": "Redeemed",
            "TypeFields": [
              {
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "TypeName": "LeasePeriod",
                "TypeId": 4
              },
              {
                "TypeName": "LeasePeriod",
                "TypeId": 4
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 7,
            "Docs": [
              "redeem to account. [who, fund_index, first_slot, last_slot, value]"
            ]
          },
          {
            "Name": "Edited",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 8,
            "Docs": [
              "Fund is edited. [fund_index]"
            ]
          },
          {
            "Name": "Dissolved",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 9,
            "Docs": [
              "Fund is dissolved. [fund_index]"
            ]
          },
          {
            "Name": "Unlocked",
            "TypeFields": [
              {
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 10,
            "Docs": [
              "The vsToken/vsBond was be unlocked. [who, fund_index, value]"
            ]
          },
          {
            "Name": "AllUnlocked",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 11
          },
          {
            "Name": "Failed",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 12,
            "Docs": [
              "Fund status change"
            ]
          },
          {
            "Name": "Success",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 13
          },
          {
            "Name": "Retired",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 14
          },
          {
            "Name": "End",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 15
          },
          {
            "Name": "Continued",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "TypeName": "LeasePeriod",
                "TypeId": 4
              },
              {
                "TypeName": "LeasePeriod",
                "TypeId": 4
              }
            ],
            "Index": 16
          },
          {
            "Name": "RefundedDissolved",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "TypeName": "LeasePeriod",
                "TypeId": 4
              },
              {
                "TypeName": "LeasePeriod",
                "TypeId": 4
              }
            ],
            "Index": 17
          },
          {
            "Name": "Buyback",
            "TypeFields": [
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 18
          },
          {
            "Name": "VstokenUnlocked",
            "TypeFields": [
              {
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 19
          },
          {
            "Name": "BuybackByStablePool",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "currency_id_in",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 20
          },
          {
            "Name": "Reserved",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "para_id",
                "TypeName": "ParaId",
                "TypeId": 4
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "if_mint",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 21
          },
          {
            "Name": "ReservationCancelled",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "para_id",
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 22
          },
          {
            "Name": "ReservationFullyHandled",
            "TypeFields": [
              {
                "Name": "para_id",
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 23
          },
          {
            "Name": "ReservationHandled",
            "TypeFields": [
              {
                "Name": "para_id",
                "TypeName": "ParaId",
                "TypeId": 4
              }
            ],
            "Index": 24
          }
        ],
        "Path": [
          "bifrost_salp",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "463": {
        "Variants": [
          {
            "Name": "TransactionSwitchedoff",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "Switch off transaction . \\[pallet_name, function_name\\]"
            ]
          },
          {
            "Name": "TransactionSwitchedOn",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 1,
            "Docs": [
              "Switch on transaction . \\[pallet_name, function_name\\]"
            ]
          },
          {
            "Name": "TransferAccountDisabled",
            "TypeFields": [
              {
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 2
          },
          {
            "Name": "TransferAccountEnabled",
            "TypeFields": [
              {
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "bifrost_call_switchgear",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "464": {
        "Variants": [
          {
            "Name": "AssetRegistered",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIds",
                "TypeId": 465
              },
              {
                "Name": "metadata",
                "TypeName": "AssetMetadata<BalanceOf<T>>",
                "TypeId": 317
              }
            ],
            "Index": 0,
            "Docs": [
              "The asset registered."
            ]
          },
          {
            "Name": "AssetUpdated",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "AssetIds",
                "TypeId": 465
              },
              {
                "Name": "metadata",
                "TypeName": "AssetMetadata<BalanceOf<T>>",
                "TypeId": 317
              }
            ],
            "Index": 1,
            "Docs": [
              "The asset updated."
            ]
          },
          {
            "Name": "CurrencyIdRegistered",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "metadata",
                "TypeName": "AssetMetadata<BalanceOf<T>>",
                "TypeId": 317
              }
            ],
            "Index": 2,
            "Docs": [
              "The CurrencyId registered."
            ]
          },
          {
            "Name": "LocationSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "location",
                "TypeName": "Location",
                "TypeId": 114
              },
              {
                "Name": "weight",
                "TypeName": "Weight",
                "TypeId": 9
              }
            ],
            "Index": 3,
            "Docs": [
              "Location Force set."
            ]
          },
          {
            "Name": "CurrencyIdUpdated",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "metadata",
                "TypeName": "AssetMetadata<BalanceOf<T>>",
                "TypeId": 317
              }
            ],
            "Index": 4,
            "Docs": [
              "The CurrencyId updated."
            ]
          }
        ],
        "Path": [
          "bifrost_asset_registry",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "465": {
        "Variants": [
          {
            "Name": "ForeignAssetId",
            "TypeFields": [
              {
                "TypeName": "ForeignAssetId",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "NativeAssetId",
            "TypeFields": [
              {
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "bifrost_primitives",
          "currency",
          "AssetIds"
        ],
        "TypeDef": "Variant"
      },
      "466": {
        "Variants": [
          {
            "Name": "Minted",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "token_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vtoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "remark",
                "TypeName": "BoundedVec<u8, ConstU32<32>>",
                "TypeId": 285
              }
            ],
            "Index": 0
          },
          {
            "Name": "Redeemed",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "token_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vtoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "unlock_id",
                "TypeName": "UnlockId",
                "TypeId": 4
              }
            ],
            "Index": 1
          },
          {
            "Name": "RedeemSuccess",
            "TypeFields": [
              {
                "Name": "unlock_id",
                "TypeName": "UnlockId",
                "TypeId": 4
              },
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "to",
                "TypeName": "RedeemTo<AccountIdOf<T>>",
                "TypeId": 467
              },
              {
                "Name": "token_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2
          },
          {
            "Name": "Rebonded",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "token_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vtoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 3
          },
          {
            "Name": "RebondedByUnlockId",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "token_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vtoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "unlock_id",
                "TypeName": "UnlockId",
                "TypeId": 4
              }
            ],
            "Index": 4
          },
          {
            "Name": "UnlockDurationSet",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "unlock_duration",
                "TypeName": "TimeUnit",
                "TypeId": 322
              }
            ],
            "Index": 5
          },
          {
            "Name": "MinimumMintSet",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 6
          },
          {
            "Name": "MinimumRedeemSet",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 7
          },
          {
            "Name": "SupportRebondTokenAdded",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 8
          },
          {
            "Name": "SupportRebondTokenRemoved",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 9
          },
          {
            "Name": "FeeSet",
            "TypeFields": [
              {
                "Name": "mint_fee",
                "TypeName": "Permill",
                "TypeId": 323
              },
              {
                "Name": "redeem_fee",
                "TypeName": "Permill",
                "TypeId": 323
              }
            ],
            "Index": 10,
            "Docs": [
              "Several fees has been set."
            ]
          },
          {
            "Name": "HookIterationLimitSet",
            "TypeFields": [
              {
                "Name": "limit",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 11
          },
          {
            "Name": "UnlockingTotalSet",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 12
          },
          {
            "Name": "MinTimeUnitSet",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "time_unit",
                "TypeName": "TimeUnit",
                "TypeId": 322
              }
            ],
            "Index": 13
          },
          {
            "Name": "FastRedeemFailed",
            "TypeFields": [
              {
                "Name": "err",
                "TypeName": "DispatchError",
                "TypeId": 25
              }
            ],
            "Index": 14
          },
          {
            "Name": "CurrencyTimeUnitRecreated",
            "TypeFields": [
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "time_unit",
                "TypeName": "TimeUnit",
                "TypeId": 322
              }
            ],
            "Index": 15
          },
          {
            "Name": "IncentivizedMinting",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "token_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "token_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "locked_vtoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "incentive_vtoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 16
          },
          {
            "Name": "VtokenIncentiveCoefSet",
            "TypeFields": [
              {
                "Name": "vtoken_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "coefficient",
                "TypeName": "Option<u128>",
                "TypeId": 320
              }
            ],
            "Index": 17
          },
          {
            "Name": "VtokenIncentiveLockBlocksSet",
            "TypeFields": [
              {
                "Name": "vtoken_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "blocks",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 93
              }
            ],
            "Index": 18
          }
        ],
        "Path": [
          "bifrost_vtoken_minting",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "467": {
        "Variants": [
          {
            "Name": "Native",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0
          },
          {
            "Name": "Astar",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "Moonbeam",
            "TypeFields": [
              {
                "TypeName": "H160",
                "TypeId": 399
              }
            ],
            "Index": 2
          },
          {
            "Name": "Hydradx",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 3
          },
          {
            "Name": "Interlay",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 4
          },
          {
            "Name": "Manta",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "bifrost_vtoken_minting",
          "traits",
          "RedeemTo"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "468": {
        "Variants": [
          {
            "Name": "DelegatorInitialized",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 0
          },
          {
            "Name": "DelegatorBonded",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "bonded_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "query_id_hash",
                "TypeName": "Hash<T>",
                "TypeId": 12
              },
              {
                "Name": "validator",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              }
            ],
            "Index": 1
          },
          {
            "Name": "DelegatorBondExtra",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "extra_bonded_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "query_id_hash",
                "TypeName": "Hash<T>",
                "TypeId": 12
              },
              {
                "Name": "validator",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              }
            ],
            "Index": 2
          },
          {
            "Name": "DelegatorUnbond",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "unbond_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "query_id_hash",
                "TypeName": "Hash<T>",
                "TypeId": 12
              },
              {
                "Name": "validator",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              }
            ],
            "Index": 3
          },
          {
            "Name": "DelegatorUnbondAll",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "query_id_hash",
                "TypeName": "Hash<T>",
                "TypeId": 12
              }
            ],
            "Index": 4
          },
          {
            "Name": "DelegatorRebond",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "rebond_amount",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "query_id_hash",
                "TypeName": "Hash<T>",
                "TypeId": 12
              },
              {
                "Name": "validator",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 189
              }
            ],
            "Index": 5
          },
          {
            "Name": "Delegated",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "targets",
                "TypeName": "Option<Vec<MultiLocation>>",
                "TypeId": 329
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "query_id_hash",
                "TypeName": "Hash<T>",
                "TypeId": 12
              }
            ],
            "Index": 6
          },
          {
            "Name": "Undelegated",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "targets",
                "TypeName": "Vec<MultiLocation>",
                "TypeId": 328
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "query_id_hash",
                "TypeName": "Hash<T>",
                "TypeId": 12
              }
            ],
            "Index": 7
          },
          {
            "Name": "Payout",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "validator",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "time_unit",
                "TypeName": "Option<TimeUnit>",
                "TypeId": 330
              }
            ],
            "Index": 8
          },
          {
            "Name": "Liquidize",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "time_unit",
                "TypeName": "Option<TimeUnit>",
                "TypeId": 330
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "query_id_hash",
                "TypeName": "Hash<T>",
                "TypeId": 12
              },
              {
                "Name": "amount",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              }
            ],
            "Index": 9
          },
          {
            "Name": "Chill",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "query_id_hash",
                "TypeName": "Hash<T>",
                "TypeId": 12
              }
            ],
            "Index": 10
          },
          {
            "Name": "TransferBack",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "from",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "to",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 11
          },
          {
            "Name": "TransferTo",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "from",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "to",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 12
          },
          {
            "Name": "ConvertAsset",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 13
          },
          {
            "Name": "DelegatorAdded",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "index",
                "TypeName": "u16",
                "TypeId": 333
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 14
          },
          {
            "Name": "DelegatorRemoved",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 15
          },
          {
            "Name": "ValidatorsAdded",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "validator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 16
          },
          {
            "Name": "ValidatorsRemoved",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "validator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 17
          },
          {
            "Name": "Refund",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "time_unit",
                "TypeName": "TimeUnit",
                "TypeId": 322
              },
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 66
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 18
          },
          {
            "Name": "FundMoveFromExitToEntrance",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 19
          },
          {
            "Name": "TimeUnitUpdated",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "old",
                "TypeName": "Option<TimeUnit>",
                "TypeId": 330
              },
              {
                "Name": "new",
                "TypeName": "TimeUnit",
                "TypeId": 322
              }
            ],
            "Index": 20
          },
          {
            "Name": "PoolTokenIncreased",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 21
          },
          {
            "Name": "HostingFeeCharged",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 22
          },
          {
            "Name": "PoolTokenDecreased",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              }
            ],
            "Index": 23
          },
          {
            "Name": "FeeSupplemented",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 84
              },
              {
                "Name": "from",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "to",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 24
          },
          {
            "Name": "ValidatorsByDelegatorSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "validators_list",
                "TypeName": "Vec<MultiLocation>",
                "TypeId": 328
              },
              {
                "Name": "delegator_id",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 25
          },
          {
            "Name": "OperateOriginSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "operator",
                "TypeName": "Option<AccountIdOf<T>>",
                "TypeId": 96
              }
            ],
            "Index": 26
          },
          {
            "Name": "FeeSourceSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who_and_fee",
                "TypeName": "Option<(MultiLocation, BalanceOf<T>)>",
                "TypeId": 331
              }
            ],
            "Index": 27
          },
          {
            "Name": "DelegatorLedgerSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delegator",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "ledger",
                "TypeName": "Option<Ledger<BalanceOf<T>>>",
                "TypeId": 334
              }
            ],
            "Index": 28
          },
          {
            "Name": "DelegatorLedgerQueryResponseConfirmed",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "entry",
                "TypeName": "LedgerUpdateEntry<BalanceOf<T>>",
                "TypeId": 469
              }
            ],
            "Index": 29
          },
          {
            "Name": "DelegatorLedgerQueryResponseFailed",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              }
            ],
            "Index": 30
          },
          {
            "Name": "ValidatorsByDelegatorQueryResponseConfirmed",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              },
              {
                "Name": "entry",
                "TypeName": "ValidatorsByDelegatorUpdateEntry",
                "TypeId": 474
              }
            ],
            "Index": 31
          },
          {
            "Name": "ValidatorsByDelegatorQueryResponseFailed",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 10
              }
            ],
            "Index": 32
          },
          {
            "Name": "MinimumsMaximumsSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "minimums_and_maximums",
                "TypeName": "Option<MinimumsMaximums<BalanceOf<T>>>",
                "TypeId": 354
              }
            ],
            "Index": 33
          },
          {
            "Name": "CurrencyDelaysSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "delays",
                "TypeName": "Option<Delays>",
                "TypeId": 356
              }
            ],
            "Index": 34
          },
          {
            "Name": "HostingFeesSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "fees",
                "TypeName": "Option<(Permill, MultiLocation)>",
                "TypeId": 358
              }
            ],
            "Index": 35
          },
          {
            "Name": "CurrencyTuneExchangeRateLimitSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "tune_exchange_rate_limit",
                "TypeName": "Option<(u32, Permill)>",
                "TypeId": 360
              }
            ],
            "Index": 36
          },
          {
            "Name": "OngoingTimeUnitUpdateIntervalSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "interval",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 93
              }
            ],
            "Index": 37
          },
          {
            "Name": "SupplementFeeAccountWhitelistAdded",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 38
          },
          {
            "Name": "SupplementFeeAccountWhitelistRemoved",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 39
          },
          {
            "Name": "ValidatorsReset",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "validator_list",
                "TypeName": "Vec<MultiLocation>",
                "TypeId": 328
              }
            ],
            "Index": 40
          },
          {
            "Name": "ValidatorBoostListSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "validator_boost_list",
                "TypeName": "Vec<(MultiLocation, BlockNumberFor<T>)>",
                "TypeId": 476
              }
            ],
            "Index": 41
          },
          {
            "Name": "ValidatorBoostListAdded",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "MultiLocation",
                "TypeId": 143
              },
              {
                "Name": "due_block_number",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 42
          },
          {
            "Name": "RemovedFromBoostList",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "MultiLocation",
                "TypeId": 143
              }
            ],
            "Index": 43
          },
          {
            "Name": "OutdatedValidatorBoostListCleaned",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "page",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "remove_num",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "num_left",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 44
          },
          {
            "Name": "BurnFeeFailed",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 45
          }
        ],
        "Path": [
          "bifrost_slp",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "469": {
        "Variants": [
          {
            "Name": "Substrate",
            "TypeFields": [
              {
                "TypeName": "SubstrateLedgerUpdateEntry<Balance>",
                "TypeId": 470
              }
            ],
            "Index": 0
          },
          {
            "Name": "Moonbeam",
            "TypeFields": [
              {
                "TypeName": "ParachainStakingLedgerUpdateEntry<Balance>",
                "TypeId": 472
              }
            ],
            "Index": 1
          },
          {
            "Name": "ParachainStaking",
            "TypeFields": [
              {
                "TypeName": "ParachainStakingLedgerUpdateEntry<Balance>",
                "TypeId": 472
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "LedgerUpdateEntry"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "470": {
        "TypeFields": [
          {
            "Name": "currency_id",
            "TypeName": "CurrencyId",
            "TypeId": 292
          },
          {
            "Name": "delegator_id",
            "TypeName": "MultiLocation",
            "TypeId": 143
          },
          {
            "Name": "update_operation",
            "TypeName": "SubstrateLedgerUpdateOperation",
            "TypeId": 471
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "unlock_time",
            "TypeName": "Option<TimeUnit>",
            "TypeId": 330
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "polkadot_primitives",
          "SubstrateLedgerUpdateEntry"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "471": {
        "Variants": [
          {
            "Name": "Bond",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Unlock",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Rebond",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Liquidize",
            "TypeFields": null,
            "Index": 3
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "polkadot_primitives",
          "SubstrateLedgerUpdateOperation"
        ],
        "TypeDef": "Variant"
      },
      "472": {
        "TypeFields": [
          {
            "Name": "currency_id",
            "TypeName": "CurrencyId",
            "TypeId": 292
          },
          {
            "Name": "delegator_id",
            "TypeName": "MultiLocation",
            "TypeId": 143
          },
          {
            "Name": "validator_id",
            "TypeName": "Option<MultiLocation>",
            "TypeId": 189
          },
          {
            "Name": "update_operation",
            "TypeName": "ParachainStakingLedgerUpdateOperation",
            "TypeId": 473
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 84
          },
          {
            "Name": "unlock_time",
            "TypeName": "Option<TimeUnit>",
            "TypeId": 330
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "parachain_staking_primitives",
          "ParachainStakingLedgerUpdateEntry"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "473": {
        "Variants": [
          {
            "Name": "Bond",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "BondLess",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Revoke",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "CancelRequest",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "LeaveDelegator",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "CancelLeave",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "ExecuteLeave",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "ExecuteRequest",
            "TypeFields": null,
            "Index": 7
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "parachain_staking_primitives",
          "ParachainStakingLedgerUpdateOperation"
        ],
        "TypeDef": "Variant"
      },
      "474": {
        "Variants": [
          {
            "Name": "Substrate",
            "TypeFields": [
              {
                "TypeName": "SubstrateValidatorsByDelegatorUpdateEntry",
                "TypeId": 475
              }
            ],
            "Index": 0
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "ValidatorsByDelegatorUpdateEntry"
        ],
        "TypeDef": "Variant"
      },
      "475": {
        "TypeFields": [
          {
            "Name": "currency_id",
            "TypeName": "CurrencyId",
            "TypeId": 292
          },
          {
            "Name": "delegator_id",
            "TypeName": "MultiLocation",
            "TypeId": 143
          },
          {
            "Name": "validators",
            "TypeName": "Vec<MultiLocation>",
            "TypeId": 328
          }
        ],
        "Path": [
          "bifrost_slp",
          "primitives",
          "polkadot_primitives",
          "SubstrateValidatorsByDelegatorUpdateEntry"
        ],
        "TypeDef": "Composite"
      },
      "476": {
        "TypeId": 477,
        "TypeDef": "Sequence"
      },
      "477": {
        "TypeIds": [
          143,
          4
        ],
        "TypeDef": "Tuple"
      },
      "478": {
        "Variants": [
          {
            "Name": "XcmDestWeightAndFeeUpdated",
            "TypeFields": [
              {
                "TypeName": "XcmOperationType",
                "TypeId": 365
              },
              {
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "TransferredStatemineMultiAsset",
            "TypeFields": [
              {
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "bifrost_xcm_interface",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "479": {
        "Variants": [
          {
            "Name": "VsbondConvertToVsksm",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vsbond_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vsksm_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "VsksmConvertToVsbond",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vsbond_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vsksm_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1
          },
          {
            "Name": "VsbondConvertToVsdot",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vsbond_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vsdot_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2
          },
          {
            "Name": "VsdotConvertToVsbond",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vsbond_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vsdot_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 3
          },
          {
            "Name": "VsbondConvertToVstoken",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vsbond_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vstoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 4
          },
          {
            "Name": "VstokenConvertToVsbond",
            "TypeFields": [
              {
                "Name": "address",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vsbond_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vstoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 5
          },
          {
            "Name": "ExchangeFeeSet",
            "TypeFields": [
              {
                "Name": "exchange_fee",
                "TypeName": "VstokenConversionExchangeFee<BalanceOf<T>>",
                "TypeId": 367
              }
            ],
            "Index": 6
          },
          {
            "Name": "ExchangeRateSet",
            "TypeFields": [
              {
                "Name": "lease",
                "TypeName": "i32",
                "TypeId": 368
              },
              {
                "Name": "exchange_rate",
                "TypeName": "VstokenConversionExchangeRate",
                "TypeId": 369
              }
            ],
            "Index": 7
          },
          {
            "Name": "RelaychainLeaseSet",
            "TypeFields": [
              {
                "Name": "lease",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 8
          }
        ],
        "Path": [
          "bifrost_vstoken_conversion",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "480": {
        "Variants": [
          {
            "Name": "FarmingPoolCreated",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "FarmingPoolReset",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 1
          },
          {
            "Name": "FarmingPoolClosed",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 2
          },
          {
            "Name": "FarmingPoolKilled",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 3
          },
          {
            "Name": "FarmingPoolEdited",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 4
          },
          {
            "Name": "Charged",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              },
              {
                "Name": "rewards",
                "TypeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>",
                "TypeId": 295
              },
              {
                "Name": "if_gauge",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 5
          },
          {
            "Name": "Deposited",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              },
              {
                "Name": "add_value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "gauge_info",
                "TypeName": "Option<(BalanceOf<T>, BlockNumberFor<T>)>",
                "TypeId": 377
              }
            ],
            "Index": 6
          },
          {
            "Name": "Withdrawn",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              },
              {
                "Name": "remove_value",
                "TypeName": "Option<BalanceOf<T>>",
                "TypeId": 320
              }
            ],
            "Index": 7
          },
          {
            "Name": "Claimed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 8
          },
          {
            "Name": "WithdrawClaimed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 9
          },
          {
            "Name": "GaugeWithdrawn",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "gid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 10
          },
          {
            "Name": "AllForceGaugeClaimed",
            "TypeFields": [
              {
                "Name": "gid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 11
          },
          {
            "Name": "PartiallyForceGaugeClaimed",
            "TypeFields": [
              {
                "Name": "gid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 12
          },
          {
            "Name": "AllRetired",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 13
          },
          {
            "Name": "PartiallyRetired",
            "TypeFields": [
              {
                "Name": "pid",
                "TypeName": "PoolId",
                "TypeId": 4
              }
            ],
            "Index": 14
          },
          {
            "Name": "RetireLimitSet",
            "TypeFields": [
              {
                "Name": "limit",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 15
          },
          {
            "Name": "RoundEnd",
            "TypeFields": [
              {
                "Name": "total_votes",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "start_round",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "end_round",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 16
          },
          {
            "Name": "RoundStartError",
            "TypeFields": [
              {
                "Name": "info",
                "TypeName": "DispatchError",
                "TypeId": 25
              }
            ],
            "Index": 17
          },
          {
            "Name": "RoundStart",
            "TypeFields": [
              {
                "Name": "round_length",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 18
          },
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "vote_list",
                "TypeName": "Vec<(PoolId, Percent)>",
                "TypeId": 381
              }
            ],
            "Index": 19
          },
          {
            "Name": "BoostCharged",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "rewards",
                "TypeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>",
                "TypeId": 295
              }
            ],
            "Index": 20
          }
        ],
        "Path": [
          "bifrost_farming",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "481": {
        "Variants": [
          {
            "Name": "NewRound",
            "TypeFields": [
              {
                "Name": "current",
                "TypeName": "RoundIndex",
                "TypeId": 4
              },
              {
                "Name": "first",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "length",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "TokenConfigChanged",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "exec_delay",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "system_stakable_farming_rate",
                "TypeName": "Permill",
                "TypeId": 323
              },
              {
                "Name": "add_or_sub",
                "TypeName": "bool",
                "TypeId": 30
              },
              {
                "Name": "system_stakable_base",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "farming_poolids",
                "TypeName": "Vec<PoolId>",
                "TypeId": 380
              },
              {
                "Name": "lptoken_rates",
                "TypeName": "Vec<Perbill>",
                "TypeId": 387
              }
            ],
            "Index": 1
          },
          {
            "Name": "DepositFailed",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "farming_staking_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_stakable_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_shadow_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "pending_redeem_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2
          },
          {
            "Name": "MintSuccess",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "farming_staking_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_stakable_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_shadow_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "pending_redeem_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 3
          },
          {
            "Name": "MintFailed",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "farming_staking_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_stakable_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_shadow_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "pending_redeem_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 4
          },
          {
            "Name": "WithdrawSuccess",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "farming_staking_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_stakable_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_shadow_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "pending_redeem_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 5
          },
          {
            "Name": "WithdrawFailed",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "farming_staking_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_stakable_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_shadow_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "pending_redeem_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 6
          },
          {
            "Name": "Redeemed",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "farming_staking_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_stakable_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_shadow_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "pending_redeem_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 7
          },
          {
            "Name": "RedeemFailed",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "farming_staking_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_stakable_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "system_shadow_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "pending_redeem_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 8
          },
          {
            "Name": "VtokenNotFound",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 9
          },
          {
            "Name": "TokenInfoRefreshed",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 10
          },
          {
            "Name": "Payout",
            "TypeFields": [
              {
                "Name": "token",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "from",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "free",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vfree",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "shadow",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 11
          }
        ],
        "Path": [
          "bifrost_system_staking",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "482": {
        "Variants": [
          {
            "Name": "Charged",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "ConfigSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "info",
                "TypeName": "Info<BalanceOf<T>>",
                "TypeId": 389
              }
            ],
            "Index": 1
          },
          {
            "Name": "Closed",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 2
          },
          {
            "Name": "Paid",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 3
          },
          {
            "Name": "RedeemFailed",
            "TypeFields": [
              {
                "Name": "vcurrency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "bifrost_system_maker",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "483": {
        "Variants": [
          {
            "Name": "Created",
            "TypeFields": [
              {
                "Name": "info",
                "TypeName": "Info<AccountIdOf<T>>",
                "TypeId": 484
              }
            ],
            "Index": 0
          },
          {
            "Name": "Edited",
            "TypeFields": [
              {
                "Name": "info",
                "TypeName": "Info<AccountIdOf<T>>",
                "TypeId": 484
              }
            ],
            "Index": 1
          },
          {
            "Name": "EraLengthSet",
            "TypeFields": [
              {
                "Name": "era_length",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "next_era",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 2
          },
          {
            "Name": "Executed",
            "TypeFields": [
              {
                "Name": "distribution_id",
                "TypeName": "DistributionId",
                "TypeId": 4
              }
            ],
            "Index": 3
          },
          {
            "Name": "Deleted",
            "TypeFields": [
              {
                "Name": "distribution_id",
                "TypeName": "DistributionId",
                "TypeId": 4
              }
            ],
            "Index": 4
          },
          {
            "Name": "ExecuteFailed",
            "TypeFields": [
              {
                "Name": "distribution_id",
                "TypeName": "DistributionId",
                "TypeId": 4
              },
              {
                "Name": "info",
                "TypeName": "Info<AccountIdOf<T>>",
                "TypeId": 484
              },
              {
                "Name": "next_era",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "bifrost_fee_share",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "484": {
        "TypeFields": [
          {
            "Name": "receiving_address",
            "TypeName": "AccountIdOf",
            "TypeId": 0
          },
          {
            "Name": "token_type",
            "TypeName": "Vec<CurrencyId>",
            "TypeId": 311
          },
          {
            "Name": "tokens_proportion",
            "TypeName": "BTreeMap<AccountIdOf, Perbill>",
            "TypeId": 485
          },
          {
            "Name": "if_auto",
            "TypeName": "bool",
            "TypeId": 30
          }
        ],
        "Path": [
          "bifrost_fee_share",
          "pallet",
          "Info"
        ],
        "TypeParams": [
          {
            "Name": "AccountIdOf",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "485": {
        "TypeFields": [
          {
            "TypeId": 391
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 0
          },
          {
            "Name": "V",
            "TypeId": 374
          }
        ],
        "TypeDef": "Composite"
      },
      "486": {
        "Variants": [
          {
            "Name": "CrossedOut",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "crosser",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "location",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "CrossedIn",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "dest",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "location",
                "TypeName": "MultiLocation",
                "TypeId": 136
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "remark",
                "TypeName": "Option<Vec<u8>>",
                "TypeId": 318
              }
            ],
            "Index": 1
          },
          {
            "Name": "CurrencyRegistered",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 2
          },
          {
            "Name": "CurrencyDeregistered",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 3
          },
          {
            "Name": "AddedToIssueList",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 4
          },
          {
            "Name": "RemovedFromIssueList",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 5
          },
          {
            "Name": "LinkedAccountRegistered",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "foreign_location",
                "TypeName": "MultiLocation",
                "TypeId": 136
              }
            ],
            "Index": 6
          },
          {
            "Name": "AddedToRegisterList",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 7
          },
          {
            "Name": "RemovedFromRegisterList",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 8
          },
          {
            "Name": "CrossingMinimumAmountSet",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "cross_in_minimum",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "cross_out_minimum",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 9
          }
        ],
        "Path": [
          "bifrost_cross_in_out",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "487": {
        "Variants": [
          {
            "Name": "ConfigSet",
            "TypeFields": [
              {
                "Name": "config",
                "TypeName": "VeConfig<BalanceOf<T>, BlockNumberFor<T>>",
                "TypeId": 488
              }
            ],
            "Index": 0
          },
          {
            "Name": "Minted",
            "TypeFields": [
              {
                "Name": "addr",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "end",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "now",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 1
          },
          {
            "Name": "Supply",
            "TypeFields": [
              {
                "Name": "supply_before",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "supply",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2
          },
          {
            "Name": "LockCreated",
            "TypeFields": [
              {
                "Name": "addr",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "unlock_time",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 3
          },
          {
            "Name": "UnlockTimeIncreased",
            "TypeFields": [
              {
                "Name": "addr",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "unlock_time",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 4
          },
          {
            "Name": "AmountIncreased",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "position",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 5
          },
          {
            "Name": "Withdrawn",
            "TypeFields": [
              {
                "Name": "addr",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 6
          },
          {
            "Name": "IncentiveSet",
            "TypeFields": [
              {
                "Name": "incentive_config",
                "TypeName": "IncentiveConfig<CurrencyIdOf<T>, BalanceOf<T>, BlockNumberFor<T>\n, AccountIdOf<T>>",
                "TypeId": 489
              }
            ],
            "Index": 7
          },
          {
            "Name": "RewardAdded",
            "TypeFields": [
              {
                "Name": "rewards",
                "TypeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>",
                "TypeId": 295
              }
            ],
            "Index": 8
          },
          {
            "Name": "Rewarded",
            "TypeFields": [
              {
                "Name": "addr",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "rewards",
                "TypeName": "Vec<(CurrencyIdOf<T>, BalanceOf<T>)>",
                "TypeId": 295
              }
            ],
            "Index": 9
          },
          {
            "Name": "AllRefreshed",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 10
          },
          {
            "Name": "PartiallyRefreshed",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 11
          }
        ],
        "Path": [
          "bifrost_ve_minting",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "488": {
        "TypeFields": [
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "min_mint",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "min_block",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "bifrost_ve_minting",
          "VeConfig"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "489": {
        "TypeFields": [
          {
            "Name": "reward_rate",
            "TypeName": "BTreeMap<CurrencyId, Balance>",
            "TypeId": 490
          },
          {
            "Name": "reward_per_token_stored",
            "TypeName": "BTreeMap<CurrencyId, Balance>",
            "TypeId": 490
          },
          {
            "Name": "rewards_duration",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "period_finish",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "last_update_time",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "incentive_controller",
            "TypeName": "Option<AccountId>",
            "TypeId": 96
          },
          {
            "Name": "last_reward",
            "TypeName": "Vec<(CurrencyId, Balance)>",
            "TypeId": 295
          }
        ],
        "Path": [
          "bifrost_ve_minting",
          "incentive",
          "IncentiveConfig"
        ],
        "TypeParams": [
          {
            "Name": "CurrencyId",
            "TypeId": 292
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "490": {
        "TypeFields": [
          {
            "TypeId": 295
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 292
          },
          {
            "Name": "V",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "491": {
        "Variants": [
          {
            "Name": "AddWhitelistAccountId",
            "TypeFields": [
              {
                "Name": "support_chain",
                "TypeName": "SupportChain",
                "TypeId": 401
              },
              {
                "Name": "evm_contract_account_id",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 0
          },
          {
            "Name": "RemoveWhitelistAccountId",
            "TypeFields": [
              {
                "Name": "support_chain",
                "TypeName": "SupportChain",
                "TypeId": 401
              },
              {
                "Name": "evm_contract_account_id",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "XcmMint",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "token_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              }
            ],
            "Index": 2
          },
          {
            "Name": "XcmMintFailed",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "currency_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "token_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              }
            ],
            "Index": 3
          },
          {
            "Name": "XcmZenlinkSwap",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "currency_id_in",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "currency_id_out",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "currency_id_out_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              }
            ],
            "Index": 4
          },
          {
            "Name": "XcmZenlinkSwapFailed",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "currency_id_in",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "currency_id_out",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "currency_id_in_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              }
            ],
            "Index": 5
          },
          {
            "Name": "XcmStablePoolSwap",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "pool_token_index_in",
                "TypeName": "PoolTokenIndex",
                "TypeId": 4
              },
              {
                "Name": "pool_token_index_out",
                "TypeName": "PoolTokenIndex",
                "TypeId": 4
              },
              {
                "Name": "currency_id_out_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              }
            ],
            "Index": 6
          },
          {
            "Name": "XcmStablePoolSwapFailed",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "pool_token_index_in",
                "TypeName": "PoolTokenIndex",
                "TypeId": 4
              },
              {
                "Name": "pool_token_index_out",
                "TypeName": "PoolTokenIndex",
                "TypeId": 4
              },
              {
                "Name": "currency_id_in_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              }
            ],
            "Index": 7
          },
          {
            "Name": "XcmRedeem",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "vtoken_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vtoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              }
            ],
            "Index": 8
          },
          {
            "Name": "XcmRedeemFailed",
            "TypeFields": [
              {
                "Name": "evm_caller",
                "TypeName": "H160",
                "TypeId": 399
              },
              {
                "Name": "vtoken_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vtoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "target_chain",
                "TypeName": "TargetChain<AccountIdOf<T>>",
                "TypeId": 400
              }
            ],
            "Index": 9
          },
          {
            "Name": "SetTransferToFee",
            "TypeFields": [
              {
                "Name": "support_chain",
                "TypeName": "SupportChain",
                "TypeId": 401
              },
              {
                "Name": "transfer_to_fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 10
          },
          {
            "Name": "SetExecutionFee",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "execution_fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 11
          },
          {
            "Name": "SetCurrencyEthereumCallSwitch",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "is_support",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 12
          },
          {
            "Name": "SetEthereumCallConfiguration",
            "TypeFields": [
              {
                "Name": "xcm_fee",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "xcm_weight",
                "TypeName": "Weight",
                "TypeId": 9
              },
              {
                "Name": "period",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "contract",
                "TypeName": "H160",
                "TypeId": 399
              }
            ],
            "Index": 13
          },
          {
            "Name": "XcmSetTokenAmount",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "token_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vcurrency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "vtoken_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 14
          },
          {
            "Name": "SetCurrencyToSupportXcmFee",
            "TypeFields": [
              {
                "Name": "currency_id",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "is_support",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 15
          },
          {
            "Name": "SetDelayBlock",
            "TypeFields": [
              {
                "Name": "delay_block",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 16
          },
          {
            "Name": "CreateOrder",
            "TypeFields": [
              {
                "Name": "order",
                "TypeName": "Order<AccountIdOf<T>, CurrencyIdOf<T>, BalanceOf<T>,\nBlockNumberFor<T>>",
                "TypeId": 492
              }
            ],
            "Index": 17
          },
          {
            "Name": "OrderHandled",
            "TypeFields": [
              {
                "Name": "order",
                "TypeName": "Order<AccountIdOf<T>, CurrencyIdOf<T>, BalanceOf<T>,\nBlockNumberFor<T>>",
                "TypeId": 492
              }
            ],
            "Index": 18
          },
          {
            "Name": "OrderFailed",
            "TypeFields": [
              {
                "Name": "order",
                "TypeName": "Order<AccountIdOf<T>, CurrencyIdOf<T>, BalanceOf<T>,\nBlockNumberFor<T>>",
                "TypeId": 492
              }
            ],
            "Index": 19
          },
          {
            "Name": "InsufficientAssets",
            "TypeFields": null,
            "Index": 20
          }
        ],
        "Path": [
          "bifrost_slpx",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "492": {
        "TypeFields": [
          {
            "Name": "source_chain_caller",
            "TypeName": "OrderCaller<AccountId>",
            "TypeId": 493
          },
          {
            "Name": "bifrost_chain_caller",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "derivative_account",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "create_block_number",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "currency_id",
            "TypeName": "CurrencyId",
            "TypeId": 292
          },
          {
            "Name": "currency_amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "order_type",
            "TypeName": "OrderType",
            "TypeId": 402
          },
          {
            "Name": "remark",
            "TypeName": "BoundedVec<u8, ConstU32<32>>",
            "TypeId": 285
          },
          {
            "Name": "target_chain",
            "TypeName": "TargetChain<AccountId>",
            "TypeId": 400
          },
          {
            "Name": "channel_id",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "bifrost_slpx",
          "types",
          "Order"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "CurrencyId",
            "TypeId": 292
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "493": {
        "Variants": [
          {
            "Name": "Substrate",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0
          },
          {
            "Name": "Evm",
            "TypeFields": [
              {
                "TypeName": "H160",
                "TypeId": 399
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "bifrost_slpx",
          "types",
          "OrderCaller"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "494": {
        "Variants": [
          {
            "Name": "MemberAdded",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0,
            "Docs": [
              "A member `who` has been added."
            ]
          },
          {
            "Name": "RankChanged",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "rank",
                "TypeName": "Rank",
                "TypeId": 56
              }
            ],
            "Index": 1,
            "Docs": [
              "The member `who`se rank has been changed to the given `rank`."
            ]
          },
          {
            "Name": "MemberRemoved",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "rank",
                "TypeName": "Rank",
                "TypeId": 56
              }
            ],
            "Index": 2,
            "Docs": [
              "The member `who` of given `rank` has been removed from the collective."
            ]
          },
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "poll",
                "TypeName": "PollIndexOf<T, I>",
                "TypeId": 4
              },
              {
                "Name": "vote",
                "TypeName": "VoteRecord",
                "TypeId": 495
              },
              {
                "Name": "tally",
                "TypeName": "TallyOf<T, I>",
                "TypeId": 496
              }
            ],
            "Index": 3,
            "Docs": [
              "The member `who` has voted for the `poll` with the given `vote` leading to an updated",
              "`tally`."
            ]
          },
          {
            "Name": "MemberExchanged",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "new_who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 4,
            "Docs": [
              "The member `who` had their `AccountId` changed to `new_who`."
            ]
          }
        ],
        "Path": [
          "pallet_ranked_collective",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "495": {
        "Variants": [
          {
            "Name": "Aye",
            "TypeFields": [
              {
                "TypeName": "Votes",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "Nay",
            "TypeFields": [
              {
                "TypeName": "Votes",
                "TypeId": 4
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_ranked_collective",
          "VoteRecord"
        ],
        "TypeDef": "Variant"
      },
      "496": {
        "TypeFields": [
          {
            "Name": "bare_ayes",
            "TypeName": "MemberIndex",
            "TypeId": 4
          },
          {
            "Name": "ayes",
            "TypeName": "Votes",
            "TypeId": 4
          },
          {
            "Name": "nays",
            "TypeName": "Votes",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_ranked_collective",
          "Tally"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          },
          {
            "Name": "M"
          }
        ],
        "TypeDef": "Composite"
      },
      "497": {
        "Variants": [
          {
            "Name": "Submitted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "track",
                "TypeName": "TrackIdOf<T, I>",
                "TypeId": 56,
                "Docs": [
                  "The track (and by extension proposal dispatch origin) of this referendum."
                ]
              },
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T, I>",
                "TypeId": 57,
                "Docs": [
                  "The proposal for the referendum."
                ]
              }
            ],
            "Index": 0,
            "Docs": [
              "A referendum has been submitted."
            ]
          },
          {
            "Name": "DecisionDepositPlaced",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "The account who placed the deposit."
                ]
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6,
                "Docs": [
                  "The amount placed by the account."
                ]
              }
            ],
            "Index": 1,
            "Docs": [
              "The decision deposit has been placed."
            ]
          },
          {
            "Name": "DecisionDepositRefunded",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "The account who placed the deposit."
                ]
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6,
                "Docs": [
                  "The amount placed by the account."
                ]
              }
            ],
            "Index": 2,
            "Docs": [
              "The decision deposit has been refunded."
            ]
          },
          {
            "Name": "DepositSlashed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "The account who placed the deposit."
                ]
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6,
                "Docs": [
                  "The amount placed by the account."
                ]
              }
            ],
            "Index": 3,
            "Docs": [
              "A deposit has been slashed."
            ]
          },
          {
            "Name": "DecisionStarted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "track",
                "TypeName": "TrackIdOf<T, I>",
                "TypeId": 56,
                "Docs": [
                  "The track (and by extension proposal dispatch origin) of this referendum."
                ]
              },
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T, I>",
                "TypeId": 57,
                "Docs": [
                  "The proposal for the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 496,
                "Docs": [
                  "The current tally of votes in this referendum."
                ]
              }
            ],
            "Index": 4,
            "Docs": [
              "A referendum has moved into the deciding phase."
            ]
          },
          {
            "Name": "ConfirmStarted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              }
            ],
            "Index": 5
          },
          {
            "Name": "ConfirmAborted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              }
            ],
            "Index": 6
          },
          {
            "Name": "Confirmed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 496,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 7,
            "Docs": [
              "A referendum has ended its confirmation phase and is ready for approval."
            ]
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              }
            ],
            "Index": 8,
            "Docs": [
              "A referendum has been approved and its proposal has been scheduled."
            ]
          },
          {
            "Name": "Rejected",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 496,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 9,
            "Docs": [
              "A proposal has been rejected by referendum."
            ]
          },
          {
            "Name": "TimedOut",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 496,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 10,
            "Docs": [
              "A referendum has been timed out without being decided."
            ]
          },
          {
            "Name": "Cancelled",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 496,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 11,
            "Docs": [
              "A referendum has been cancelled."
            ]
          },
          {
            "Name": "Killed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "tally",
                "TypeName": "T::Tally",
                "TypeId": 496,
                "Docs": [
                  "The final tally of votes in this referendum."
                ]
              }
            ],
            "Index": 12,
            "Docs": [
              "A referendum has been killed."
            ]
          },
          {
            "Name": "SubmissionDepositRefunded",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0,
                "Docs": [
                  "The account who placed the deposit."
                ]
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6,
                "Docs": [
                  "The amount placed by the account."
                ]
              }
            ],
            "Index": 13,
            "Docs": [
              "The submission deposit has been refunded."
            ]
          },
          {
            "Name": "MetadataSet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 14,
            "Docs": [
              "Metadata for a referendum has been set."
            ]
          },
          {
            "Name": "MetadataCleared",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 4,
                "Docs": [
                  "Index of the referendum."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 15,
            "Docs": [
              "Metadata for a referendum has been cleared."
            ]
          }
        ],
        "Path": [
          "pallet_referenda",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "498": {
        "Variants": [
          {
            "Name": "CreatePool",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "a",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              },
              {
                "Name": "swap_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "pallet_id",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0
          },
          {
            "Name": "LiquidityAdded",
            "TypeFields": [
              {
                "Name": "minter",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "a",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              },
              {
                "Name": "input_amounts",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "min_output_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "balances",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "total_supply",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "fee_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "output_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 1
          },
          {
            "Name": "TokenSwapped",
            "TypeFields": [
              {
                "Name": "swapper",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "a",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              },
              {
                "Name": "input_asset",
                "TypeName": "T::AssetId",
                "TypeId": 292
              },
              {
                "Name": "output_asset",
                "TypeName": "T::AssetId",
                "TypeId": 292
              },
              {
                "Name": "input_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "min_output_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "balances",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "total_supply",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "output_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 2
          },
          {
            "Name": "RedeemedProportion",
            "TypeFields": [
              {
                "Name": "redeemer",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "a",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              },
              {
                "Name": "input_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "min_output_amounts",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "balances",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "total_supply",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "fee_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "output_amounts",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              }
            ],
            "Index": 3
          },
          {
            "Name": "RedeemedSingle",
            "TypeFields": [
              {
                "Name": "redeemer",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "a",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              },
              {
                "Name": "input_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "output_asset",
                "TypeName": "T::AssetId",
                "TypeId": 292
              },
              {
                "Name": "min_output_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "balances",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "total_supply",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "fee_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "output_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 4
          },
          {
            "Name": "RedeemedMulti",
            "TypeFields": [
              {
                "Name": "redeemer",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "a",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              },
              {
                "Name": "output_amounts",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "max_input_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "balances",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "total_supply",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "fee_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "input_amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 5
          },
          {
            "Name": "BalanceUpdated",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "old_balances",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "new_balances",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              }
            ],
            "Index": 6
          },
          {
            "Name": "YieldCollected",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "a",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              },
              {
                "Name": "old_total_supply",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "new_total_supply",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 7
          },
          {
            "Name": "FeeCollected",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "a",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              },
              {
                "Name": "old_balances",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "new_balances",
                "TypeName": "Vec<T::Balance>",
                "TypeId": 406
              },
              {
                "Name": "old_total_supply",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "new_total_supply",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 8
          },
          {
            "Name": "AModified",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "value",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              },
              {
                "Name": "time",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 9
          },
          {
            "Name": "FeeModified",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "mint_fee",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              },
              {
                "Name": "swap_fee",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              },
              {
                "Name": "redeem_fee",
                "TypeName": "T::AtLeast64BitUnsigned",
                "TypeId": 6
              }
            ],
            "Index": 10
          },
          {
            "Name": "RecipientModified",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "fee_recipient",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "yield_recipient",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 11
          },
          {
            "Name": "TokenRateSet",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              },
              {
                "Name": "token_rate",
                "TypeName": "Vec<(T::AssetId, (T::AtLeast64BitUnsigned, T::AtLeast64BitUnsigned))>",
                "TypeId": 407
              }
            ],
            "Index": 12
          },
          {
            "Name": "TokenRateHardcapConfigured",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "T::AssetId",
                "TypeId": 292
              },
              {
                "Name": "hardcap",
                "TypeName": "Permill",
                "TypeId": 323
              }
            ],
            "Index": 13
          },
          {
            "Name": "TokenRateHardcapRemoved",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "T::AssetId",
                "TypeId": 292
              }
            ],
            "Index": 14
          },
          {
            "Name": "TokenRateRefreshFailed",
            "TypeFields": [
              {
                "Name": "pool_id",
                "TypeName": "StableAssetPoolId",
                "TypeId": 4
              }
            ],
            "Index": 15
          }
        ],
        "Path": [
          "bifrost_stable_asset",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "499": {
        "Variants": [
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "poll_index",
                "TypeName": "PollIndex",
                "TypeId": 4
              },
              {
                "Name": "token_vote",
                "TypeName": "AccountVote<BalanceOf<T>>",
                "TypeId": 411
              },
              {
                "Name": "delegator_vote",
                "TypeName": "AccountVote<BalanceOf<T>>",
                "TypeId": 411
              }
            ],
            "Index": 0
          },
          {
            "Name": "Unlocked",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "poll_index",
                "TypeName": "PollIndex",
                "TypeId": 4
              }
            ],
            "Index": 1
          },
          {
            "Name": "DelegatorVoteRemoved",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "derivative_index",
                "TypeName": "DerivativeIndex",
                "TypeId": 56
              }
            ],
            "Index": 2
          },
          {
            "Name": "DelegatorAdded",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "derivative_index",
                "TypeName": "DerivativeIndex",
                "TypeId": 56
              }
            ],
            "Index": 3
          },
          {
            "Name": "ReferendumInfoCreated",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "poll_index",
                "TypeName": "PollIndex",
                "TypeId": 4
              },
              {
                "Name": "info",
                "TypeName": "ReferendumInfoOf<T>",
                "TypeId": 412
              }
            ],
            "Index": 4
          },
          {
            "Name": "ReferendumInfoSet",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "poll_index",
                "TypeName": "PollIndex",
                "TypeId": 4
              },
              {
                "Name": "info",
                "TypeName": "ReferendumInfoOf<T>",
                "TypeId": 412
              }
            ],
            "Index": 5
          },
          {
            "Name": "VoteLockingPeriodSet",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "locking_period",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 6
          },
          {
            "Name": "UndecidingTimeoutSet",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "undeciding_timeout",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 7
          },
          {
            "Name": "ReferendumKilled",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "poll_index",
                "TypeName": "PollIndex",
                "TypeId": 4
              }
            ],
            "Index": 8
          },
          {
            "Name": "VoteNotified",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "poll_index",
                "TypeName": "PollIndex",
                "TypeId": 4
              },
              {
                "Name": "success",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 9
          },
          {
            "Name": "DelegatorVoteRemovedNotified",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "poll_index",
                "TypeName": "PollIndex",
                "TypeId": 4
              },
              {
                "Name": "success",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 10
          },
          {
            "Name": "ResponseReceived",
            "TypeFields": [
              {
                "Name": "responder",
                "TypeName": "xcm::v4::Location",
                "TypeId": 114
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 204
              }
            ],
            "Index": 11
          },
          {
            "Name": "VoteCapRatioSet",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "vote_cap_ratio",
                "TypeName": "Perbill",
                "TypeId": 374
              }
            ],
            "Index": 12
          }
        ],
        "Path": [
          "bifrost_vtoken_voting",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "500": {
        "Variants": [
          {
            "Name": "CollateralAssetAdded",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 0,
            "Docs": [
              "Enable collateral for certain asset",
              "[sender, asset_id]"
            ]
          },
          {
            "Name": "CollateralAssetRemoved",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 1,
            "Docs": [
              "Disable collateral for certain asset",
              "[sender, asset_id]"
            ]
          },
          {
            "Name": "Deposited",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "Event emitted when assets are deposited",
              "[sender, asset_id, amount]"
            ]
          },
          {
            "Name": "Redeemed",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 3,
            "Docs": [
              "Event emitted when assets are redeemed",
              "[sender, asset_id, amount]"
            ]
          },
          {
            "Name": "Borrowed",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "Event emitted when cash is borrowed",
              "[sender, asset_id, amount]"
            ]
          },
          {
            "Name": "RepaidBorrow",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "Event emitted when a borrow is repaid",
              "[sender, asset_id, amount]"
            ]
          },
          {
            "Name": "LiquidatedBorrow",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "Event emitted when a borrow is liquidated",
              "[liquidator, borrower, liquidation_asset_id, collateral_asset_id, repay_amount,",
              "collateral_amount]"
            ]
          },
          {
            "Name": "ReservesReduced",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 7,
            "Docs": [
              "Event emitted when the reserves are reduced",
              "[admin, asset_id, reduced_amount, total_reserves]"
            ]
          },
          {
            "Name": "ReservesAdded",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "Event emitted when the reserves are added",
              "[admin, asset_id, added_amount, total_reserves]"
            ]
          },
          {
            "Name": "NewMarket",
            "TypeFields": [
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "Market<BalanceOf<T>>",
                "TypeId": 416
              }
            ],
            "Index": 9,
            "Docs": [
              "New market is set",
              "[new_interest_rate_model]"
            ]
          },
          {
            "Name": "ActivatedMarket",
            "TypeFields": [
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 10,
            "Docs": [
              "Event emitted when a market is activated",
              "[admin, asset_id]"
            ]
          },
          {
            "Name": "UpdatedMarket",
            "TypeFields": [
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "Market<BalanceOf<T>>",
                "TypeId": 416
              }
            ],
            "Index": 11,
            "Docs": [
              "New market parameters is updated",
              "[admin, asset_id]"
            ]
          },
          {
            "Name": "RewardAdded",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 12,
            "Docs": [
              "Reward added"
            ]
          },
          {
            "Name": "RewardWithdrawn",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 13,
            "Docs": [
              "Reward withdrawed"
            ]
          },
          {
            "Name": "MarketRewardSpeedUpdated",
            "TypeFields": [
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 14,
            "Docs": [
              "Event emitted when market reward speed updated."
            ]
          },
          {
            "Name": "DistributedSupplierReward",
            "TypeFields": [
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 15,
            "Docs": [
              "Deposited when Reward is distributed to a supplier"
            ]
          },
          {
            "Name": "DistributedBorrowerReward",
            "TypeFields": [
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 16,
            "Docs": [
              "Deposited when Reward is distributed to a borrower"
            ]
          },
          {
            "Name": "RewardPaid",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 17,
            "Docs": [
              "Reward Paid for user"
            ]
          },
          {
            "Name": "IncentiveReservesReduced",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 18,
            "Docs": [
              "Event emitted when the incentive reserves are redeemed and transfer to receiver's",
              "account [receive_account_id, asset_id, reduced_amount]"
            ]
          },
          {
            "Name": "LiquidationFreeCollateralsUpdated",
            "TypeFields": [
              {
                "TypeName": "Vec<AssetIdOf<T>>",
                "TypeId": 311
              }
            ],
            "Index": 19,
            "Docs": [
              "Liquidation free collaterals has been updated"
            ]
          }
        ],
        "Path": [
          "lend_market",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "501": {
        "Variants": [
          {
            "Name": "SetPrice",
            "TypeFields": [
              {
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "TypeName": "Price",
                "TypeId": 397
              }
            ],
            "Index": 0,
            "Docs": [
              "Set emergency price. \\[asset_id, price_detail\\]"
            ]
          },
          {
            "Name": "ResetPrice",
            "TypeFields": [
              {
                "TypeName": "CurrencyId",
                "TypeId": 292
              }
            ],
            "Index": 1,
            "Docs": [
              "Reset emergency price. \\[asset_id\\]"
            ]
          }
        ],
        "Path": [
          "pallet_prices",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "502": {
        "Variants": [
          {
            "Name": "NewFeedData",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "values",
                "TypeName": "Vec<(T::OracleKey, T::OracleValue)>",
                "TypeId": 426
              }
            ],
            "Index": 0,
            "Docs": [
              "New feed data is submitted."
            ]
          }
        ],
        "Path": [
          "orml_oracle",
          "module",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "503": {
        "Variants": [
          {
            "Name": "MemberAdded",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The given member was added; see the transaction for who."
            ]
          },
          {
            "Name": "MemberRemoved",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The given member was removed; see the transaction for who."
            ]
          },
          {
            "Name": "MembersSwapped",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Two members were swapped; see the transaction for who."
            ]
          },
          {
            "Name": "MembersReset",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The membership was reset; see the transaction for who the new set is."
            ]
          },
          {
            "Name": "KeyChanged",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "One of the members' keys changed."
            ]
          },
          {
            "Name": "Dummy",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Phantom member, never used."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "504": {
        "Variants": [
          {
            "Name": "FlashLoanDeposited",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "asset_id",
                "TypeName": "AssetIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "old_rate",
                "TypeName": "Rate",
                "TypeId": 397
              },
              {
                "Name": "new_rate",
                "TypeName": "Rate",
                "TypeId": 397
              }
            ],
            "Index": 0
          }
        ],
        "Path": [
          "leverage_staking",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "505": {
        "Variants": [
          {
            "Name": "ChannelRegistered",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              },
              {
                "Name": "receive_account",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0
          },
          {
            "Name": "ChannelRemoved",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              }
            ],
            "Index": 1
          },
          {
            "Name": "ChannelReceiveAccountUpdated",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              },
              {
                "Name": "receiver",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 2
          },
          {
            "Name": "CommissionTokenSet",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "commission_token",
                "TypeName": "Option<CurrencyId>",
                "TypeId": 309
              }
            ],
            "Index": 3
          },
          {
            "Name": "ChannelCommissionSet",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              },
              {
                "Name": "vtoken",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "rate",
                "TypeName": "Percent",
                "TypeId": 370
              }
            ],
            "Index": 4
          },
          {
            "Name": "CommissionClaimed",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              },
              {
                "Name": "commission_token",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 5
          },
          {
            "Name": "ChannelVtokenSharesUpdated",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              },
              {
                "Name": "vtoken",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "share",
                "TypeName": "Permill",
                "TypeId": 323
              }
            ],
            "Index": 6
          },
          {
            "Name": "VtokenIssuanceSnapshotUpdated",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "old_issuance",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "new_issuance",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 7
          },
          {
            "Name": "PeriodVtokenTotalMintUpdated",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "old_total_mint",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "new_total_mint",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 8
          },
          {
            "Name": "PeriodVtokenTotalRedeemUpdated",
            "TypeFields": [
              {
                "Name": "vtoken",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "old_total_redeem",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "new_total_redeem",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 9
          },
          {
            "Name": "PeriodChannelVtokenMintUpdated",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              },
              {
                "Name": "vtoken",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "old_mint_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "new_mint_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 10
          },
          {
            "Name": "PeriodTotalCommissionsUpdated",
            "TypeFields": [
              {
                "Name": "commission_token",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "old_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "new_amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 11
          },
          {
            "Name": "ChannelClaimableCommissionUpdated",
            "TypeFields": [
              {
                "Name": "channel_id",
                "TypeName": "ChannelId",
                "TypeId": 4
              },
              {
                "Name": "commission_token",
                "TypeName": "CurrencyId",
                "TypeId": 292
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 12
          }
        ],
        "Path": [
          "bifrost_channel_commission",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "506": {
        "Variants": [
          {
            "Name": "CloudsConverted",
            "TypeFields": [
              {
                "Name": "clouds",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "vebnc",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "VbncCharged",
            "TypeFields": [
              {
                "Name": "vbnc",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "bifrost_clouds_convert",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "507": {
        "Variants": [
          {
            "Name": "Charged",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "ConfigSet",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "info",
                "TypeName": "Info<BalanceOf<T>, BlockNumberFor<T>>",
                "TypeId": 508
              }
            ],
            "Index": 1
          },
          {
            "Name": "Removed",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              }
            ],
            "Index": 2
          },
          {
            "Name": "BuyBackFailed",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "block_number",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 3
          },
          {
            "Name": "BuyBackSuccess",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "block_number",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 4
          },
          {
            "Name": "AddLiquidityFailed",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "block_number",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 5
          },
          {
            "Name": "AddLiquiditySuccess",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "CurrencyIdOf<T>",
                "TypeId": 292
              },
              {
                "Name": "block_number",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 6
          }
        ],
        "Path": [
          "bifrost_buy_back",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "508": {
        "TypeFields": [
          {
            "Name": "value",
            "TypeName": "BalanceOf",
            "TypeId": 6
          },
          {
            "Name": "if_auto",
            "TypeName": "bool",
            "TypeId": 30
          },
          {
            "Name": "proportion",
            "TypeName": "Permill",
            "TypeId": 323
          },
          {
            "Name": "buyback_duration",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "last_buyback",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "add_liquidity_duration",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "last_add_liquidity",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          }
        ],
        "Path": [
          "bifrost_buy_back",
          "pallet",
          "Info"
        ],
        "TypeParams": [
          {
            "Name": "BalanceOf",
            "TypeId": 6
          },
          {
            "Name": "BlockNumberFor",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "509": {
        "Variants": [
          {
            "Name": "ApplyExtrinsic",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "Finalization",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Initialization",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "frame_system",
          "Phase"
        ],
        "TypeDef": "Variant"
      },
      "510": {
        "TypeId": 233,
        "TypeDef": "Sequence"
      },
      "511": {
        "TypeFields": [
          {
            "Name": "spec_version",
            "TypeName": "codec::Compact<u32>",
            "TypeId": 66
          },
          {
            "Name": "spec_name",
            "TypeName": "sp_runtime::RuntimeString",
            "TypeId": 512
          }
        ],
        "Path": [
          "frame_system",
          "LastRuntimeUpgradeInfo"
        ],
        "TypeDef": "Composite"
      },
      "512": {
        "Primitive": "Str",
        "TypeDef": "Primitive"
      },
      "513": {
        "TypeFields": [
          {
            "Name": "code_hash",
            "TypeName": "T::Hash",
            "TypeId": 12
          },
          {
            "Name": "check_version",
            "TypeName": "bool",
            "TypeId": 30
          }
        ],
        "Path": [
          "frame_system",
          "CodeUpgradeAuthorization"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "514": {
        "TypeFields": [
          {
            "Name": "base_block",
            "TypeName": "Weight",
            "TypeId": 9
          },
          {
            "Name": "max_block",
            "TypeName": "Weight",
            "TypeId": 9
          },
          {
            "Name": "per_class",
            "TypeName": "PerDispatchClass<WeightsPerClass>",
            "TypeId": 515
          }
        ],
        "Path": [
          "frame_system",
          "limits",
          "BlockWeights"
        ],
        "TypeDef": "Composite"
      },
      "515": {
        "TypeFields": [
          {
            "Name": "normal",
            "TypeName": "T",
            "TypeId": 516
          },
          {
            "Name": "operational",
            "TypeName": "T",
            "TypeId": 516
          },
          {
            "Name": "mandatory",
            "TypeName": "T",
            "TypeId": 516
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "PerDispatchClass"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 516
          }
        ],
        "TypeDef": "Composite"
      },
      "516": {
        "TypeFields": [
          {
            "Name": "base_extrinsic",
            "TypeName": "Weight",
            "TypeId": 9
          },
          {
            "Name": "max_extrinsic",
            "TypeName": "Option<Weight>",
            "TypeId": 438
          },
          {
            "Name": "max_total",
            "TypeName": "Option<Weight>",
            "TypeId": 438
          },
          {
            "Name": "reserved",
            "TypeName": "Option<Weight>",
            "TypeId": 438
          }
        ],
        "Path": [
          "frame_system",
          "limits",
          "WeightsPerClass"
        ],
        "TypeDef": "Composite"
      },
      "517": {
        "TypeFields": [
          {
            "Name": "max",
            "TypeName": "PerDispatchClass<u32>",
            "TypeId": 518
          }
        ],
        "Path": [
          "frame_system",
          "limits",
          "BlockLength"
        ],
        "TypeDef": "Composite"
      },
      "518": {
        "TypeFields": [
          {
            "Name": "normal",
            "TypeName": "T",
            "TypeId": 4
          },
          {
            "Name": "operational",
            "TypeName": "T",
            "TypeId": 4
          },
          {
            "Name": "mandatory",
            "TypeName": "T",
            "TypeId": 4
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "PerDispatchClass"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "519": {
        "TypeFields": [
          {
            "Name": "read",
            "TypeName": "u64",
            "TypeId": 11
          },
          {
            "Name": "write",
            "TypeName": "u64",
            "TypeId": 11
          }
        ],
        "Path": [
          "sp_weights",
          "RuntimeDbWeight"
        ],
        "TypeDef": "Composite"
      },
      "520": {
        "TypeFields": [
          {
            "Name": "spec_name",
            "TypeName": "RuntimeString",
            "TypeId": 512
          },
          {
            "Name": "impl_name",
            "TypeName": "RuntimeString",
            "TypeId": 512
          },
          {
            "Name": "authoring_version",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "spec_version",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "impl_version",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "apis",
            "TypeName": "ApisVec",
            "TypeId": 521
          },
          {
            "Name": "transaction_version",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "state_version",
            "TypeName": "u8",
            "TypeId": 2
          }
        ],
        "Path": [
          "sp_version",
          "RuntimeVersion"
        ],
        "TypeDef": "Composite"
      },
      "521": {
        "TypeFields": [
          {
            "TypeId": 522
          }
        ],
        "Path": [
          "Cow"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 522
          }
        ],
        "TypeDef": "Composite"
      },
      "522": {
        "TypeId": 523,
        "TypeDef": "Sequence"
      },
      "523": {
        "TypeIds": [
          158,
          4
        ],
        "TypeDef": "Tuple"
      },
      "524": {
        "Variants": [
          {
            "Name": "InvalidSpecName",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The name of specification does not match between the current runtime",
              "and the new runtime."
            ]
          },
          {
            "Name": "SpecVersionNeedsToIncrease",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The specification version is not allowed to decrease between the current runtime",
              "and the new runtime."
            ]
          },
          {
            "Name": "FailedToExtractRuntimeVersion",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Failed to extract the runtime version from the new runtime.",
              "",
              "Either calling `Core_version` or decoding `RuntimeVersion` failed."
            ]
          },
          {
            "Name": "NonDefaultComposite",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Suicide called when the account has non-default composite data."
            ]
          },
          {
            "Name": "NonZeroRefCount",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "There is a non-zero reference count preventing the account from being purged."
            ]
          },
          {
            "Name": "CallFiltered",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The origin filter prevent the call to be dispatched."
            ]
          },
          {
            "Name": "NothingAuthorized",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "No upgrade authorized."
            ]
          },
          {
            "Name": "Unauthorized",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The submitted code is not authorized."
            ]
          }
        ],
        "Path": [
          "frame_system",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Error for the System pallet"
        ]
      },
      "525": {
        "TypeIds": [
          0,
          6,
          30
        ],
        "TypeDef": "Tuple"
      },
      "526": {
        "Variants": [
          {
            "Name": "NotAssigned",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The index was not already assigned."
            ]
          },
          {
            "Name": "NotOwner",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The index is assigned to another account."
            ]
          },
          {
            "Name": "InUse",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The index was not available."
            ]
          },
          {
            "Name": "NotTransfer",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The source and destination accounts are identical."
            ]
          },
          {
            "Name": "Permanent",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The index is permanent and may not be freed/changed."
            ]
          }
        ],
        "Path": [
          "pallet_indices",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "527": {
        "TypeId": 528,
        "TypeDef": "Sequence"
      },
      "528": {
        "TypeFields": [
          {
            "Name": "used_bandwidth",
            "TypeName": "UsedBandwidth",
            "TypeId": 529
          },
          {
            "Name": "para_head_hash",
            "TypeName": "Option<H>",
            "TypeId": 94
          },
          {
            "Name": "consumed_go_ahead_signal",
            "TypeName": "Option<relay_chain::UpgradeGoAhead>",
            "TypeId": 534
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "unincluded_segment",
          "Ancestor"
        ],
        "TypeParams": [
          {
            "Name": "H",
            "TypeId": 12
          }
        ],
        "TypeDef": "Composite"
      },
      "529": {
        "TypeFields": [
          {
            "Name": "ump_msg_count",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "ump_total_bytes",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "hrmp_outgoing",
            "TypeName": "BTreeMap<ParaId, HrmpChannelUpdate>",
            "TypeId": 530
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "unincluded_segment",
          "UsedBandwidth"
        ],
        "TypeDef": "Composite"
      },
      "530": {
        "TypeFields": [
          {
            "TypeId": 532
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 77
          },
          {
            "Name": "V",
            "TypeId": 531
          }
        ],
        "TypeDef": "Composite"
      },
      "531": {
        "TypeFields": [
          {
            "Name": "msg_count",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "total_bytes",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "unincluded_segment",
          "HrmpChannelUpdate"
        ],
        "TypeDef": "Composite"
      },
      "532": {
        "TypeId": 533,
        "TypeDef": "Sequence"
      },
      "533": {
        "TypeIds": [
          77,
          531
        ],
        "TypeDef": "Tuple"
      },
      "534": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 535
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 535
          }
        ],
        "TypeDef": "Variant"
      },
      "535": {
        "Variants": [
          {
            "Name": "Abort",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "GoAhead",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "UpgradeGoAhead"
        ],
        "TypeDef": "Variant"
      },
      "536": {
        "TypeFields": [
          {
            "Name": "used_bandwidth",
            "TypeName": "UsedBandwidth",
            "TypeId": 529
          },
          {
            "Name": "hrmp_watermark",
            "TypeName": "Option<relay_chain::BlockNumber>",
            "TypeId": 93
          },
          {
            "Name": "consumed_go_ahead_signal",
            "TypeName": "Option<relay_chain::UpgradeGoAhead>",
            "TypeId": 534
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "unincluded_segment",
          "SegmentTracker"
        ],
        "TypeParams": [
          {
            "Name": "H",
            "TypeId": 12
          }
        ],
        "TypeDef": "Composite"
      },
      "537": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 538
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 538
          }
        ],
        "TypeDef": "Variant"
      },
      "538": {
        "Variants": [
          {
            "Name": "Present",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "UpgradeRestriction"
        ],
        "TypeDef": "Variant"
      },
      "539": {
        "TypeFields": [
          {
            "Name": "dmq_mqc_head",
            "TypeName": "relay_chain::Hash",
            "TypeId": 12
          },
          {
            "Name": "relay_dispatch_queue_remaining_capacity",
            "TypeName": "RelayDispatchQueueRemainingCapacity",
            "TypeId": 540
          },
          {
            "Name": "ingress_channels",
            "TypeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
            "TypeId": 541
          },
          {
            "Name": "egress_channels",
            "TypeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
            "TypeId": 541
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "relay_state_snapshot",
          "MessagingStateSnapshot"
        ],
        "TypeDef": "Composite"
      },
      "540": {
        "TypeFields": [
          {
            "Name": "remaining_count",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "remaining_size",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "relay_state_snapshot",
          "RelayDispatchQueueRemainingCapacity"
        ],
        "TypeDef": "Composite"
      },
      "541": {
        "TypeId": 542,
        "TypeDef": "Sequence"
      },
      "542": {
        "TypeIds": [
          77,
          543
        ],
        "TypeDef": "Tuple"
      },
      "543": {
        "TypeFields": [
          {
            "Name": "max_capacity",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_total_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_message_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "msg_count",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "total_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "mqc_head",
            "TypeName": "Option<Hash>",
            "TypeId": 94
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "AbridgedHrmpChannel"
        ],
        "TypeDef": "Composite"
      },
      "544": {
        "TypeFields": [
          {
            "Name": "max_code_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_head_data_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_upward_queue_count",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_upward_queue_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_upward_message_size",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "max_upward_message_num_per_candidate",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "hrmp_max_message_num_per_candidate",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "validation_upgrade_cooldown",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "validation_upgrade_delay",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "async_backing_params",
            "TypeName": "AsyncBackingParams",
            "TypeId": 545
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "AbridgedHostConfiguration"
        ],
        "TypeDef": "Composite"
      },
      "545": {
        "TypeFields": [
          {
            "Name": "max_candidate_depth",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "allowed_ancestry_len",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "async_backing",
          "AsyncBackingParams"
        ],
        "TypeDef": "Composite"
      },
      "546": {
        "TypeFields": [
          {
            "TypeName": "RelayHash",
            "TypeId": 12
          }
        ],
        "Path": [
          "cumulus_primitives_parachain_inherent",
          "MessageQueueChain"
        ],
        "TypeDef": "Composite"
      },
      "547": {
        "TypeFields": [
          {
            "TypeId": 548
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 77
          },
          {
            "Name": "V",
            "TypeId": 546
          }
        ],
        "TypeDef": "Composite"
      },
      "548": {
        "TypeId": 549,
        "TypeDef": "Sequence"
      },
      "549": {
        "TypeIds": [
          77,
          546
        ],
        "TypeDef": "Tuple"
      },
      "550": {
        "TypeId": 551,
        "TypeDef": "Sequence"
      },
      "551": {
        "TypeFields": [
          {
            "Name": "recipient",
            "TypeName": "Id",
            "TypeId": 77
          },
          {
            "Name": "data",
            "TypeName": "sp_std::vec::Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "polkadot_core_primitives",
          "OutboundHrmpMessage"
        ],
        "TypeParams": [
          {
            "Name": "Id",
            "TypeId": 77
          }
        ],
        "TypeDef": "Composite"
      },
      "552": {
        "Variants": [
          {
            "Name": "OverlappingUpgrades",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Attempt to upgrade validation function while existing upgrade pending."
            ]
          },
          {
            "Name": "ProhibitedByPolkadot",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Polkadot currently prohibits this parachain from upgrading its validation function."
            ]
          },
          {
            "Name": "TooBig",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The supplied validation function has compiled into a blob larger than Polkadot is",
              "willing to run."
            ]
          },
          {
            "Name": "ValidationDataNotAvailable",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The inherent which supplies the validation data did not run this block."
            ]
          },
          {
            "Name": "HostConfigurationNotAvailable",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The inherent which supplies the host configuration did not run this block."
            ]
          },
          {
            "Name": "NotScheduled",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "No validation function upgrade is currently scheduled."
            ]
          },
          {
            "Name": "NothingAuthorized",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "No code upgrade has been authorized."
            ]
          },
          {
            "Name": "Unauthorized",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The given code upgrade has not been authorized."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "553": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 556
          }
        ],
        "Path": [
          "bounded_collections",
          "weak_bounded_vec",
          "WeakBoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 554
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "554": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "LockIdentifier",
            "TypeId": 158
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "reasons",
            "TypeName": "Reasons",
            "TypeId": 555
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "BalanceLock"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "555": {
        "Variants": [
          {
            "Name": "Fee",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Misc",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "All",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "Reasons"
        ],
        "TypeDef": "Variant"
      },
      "556": {
        "TypeId": 554,
        "TypeDef": "Sequence"
      },
      "557": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 559
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 558
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "558": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "ReserveIdentifier",
            "TypeId": 158
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "ReserveData"
        ],
        "TypeParams": [
          {
            "Name": "ReserveIdentifier",
            "TypeId": 158
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "559": {
        "TypeId": 558,
        "TypeDef": "Sequence"
      },
      "560": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 564
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 561
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "561": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "Id",
            "TypeId": 562
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "IdAmount"
        ],
        "TypeParams": [
          {
            "Name": "Id",
            "TypeId": 562
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "562": {
        "Variants": [
          {
            "Name": "Preimage",
            "TypeFields": [
              {
                "TypeName": "pallet_preimage::HoldReason",
                "TypeId": 563
              }
            ],
            "Index": 64
          }
        ],
        "Path": [
          "bifrost_polkadot_runtime",
          "RuntimeHoldReason"
        ],
        "TypeDef": "Variant"
      },
      "563": {
        "Variants": [
          {
            "Name": "Preimage",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "pallet_preimage",
          "pallet",
          "HoldReason"
        ],
        "TypeDef": "Variant"
      },
      "564": {
        "TypeId": 561,
        "TypeDef": "Sequence"
      },
      "565": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 567
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 566
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "566": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "Id",
            "TypeId": 47
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "IdAmount"
        ],
        "TypeParams": [
          {
            "Name": "Id",
            "TypeId": 47
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "567": {
        "TypeId": 566,
        "TypeDef": "Sequence"
      },
      "568": {
        "Variants": [
          {
            "Name": "VestingBalance",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Vesting balance too high to send value."
            ]
          },
          {
            "Name": "LiquidityRestrictions",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Account liquidity restrictions prevent withdrawal."
            ]
          },
          {
            "Name": "InsufficientBalance",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Balance too low to send value."
            ]
          },
          {
            "Name": "ExistentialDeposit",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Value too low to create account due to existential deposit."
            ]
          },
          {
            "Name": "Expendability",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Transfer/payment would kill account."
            ]
          },
          {
            "Name": "ExistingVestingSchedule",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "A vesting schedule already exists for this account."
            ]
          },
          {
            "Name": "DeadAccount",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Beneficiary account must pre-exist."
            ]
          },
          {
            "Name": "TooManyReserves",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Number of named reserves exceed `MaxReserves`."
            ]
          },
          {
            "Name": "TooManyHolds",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Number of holds exceed `VariantCountOf<T::RuntimeHoldReason>`."
            ]
          },
          {
            "Name": "TooManyFreezes",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Number of freezes exceed `MaxFreezes`."
            ]
          },
          {
            "Name": "IssuanceDeactivated",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The issuance cannot be modified since it is already deactivated."
            ]
          },
          {
            "Name": "DeltaZero",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The delta cannot be zero."
            ]
          }
        ],
        "Path": [
          "pallet_balances",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "569": {
        "Variants": [
          {
            "Name": "V1Ancient",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "V2",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "pallet_transaction_payment",
          "Releases"
        ],
        "TypeDef": "Variant"
      },
      "570": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 38
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "571": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 573
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 572
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "572": {
        "TypeFields": [
          {
            "Name": "who",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "deposit",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_collator_selection",
          "pallet",
          "CandidateInfo"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "573": {
        "TypeId": 572,
        "TypeDef": "Sequence"
      },
      "574": {
        "Variants": [
          {
            "Name": "TooManyCandidates",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The pallet has too many candidates."
            ]
          },
          {
            "Name": "TooFewEligibleCollators",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Leaving would result in too few candidates."
            ]
          },
          {
            "Name": "AlreadyCandidate",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Account is already a candidate."
            ]
          },
          {
            "Name": "NotCandidate",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Account is not a candidate."
            ]
          },
          {
            "Name": "TooManyInvulnerables",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "There are too many Invulnerables."
            ]
          },
          {
            "Name": "AlreadyInvulnerable",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Account is already an Invulnerable."
            ]
          },
          {
            "Name": "NotInvulnerable",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Account is not an Invulnerable."
            ]
          },
          {
            "Name": "NoAssociatedValidatorId",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Account has no associated validator ID."
            ]
          },
          {
            "Name": "ValidatorNotRegistered",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Validator ID is not yet registered."
            ]
          },
          {
            "Name": "InsertToCandidateListFailed",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Could not insert in the candidate list."
            ]
          },
          {
            "Name": "RemoveFromCandidateListFailed",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "Could not remove from the candidate list."
            ]
          },
          {
            "Name": "DepositTooLow",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "New deposit amount would be below the minimum candidacy bond."
            ]
          },
          {
            "Name": "UpdateCandidateListFailed",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "Could not update the candidate list."
            ]
          },
          {
            "Name": "InsufficientBond",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "Deposit amount is too low to take the target's slot in the candidate list."
            ]
          },
          {
            "Name": "TargetIsNotCandidate",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "The target account to be replaced in the candidate list is not a candidate."
            ]
          },
          {
            "Name": "IdenticalDeposit",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The updated deposit amount is equal to the amount already reserved."
            ]
          },
          {
            "Name": "InvalidUnreserve",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "Cannot lower candidacy bond while occupying a future collator slot in the list."
            ]
          }
        ],
        "Path": [
          "pallet_collator_selection",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "575": {
        "TypeId": 576,
        "TypeDef": "Sequence"
      },
      "576": {
        "TypeIds": [
          0,
          88
        ],
        "TypeDef": "Tuple"
      },
      "577": {
        "TypeIds": [
          578,
          13
        ],
        "TypeDef": "Tuple"
      },
      "578": {
        "TypeFields": [
          {
            "TypeName": "[u8; 4]",
            "TypeId": 17
          }
        ],
        "Path": [
          "sp_core",
          "crypto",
          "KeyTypeId"
        ],
        "TypeDef": "Composite"
      },
      "579": {
        "Variants": [
          {
            "Name": "InvalidProof",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Invalid ownership proof."
            ]
          },
          {
            "Name": "NoAssociatedValidatorId",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "No associated validator ID for account."
            ]
          },
          {
            "Name": "DuplicatedKey",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Registered duplicate key."
            ]
          },
          {
            "Name": "NoKeys",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "No keys are associated with this account."
            ]
          },
          {
            "Name": "NoAccount",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Key setting account is not live, so it's impossible to associate keys."
            ]
          }
        ],
        "Path": [
          "pallet_session",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Error for the session pallet."
        ]
      },
      "580": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 581
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 89
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "581": {
        "TypeId": 89,
        "TypeDef": "Sequence"
      },
      "582": {
        "TypeFields": [
          {
            "TypeName": "u64",
            "TypeId": 11
          }
        ],
        "Path": [
          "sp_consensus_slots",
          "Slot"
        ],
        "TypeDef": "Composite"
      },
      "583": {
        "TypeIds": [
          582,
          4
        ],
        "TypeDef": "Tuple"
      },
      "584": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 586
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 585
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "585": {
        "TypeIds": [
          4,
          57,
          0
        ],
        "TypeDef": "Tuple"
      },
      "586": {
        "TypeId": 585,
        "TypeDef": "Sequence"
      },
      "587": {
        "TypeIds": [
          588,
          6
        ],
        "TypeDef": "Tuple"
      },
      "588": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 38
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "589": {
        "Variants": [
          {
            "Name": "Ongoing",
            "TypeFields": [
              {
                "TypeName": "ReferendumStatus<BlockNumber, Proposal, Balance>",
                "TypeId": 590
              }
            ],
            "Index": 0
          },
          {
            "Name": "Finished",
            "TypeFields": [
              {
                "Name": "approved",
                "TypeName": "bool",
                "TypeId": 30
              },
              {
                "Name": "end",
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "ReferendumInfo"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Proposal",
            "TypeId": 57
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "590": {
        "TypeFields": [
          {
            "Name": "end",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "proposal",
            "TypeName": "Proposal",
            "TypeId": 57
          },
          {
            "Name": "threshold",
            "TypeName": "VoteThreshold",
            "TypeId": 41
          },
          {
            "Name": "delay",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "tally",
            "TypeName": "Tally<Balance>",
            "TypeId": 591
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "ReferendumStatus"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Proposal",
            "TypeId": 57
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "591": {
        "TypeFields": [
          {
            "Name": "ayes",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "nays",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "turnout",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "Tally"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "592": {
        "Variants": [
          {
            "Name": "Direct",
            "TypeFields": [
              {
                "Name": "votes",
                "TypeName": "BoundedVec<(ReferendumIndex, AccountVote<Balance>), MaxVotes>",
                "TypeId": 593
              },
              {
                "Name": "delegations",
                "TypeName": "Delegations<Balance>",
                "TypeId": 596
              },
              {
                "Name": "prior",
                "TypeName": "PriorLock<BlockNumber, Balance>",
                "TypeId": 597
              }
            ],
            "Index": 0
          },
          {
            "Name": "Delegating",
            "TypeFields": [
              {
                "Name": "balance",
                "TypeName": "Balance",
                "TypeId": 6
              },
              {
                "Name": "target",
                "TypeName": "AccountId",
                "TypeId": 0
              },
              {
                "Name": "conviction",
                "TypeName": "Conviction",
                "TypeId": 92
              },
              {
                "Name": "delegations",
                "TypeName": "Delegations<Balance>",
                "TypeId": 596
              },
              {
                "Name": "prior",
                "TypeName": "PriorLock<BlockNumber, Balance>",
                "TypeId": 597
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote",
          "Voting"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "MaxVotes"
          }
        ],
        "TypeDef": "Variant"
      },
      "593": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 595
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 594
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "594": {
        "TypeIds": [
          4,
          42
        ],
        "TypeDef": "Tuple"
      },
      "595": {
        "TypeId": 594,
        "TypeDef": "Sequence"
      },
      "596": {
        "TypeFields": [
          {
            "Name": "votes",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "capital",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "Delegations"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "597": {
        "TypeFields": [
          {
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote",
          "PriorLock"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "598": {
        "TypeIds": [
          57,
          41
        ],
        "TypeDef": "Tuple"
      },
      "599": {
        "TypeIds": [
          4,
          588
        ],
        "TypeDef": "Tuple"
      },
      "600": {
        "Variants": [
          {
            "Name": "ValueLow",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Value too low"
            ]
          },
          {
            "Name": "ProposalMissing",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Proposal does not exist"
            ]
          },
          {
            "Name": "AlreadyCanceled",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Cannot cancel the same proposal twice"
            ]
          },
          {
            "Name": "DuplicateProposal",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Proposal already made"
            ]
          },
          {
            "Name": "ProposalBlacklisted",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Proposal still blacklisted"
            ]
          },
          {
            "Name": "NotSimpleMajority",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Next external proposal not simple majority"
            ]
          },
          {
            "Name": "InvalidHash",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Invalid hash"
            ]
          },
          {
            "Name": "NoProposal",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "No external proposal"
            ]
          },
          {
            "Name": "AlreadyVetoed",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Identity may not veto a proposal twice"
            ]
          },
          {
            "Name": "ReferendumInvalid",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Vote given for invalid referendum"
            ]
          },
          {
            "Name": "NoneWaiting",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "No proposals waiting"
            ]
          },
          {
            "Name": "NotVoter",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The given account did not vote on the referendum."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The actor has no permission to conduct the action."
            ]
          },
          {
            "Name": "AlreadyDelegating",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The account is already delegating."
            ]
          },
          {
            "Name": "InsufficientFunds",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "Too high a balance was provided that the account cannot afford."
            ]
          },
          {
            "Name": "NotDelegating",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The account is not currently delegating."
            ]
          },
          {
            "Name": "VotesExist",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "The account currently has votes attached to it and the operation cannot succeed until",
              "these are removed, either through `unvote` or `reap_vote`."
            ]
          },
          {
            "Name": "InstantNotAllowed",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "The instant referendum origin is currently disallowed."
            ]
          },
          {
            "Name": "Nonsense",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "Delegation to oneself makes no sense."
            ]
          },
          {
            "Name": "WrongUpperBound",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "Invalid upper bound."
            ]
          },
          {
            "Name": "MaxVotesReached",
            "TypeFields": null,
            "Index": 20,
            "Docs": [
              "Maximum number of votes reached."
            ]
          },
          {
            "Name": "TooMany",
            "TypeFields": null,
            "Index": 21,
            "Docs": [
              "Maximum number of items reached."
            ]
          },
          {
            "Name": "VotingPeriodLow",
            "TypeFields": null,
            "Index": 22,
            "Docs": [
              "Voting period too low"
            ]
          },
          {
            "Name": "PreimageNotExist",
            "TypeFields": null,
            "Index": 23,
            "Docs": [
              "The preimage does not exist."
            ]
          }
        ],
        "Path": [
          "pallet_democracy",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "601": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 290
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "602": {
        "TypeFields": [
          {
            "Name": "index",
            "TypeName": "ProposalIndex",
            "TypeId": 4
          },
          {
            "Name": "threshold",
            "TypeName": "MemberCount",
            "TypeId": 4
          },
          {
            "Name": "ayes",
            "TypeName": "Vec<AccountId>",
            "TypeId": 38
          },
          {
            "Name": "nays",
            "TypeName": "Vec<AccountId>",
            "TypeId": 38
          },
          {
            "Name": "end",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_collective",
          "Votes"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "603": {
        "Variants": [
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Account is not a member"
            ]
          },
          {
            "Name": "DuplicateProposal",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Duplicate proposals not allowed"
            ]
          },
          {
            "Name": "ProposalMissing",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Proposal must exist"
            ]
          },
          {
            "Name": "WrongIndex",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Mismatched index"
            ]
          },
          {
            "Name": "DuplicateVote",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Duplicate vote ignored"
            ]
          },
          {
            "Name": "AlreadyInitialized",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Members are already initialized!"
            ]
          },
          {
            "Name": "TooEarly",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The close call was made too early, before the end of the voting."
            ]
          },
          {
            "Name": "TooManyProposals",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "There can only be a maximum of `MaxProposals` active proposals."
            ]
          },
          {
            "Name": "WrongProposalWeight",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The given weight bound for the proposal was too low."
            ]
          },
          {
            "Name": "WrongProposalLength",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The given length bound for the proposal was too low."
            ]
          },
          {
            "Name": "PrimeAccountNotMember",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "Prime account is not a member"
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "604": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 290
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "605": {
        "Variants": [
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Account is not a member"
            ]
          },
          {
            "Name": "DuplicateProposal",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Duplicate proposals not allowed"
            ]
          },
          {
            "Name": "ProposalMissing",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Proposal must exist"
            ]
          },
          {
            "Name": "WrongIndex",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Mismatched index"
            ]
          },
          {
            "Name": "DuplicateVote",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Duplicate vote ignored"
            ]
          },
          {
            "Name": "AlreadyInitialized",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Members are already initialized!"
            ]
          },
          {
            "Name": "TooEarly",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The close call was made too early, before the end of the voting."
            ]
          },
          {
            "Name": "TooManyProposals",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "There can only be a maximum of `MaxProposals` active proposals."
            ]
          },
          {
            "Name": "WrongProposalWeight",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The given weight bound for the proposal was too low."
            ]
          },
          {
            "Name": "WrongProposalLength",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The given length bound for the proposal was too low."
            ]
          },
          {
            "Name": "PrimeAccountNotMember",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "Prime account is not a member"
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "606": {
        "TypeId": 607,
        "TypeDef": "Sequence"
      },
      "607": {
        "TypeFields": [
          {
            "Name": "who",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "stake",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "deposit",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_elections_phragmen",
          "SeatHolder"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "608": {
        "TypeFields": [
          {
            "Name": "votes",
            "TypeName": "Vec<AccountId>",
            "TypeId": 38
          },
          {
            "Name": "stake",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "deposit",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_elections_phragmen",
          "Voter"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "609": {
        "Variants": [
          {
            "Name": "UnableToVote",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Cannot vote when no candidates or members exist."
            ]
          },
          {
            "Name": "NoVotes",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Must vote for at least one candidate."
            ]
          },
          {
            "Name": "TooManyVotes",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Cannot vote more than candidates."
            ]
          },
          {
            "Name": "MaximumVotesExceeded",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Cannot vote more than maximum allowed."
            ]
          },
          {
            "Name": "LowBalance",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Cannot vote with stake less than minimum balance."
            ]
          },
          {
            "Name": "UnableToPayBond",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Voter can not pay voting bond."
            ]
          },
          {
            "Name": "MustBeVoter",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Must be a voter."
            ]
          },
          {
            "Name": "DuplicatedCandidate",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Duplicated candidate submission."
            ]
          },
          {
            "Name": "TooManyCandidates",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Too many candidates have been created."
            ]
          },
          {
            "Name": "MemberSubmit",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Member cannot re-submit candidacy."
            ]
          },
          {
            "Name": "RunnerUpSubmit",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "Runner cannot re-submit candidacy."
            ]
          },
          {
            "Name": "InsufficientCandidateFunds",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "Candidate does not have enough funds."
            ]
          },
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "Not a member."
            ]
          },
          {
            "Name": "InvalidWitnessData",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The provided count of number of candidates is incorrect."
            ]
          },
          {
            "Name": "InvalidVoteCount",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "The provided count of number of votes is incorrect."
            ]
          },
          {
            "Name": "InvalidRenouncing",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The renouncing origin presented a wrong `Renouncing` parameter."
            ]
          },
          {
            "Name": "InvalidReplacement",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "Prediction regarding replacement after member removal is wrong."
            ]
          }
        ],
        "Path": [
          "pallet_elections_phragmen",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "610": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 38
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "611": {
        "Variants": [
          {
            "Name": "AlreadyMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Already a member."
            ]
          },
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Not a member."
            ]
          },
          {
            "Name": "TooManyMembers",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Too many members."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "612": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 38
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "613": {
        "Variants": [
          {
            "Name": "AlreadyMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Already a member."
            ]
          },
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Not a member."
            ]
          },
          {
            "Name": "TooManyMembers",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Too many members."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "614": {
        "TypeIds": [
          0,
          56
        ],
        "TypeDef": "Tuple"
      },
      "615": {
        "Variants": [
          {
            "Name": "Casting",
            "TypeFields": [
              {
                "TypeName": "Casting<Balance, BlockNumber, PollIndex, MaxVotes>",
                "TypeId": 616
              }
            ],
            "Index": 0
          },
          {
            "Name": "Delegating",
            "TypeFields": [
              {
                "TypeName": "Delegating<Balance, AccountId, BlockNumber>",
                "TypeId": 622
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_conviction_voting",
          "vote",
          "Voting"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "PollIndex",
            "TypeId": 4
          },
          {
            "Name": "MaxVotes"
          }
        ],
        "TypeDef": "Variant"
      },
      "616": {
        "TypeFields": [
          {
            "Name": "votes",
            "TypeName": "BoundedVec<(PollIndex, AccountVote<Balance>), MaxVotes>",
            "TypeId": 617
          },
          {
            "Name": "delegations",
            "TypeName": "Delegations<Balance>",
            "TypeId": 620
          },
          {
            "Name": "prior",
            "TypeName": "PriorLock<BlockNumber, Balance>",
            "TypeId": 621
          }
        ],
        "Path": [
          "pallet_conviction_voting",
          "vote",
          "Casting"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "PollIndex",
            "TypeId": 4
          },
          {
            "Name": "MaxVotes"
          }
        ],
        "TypeDef": "Composite"
      },
      "617": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 619
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 618
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "618": {
        "TypeIds": [
          4,
          103
        ],
        "TypeDef": "Tuple"
      },
      "619": {
        "TypeId": 618,
        "TypeDef": "Sequence"
      },
      "620": {
        "TypeFields": [
          {
            "Name": "votes",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "capital",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_conviction_voting",
          "types",
          "Delegations"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "621": {
        "TypeFields": [
          {
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_conviction_voting",
          "vote",
          "PriorLock"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "622": {
        "TypeFields": [
          {
            "Name": "balance",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "target",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "conviction",
            "TypeName": "Conviction",
            "TypeId": 105
          },
          {
            "Name": "delegations",
            "TypeName": "Delegations<Balance>",
            "TypeId": 620
          },
          {
            "Name": "prior",
            "TypeName": "PriorLock<BlockNumber, Balance>",
            "TypeId": 621
          }
        ],
        "Path": [
          "pallet_conviction_voting",
          "vote",
          "Delegating"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "623": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 625
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 624
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "624": {
        "TypeIds": [
          56,
          6
        ],
        "TypeDef": "Tuple"
      },
      "625": {
        "TypeId": 624,
        "TypeDef": "Sequence"
      },
      "626": {
        "Variants": [
          {
            "Name": "NotOngoing",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Poll is not ongoing."
            ]
          },
          {
            "Name": "NotVoter",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The given account did not vote on the poll."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The actor has no permission to conduct the action."
            ]
          },
          {
            "Name": "NoPermissionYet",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The actor has no permission to conduct the action right now but will do in the future."
            ]
          },
          {
            "Name": "AlreadyDelegating",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The account is already delegating."
            ]
          },
          {
            "Name": "AlreadyVoting",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The account currently has votes attached to it and the operation cannot succeed until",
              "these are removed, either through `unvote` or `reap_vote`."
            ]
          },
          {
            "Name": "InsufficientFunds",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Too high a balance was provided that the account cannot afford."
            ]
          },
          {
            "Name": "NotDelegating",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The account is not currently delegating."
            ]
          },
          {
            "Name": "Nonsense",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Delegation to oneself makes no sense."
            ]
          },
          {
            "Name": "MaxVotesReached",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Maximum number of votes reached."
            ]
          },
          {
            "Name": "ClassNeeded",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The class must be supplied since it is not easily determinable from the state."
            ]
          },
          {
            "Name": "BadClass",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The class ID supplied is invalid."
            ]
          }
        ],
        "Path": [
          "pallet_conviction_voting",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "627": {
        "Variants": [
          {
            "Name": "Ongoing",
            "TypeFields": [
              {
                "TypeName": "ReferendumStatus<TrackId, RuntimeOrigin, Moment, Call, Balance, Tally,\nAccountId, ScheduleAddress,>",
                "TypeId": 628
              }
            ],
            "Index": 0
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              }
            ],
            "Index": 1
          },
          {
            "Name": "Rejected",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              }
            ],
            "Index": 2
          },
          {
            "Name": "Cancelled",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              }
            ],
            "Index": 3
          },
          {
            "Name": "TimedOut",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              }
            ],
            "Index": 4
          },
          {
            "Name": "Killed",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "ReferendumInfo"
        ],
        "TypeParams": [
          {
            "Name": "TrackId",
            "TypeId": 56
          },
          {
            "Name": "RuntimeOrigin",
            "TypeId": 108
          },
          {
            "Name": "Moment",
            "TypeId": 4
          },
          {
            "Name": "Call",
            "TypeId": 57
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "Tally",
            "TypeId": 434
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "ScheduleAddress",
            "TypeId": 233
          }
        ],
        "TypeDef": "Variant"
      },
      "628": {
        "TypeFields": [
          {
            "Name": "track",
            "TypeName": "TrackId",
            "TypeId": 56
          },
          {
            "Name": "origin",
            "TypeName": "RuntimeOrigin",
            "TypeId": 108
          },
          {
            "Name": "proposal",
            "TypeName": "Call",
            "TypeId": 57
          },
          {
            "Name": "enactment",
            "TypeName": "DispatchTime<Moment>",
            "TypeId": 131
          },
          {
            "Name": "submitted",
            "TypeName": "Moment",
            "TypeId": 4
          },
          {
            "Name": "submission_deposit",
            "TypeName": "Deposit<AccountId, Balance>",
            "TypeId": 629
          },
          {
            "Name": "decision_deposit",
            "TypeName": "Option<Deposit<AccountId, Balance>>",
            "TypeId": 630
          },
          {
            "Name": "deciding",
            "TypeName": "Option<DecidingStatus<Moment>>",
            "TypeId": 631
          },
          {
            "Name": "tally",
            "TypeName": "Tally",
            "TypeId": 434
          },
          {
            "Name": "in_queue",
            "TypeName": "bool",
            "TypeId": 30
          },
          {
            "Name": "alarm",
            "TypeName": "Option<(Moment, ScheduleAddress)>",
            "TypeId": 633
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "ReferendumStatus"
        ],
        "TypeParams": [
          {
            "Name": "TrackId",
            "TypeId": 56
          },
          {
            "Name": "RuntimeOrigin",
            "TypeId": 108
          },
          {
            "Name": "Moment",
            "TypeId": 4
          },
          {
            "Name": "Call",
            "TypeId": 57
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "Tally",
            "TypeId": 434
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "ScheduleAddress",
            "TypeId": 233
          }
        ],
        "TypeDef": "Composite"
      },
      "629": {
        "TypeFields": [
          {
            "Name": "who",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "Deposit"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "630": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 629
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 629
          }
        ],
        "TypeDef": "Variant"
      },
      "631": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 632
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 632
          }
        ],
        "TypeDef": "Variant"
      },
      "632": {
        "TypeFields": [
          {
            "Name": "since",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "confirming",
            "TypeName": "Option<BlockNumber>",
            "TypeId": 93
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "DecidingStatus"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "633": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 634
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 634
          }
        ],
        "TypeDef": "Variant"
      },
      "634": {
        "TypeIds": [
          4,
          233
        ],
        "TypeDef": "Tuple"
      },
      "635": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 637
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 636
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "636": {
        "TypeIds": [
          4,
          6
        ],
        "TypeDef": "Tuple"
      },
      "637": {
        "TypeId": 636,
        "TypeDef": "Sequence"
      },
      "638": {
        "TypeId": 639,
        "TypeDef": "Sequence"
      },
      "639": {
        "TypeIds": [
          56,
          640
        ],
        "TypeDef": "Tuple"
      },
      "640": {
        "TypeFields": [
          {
            "Name": "name",
            "TypeName": "&'static str",
            "TypeId": 512
          },
          {
            "Name": "max_deciding",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "decision_deposit",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "prepare_period",
            "TypeName": "Moment",
            "TypeId": 4
          },
          {
            "Name": "decision_period",
            "TypeName": "Moment",
            "TypeId": 4
          },
          {
            "Name": "confirm_period",
            "TypeName": "Moment",
            "TypeId": 4
          },
          {
            "Name": "min_enactment_period",
            "TypeName": "Moment",
            "TypeId": 4
          },
          {
            "Name": "min_approval",
            "TypeName": "Curve",
            "TypeId": 641
          },
          {
            "Name": "min_support",
            "TypeName": "Curve",
            "TypeId": 641
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "TrackInfo"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "Moment",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "641": {
        "Variants": [
          {
            "Name": "LinearDecreasing",
            "TypeFields": [
              {
                "Name": "length",
                "TypeName": "Perbill",
                "TypeId": 374
              },
              {
                "Name": "floor",
                "TypeName": "Perbill",
                "TypeId": 374
              },
              {
                "Name": "ceil",
                "TypeName": "Perbill",
                "TypeId": 374
              }
            ],
            "Index": 0
          },
          {
            "Name": "SteppedDecreasing",
            "TypeFields": [
              {
                "Name": "begin",
                "TypeName": "Perbill",
                "TypeId": 374
              },
              {
                "Name": "end",
                "TypeName": "Perbill",
                "TypeId": 374
              },
              {
                "Name": "step",
                "TypeName": "Perbill",
                "TypeId": 374
              },
              {
                "Name": "period",
                "TypeName": "Perbill",
                "TypeId": 374
              }
            ],
            "Index": 1
          },
          {
            "Name": "Reciprocal",
            "TypeFields": [
              {
                "Name": "factor",
                "TypeName": "FixedI64",
                "TypeId": 642
              },
              {
                "Name": "x_offset",
                "TypeName": "FixedI64",
                "TypeId": 642
              },
              {
                "Name": "y_offset",
                "TypeName": "FixedI64",
                "TypeId": 642
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "Curve"
        ],
        "TypeDef": "Variant"
      },
      "642": {
        "TypeFields": [
          {
            "TypeName": "i64",
            "TypeId": 643
          }
        ],
        "Path": [
          "sp_arithmetic",
          "fixed_point",
          "FixedI64"
        ],
        "TypeDef": "Composite"
      },
      "643": {
        "Primitive": "I64",
        "TypeDef": "Primitive"
      },
      "644": {
        "Variants": [
          {
            "Name": "NotOngoing",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Referendum is not ongoing."
            ]
          },
          {
            "Name": "HasDeposit",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Referendum's decision deposit is already paid."
            ]
          },
          {
            "Name": "BadTrack",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The track identifier given was invalid."
            ]
          },
          {
            "Name": "Full",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "There are already a full complement of referenda in progress for this track."
            ]
          },
          {
            "Name": "QueueEmpty",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The queue of the track is empty."
            ]
          },
          {
            "Name": "BadReferendum",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The referendum index provided is invalid in this context."
            ]
          },
          {
            "Name": "NothingToDo",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "There was nothing to do in the advancement."
            ]
          },
          {
            "Name": "NoTrack",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "No track exists for the proposal origin."
            ]
          },
          {
            "Name": "Unfinished",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Any deposit cannot be refunded until after the decision is over."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The deposit refunder is not the depositor."
            ]
          },
          {
            "Name": "NoDeposit",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The deposit cannot be refunded since none was made."
            ]
          },
          {
            "Name": "BadStatus",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The referendum status is invalid for this operation."
            ]
          },
          {
            "Name": "PreimageNotExist",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The preimage does not exist."
            ]
          }
        ],
        "Path": [
          "pallet_referenda",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "645": {
        "Variants": [
          {
            "Name": "UnavailablePreImage",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The preimage of the call hash could not be loaded."
            ]
          },
          {
            "Name": "UndecodableCall",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The call could not be decoded."
            ]
          },
          {
            "Name": "InvalidCallWeightWitness",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The weight of the decoded call was higher than the witness."
            ]
          },
          {
            "Name": "CallIsNotWhitelisted",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The call was not whitelisted."
            ]
          },
          {
            "Name": "CallAlreadyWhitelisted",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The call was already whitelisted; No-Op."
            ]
          }
        ],
        "Path": [
          "pallet_whitelist",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "646": {
        "TypeFields": [
          {
            "TypeName": "BTreeSet<T>",
            "TypeId": 647
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_btree_set",
          "BoundedBTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 77
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "647": {
        "TypeFields": [
          {
            "TypeId": 648
          }
        ],
        "Path": [
          "BTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 77
          }
        ],
        "TypeDef": "Composite"
      },
      "648": {
        "TypeId": 77,
        "TypeDef": "Sequence"
      },
      "649": {
        "TypeId": 650,
        "TypeDef": "Sequence"
      },
      "650": {
        "TypeFields": [
          {
            "Name": "recipient",
            "TypeName": "ParaId",
            "TypeId": 77
          },
          {
            "Name": "state",
            "TypeName": "OutboundState",
            "TypeId": 651
          },
          {
            "Name": "signals_exist",
            "TypeName": "bool",
            "TypeId": 30
          },
          {
            "Name": "first_index",
            "TypeName": "u16",
            "TypeId": 56
          },
          {
            "Name": "last_index",
            "TypeName": "u16",
            "TypeId": 56
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "OutboundChannelDetails"
        ],
        "TypeDef": "Composite"
      },
      "651": {
        "Variants": [
          {
            "Name": "Ok",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Suspended",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "OutboundState"
        ],
        "TypeDef": "Variant"
      },
      "652": {
        "TypeIds": [
          77,
          56
        ],
        "TypeDef": "Tuple"
      },
      "653": {
        "TypeFields": [
          {
            "Name": "suspend_threshold",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "drop_threshold",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "resume_threshold",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "QueueConfigData"
        ],
        "TypeDef": "Composite"
      },
      "654": {
        "Variants": [
          {
            "Name": "BadQueueConfig",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Setting the queue config failed since one of its values was invalid."
            ]
          },
          {
            "Name": "AlreadySuspended",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The execution is already suspended."
            ]
          },
          {
            "Name": "AlreadyResumed",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The execution is already resumed."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "655": {
        "Variants": [
          {
            "Name": "Pending",
            "TypeFields": [
              {
                "Name": "responder",
                "TypeName": "VersionedLocation",
                "TypeId": 135
              },
              {
                "Name": "maybe_match_querier",
                "TypeName": "Option<VersionedLocation>",
                "TypeId": 656
              },
              {
                "Name": "maybe_notify",
                "TypeName": "Option<(u8, u8)>",
                "TypeId": 657
              },
              {
                "Name": "timeout",
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "VersionNotifier",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "VersionedLocation",
                "TypeId": 135
              },
              {
                "Name": "is_active",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 1
          },
          {
            "Name": "Ready",
            "TypeFields": [
              {
                "Name": "response",
                "TypeName": "VersionedResponse",
                "TypeId": 659
              },
              {
                "Name": "at",
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "QueryStatus"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Variant"
      },
      "656": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 135
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 135
          }
        ],
        "TypeDef": "Variant"
      },
      "657": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 658
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 658
          }
        ],
        "TypeDef": "Variant"
      },
      "658": {
        "TypeIds": [
          2,
          2
        ],
        "TypeDef": "Tuple"
      },
      "659": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::Response",
                "TypeId": 160
              }
            ],
            "Index": 2
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::Response",
                "TypeId": 179
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::Response",
                "TypeId": 204
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedResponse"
        ],
        "TypeDef": "Variant"
      },
      "660": {
        "TypeIds": [
          4,
          135
        ],
        "TypeDef": "Tuple"
      },
      "661": {
        "TypeIds": [
          11,
          9,
          4
        ],
        "TypeDef": "Tuple"
      },
      "662": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 664
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 663
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "663": {
        "TypeIds": [
          135,
          4
        ],
        "TypeDef": "Tuple"
      },
      "664": {
        "TypeId": 663,
        "TypeDef": "Sequence"
      },
      "665": {
        "Variants": [
          {
            "Name": "MigrateSupportedVersion",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "MigrateVersionNotifiers",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "NotifyCurrentTargets",
            "TypeFields": [
              {
                "TypeName": "Option<Vec<u8>>",
                "TypeId": 318
              }
            ],
            "Index": 2
          },
          {
            "Name": "MigrateAndNotifyOldTargets",
            "TypeFields": null,
            "Index": 3
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "VersionMigrationStage"
        ],
        "TypeDef": "Variant"
      },
      "666": {
        "TypeIds": [
          4,
          0,
          667
        ],
        "TypeDef": "Tuple"
      },
      "667": {
        "Variants": [
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::AssetId",
                "TypeId": 176
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::AssetId",
                "TypeId": 201
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedAssetId"
        ],
        "TypeDef": "Variant"
      },
      "668": {
        "TypeFields": [
          {
            "Name": "amount",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "owner",
            "TypeName": "VersionedLocation",
            "TypeId": 135
          },
          {
            "Name": "locker",
            "TypeName": "VersionedLocation",
            "TypeId": 135
          },
          {
            "Name": "consumers",
            "TypeName": "BoundedVec<(ConsumerIdentifier, u128), MaxConsumers>",
            "TypeId": 669
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "RemoteLockedFungibleRecord"
        ],
        "TypeParams": [
          {
            "Name": "ConsumerIdentifier",
            "TypeId": 47
          },
          {
            "Name": "MaxConsumers"
          }
        ],
        "TypeDef": "Composite"
      },
      "669": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 671
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 670
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "670": {
        "TypeIds": [
          47,
          6
        ],
        "TypeDef": "Tuple"
      },
      "671": {
        "TypeId": 670,
        "TypeDef": "Sequence"
      },
      "672": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 674
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 673
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "673": {
        "TypeIds": [
          6,
          135
        ],
        "TypeDef": "Tuple"
      },
      "674": {
        "TypeId": 673,
        "TypeDef": "Sequence"
      },
      "675": {
        "Variants": [
          {
            "Name": "Unreachable",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The desired destination was unreachable, generally because there is a no way of routing",
              "to it."
            ]
          },
          {
            "Name": "SendFailure",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "There was some other issue (i.e. not to do with routing) in sending the message.",
              "Perhaps a lack of space for buffering the message."
            ]
          },
          {
            "Name": "Filtered",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The message execution fails the filter."
            ]
          },
          {
            "Name": "UnweighableMessage",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The message's weight could not be determined."
            ]
          },
          {
            "Name": "DestinationNotInvertible",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The destination `Location` provided cannot be inverted."
            ]
          },
          {
            "Name": "Empty",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The assets to be sent are empty."
            ]
          },
          {
            "Name": "CannotReanchor",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Could not re-anchor the assets to declare the fees for the destination chain."
            ]
          },
          {
            "Name": "TooManyAssets",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Too many assets have been attempted for transfer."
            ]
          },
          {
            "Name": "InvalidOrigin",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Origin is invalid for sending."
            ]
          },
          {
            "Name": "BadVersion",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The version of the `Versioned` value used is not able to be interpreted."
            ]
          },
          {
            "Name": "BadLocation",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The given location could not be used (e.g. because it cannot be expressed in the",
              "desired version of XCM)."
            ]
          },
          {
            "Name": "NoSubscription",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The referenced subscription could not be found."
            ]
          },
          {
            "Name": "AlreadySubscribed",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The location is invalid since it already has a subscription from us."
            ]
          },
          {
            "Name": "CannotCheckOutTeleport",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "Could not check-out the assets for teleportation to the destination chain."
            ]
          },
          {
            "Name": "LowBalance",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "The owner does not own (all) of the asset that they wish to do the operation on."
            ]
          },
          {
            "Name": "TooManyLocks",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The asset owner has too many locks on the asset."
            ]
          },
          {
            "Name": "AccountNotSovereign",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "The given account is not an identifiable sovereign account for any location."
            ]
          },
          {
            "Name": "FeesNotMet",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "The operation required fees to be paid which the initiator could not meet."
            ]
          },
          {
            "Name": "LockNotFound",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "A remote lock with the corresponding data could not be found."
            ]
          },
          {
            "Name": "InUse",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "The unlock operation cannot succeed because there are still consumers of the lock."
            ]
          },
          {
            "Name": "InvalidAssetNotConcrete",
            "TypeFields": null,
            "Index": 20,
            "Docs": [
              "Invalid non-concrete asset."
            ]
          },
          {
            "Name": "InvalidAssetUnknownReserve",
            "TypeFields": null,
            "Index": 21,
            "Docs": [
              "Invalid asset, reserve chain could not be determined for it."
            ]
          },
          {
            "Name": "InvalidAssetUnsupportedReserve",
            "TypeFields": null,
            "Index": 22,
            "Docs": [
              "Invalid asset, do not support remote asset reserves with different fees reserves."
            ]
          },
          {
            "Name": "TooManyReserves",
            "TypeFields": null,
            "Index": 23,
            "Docs": [
              "Too many assets with different reserve locations have been attempted for transfer."
            ]
          },
          {
            "Name": "LocalExecutionIncomplete",
            "TypeFields": null,
            "Index": 24,
            "Docs": [
              "Local XCM execution incomplete."
            ]
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "676": {
        "TypeFields": [
          {
            "Name": "begin",
            "TypeName": "PageIndex",
            "TypeId": 4
          },
          {
            "Name": "end",
            "TypeName": "PageIndex",
            "TypeId": 4
          },
          {
            "Name": "count",
            "TypeName": "PageIndex",
            "TypeId": 4
          },
          {
            "Name": "ready_neighbours",
            "TypeName": "Option<Neighbours<MessageOrigin>>",
            "TypeId": 677
          },
          {
            "Name": "message_count",
            "TypeName": "u64",
            "TypeId": 11
          },
          {
            "Name": "size",
            "TypeName": "u64",
            "TypeId": 11
          }
        ],
        "Path": [
          "pallet_message_queue",
          "BookState"
        ],
        "TypeParams": [
          {
            "Name": "MessageOrigin",
            "TypeId": 228
          }
        ],
        "TypeDef": "Composite"
      },
      "677": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 678
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 678
          }
        ],
        "TypeDef": "Variant"
      },
      "678": {
        "TypeFields": [
          {
            "Name": "prev",
            "TypeName": "MessageOrigin",
            "TypeId": 228
          },
          {
            "Name": "next",
            "TypeName": "MessageOrigin",
            "TypeId": 228
          }
        ],
        "Path": [
          "pallet_message_queue",
          "Neighbours"
        ],
        "TypeParams": [
          {
            "Name": "MessageOrigin",
            "TypeId": 228
          }
        ],
        "TypeDef": "Composite"
      },
      "679": {
        "TypeIds": [
          228,
          4
        ],
        "TypeDef": "Tuple"
      },
      "680": {
        "TypeFields": [
          {
            "Name": "remaining",
            "TypeName": "Size",
            "TypeId": 4
          },
          {
            "Name": "remaining_size",
            "TypeName": "Size",
            "TypeId": 4
          },
          {
            "Name": "first_index",
            "TypeName": "Size",
            "TypeId": 4
          },
          {
            "Name": "first",
            "TypeName": "Size",
            "TypeId": 4
          },
          {
            "Name": "last",
            "TypeName": "Size",
            "TypeId": 4
          },
          {
            "Name": "heap",
            "TypeName": "BoundedVec<u8, IntoU32<HeapSize, Size>>",
            "TypeId": 681
          }
        ],
        "Path": [
          "pallet_message_queue",
          "Page"
        ],
        "TypeParams": [
          {
            "Name": "Size",
            "TypeId": 4
          },
          {
            "Name": "HeapSize"
          }
        ],
        "TypeDef": "Composite"
      },
      "681": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "682": {
        "Variants": [
          {
            "Name": "NotReapable",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Page is not reapable because it has items remaining to be processed and is not old",
              "enough."
            ]
          },
          {
            "Name": "NoPage",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Page to be reaped does not exist."
            ]
          },
          {
            "Name": "NoMessage",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The referenced message could not be found."
            ]
          },
          {
            "Name": "AlreadyProcessed",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The message was already processed and cannot be processed again."
            ]
          },
          {
            "Name": "Queued",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The message is queued for future execution."
            ]
          },
          {
            "Name": "InsufficientWeight",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "There is temporarily not enough weight to continue servicing messages."
            ]
          },
          {
            "Name": "TemporarilyUnprocessable",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "This message is temporarily unprocessable.",
              "",
              "Such errors are expected, but not guaranteed, to resolve themselves eventually through",
              "retrying."
            ]
          },
          {
            "Name": "QueuePaused",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The queue is paused and no message can be executed from it.",
              "",
              "This can change at any time and may resolve in the future by re-trying."
            ]
          },
          {
            "Name": "RecursiveDisallowed",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Another call is in progress and needs to finish before this call can happen."
            ]
          }
        ],
        "Path": [
          "pallet_message_queue",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "683": {
        "Variants": [
          {
            "Name": "TooManyCalls",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Too many calls batched."
            ]
          }
        ],
        "Path": [
          "pallet_utility",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "684": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 687
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 685
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "685": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 686
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 686
          }
        ],
        "TypeDef": "Variant"
      },
      "686": {
        "TypeFields": [
          {
            "Name": "maybe_id",
            "TypeName": "Option<Name>",
            "TypeId": 33
          },
          {
            "Name": "priority",
            "TypeName": "schedule::Priority",
            "TypeId": 2
          },
          {
            "Name": "call",
            "TypeName": "Call",
            "TypeId": 57
          },
          {
            "Name": "maybe_periodic",
            "TypeName": "Option<schedule::Period<BlockNumber>>",
            "TypeId": 232
          },
          {
            "Name": "origin",
            "TypeName": "PalletsOrigin",
            "TypeId": 108
          }
        ],
        "Path": [
          "pallet_scheduler",
          "Scheduled"
        ],
        "TypeParams": [
          {
            "Name": "Name",
            "TypeId": 1
          },
          {
            "Name": "Call",
            "TypeId": 57
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "PalletsOrigin",
            "TypeId": 108
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "687": {
        "TypeId": 685,
        "TypeDef": "Sequence"
      },
      "688": {
        "Variants": [
          {
            "Name": "FailedToSchedule",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Failed to schedule a call"
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Cannot find the scheduled call."
            ]
          },
          {
            "Name": "TargetBlockNumberInPast",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Given target block number is in the past."
            ]
          },
          {
            "Name": "RescheduleNoChange",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Reschedule failed because it does not change scheduled time."
            ]
          },
          {
            "Name": "Named",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Attempt to use a non-named function on a named task."
            ]
          }
        ],
        "Path": [
          "pallet_scheduler",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "689": {
        "TypeIds": [
          690,
          6
        ],
        "TypeDef": "Tuple"
      },
      "690": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 692
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 691
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "691": {
        "TypeFields": [
          {
            "Name": "delegate",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "proxy_type",
            "TypeName": "ProxyType",
            "TypeId": 236
          },
          {
            "Name": "delay",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_proxy",
          "ProxyDefinition"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "ProxyType",
            "TypeId": 236
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "692": {
        "TypeId": 691,
        "TypeDef": "Sequence"
      },
      "693": {
        "TypeIds": [
          694,
          6
        ],
        "TypeDef": "Tuple"
      },
      "694": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 696
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 695
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "695": {
        "TypeFields": [
          {
            "Name": "real",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "call_hash",
            "TypeName": "Hash",
            "TypeId": 12
          },
          {
            "Name": "height",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_proxy",
          "Announcement"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Hash",
            "TypeId": 12
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "696": {
        "TypeId": 695,
        "TypeDef": "Sequence"
      },
      "697": {
        "Variants": [
          {
            "Name": "TooMany",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "There are too many proxies registered or too many announcements pending."
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Proxy registration not found."
            ]
          },
          {
            "Name": "NotProxy",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Sender is not a proxy of the account to be proxied."
            ]
          },
          {
            "Name": "Unproxyable",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "A call which is incompatible with the proxy type's filter was attempted."
            ]
          },
          {
            "Name": "Duplicate",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Account is already a proxy."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Call may not be made by proxy because it may escalate its privileges."
            ]
          },
          {
            "Name": "Unannounced",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Announcement, if made at all, was made too recently."
            ]
          },
          {
            "Name": "NoSelfProxy",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Cannot add self as proxy."
            ]
          }
        ],
        "Path": [
          "pallet_proxy",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "698": {
        "TypeIds": [
          0,
          1
        ],
        "TypeDef": "Tuple"
      },
      "699": {
        "TypeFields": [
          {
            "Name": "when",
            "TypeName": "Timepoint<BlockNumber>",
            "TypeId": 239
          },
          {
            "Name": "deposit",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "depositor",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "approvals",
            "TypeName": "BoundedVec<AccountId, MaxApprovals>",
            "TypeId": 700
          }
        ],
        "Path": [
          "pallet_multisig",
          "Multisig"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "MaxApprovals"
          }
        ],
        "TypeDef": "Composite"
      },
      "700": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 38
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "701": {
        "Variants": [
          {
            "Name": "MinimumThreshold",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Threshold must be 2 or greater."
            ]
          },
          {
            "Name": "AlreadyApproved",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Call is already approved by this signatory."
            ]
          },
          {
            "Name": "NoApprovalsNeeded",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Call doesn't need any (more) approvals."
            ]
          },
          {
            "Name": "TooFewSignatories",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "There are too few signatories in the list."
            ]
          },
          {
            "Name": "TooManySignatories",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "There are too many signatories in the list."
            ]
          },
          {
            "Name": "SignatoriesOutOfOrder",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The signatories were provided out of order; they should be ordered."
            ]
          },
          {
            "Name": "SenderInSignatories",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The sender was contained in the other signatories; it shouldn't be."
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Multisig operation not found when attempting to cancel."
            ]
          },
          {
            "Name": "NotOwner",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Only the account that originally created the multisig is able to cancel it."
            ]
          },
          {
            "Name": "NoTimepoint",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "No timepoint was given, yet the multisig operation is already underway."
            ]
          },
          {
            "Name": "WrongTimepoint",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "A different timepoint was given to the multisig operation that is underway."
            ]
          },
          {
            "Name": "UnexpectedTimepoint",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "A timepoint was given, yet no multisig operation is underway."
            ]
          },
          {
            "Name": "MaxWeightTooLow",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The maximum weight information provided was too low."
            ]
          },
          {
            "Name": "AlreadyStored",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The data to be stored is already stored."
            ]
          }
        ],
        "Path": [
          "pallet_multisig",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "702": {
        "TypeIds": [
          703,
          707
        ],
        "TypeDef": "Tuple"
      },
      "703": {
        "TypeFields": [
          {
            "Name": "judgements",
            "TypeName": "BoundedVec<(RegistrarIndex, Judgement<Balance>), MaxJudgements>",
            "TypeId": 704
          },
          {
            "Name": "deposit",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "info",
            "TypeName": "IdentityInfo",
            "TypeId": 241
          }
        ],
        "Path": [
          "pallet_identity",
          "types",
          "Registration"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "MaxJudgements"
          },
          {
            "Name": "IdentityInfo",
            "TypeId": 241
          }
        ],
        "TypeDef": "Composite"
      },
      "704": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 706
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 705
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "705": {
        "TypeIds": [
          4,
          277
        ],
        "TypeDef": "Tuple"
      },
      "706": {
        "TypeId": 705,
        "TypeDef": "Sequence"
      },
      "707": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 285
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 285
          }
        ],
        "TypeDef": "Variant"
      },
      "708": {
        "TypeIds": [
          6,
          709
        ],
        "TypeDef": "Tuple"
      },
      "709": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 38
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "710": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 713
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 711
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "711": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 712
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 712
          }
        ],
        "TypeDef": "Variant"
      },
      "712": {
        "TypeFields": [
          {
            "Name": "account",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "fee",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "fields",
            "TypeName": "IdField",
            "TypeId": 11
          }
        ],
        "Path": [
          "pallet_identity",
          "types",
          "RegistrarInfo"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "IdField",
            "TypeId": 11
          }
        ],
        "TypeDef": "Composite"
      },
      "713": {
        "TypeId": 711,
        "TypeDef": "Sequence"
      },
      "714": {
        "TypeFields": [
          {
            "Name": "suffix",
            "TypeName": "Suffix",
            "TypeId": 715
          },
          {
            "Name": "allocation",
            "TypeName": "Allocation",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_identity",
          "types",
          "AuthorityProperties"
        ],
        "TypeParams": [
          {
            "Name": "Suffix",
            "TypeId": 715
          }
        ],
        "TypeDef": "Composite"
      },
      "715": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "716": {
        "TypeIds": [
          0,
          4
        ],
        "TypeDef": "Tuple"
      },
      "717": {
        "Variants": [
          {
            "Name": "TooManySubAccounts",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Too many subs-accounts."
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Account isn't found."
            ]
          },
          {
            "Name": "NotNamed",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Account isn't named."
            ]
          },
          {
            "Name": "EmptyIndex",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Empty index."
            ]
          },
          {
            "Name": "FeeChanged",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Fee is changed."
            ]
          },
          {
            "Name": "NoIdentity",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "No identity found."
            ]
          },
          {
            "Name": "StickyJudgement",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Sticky judgement."
            ]
          },
          {
            "Name": "JudgementGiven",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Judgement given."
            ]
          },
          {
            "Name": "InvalidJudgement",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Invalid judgement."
            ]
          },
          {
            "Name": "InvalidIndex",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The index is invalid."
            ]
          },
          {
            "Name": "InvalidTarget",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The target is invalid."
            ]
          },
          {
            "Name": "TooManyRegistrars",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "Maximum amount of registrars reached. Cannot add any more."
            ]
          },
          {
            "Name": "AlreadyClaimed",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "Account ID is already named."
            ]
          },
          {
            "Name": "NotSub",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "Sender is not a sub-account."
            ]
          },
          {
            "Name": "NotOwned",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "Sub-account isn't owned by sender."
            ]
          },
          {
            "Name": "JudgementForDifferentIdentity",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The provided judgement was for a different identity."
            ]
          },
          {
            "Name": "JudgementPaymentFailed",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "Error that occurs when there is an issue paying for judgement."
            ]
          },
          {
            "Name": "InvalidSuffix",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "The provided suffix is too long."
            ]
          },
          {
            "Name": "NotUsernameAuthority",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "The sender does not have permission to issue a username."
            ]
          },
          {
            "Name": "NoAllocation",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "The authority cannot allocate any more usernames."
            ]
          },
          {
            "Name": "InvalidSignature",
            "TypeFields": null,
            "Index": 20,
            "Docs": [
              "The signature on a username was not valid."
            ]
          },
          {
            "Name": "RequiresSignature",
            "TypeFields": null,
            "Index": 21,
            "Docs": [
              "Setting this username requires a signature, but none was provided."
            ]
          },
          {
            "Name": "InvalidUsername",
            "TypeFields": null,
            "Index": 22,
            "Docs": [
              "The username does not meet the requirements."
            ]
          },
          {
            "Name": "UsernameTaken",
            "TypeFields": null,
            "Index": 23,
            "Docs": [
              "The username is already taken."
            ]
          },
          {
            "Name": "NoUsername",
            "TypeFields": null,
            "Index": 24,
            "Docs": [
              "The requested username does not exist."
            ]
          },
          {
            "Name": "NotExpired",
            "TypeFields": null,
            "Index": 25,
            "Docs": [
              "The username cannot be forcefully removed because it can still be accepted."
            ]
          }
        ],
        "Path": [
          "pallet_identity",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "718": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 719
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 287
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "719": {
        "TypeId": 287,
        "TypeDef": "Sequence"
      },
      "720": {
        "Variants": [
          {
            "Name": "V0",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "V1",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "bifrost_vesting",
          "Releases"
        ],
        "TypeDef": "Variant"
      },
      "721": {
        "Variants": [
          {
            "Name": "NotVesting",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The account given is not vesting."
            ]
          },
          {
            "Name": "AtMaxVestingSchedules",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The account already has `MaxVestingSchedules` count of schedules and thus",
              "cannot add another one. Consider merging existing schedules in order to add another."
            ]
          },
          {
            "Name": "AmountLow",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Amount being transferred is too low to create a vesting schedule."
            ]
          },
          {
            "Name": "ScheduleIndexOutOfBounds",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "An index was out of bounds of the vesting schedules."
            ]
          },
          {
            "Name": "InvalidScheduleParams",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Failed to create a new schedule because some parameter was invalid."
            ]
          },
          {
            "Name": "SamePerBlock",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "change to the same per_block param"
            ]
          },
          {
            "Name": "VestingStartAtNotSet",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "VestingStartAt storage is not set"
            ]
          },
          {
            "Name": "WrongLockedAmount",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Wrong amount"
            ]
          },
          {
            "Name": "WrongCliffVesting",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Wrong vesting during cliff period"
            ]
          }
        ],
        "Path": [
          "bifrost_vesting",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Error for the vesting pallet."
        ]
      },
      "722": {
        "TypeFields": [
          {
            "Name": "proposer",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "value",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "beneficiary",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "bond",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_treasury",
          "Proposal"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "723": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 380
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 4
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "724": {
        "TypeFields": [
          {
            "Name": "asset_kind",
            "TypeName": "AssetKind",
            "TypeId": 47
          },
          {
            "Name": "amount",
            "TypeName": "AssetBalance",
            "TypeId": 6
          },
          {
            "Name": "beneficiary",
            "TypeName": "Beneficiary",
            "TypeId": 0
          },
          {
            "Name": "valid_from",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "expire_at",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "status",
            "TypeName": "PaymentState<PaymentId>",
            "TypeId": 725
          }
        ],
        "Path": [
          "pallet_treasury",
          "SpendStatus"
        ],
        "TypeParams": [
          {
            "Name": "AssetKind",
            "TypeId": 47
          },
          {
            "Name": "AssetBalance",
            "TypeId": 6
          },
          {
            "Name": "Beneficiary",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "PaymentId",
            "TypeId": 47
          }
        ],
        "TypeDef": "Composite"
      },
      "725": {
        "Variants": [
          {
            "Name": "Pending",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Attempted",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "Id",
                "TypeId": 47
              }
            ],
            "Index": 1
          },
          {
            "Name": "Failed",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_treasury",
          "PaymentState"
        ],
        "TypeParams": [
          {
            "Name": "Id",
            "TypeId": 47
          }
        ],
        "TypeDef": "Variant"
      },
      "726": {
        "TypeFields": [
          {
            "TypeName": "[u8; 8]",
            "TypeId": 158
          }
        ],
        "Path": [
          "frame_support",
          "PalletId"
        ],
        "TypeDef": "Composite"
      },
      "727": {
        "Variants": [
          {
            "Name": "InsufficientProposersBalance",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Proposer's balance is too low."
            ]
          },
          {
            "Name": "InvalidIndex",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "No proposal, bounty or spend at that index."
            ]
          },
          {
            "Name": "TooManyApprovals",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Too many approvals in the queue."
            ]
          },
          {
            "Name": "InsufficientPermission",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The spend origin is valid but the amount it is allowed to spend is lower than the",
              "amount to be spent."
            ]
          },
          {
            "Name": "ProposalNotApproved",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Proposal has not been approved."
            ]
          },
          {
            "Name": "FailedToConvertBalance",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The balance of the asset kind is not convertible to the balance of the native asset."
            ]
          },
          {
            "Name": "SpendExpired",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The spend has expired and cannot be claimed."
            ]
          },
          {
            "Name": "EarlyPayout",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The spend is not yet eligible for payout."
            ]
          },
          {
            "Name": "AlreadyAttempted",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The payment has already been attempted."
            ]
          },
          {
            "Name": "PayoutError",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "There was some issue with the mechanism of payment."
            ]
          },
          {
            "Name": "NotAttempted",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The payout was not yet attempted/claimed."
            ]
          },
          {
            "Name": "Inconclusive",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The payment has neither failed nor succeeded yet."
            ]
          }
        ],
        "Path": [
          "pallet_treasury",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Error for the treasury pallet."
        ]
      },
      "728": {
        "Variants": [
          {
            "Name": "Unrequested",
            "TypeFields": [
              {
                "Name": "deposit",
                "TypeName": "(AccountId, Balance)",
                "TypeId": 51
              },
              {
                "Name": "len",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "Requested",
            "TypeFields": [
              {
                "Name": "deposit",
                "TypeName": "Option<(AccountId, Balance)>",
                "TypeId": 729
              },
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "len",
                "TypeName": "Option<u32>",
                "TypeId": 93
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_preimage",
          "OldRequestStatus"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "729": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 51
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 51
          }
        ],
        "TypeDef": "Variant"
      },
      "730": {
        "Variants": [
          {
            "Name": "Unrequested",
            "TypeFields": [
              {
                "Name": "ticket",
                "TypeName": "(AccountId, Ticket)",
                "TypeId": 732
              },
              {
                "Name": "len",
                "TypeName": "u32",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "Requested",
            "TypeFields": [
              {
                "Name": "maybe_ticket",
                "TypeName": "Option<(AccountId, Ticket)>",
                "TypeId": 733
              },
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 4
              },
              {
                "Name": "maybe_len",
                "TypeName": "Option<u32>",
                "TypeId": 93
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_preimage",
          "RequestStatus"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Ticket",
            "TypeId": 731
          }
        ],
        "TypeDef": "Variant"
      },
      "731": {
        "TypeFields": [
          {
            "TypeName": "F::Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "tokens",
          "fungible",
          "HoldConsideration"
        ],
        "TypeParams": [
          {
            "Name": "A"
          },
          {
            "Name": "F"
          },
          {
            "Name": "R"
          },
          {
            "Name": "D"
          }
        ],
        "TypeDef": "Composite"
      },
      "732": {
        "TypeIds": [
          0,
          731
        ],
        "TypeDef": "Tuple"
      },
      "733": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 732
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 732
          }
        ],
        "TypeDef": "Variant"
      },
      "734": {
        "TypeIds": [
          12,
          4
        ],
        "TypeDef": "Tuple"
      },
      "735": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "736": {
        "Variants": [
          {
            "Name": "TooBig",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Preimage is too large to store on-chain."
            ]
          },
          {
            "Name": "AlreadyNoted",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Preimage has already been noted on-chain."
            ]
          },
          {
            "Name": "NotAuthorized",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The user is not authorized to perform this action."
            ]
          },
          {
            "Name": "NotNoted",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The preimage cannot be removed since it has not yet been noted."
            ]
          },
          {
            "Name": "Requested",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "A preimage may not be removed when there are outstanding requests."
            ]
          },
          {
            "Name": "NotRequested",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The preimage request cannot be removed since no outstanding requests exist."
            ]
          },
          {
            "Name": "TooMany",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "More than `MAX_HASH_UPGRADE_BULK_COUNT` hashes were requested to be upgraded at once."
            ]
          },
          {
            "Name": "TooFew",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Too few hashes were requested to be upgraded (i.e. zero)."
            ]
          }
        ],
        "Path": [
          "pallet_preimage",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "737": {
        "Variants": [
          {
            "Name": "AssetHasNoReserve",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Asset has no reserve location."
            ]
          },
          {
            "Name": "NotCrossChainTransfer",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Not cross-chain transfer."
            ]
          },
          {
            "Name": "InvalidDest",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Invalid transfer destination."
            ]
          },
          {
            "Name": "NotCrossChainTransferableCurrency",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Currency is not cross-chain transferable."
            ]
          },
          {
            "Name": "UnweighableMessage",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The message's weight could not be determined."
            ]
          },
          {
            "Name": "XcmExecutionFailed",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "XCM execution failed."
            ]
          },
          {
            "Name": "CannotReanchor",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Could not re-anchor the assets to declare the fees for the",
              "destination chain."
            ]
          },
          {
            "Name": "InvalidAncestry",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Could not get ancestry of asset reserve location."
            ]
          },
          {
            "Name": "InvalidAsset",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The Asset is invalid."
            ]
          },
          {
            "Name": "DestinationNotInvertible",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The destination `Location` provided cannot be inverted."
            ]
          },
          {
            "Name": "BadVersion",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The version of the `Versioned` value used is not able to be",
              "interpreted."
            ]
          },
          {
            "Name": "DistinctReserveForAssetAndFee",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "We tried sending distinct asset and fee but they have different",
              "reserve chains."
            ]
          },
          {
            "Name": "ZeroFee",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The fee is zero."
            ]
          },
          {
            "Name": "ZeroAmount",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The transfering asset amount is zero."
            ]
          },
          {
            "Name": "TooManyAssetsBeingSent",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "The number of assets to be sent is over the maximum."
            ]
          },
          {
            "Name": "AssetIndexNonExistent",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The specified index does not exist in a Assets struct."
            ]
          },
          {
            "Name": "FeeNotEnough",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "Fee is not enough."
            ]
          },
          {
            "Name": "NotSupportedLocation",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "Not supported Location"
            ]
          },
          {
            "Name": "MinXcmFeeNotDefined",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "MinXcmFee not registered for certain reserve location"
            ]
          },
          {
            "Name": "RateLimited",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "Asset transfer is limited by RateLimiter."
            ]
          }
        ],
        "Path": [
          "orml_xtokens",
          "module",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "738": {
        "TypeIds": [
          0,
          292
        ],
        "TypeDef": "Tuple"
      },
      "739": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 741
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 740
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "740": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "LockIdentifier",
            "TypeId": 158
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "orml_tokens",
          "BalanceLock"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "741": {
        "TypeId": 740,
        "TypeDef": "Sequence"
      },
      "742": {
        "TypeFields": [
          {
            "Name": "free",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "reserved",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "frozen",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "orml_tokens",
          "AccountData"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "743": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 745
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 744
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "744": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "ReserveIdentifier",
            "TypeId": 158
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "orml_tokens",
          "ReserveData"
        ],
        "TypeParams": [
          {
            "Name": "ReserveIdentifier",
            "TypeId": 158
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "745": {
        "TypeId": 744,
        "TypeDef": "Sequence"
      },
      "746": {
        "Variants": [
          {
            "Name": "BalanceTooLow",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The balance is too low"
            ]
          },
          {
            "Name": "AmountIntoBalanceFailed",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Cannot convert Amount into Balance type"
            ]
          },
          {
            "Name": "LiquidityRestrictions",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Failed because liquidity restrictions due to locking"
            ]
          },
          {
            "Name": "MaxLocksExceeded",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Failed because the maximum locks was exceeded"
            ]
          },
          {
            "Name": "KeepAlive",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Transfer/payment would kill account"
            ]
          },
          {
            "Name": "ExistentialDeposit",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Value too low to create account due to existential deposit"
            ]
          },
          {
            "Name": "DeadAccount",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Beneficiary account must pre-exist"
            ]
          },
          {
            "Name": "TooManyReserves",
            "TypeFields": null,
            "Index": 7
          }
        ],
        "Path": [
          "orml_tokens",
          "module",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "747": {
        "Variants": [
          {
            "Name": "AmountIntoBalanceFailed",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Unable to convert the Amount type into Balance."
            ]
          },
          {
            "Name": "BalanceTooLow",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Balance is too low."
            ]
          },
          {
            "Name": "DepositFailed",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Deposit result is not expected"
            ]
          }
        ],
        "Path": [
          "bifrost_currencies",
          "module",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "748": {
        "TypeIds": [
          114,
          114
        ],
        "TypeDef": "Tuple"
      },
      "749": {
        "TypeIds": [
          114,
          13
        ],
        "TypeDef": "Tuple"
      },
      "750": {
        "Variants": [
          {
            "Name": "BalanceTooLow",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The balance is too low."
            ]
          },
          {
            "Name": "BalanceOverflow",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The operation will cause balance to overflow."
            ]
          },
          {
            "Name": "UnhandledAsset",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Unhandled asset."
            ]
          }
        ],
        "Path": [
          "orml_unknown_tokens",
          "module",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "751": {
        "Variants": [
          {
            "Name": "Unreachable",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The message and destination combination was not recognized as being",
              "reachable."
            ]
          },
          {
            "Name": "SendFailure",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The message and destination was recognized as being reachable but",
              "the operation could not be completed."
            ]
          },
          {
            "Name": "BadVersion",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The version of the `Versioned` value used is not able to be",
              "interpreted."
            ]
          }
        ],
        "Path": [
          "orml_xcm",
          "module",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "752": {
        "TypeIds": [
          303,
          0
        ],
        "TypeDef": "Tuple"
      },
      "753": {
        "TypeIds": [
          303,
          303
        ],
        "TypeDef": "Tuple"
      },
      "754": {
        "TypeFields": [
          {
            "TypeName": "[u64; 4]",
            "TypeId": 755
          }
        ],
        "Path": [
          "primitive_types",
          "U256"
        ],
        "TypeDef": "Composite"
      },
      "755": {
        "Length": 4,
        "TypeId": 11,
        "TypeDef": "Array"
      },
      "756": {
        "TypeIds": [
          96,
          2
        ],
        "TypeDef": "Tuple"
      },
      "757": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 303
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 303
          }
        ],
        "TypeDef": "Variant"
      },
      "758": {
        "Variants": [
          {
            "Name": "Trading",
            "TypeFields": [
              {
                "TypeName": "PairMetadata<Balance, Account>",
                "TypeId": 759
              }
            ],
            "Index": 0
          },
          {
            "Name": "Bootstrap",
            "TypeFields": [
              {
                "TypeName": "BootstrapParameter<Balance, BlockNumber, Account>",
                "TypeId": 760
              }
            ],
            "Index": 1
          },
          {
            "Name": "Disable",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "zenlink_protocol",
          "primitives",
          "PairStatus"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Account",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "759": {
        "TypeFields": [
          {
            "Name": "pair_account",
            "TypeName": "Account",
            "TypeId": 0
          },
          {
            "Name": "total_supply",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "zenlink_protocol",
          "primitives",
          "PairMetadata"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "Account",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "760": {
        "TypeFields": [
          {
            "Name": "target_supply",
            "TypeName": "(Balance, Balance)",
            "TypeId": 409
          },
          {
            "Name": "capacity_supply",
            "TypeName": "(Balance, Balance)",
            "TypeId": 409
          },
          {
            "Name": "accumulated_supply",
            "TypeName": "(Balance, Balance)",
            "TypeId": 409
          },
          {
            "Name": "end_block_number",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "pair_account",
            "TypeName": "Account",
            "TypeId": 0
          }
        ],
        "Path": [
          "zenlink_protocol",
          "primitives",
          "BootstrapParameter"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Account",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "761": {
        "TypeIds": [
          753,
          0
        ],
        "TypeDef": "Tuple"
      },
      "762": {
        "TypeFields": [
          {
            "TypeId": 305
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 303
          },
          {
            "Name": "V",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "763": {
        "Variants": [
          {
            "Name": "RequireProtocolAdmin",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Require the admin who can reset the admin and receiver of the protocol fee."
            ]
          },
          {
            "Name": "RequireProtocolAdminCandidate",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Require the admin candidate who can become new admin after confirm."
            ]
          },
          {
            "Name": "InvalidFeePoint",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Invalid fee_point"
            ]
          },
          {
            "Name": "UnsupportedAssetType",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Unsupported AssetId by this ZenlinkProtocol Version."
            ]
          },
          {
            "Name": "InsufficientAssetBalance",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Account balance must be greater than or equal to the transfer amount."
            ]
          },
          {
            "Name": "NativeBalanceTooLow",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Account native currency balance must be greater than ExistentialDeposit."
            ]
          },
          {
            "Name": "DeniedCreatePair",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Trading pair can't be created."
            ]
          },
          {
            "Name": "PairAlreadyExists",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Trading pair already exists."
            ]
          },
          {
            "Name": "PairNotExists",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Trading pair does not exist."
            ]
          },
          {
            "Name": "AssetNotExists",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Asset does not exist."
            ]
          },
          {
            "Name": "InsufficientLiquidity",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "Liquidity is not enough."
            ]
          },
          {
            "Name": "InsufficientPairReserve",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "Trading pair does have enough foreign."
            ]
          },
          {
            "Name": "InsufficientTargetAmount",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "Get target amount is less than exception."
            ]
          },
          {
            "Name": "ExcessiveSoldAmount",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "Sold amount is more than exception."
            ]
          },
          {
            "Name": "InvalidPath",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "Can't find pair though trading path."
            ]
          },
          {
            "Name": "IncorrectAssetAmountRange",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "Incorrect foreign amount range."
            ]
          },
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "Overflow."
            ]
          },
          {
            "Name": "Deadline",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "Transaction block number is larger than the end block number."
            ]
          },
          {
            "Name": "AccountIdBadLocation",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "Location given was invalid or unsupported."
            ]
          },
          {
            "Name": "ExecutionFailed",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "XCM execution failed."
            ]
          },
          {
            "Name": "DeniedTransferToSelf",
            "TypeFields": null,
            "Index": 20,
            "Docs": [
              "Transfer to self by XCM message."
            ]
          },
          {
            "Name": "TargetChainNotRegistered",
            "TypeFields": null,
            "Index": 21,
            "Docs": [
              "Not in ZenlinkRegistedParaChains."
            ]
          },
          {
            "Name": "InvariantCheckFailed",
            "TypeFields": null,
            "Index": 22,
            "Docs": [
              "Can't pass the K value check"
            ]
          },
          {
            "Name": "PairCreateForbidden",
            "TypeFields": null,
            "Index": 23,
            "Docs": [
              "Created pair can't create now"
            ]
          },
          {
            "Name": "NotInBootstrap",
            "TypeFields": null,
            "Index": 24,
            "Docs": [
              "Pair is not in bootstrap"
            ]
          },
          {
            "Name": "InvalidContributionAmount",
            "TypeFields": null,
            "Index": 25,
            "Docs": [
              "Amount of contribution is invalid."
            ]
          },
          {
            "Name": "UnqualifiedBootstrap",
            "TypeFields": null,
            "Index": 26,
            "Docs": [
              "Amount of contribution is invalid."
            ]
          },
          {
            "Name": "ZeroContribute",
            "TypeFields": null,
            "Index": 27,
            "Docs": [
              "Zero contribute in bootstrap"
            ]
          },
          {
            "Name": "DenyRefund",
            "TypeFields": null,
            "Index": 28,
            "Docs": [
              "Bootstrap deny refund"
            ]
          },
          {
            "Name": "DisableBootstrap",
            "TypeFields": null,
            "Index": 29,
            "Docs": [
              "Bootstrap is disable"
            ]
          },
          {
            "Name": "NotQualifiedAccount",
            "TypeFields": null,
            "Index": 30,
            "Docs": [
              "Not eligible to contribute"
            ]
          },
          {
            "Name": "NoRewardTokens",
            "TypeFields": null,
            "Index": 31,
            "Docs": [
              "Reward of bootstrap is not set."
            ]
          },
          {
            "Name": "ChargeRewardParamsError",
            "TypeFields": null,
            "Index": 32,
            "Docs": [
              "Charge bootstrap extrinsic args has error,"
            ]
          },
          {
            "Name": "ExistRewardsInBootstrap",
            "TypeFields": null,
            "Index": 33,
            "Docs": [
              "Exist some reward in bootstrap,"
            ]
          }
        ],
        "Path": [
          "zenlink_protocol",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "764": {
        "TypeFields": [
          {
            "Name": "merkle_root",
            "TypeName": "H256",
            "TypeId": 12
          },
          {
            "Name": "description",
            "TypeName": "BoundString",
            "TypeId": 765
          },
          {
            "Name": "distribute_currency",
            "TypeName": "CurrencyId",
            "TypeId": 292
          },
          {
            "Name": "distribute_amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "distribute_holder",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "charged",
            "TypeName": "bool",
            "TypeId": 30
          }
        ],
        "Path": [
          "merkle_distributor",
          "MerkleMetadata"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "CurrencyId",
            "TypeId": 292
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "BoundString",
            "TypeId": 765
          }
        ],
        "TypeDef": "Composite"
      },
      "765": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "766": {
        "TypeFields": [
          {
            "TypeId": 38
          }
        ],
        "Path": [
          "BTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "767": {
        "Variants": [
          {
            "Name": "BadDescription",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Invalid metadata given."
            ]
          },
          {
            "Name": "InvalidMerkleDistributorId",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The id is not exist."
            ]
          },
          {
            "Name": "MerkleVerifyFailed",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The proof is invalid"
            ]
          },
          {
            "Name": "Claimed",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The reward is already distributed."
            ]
          },
          {
            "Name": "Charged",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The reward is already charged."
            ]
          },
          {
            "Name": "WithdrawAmountExceed",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Withdraw amount exceed charge amount."
            ]
          },
          {
            "Name": "BadChargeAccount",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              ""
            ]
          },
          {
            "Name": "AlreadyInWhiteList",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Account has already in the set who can create merkle distributor"
            ]
          },
          {
            "Name": "NotInWhiteList",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Account is no in the set who can create merkle distributor"
            ]
          }
        ],
        "Path": [
          "merkle_distributor",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "768": {
        "Variants": [
          {
            "Name": "NotEnoughBalance",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "ConversionError",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "WrongListLength",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "WeightAndFeeNotExist",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "DexFailedToGetAmountInByPath",
            "TypeFields": null,
            "Index": 5
          }
        ],
        "Path": [
          "bifrost_flexible_fee",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "769": {
        "TypeIds": [
          4,
          0,
          6
        ],
        "TypeDef": "Tuple"
      },
      "770": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 771
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 771
          }
        ],
        "TypeDef": "Variant"
      },
      "771": {
        "TypeFields": [
          {
            "Name": "raised",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "cap",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "first_slot",
            "TypeName": "LeasePeriod",
            "TypeId": 4
          },
          {
            "Name": "last_slot",
            "TypeName": "LeasePeriod",
            "TypeId": 4
          },
          {
            "Name": "trie_index",
            "TypeName": "TrieIndex",
            "TypeId": 4
          },
          {
            "Name": "status",
            "TypeName": "FundStatus",
            "TypeId": 314
          }
        ],
        "Path": [
          "bifrost_salp",
          "FundInfo"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "LeasePeriod",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "772": {
        "TypeIds": [
          4,
          4,
          4
        ],
        "TypeDef": "Tuple"
      },
      "773": {
        "TypeIds": [
          4,
          0
        ],
        "TypeDef": "Tuple"
      },
      "774": {
        "TypeFields": [
          {
            "Name": "value",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "if_mint",
            "TypeName": "bool",
            "TypeId": 30
          }
        ],
        "Path": [
          "bifrost_salp",
          "ReserveInfo"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "775": {
        "Variants": [
          {
            "Name": "FirstSlotTooFarInFuture",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The first slot needs to at least be less than 3 `max_value`."
            ]
          },
          {
            "Name": "LastSlotBeforeFirstSlot",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Last slot must be greater than first slot."
            ]
          },
          {
            "Name": "LastSlotTooFarInFuture",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The last slot cannot be more then 3 slots after the first slot."
            ]
          },
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "There was an overflow."
            ]
          },
          {
            "Name": "ContributionTooSmall",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The contribution was below the minimum, `MinContribution`."
            ]
          },
          {
            "Name": "ZeroContribution",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The account doesn't have any contribution to the fund."
            ]
          },
          {
            "Name": "InvalidParaId",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Invalid fund index."
            ]
          },
          {
            "Name": "InvalidFundStatus",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Invalid fund status."
            ]
          },
          {
            "Name": "InvalidContributionStatus",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Invalid contribution status."
            ]
          },
          {
            "Name": "CapExceeded",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Contributions exceed maximum amount."
            ]
          },
          {
            "Name": "FundAlreadyCreated",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The fund has been registered."
            ]
          },
          {
            "Name": "XcmFailed",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "Crosschain xcm failed"
            ]
          },
          {
            "Name": "NotEnoughReservedAssetsToRefund",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "Don't have enough vsToken/vsBond to refund"
            ]
          },
          {
            "Name": "NotEnoughBalanceInRefundPool",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "Don't have enough token to refund by users"
            ]
          },
          {
            "Name": "NotEnoughBalanceToUnlock",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "Don't have enough vsToken/vsBond to unlock"
            ]
          },
          {
            "Name": "VSBondExpired",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The vsBond is expired now"
            ]
          },
          {
            "Name": "UnRedeemableNow",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "The vsBond cannot be redeemed by now"
            ]
          },
          {
            "Name": "NotEnoughFreeAssetsToRedeem",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "Dont have enough vsToken/vsBond to redeem"
            ]
          },
          {
            "Name": "NotEnoughBalanceInRedeemPool",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "Don't have enough token to redeem by users"
            ]
          },
          {
            "Name": "NotEnoughBalanceInFund",
            "TypeFields": null,
            "Index": 19
          },
          {
            "Name": "InvalidFundSameSlot",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "InvalidFundNotExist",
            "TypeFields": null,
            "Index": 21
          },
          {
            "Name": "InvalidRefund",
            "TypeFields": null,
            "Index": 22
          },
          {
            "Name": "NotEnoughBalanceToContribute",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "NotSupportTokenType",
            "TypeFields": null,
            "Index": 24
          },
          {
            "Name": "ResponderNotRelayChain",
            "TypeFields": null,
            "Index": 25,
            "Docs": [
              "Responder is not a relay chain"
            ]
          },
          {
            "Name": "NotFindContributionValue",
            "TypeFields": null,
            "Index": 26,
            "Docs": [
              "No contribution record found"
            ]
          },
          {
            "Name": "ArgumentsError",
            "TypeFields": null,
            "Index": 27
          }
        ],
        "Path": [
          "bifrost_salp",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "776": {
        "Variants": [
          {
            "Name": "CannotSwitchOff",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "can not switch off"
            ]
          },
          {
            "Name": "InvalidCharacter",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Invalid character"
            ]
          }
        ],
        "Path": [
          "bifrost_call_switchgear",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "777": {
        "Variants": [
          {
            "Name": "BadLocation",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The given location could not be used (e.g. because it cannot be expressed in the",
              "desired version of XCM)."
            ]
          },
          {
            "Name": "LocationExisted",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Location existed"
            ]
          },
          {
            "Name": "AssetIdNotExists",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "AssetId not exists"
            ]
          },
          {
            "Name": "AssetIdExisted",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "AssetId exists"
            ]
          },
          {
            "Name": "CurrencyIdNotExists",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "CurrencyId not exists"
            ]
          },
          {
            "Name": "CurrencyIdExisted",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "CurrencyId exists"
            ]
          }
        ],
        "Path": [
          "bifrost_asset_registry",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "778": {
        "TypeIds": [
          323,
          323
        ],
        "TypeDef": "Tuple"
      },
      "779": {
        "TypeIds": [
          292,
          4
        ],
        "TypeDef": "Tuple"
      },
      "780": {
        "TypeIds": [
          0,
          6,
          322,
          781
        ],
        "TypeDef": "Tuple"
      },
      "781": {
        "Variants": [
          {
            "Name": "Native",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Astar",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "Moonbeam",
            "TypeFields": [
              {
                "TypeName": "H160",
                "TypeId": 399
              }
            ],
            "Index": 2
          },
          {
            "Name": "Hydradx",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 3
          },
          {
            "Name": "Interlay",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 4
          },
          {
            "Name": "Manta",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "bifrost_primitives",
          "RedeemType"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "782": {
        "TypeIds": [
          6,
          783
        ],
        "TypeDef": "Tuple"
      },
      "783": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 380
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 4
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "784": {
        "TypeIds": [
          322,
          292
        ],
        "TypeDef": "Tuple"
      },
      "785": {
        "TypeIds": [
          6,
          786,
          292
        ],
        "TypeDef": "Tuple"
      },
      "786": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 380
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 4
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "787": {
        "TypeIds": [
          6,
          788
        ],
        "TypeDef": "Tuple"
      },
      "788": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 789
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 378
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "789": {
        "TypeId": 378,
        "TypeDef": "Sequence"
      },
      "790": {
        "Variants": [
          {
            "Name": "BelowMinimumMint",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "BelowMinimumRedeem",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "InvalidRebondToken",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Invalid token to rebond."
            ]
          },
          {
            "Name": "NotSupportTokenType",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Token type not support."
            ]
          },
          {
            "Name": "NotEnoughBalanceToUnlock",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "TokenToRebondNotZero",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "OngoingTimeUnitNotSet",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "TokenUnlockLedgerNotFound",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "UserUnlockLedgerNotFound",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "TimeUnitUnlockLedgerNotFound",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "UnlockDurationNotFound",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "Unexpected",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "CalculationOverflow",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "ExceedMaximumUnlockId",
            "TypeFields": null,
            "Index": 13
          },
          {
            "Name": "TooManyRedeems",
            "TypeFields": null,
            "Index": 14
          },
          {
            "Name": "CanNotRedeem",
            "TypeFields": null,
            "Index": 15
          },
          {
            "Name": "CanNotRebond",
            "TypeFields": null,
            "Index": 16
          },
          {
            "Name": "NotEnoughBalance",
            "TypeFields": null,
            "Index": 17
          },
          {
            "Name": "VeBNCCheckingError",
            "TypeFields": null,
            "Index": 18
          },
          {
            "Name": "IncentiveCoefNotFound",
            "TypeFields": null,
            "Index": 19
          },
          {
            "Name": "TooManyLocks",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "ConvertError",
            "TypeFields": null,
            "Index": 21
          },
          {
            "Name": "NoUnlockRecord",
            "TypeFields": null,
            "Index": 22
          },
          {
            "Name": "FailToRemoveLock",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "BalanceZero",
            "TypeFields": null,
            "Index": 24
          },
          {
            "Name": "IncentiveLockBlocksNotSet",
            "TypeFields": null,
            "Index": 25
          }
        ],
        "Path": [
          "bifrost_vtoken_minting",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "791": {
        "TypeIds": [
          292,
          56
        ],
        "TypeDef": "Tuple"
      },
      "792": {
        "TypeIds": [
          292,
          143
        ],
        "TypeDef": "Tuple"
      },
      "793": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 328
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 143
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "794": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 476
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 477
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "795": {
        "TypeIds": [
          474,
          4
        ],
        "TypeDef": "Tuple"
      },
      "796": {
        "TypeIds": [
          469,
          4
        ],
        "TypeDef": "Tuple"
      },
      "797": {
        "TypeIds": [
          322,
          4
        ],
        "TypeDef": "Tuple"
      },
      "798": {
        "TypeId": 799,
        "TypeDef": "Sequence"
      },
      "799": {
        "TypeIds": [
          143,
          12
        ],
        "TypeDef": "Tuple"
      },
      "800": {
        "Variants": [
          {
            "Name": "OperateOriginNotSet",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NotAuthorized",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "NotSupportedCurrencyId",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "FailToAddDelegator",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "OverFlow",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "UnderFlow",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "NotExist",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "LowerThanMinimum",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "GreaterThanMaximum",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "AlreadyBonded",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "AccountNotExist",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DelegatorNotExist",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "XcmFailure",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "DelegatorNotBonded",
            "TypeFields": null,
            "Index": 13
          },
          {
            "Name": "ExceedActiveMaximum",
            "TypeFields": null,
            "Index": 14
          },
          {
            "Name": "ProblematicLedger",
            "TypeFields": null,
            "Index": 15
          },
          {
            "Name": "NotEnoughToUnbond",
            "TypeFields": null,
            "Index": 16
          },
          {
            "Name": "ExceedUnlockingRecords",
            "TypeFields": null,
            "Index": 17
          },
          {
            "Name": "RebondExceedUnlockingAmount",
            "TypeFields": null,
            "Index": 18
          },
          {
            "Name": "DecodingError",
            "TypeFields": null,
            "Index": 19
          },
          {
            "Name": "EncodingError",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "VectorEmpty",
            "TypeFields": null,
            "Index": 21
          },
          {
            "Name": "ValidatorSetNotExist",
            "TypeFields": null,
            "Index": 22
          },
          {
            "Name": "ValidatorNotExist",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "InvalidTimeUnit",
            "TypeFields": null,
            "Index": 24
          },
          {
            "Name": "AmountZero",
            "TypeFields": null,
            "Index": 25
          },
          {
            "Name": "AmountNotZero",
            "TypeFields": null,
            "Index": 26
          },
          {
            "Name": "AlreadyExist",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "ValidatorStillInUse",
            "TypeFields": null,
            "Index": 28
          },
          {
            "Name": "TimeUnitNotExist",
            "TypeFields": null,
            "Index": 29
          },
          {
            "Name": "FeeSourceNotExist",
            "TypeFields": null,
            "Index": 30
          },
          {
            "Name": "WeightAndFeeNotExists",
            "TypeFields": null,
            "Index": 31
          },
          {
            "Name": "MinimumsAndMaximumsNotExist",
            "TypeFields": null,
            "Index": 32
          },
          {
            "Name": "QueryNotExist",
            "TypeFields": null,
            "Index": 33
          },
          {
            "Name": "DelaysNotExist",
            "TypeFields": null,
            "Index": 34
          },
          {
            "Name": "Unexpected",
            "TypeFields": null,
            "Index": 35
          },
          {
            "Name": "QueryResponseRemoveError",
            "TypeFields": null,
            "Index": 36
          },
          {
            "Name": "InvalidHostingFee",
            "TypeFields": null,
            "Index": 37
          },
          {
            "Name": "InvalidAccount",
            "TypeFields": null,
            "Index": 38
          },
          {
            "Name": "IncreaseTokenPoolError",
            "TypeFields": null,
            "Index": 39
          },
          {
            "Name": "TuneExchangeRateLimitNotSet",
            "TypeFields": null,
            "Index": 40
          },
          {
            "Name": "CurrencyLatestTuneRecordNotExist",
            "TypeFields": null,
            "Index": 41
          },
          {
            "Name": "InvalidTransferSource",
            "TypeFields": null,
            "Index": 42
          },
          {
            "Name": "ValidatorNotProvided",
            "TypeFields": null,
            "Index": 43
          },
          {
            "Name": "Unsupported",
            "TypeFields": null,
            "Index": 44
          },
          {
            "Name": "ValidatorNotBonded",
            "TypeFields": null,
            "Index": 45
          },
          {
            "Name": "AlreadyRequested",
            "TypeFields": null,
            "Index": 46
          },
          {
            "Name": "RequestNotExist",
            "TypeFields": null,
            "Index": 47
          },
          {
            "Name": "AlreadyLeaving",
            "TypeFields": null,
            "Index": 48
          },
          {
            "Name": "DelegatorNotLeaving",
            "TypeFields": null,
            "Index": 49
          },
          {
            "Name": "RequestNotDue",
            "TypeFields": null,
            "Index": 50
          },
          {
            "Name": "LeavingNotDue",
            "TypeFields": null,
            "Index": 51
          },
          {
            "Name": "DelegatorSetNotExist",
            "TypeFields": null,
            "Index": 52
          },
          {
            "Name": "DelegatorLeaving",
            "TypeFields": null,
            "Index": 53
          },
          {
            "Name": "DelegatorAlreadyLeaving",
            "TypeFields": null,
            "Index": 54
          },
          {
            "Name": "ValidatorError",
            "TypeFields": null,
            "Index": 55
          },
          {
            "Name": "AmountNone",
            "TypeFields": null,
            "Index": 56
          },
          {
            "Name": "InvalidDelays",
            "TypeFields": null,
            "Index": 57
          },
          {
            "Name": "OngoingTimeUnitUpdateIntervalNotExist",
            "TypeFields": null,
            "Index": 58
          },
          {
            "Name": "LastTimeUpdatedOngoingTimeUnitNotExist",
            "TypeFields": null,
            "Index": 59
          },
          {
            "Name": "TooFrequent",
            "TypeFields": null,
            "Index": 60
          },
          {
            "Name": "DestAccountNotValid",
            "TypeFields": null,
            "Index": 61
          },
          {
            "Name": "WhiteListNotExist",
            "TypeFields": null,
            "Index": 62
          },
          {
            "Name": "DelegatorAlreadyTuned",
            "TypeFields": null,
            "Index": 63
          },
          {
            "Name": "FeeTooHigh",
            "TypeFields": null,
            "Index": 64
          },
          {
            "Name": "NotEnoughBalance",
            "TypeFields": null,
            "Index": 65
          },
          {
            "Name": "VectorTooLong",
            "TypeFields": null,
            "Index": 66
          },
          {
            "Name": "MultiCurrencyError",
            "TypeFields": null,
            "Index": 67
          },
          {
            "Name": "NotDelegateValidator",
            "TypeFields": null,
            "Index": 68
          },
          {
            "Name": "DividedByZero",
            "TypeFields": null,
            "Index": 69
          },
          {
            "Name": "SharePriceNotValid",
            "TypeFields": null,
            "Index": 70
          },
          {
            "Name": "InvalidAmount",
            "TypeFields": null,
            "Index": 71
          },
          {
            "Name": "ValidatorMultilocationNotvalid",
            "TypeFields": null,
            "Index": 72
          },
          {
            "Name": "AmountNotProvided",
            "TypeFields": null,
            "Index": 73
          },
          {
            "Name": "FailToConvert",
            "TypeFields": null,
            "Index": 74
          },
          {
            "Name": "ExceedMaxLengthLimit",
            "TypeFields": null,
            "Index": 75
          },
          {
            "Name": "TransferToError",
            "TypeFields": null,
            "Index": 76,
            "Docs": [
              "Transfer to failed"
            ]
          },
          {
            "Name": "StablePoolNotFound",
            "TypeFields": null,
            "Index": 77
          },
          {
            "Name": "StablePoolTokenIndexNotFound",
            "TypeFields": null,
            "Index": 78
          },
          {
            "Name": "ExceedLimit",
            "TypeFields": null,
            "Index": 79
          },
          {
            "Name": "InvalidPageNumber",
            "TypeFields": null,
            "Index": 80
          },
          {
            "Name": "NoMoreValidatorBoostListForCurrency",
            "TypeFields": null,
            "Index": 81
          }
        ],
        "Path": [
          "bifrost_slp",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "801": {
        "TypeIds": [
          292,
          365
        ],
        "TypeDef": "Tuple"
      },
      "802": {
        "Variants": [
          {
            "Name": "FeeConvertFailed",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "XcmExecutionFailed",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "XcmSendFailed",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "OperationWeightAndFeeNotExist",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "FailToConvert",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "UnweighableMessage",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "LocalExecutionIncomplete",
            "TypeFields": null,
            "Index": 6
          }
        ],
        "Path": [
          "bifrost_xcm_interface",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "803": {
        "Variants": [
          {
            "Name": "NotEnoughBalance",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NotSupportTokenType",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "CalculationOverflow",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "bifrost_vstoken_conversion",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "804": {
        "TypeFields": [
          {
            "Name": "tokens_proportion",
            "TypeName": "BTreeMap<CurrencyIdOf, Perbill>",
            "TypeId": 805
          },
          {
            "Name": "basic_token",
            "TypeName": "(CurrencyIdOf, Perbill)",
            "TypeId": 373
          },
          {
            "Name": "total_shares",
            "TypeName": "BalanceOf",
            "TypeId": 6
          },
          {
            "Name": "basic_rewards",
            "TypeName": "BTreeMap<CurrencyIdOf, BalanceOf>",
            "TypeId": 490
          },
          {
            "Name": "rewards",
            "TypeName": "BTreeMap<CurrencyIdOf, (BalanceOf, BalanceOf)>",
            "TypeId": 806
          },
          {
            "Name": "state",
            "TypeName": "PoolState",
            "TypeId": 807
          },
          {
            "Name": "keeper",
            "TypeName": "AccountIdOf",
            "TypeId": 0
          },
          {
            "Name": "reward_issuer",
            "TypeName": "AccountIdOf",
            "TypeId": 0
          },
          {
            "Name": "gauge",
            "TypeName": "Option<PoolId>",
            "TypeId": 93
          },
          {
            "Name": "block_startup",
            "TypeName": "Option<BlockNumberFor>",
            "TypeId": 93
          },
          {
            "Name": "min_deposit_to_start",
            "TypeName": "BalanceOf",
            "TypeId": 6
          },
          {
            "Name": "after_block_to_start",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "withdraw_limit_time",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "claim_limit_time",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "withdraw_limit_count",
            "TypeName": "u8",
            "TypeId": 2
          }
        ],
        "Path": [
          "bifrost_farming",
          "rewards",
          "PoolInfo"
        ],
        "TypeParams": [
          {
            "Name": "BalanceOf",
            "TypeId": 6
          },
          {
            "Name": "CurrencyIdOf",
            "TypeId": 292
          },
          {
            "Name": "AccountIdOf",
            "TypeId": 0
          },
          {
            "Name": "BlockNumberFor",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "805": {
        "TypeFields": [
          {
            "TypeId": 372
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 292
          },
          {
            "Name": "V",
            "TypeId": 374
          }
        ],
        "TypeDef": "Composite"
      },
      "806": {
        "TypeFields": [
          {
            "TypeId": 407
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 292
          },
          {
            "Name": "V",
            "TypeId": 409
          }
        ],
        "TypeDef": "Composite"
      },
      "807": {
        "Variants": [
          {
            "Name": "UnCharged",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Charged",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Ongoing",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Dead",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Retired",
            "TypeFields": null,
            "Index": 4
          }
        ],
        "Path": [
          "bifrost_farming",
          "rewards",
          "PoolState"
        ],
        "TypeDef": "Variant"
      },
      "808": {
        "TypeFields": [
          {
            "Name": "pid",
            "TypeName": "PoolId",
            "TypeId": 4
          },
          {
            "Name": "token",
            "TypeName": "CurrencyIdOf",
            "TypeId": 292
          },
          {
            "Name": "keeper",
            "TypeName": "AccountIdOf",
            "TypeId": 0
          },
          {
            "Name": "reward_issuer",
            "TypeName": "AccountIdOf",
            "TypeId": 0
          },
          {
            "Name": "rewards",
            "TypeName": "BTreeMap<CurrencyIdOf, (BalanceOf, BalanceOf, BalanceOf)>",
            "TypeId": 809
          },
          {
            "Name": "gauge_basic_rewards",
            "TypeName": "BTreeMap<CurrencyIdOf, BalanceOf>",
            "TypeId": 490
          },
          {
            "Name": "max_block",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "gauge_amount",
            "TypeName": "BalanceOf",
            "TypeId": 6
          },
          {
            "Name": "total_time_factor",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "gauge_state",
            "TypeName": "GaugeState",
            "TypeId": 813
          },
          {
            "Name": "gauge_last_block",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          }
        ],
        "Path": [
          "bifrost_farming",
          "gauge",
          "GaugePoolInfo"
        ],
        "TypeParams": [
          {
            "Name": "BalanceOf",
            "TypeId": 6
          },
          {
            "Name": "CurrencyIdOf",
            "TypeId": 292
          },
          {
            "Name": "AccountIdOf",
            "TypeId": 0
          },
          {
            "Name": "BlockNumberFor",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "809": {
        "TypeFields": [
          {
            "TypeId": 811
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 292
          },
          {
            "Name": "V",
            "TypeId": 810
          }
        ],
        "TypeDef": "Composite"
      },
      "810": {
        "TypeIds": [
          6,
          6,
          6
        ],
        "TypeDef": "Tuple"
      },
      "811": {
        "TypeId": 812,
        "TypeDef": "Sequence"
      },
      "812": {
        "TypeIds": [
          292,
          810
        ],
        "TypeDef": "Tuple"
      },
      "813": {
        "Variants": [
          {
            "Name": "Unbond",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Bonded",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "bifrost_farming",
          "gauge",
          "GaugeState"
        ],
        "TypeDef": "Variant"
      },
      "814": {
        "TypeFields": [
          {
            "Name": "who",
            "TypeName": "AccountIdOf",
            "TypeId": 0
          },
          {
            "Name": "gauge_amount",
            "TypeName": "BalanceOf",
            "TypeId": 6
          },
          {
            "Name": "total_time_factor",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "latest_time_factor",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "claimed_time_factor",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "gauge_start_block",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "gauge_stop_block",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "gauge_last_block",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "last_claim_block",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          }
        ],
        "Path": [
          "bifrost_farming",
          "gauge",
          "GaugeInfo"
        ],
        "TypeParams": [
          {
            "Name": "BalanceOf",
            "TypeId": 6
          },
          {
            "Name": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "AccountIdOf",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "815": {
        "TypeFields": [
          {
            "Name": "who",
            "TypeName": "AccountIdOf",
            "TypeId": 0
          },
          {
            "Name": "share",
            "TypeName": "BalanceOf",
            "TypeId": 6
          },
          {
            "Name": "withdrawn_rewards",
            "TypeName": "BTreeMap<CurrencyIdOf, BalanceOf>",
            "TypeId": 490
          },
          {
            "Name": "claim_last_block",
            "TypeName": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "withdraw_list",
            "TypeName": "Vec<(BlockNumberFor, BalanceOf)>",
            "TypeId": 637
          }
        ],
        "Path": [
          "bifrost_farming",
          "rewards",
          "ShareInfo"
        ],
        "TypeParams": [
          {
            "Name": "BalanceOf",
            "TypeId": 6
          },
          {
            "Name": "CurrencyIdOf",
            "TypeId": 292
          },
          {
            "Name": "BlockNumberFor",
            "TypeId": 4
          },
          {
            "Name": "AccountIdOf",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "816": {
        "TypeFields": [
          {
            "Name": "total_votes",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "start_round",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "end_round",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "round_length",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "bifrost_farming",
          "boost",
          "BoostPoolInfo"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "817": {
        "TypeFields": [
          {
            "Name": "vote_amount",
            "TypeName": "BalanceOf<T>",
            "TypeId": 6
          },
          {
            "Name": "vote_list",
            "TypeName": "BoundedVec<(PoolId, Percent), T::WhitelistMaximumLimit>",
            "TypeId": 818
          },
          {
            "Name": "last_vote",
            "TypeName": "BlockNumberFor<T>",
            "TypeId": 4
          }
        ],
        "Path": [
          "bifrost_farming",
          "boost",
          "UserBoostInfo"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "818": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 381
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 382
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "819": {
        "TypeIds": [
          4,
          292
        ],
        "TypeDef": "Tuple"
      },
      "820": {
        "Variants": [
          {
            "Name": "NotNullable",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "PoolDoesNotExist",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "GaugePoolNotExist",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "GaugeInfoNotExist",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "InvalidPoolState",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "LastGaugeNotClaim",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "CanNotClaim",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "claim_limit_time exceeded"
            ]
          },
          {
            "Name": "GaugeMaxBlockOverflow",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "gauge pool max_block exceeded"
            ]
          },
          {
            "Name": "WithdrawLimitCountExceeded",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "withdraw_limit_time exceeded"
            ]
          },
          {
            "Name": "ShareInfoNotExists",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "CanNotDeposit",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "WhitelistEmpty",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "RoundNotOver",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "RoundLengthNotSet",
            "TypeFields": null,
            "Index": 13
          },
          {
            "Name": "WhitelistLimitExceeded",
            "TypeFields": null,
            "Index": 14
          },
          {
            "Name": "NobodyVoting",
            "TypeFields": null,
            "Index": 15
          },
          {
            "Name": "NotInWhitelist",
            "TypeFields": null,
            "Index": 16
          },
          {
            "Name": "PercentOverflow",
            "TypeFields": null,
            "Index": 17
          },
          {
            "Name": "PoolNotCleared",
            "TypeFields": null,
            "Index": 18
          }
        ],
        "Path": [
          "bifrost_farming",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "821": {
        "TypeFields": [
          {
            "Name": "current",
            "TypeName": "RoundIndex",
            "TypeId": 4
          },
          {
            "Name": "first",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "length",
            "TypeName": "u32",
            "TypeId": 4
          }
        ],
        "Path": [
          "bifrost_system_staking",
          "types",
          "RoundInfo"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "822": {
        "TypeFields": [
          {
            "Name": "farming_staking_amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "system_stakable_amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "system_shadow_amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "pending_redeem_amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "current_config",
            "TypeName": "TokenConfig<Balance>",
            "TypeId": 823
          },
          {
            "Name": "new_config",
            "TypeName": "TokenConfig<Balance>",
            "TypeId": 823
          }
        ],
        "Path": [
          "bifrost_system_staking",
          "types",
          "TokenInfo"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "823": {
        "TypeFields": [
          {
            "Name": "exec_delay",
            "TypeName": "u32",
            "TypeId": 4
          },
          {
            "Name": "system_stakable_farming_rate",
            "TypeName": "Permill",
            "TypeId": 323
          },
          {
            "Name": "lptoken_rates",
            "TypeName": "Vec<Perbill>",
            "TypeId": 387
          },
          {
            "Name": "add_or_sub",
            "TypeName": "bool",
            "TypeId": 30
          },
          {
            "Name": "system_stakable_base",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "farming_poolids",
            "TypeName": "Vec<PoolId>",
            "TypeId": 380
          }
        ],
        "Path": [
          "bifrost_system_staking",
          "types",
          "TokenConfig"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "824": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 311
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 292
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "825": {
        "Variants": [
          {
            "Name": "InvalidTokenConfig",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Invalid token config params"
            ]
          },
          {
            "Name": "ExceedMaxTokenLen",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "exceed max token len"
            ]
          },
          {
            "Name": "ExceedMaxFarmingPoolidLen",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "exceed max poolid len"
            ]
          },
          {
            "Name": "TokenInfoNotFound",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Token info not found"
            ]
          },
          {
            "Name": "PayoutFailed",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "payout error"
            ]
          }
        ],
        "Path": [
          "bifrost_system_staking",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "826": {
        "Variants": [
          {
            "Name": "NotEnoughBalance",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NotSupportTokenType",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "CalculationOverflow",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "bifrost_system_maker",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "827": {
        "Variants": [
          {
            "Name": "NotEnoughBalance",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NotSupportProportion",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "CalculationOverflow",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "ExistentialDeposit",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "DistributionNotExist",
            "TypeFields": null,
            "Index": 4
          }
        ],
        "Path": [
          "bifrost_fee_share",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "828": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 38
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "829": {
        "TypeIds": [
          292,
          0
        ],
        "TypeDef": "Tuple"
      },
      "830": {
        "TypeIds": [
          292,
          136
        ],
        "TypeDef": "Tuple"
      },
      "831": {
        "Variants": [
          {
            "Name": "NotEnoughBalance",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NotExist",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "NotAllowed",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "CurrencyNotSupportCrossInAndOut",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "NoMultilocationMapping",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "NoAccountIdMapping",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "AlreadyExist",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "NoCrossingMinimumSet",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "AmountLowerThanMinimum",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "ExceedMaxLengthLimit",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "FailedToConvert",
            "TypeFields": null,
            "Index": 10
          }
        ],
        "Path": [
          "bifrost_cross_in_out",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "832": {
        "TypeFields": [
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "end",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "bifrost_ve_minting",
          "LockedBalance"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "833": {
        "TypeFields": [
          {
            "Name": "bias",
            "TypeName": "i128",
            "TypeId": 299
          },
          {
            "Name": "slope",
            "TypeName": "i128",
            "TypeId": 299
          },
          {
            "Name": "block",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "bifrost_ve_minting",
          "Point"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "834": {
        "TypeIds": [
          6,
          754
        ],
        "TypeDef": "Tuple"
      },
      "835": {
        "TypeFields": [
          {
            "Name": "old_markup_coefficient",
            "TypeName": "FixedU128",
            "TypeId": 397
          },
          {
            "Name": "markup_coefficient",
            "TypeName": "FixedU128",
            "TypeId": 397
          }
        ],
        "Path": [
          "bifrost_ve_minting",
          "traits",
          "UserMarkupInfo"
        ],
        "TypeDef": "Composite"
      },
      "836": {
        "TypeFields": [
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "markup_coefficient",
            "TypeName": "FixedU128",
            "TypeId": 397
          },
          {
            "Name": "refresh_block",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "bifrost_ve_minting",
          "traits",
          "LockedToken"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "837": {
        "TypeFields": [
          {
            "Name": "markup_coefficient",
            "TypeName": "FixedU128",
            "TypeId": 397
          },
          {
            "Name": "hardcap",
            "TypeName": "FixedU128",
            "TypeId": 397
          },
          {
            "Name": "update_block",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "bifrost_ve_minting",
          "traits",
          "MarkupCoefficientInfo"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "838": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 406
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 6
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "839": {
        "Variants": [
          {
            "Name": "NotEnoughBalance",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Expired",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "BelowMinimumMint",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "LockNotExist",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "LockExist",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "NoRewards",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "ArgumentsError",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "ExceedsMaxPositions",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "NoController",
            "TypeFields": null,
            "Index": 8
          }
        ],
        "Path": [
          "bifrost_ve_minting",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "840": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 38
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "841": {
        "TypeFields": [
          {
            "Name": "xcm_fee",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "xcm_weight",
            "TypeName": "Weight",
            "TypeId": 9
          },
          {
            "Name": "period",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "last_block",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "contract",
            "TypeName": "H160",
            "TypeId": 399
          }
        ],
        "Path": [
          "bifrost_slpx",
          "types",
          "EthereumCallConfiguration"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "842": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 311
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 292
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "843": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 311
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 292
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "844": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 845
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 492
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "845": {
        "TypeId": 492,
        "TypeDef": "Sequence"
      },
      "846": {
        "Variants": [
          {
            "Name": "TokenNotFoundInVtokenMinting",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Token not found in vtoken minting"
            ]
          },
          {
            "Name": "TokenNotFoundInZenlink",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Token not found in zenlink"
            ]
          },
          {
            "Name": "AccountIdAlreadyInWhitelist",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Contract Account already exists in the whitelist"
            ]
          },
          {
            "Name": "AccountIdNotInWhitelist",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Contract Account is not in the whitelist"
            ]
          },
          {
            "Name": "ExceededWhitelistMaxNumber",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The maximum number of whitelist addresses is 10"
            ]
          },
          {
            "Name": "NotSetExecutionFee",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Execution fee not set"
            ]
          },
          {
            "Name": "FreeBalanceTooLow",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Insufficient balance to execute the fee"
            ]
          },
          {
            "Name": "ArgumentsError",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "ArgumentsError"
            ]
          },
          {
            "Name": "ErrorConvertVtoken",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "ErrorValidating",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "ErrorDelivering",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "Unsupported",
            "TypeFields": null,
            "Index": 11
          }
        ],
        "Path": [
          "bifrost_slpx",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "847": {
        "TypeFields": [
          {
            "Name": "rank",
            "TypeName": "Rank",
            "TypeId": 56
          }
        ],
        "Path": [
          "pallet_ranked_collective",
          "MemberRecord"
        ],
        "TypeDef": "Composite"
      },
      "848": {
        "TypeIds": [
          56,
          0
        ],
        "TypeDef": "Tuple"
      },
      "849": {
        "TypeIds": [
          56,
          4
        ],
        "TypeDef": "Tuple"
      },
      "850": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "851": {
        "Variants": [
          {
            "Name": "AlreadyMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Account is already a member."
            ]
          },
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Account is not a member."
            ]
          },
          {
            "Name": "NotPolling",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The given poll index is unknown or has closed."
            ]
          },
          {
            "Name": "Ongoing",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The given poll is still ongoing."
            ]
          },
          {
            "Name": "NoneRemaining",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "There are no further records to be removed."
            ]
          },
          {
            "Name": "Corruption",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Unexpected error in state."
            ]
          },
          {
            "Name": "RankTooLow",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The member's rank is too low to vote."
            ]
          },
          {
            "Name": "InvalidWitness",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The information provided is incorrect."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The origin is not sufficiently privileged to do the operation."
            ]
          },
          {
            "Name": "SameMember",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The new member to exchange is the same as the old member"
            ]
          }
        ],
        "Path": [
          "pallet_ranked_collective",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "852": {
        "Variants": [
          {
            "Name": "Ongoing",
            "TypeFields": [
              {
                "TypeName": "ReferendumStatus<TrackId, RuntimeOrigin, Moment, Call, Balance, Tally,\nAccountId, ScheduleAddress,>",
                "TypeId": 853
              }
            ],
            "Index": 0
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              }
            ],
            "Index": 1
          },
          {
            "Name": "Rejected",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              }
            ],
            "Index": 2
          },
          {
            "Name": "Cancelled",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              }
            ],
            "Index": 3
          },
          {
            "Name": "TimedOut",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              },
              {
                "TypeName": "Option<Deposit<AccountId, Balance>>",
                "TypeId": 630
              }
            ],
            "Index": 4
          },
          {
            "Name": "Killed",
            "TypeFields": [
              {
                "TypeName": "Moment",
                "TypeId": 4
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "ReferendumInfo"
        ],
        "TypeParams": [
          {
            "Name": "TrackId",
            "TypeId": 56
          },
          {
            "Name": "RuntimeOrigin",
            "TypeId": 108
          },
          {
            "Name": "Moment",
            "TypeId": 4
          },
          {
            "Name": "Call",
            "TypeId": 57
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "Tally",
            "TypeId": 496
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "ScheduleAddress",
            "TypeId": 233
          }
        ],
        "TypeDef": "Variant"
      },
      "853": {
        "TypeFields": [
          {
            "Name": "track",
            "TypeName": "TrackId",
            "TypeId": 56
          },
          {
            "Name": "origin",
            "TypeName": "RuntimeOrigin",
            "TypeId": 108
          },
          {
            "Name": "proposal",
            "TypeName": "Call",
            "TypeId": 57
          },
          {
            "Name": "enactment",
            "TypeName": "DispatchTime<Moment>",
            "TypeId": 131
          },
          {
            "Name": "submitted",
            "TypeName": "Moment",
            "TypeId": 4
          },
          {
            "Name": "submission_deposit",
            "TypeName": "Deposit<AccountId, Balance>",
            "TypeId": 629
          },
          {
            "Name": "decision_deposit",
            "TypeName": "Option<Deposit<AccountId, Balance>>",
            "TypeId": 630
          },
          {
            "Name": "deciding",
            "TypeName": "Option<DecidingStatus<Moment>>",
            "TypeId": 631
          },
          {
            "Name": "tally",
            "TypeName": "Tally",
            "TypeId": 496
          },
          {
            "Name": "in_queue",
            "TypeName": "bool",
            "TypeId": 30
          },
          {
            "Name": "alarm",
            "TypeName": "Option<(Moment, ScheduleAddress)>",
            "TypeId": 633
          }
        ],
        "Path": [
          "pallet_referenda",
          "types",
          "ReferendumStatus"
        ],
        "TypeParams": [
          {
            "Name": "TrackId",
            "TypeId": 56
          },
          {
            "Name": "RuntimeOrigin",
            "TypeId": 108
          },
          {
            "Name": "Moment",
            "TypeId": 4
          },
          {
            "Name": "Call",
            "TypeId": 57
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "Tally",
            "TypeId": 496
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "ScheduleAddress",
            "TypeId": 233
          }
        ],
        "TypeDef": "Composite"
      },
      "854": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 510
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 233
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "855": {
        "Variants": [
          {
            "Name": "NotOngoing",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Referendum is not ongoing."
            ]
          },
          {
            "Name": "HasDeposit",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Referendum's decision deposit is already paid."
            ]
          },
          {
            "Name": "BadTrack",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The track identifier given was invalid."
            ]
          },
          {
            "Name": "Full",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "There are already a full complement of referenda in progress for this track."
            ]
          },
          {
            "Name": "QueueEmpty",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The queue of the track is empty."
            ]
          },
          {
            "Name": "BadReferendum",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The referendum index provided is invalid in this context."
            ]
          },
          {
            "Name": "NothingToDo",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "There was nothing to do in the advancement."
            ]
          },
          {
            "Name": "NoTrack",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "No track exists for the proposal origin."
            ]
          },
          {
            "Name": "Unfinished",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Any deposit cannot be refunded until after the decision is over."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The deposit refunder is not the depositor."
            ]
          },
          {
            "Name": "NoDeposit",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The deposit cannot be refunded since none was made."
            ]
          },
          {
            "Name": "BadStatus",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The referendum status is invalid for this operation."
            ]
          },
          {
            "Name": "PreimageNotExist",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The preimage does not exist."
            ]
          }
        ],
        "Path": [
          "pallet_referenda",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "856": {
        "TypeFields": [
          {
            "Name": "pool_id",
            "TypeName": "StableAssetPoolId",
            "TypeId": 4
          },
          {
            "Name": "pool_asset",
            "TypeName": "AssetId",
            "TypeId": 292
          },
          {
            "Name": "assets",
            "TypeName": "Vec<AssetId>",
            "TypeId": 311
          },
          {
            "Name": "precisions",
            "TypeName": "Vec<AtLeast64BitUnsigned>",
            "TypeId": 406
          },
          {
            "Name": "mint_fee",
            "TypeName": "AtLeast64BitUnsigned",
            "TypeId": 6
          },
          {
            "Name": "swap_fee",
            "TypeName": "AtLeast64BitUnsigned",
            "TypeId": 6
          },
          {
            "Name": "redeem_fee",
            "TypeName": "AtLeast64BitUnsigned",
            "TypeId": 6
          },
          {
            "Name": "total_supply",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "a",
            "TypeName": "AtLeast64BitUnsigned",
            "TypeId": 6
          },
          {
            "Name": "a_block",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "future_a",
            "TypeName": "AtLeast64BitUnsigned",
            "TypeId": 6
          },
          {
            "Name": "future_a_block",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "balances",
            "TypeName": "Vec<Balance>",
            "TypeId": 406
          },
          {
            "Name": "fee_recipient",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "account_id",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "yield_recipient",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "precision",
            "TypeName": "AtLeast64BitUnsigned",
            "TypeId": 6
          }
        ],
        "Path": [
          "bifrost_stable_asset",
          "StableAssetPoolInfo"
        ],
        "TypeParams": [
          {
            "Name": "AssetId",
            "TypeId": 292
          },
          {
            "Name": "AtLeast64BitUnsigned",
            "TypeId": 6
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "857": {
        "Variants": [
          {
            "Name": "InconsistentStorage",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "InvalidPoolAsset",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "ArgumentsMismatch",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "ArgumentsError",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "PoolNotFound",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Math",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "InvalidPoolValue",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "MintUnderMin",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "SwapUnderMin",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "RedeemUnderMin",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "RedeemOverMax",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "TokenRateNotCleared",
            "TypeFields": null,
            "Index": 11
          }
        ],
        "Path": [
          "bifrost_stable_asset",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "858": {
        "Variants": [
          {
            "Name": "SwapUnderMin",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "MintUnderMin",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "CantMint",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "RedeemOverMax",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "TokenRateNotSet",
            "TypeFields": null,
            "Index": 4
          }
        ],
        "Path": [
          "bifrost_stable_pool",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "859": {
        "Variants": [
          {
            "Name": "Casting",
            "TypeFields": [
              {
                "TypeName": "Casting<Balance, BlockNumber, PollIndex, MaxVotes>",
                "TypeId": 860
              }
            ],
            "Index": 0
          },
          {
            "Name": "Delegating",
            "TypeFields": [
              {
                "TypeName": "Delegating<Balance, AccountId, BlockNumber>",
                "TypeId": 865
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "bifrost_vtoken_voting",
          "vote",
          "Voting"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "PollIndex",
            "TypeId": 4
          },
          {
            "Name": "MaxVotes"
          }
        ],
        "TypeDef": "Variant"
      },
      "860": {
        "TypeFields": [
          {
            "Name": "votes",
            "TypeName": "BoundedVec<(PollIndex, AccountVote<Balance>, DerivativeIndex, Balance),\nMaxVotes>",
            "TypeId": 861
          },
          {
            "Name": "delegations",
            "TypeName": "Delegations<Balance>",
            "TypeId": 620
          },
          {
            "Name": "prior",
            "TypeName": "PriorLock<BlockNumber, Balance>",
            "TypeId": 864
          }
        ],
        "Path": [
          "bifrost_vtoken_voting",
          "vote",
          "Casting"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "PollIndex",
            "TypeId": 4
          },
          {
            "Name": "MaxVotes"
          }
        ],
        "TypeDef": "Composite"
      },
      "861": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 863
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 862
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "862": {
        "TypeIds": [
          4,
          411,
          56,
          6
        ],
        "TypeDef": "Tuple"
      },
      "863": {
        "TypeId": 862,
        "TypeDef": "Sequence"
      },
      "864": {
        "TypeFields": [
          {
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "bifrost_vtoken_voting",
          "vote",
          "PriorLock"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "865": {
        "TypeFields": [
          {
            "Name": "balance",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "target",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "conviction",
            "TypeName": "Conviction",
            "TypeId": 105
          },
          {
            "Name": "delegations",
            "TypeName": "Delegations<Balance>",
            "TypeId": 620
          },
          {
            "Name": "prior",
            "TypeName": "PriorLock<BlockNumber, Balance>",
            "TypeId": 864
          }
        ],
        "Path": [
          "bifrost_vtoken_voting",
          "vote",
          "Delegating"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "866": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 295
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 296
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "867": {
        "TypeIds": [
          292,
          4,
          56,
          0,
          868
        ],
        "TypeDef": "Tuple"
      },
      "868": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 869
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 869
          }
        ],
        "TypeDef": "Variant"
      },
      "869": {
        "TypeIds": [
          411,
          6
        ],
        "TypeDef": "Tuple"
      },
      "870": {
        "TypeIds": [
          292,
          4,
          56
        ],
        "TypeDef": "Tuple"
      },
      "871": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 872
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 56
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "872": {
        "TypeId": 56,
        "TypeDef": "Sequence"
      },
      "873": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 875
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 874
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "874": {
        "TypeIds": [
          56,
          411
        ],
        "TypeDef": "Tuple"
      },
      "875": {
        "TypeId": 874,
        "TypeDef": "Sequence"
      },
      "876": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 877
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 779
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "877": {
        "TypeId": 779,
        "TypeDef": "Sequence"
      },
      "878": {
        "TypeIds": [
          0,
          292,
          4
        ],
        "TypeDef": "Tuple"
      },
      "879": {
        "Variants": [
          {
            "Name": "XcmFailure",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "XCM execution Failure"
            ]
          },
          {
            "Name": "VTokenNotSupport",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The given currency is not supported."
            ]
          },
          {
            "Name": "DerivativeIndexOccupied",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Derivative index occupied."
            ]
          },
          {
            "Name": "PendingVote",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Another vote is pending."
            ]
          },
          {
            "Name": "PendingUpdateReferendumStatus",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Another update referendum status is pending."
            ]
          },
          {
            "Name": "NoData",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "No data available in storage."
            ]
          },
          {
            "Name": "NotOngoing",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Poll is not ongoing."
            ]
          },
          {
            "Name": "NotCompleted",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Poll is not completed."
            ]
          },
          {
            "Name": "NotKilled",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Poll is not killed."
            ]
          },
          {
            "Name": "NotExpired",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Poll is not expired."
            ]
          },
          {
            "Name": "NotVoter",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The given account did not vote on the poll."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The actor has no permission to conduct the action."
            ]
          },
          {
            "Name": "NoPermissionYet",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The actor has no permission to conduct the action right now but will do in the future."
            ]
          },
          {
            "Name": "AlreadyDelegating",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The account is already delegating."
            ]
          },
          {
            "Name": "InsufficientFunds",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "Too high a balance was provided that the account cannot afford."
            ]
          },
          {
            "Name": "MaxVotesReached",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "Maximum number of votes reached."
            ]
          },
          {
            "Name": "TooMany",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "Maximum number of items reached."
            ]
          },
          {
            "Name": "NotStandardVote",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "The given vote is not Standard vote."
            ]
          },
          {
            "Name": "InvalidConviction",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "The given conviction is not valid."
            ]
          },
          {
            "Name": "OutOfRange",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "The given value is out of range."
            ]
          }
        ],
        "Path": [
          "bifrost_vtoken_voting",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "880": {
        "TypeFields": [
          {
            "Name": "principal",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "borrow_index",
            "TypeName": "Rate",
            "TypeId": 397
          }
        ],
        "Path": [
          "lend_market",
          "types",
          "BorrowSnapshot"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "881": {
        "TypeFields": [
          {
            "Name": "voucher_balance",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "is_collateral",
            "TypeName": "bool",
            "TypeId": 30
          }
        ],
        "Path": [
          "lend_market",
          "types",
          "Deposits"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "882": {
        "TypeFields": [
          {
            "Name": "total_earned_prior",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "exchange_rate_prior",
            "TypeName": "Rate",
            "TypeId": 397
          }
        ],
        "Path": [
          "lend_market",
          "types",
          "EarnedSnapshot"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "883": {
        "TypeFields": [
          {
            "Name": "index",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "block",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "lend_market",
          "types",
          "RewardMarketState"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "884": {
        "Variants": [
          {
            "Name": "V0",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "lend_market",
          "Versions"
        ],
        "TypeDef": "Variant"
      },
      "885": {
        "Variants": [
          {
            "Name": "InsufficientLiquidity",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Insufficient liquidity to borrow more or disable collateral"
            ]
          },
          {
            "Name": "InsufficientDeposit",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Insufficient deposit to redeem"
            ]
          },
          {
            "Name": "TooMuchRepay",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Repay amount greater than allowed"
            ]
          },
          {
            "Name": "DuplicateOperation",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Asset already enabled/disabled collateral"
            ]
          },
          {
            "Name": "NoDeposit",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "No deposit asset"
            ]
          },
          {
            "Name": "InsufficientCollateral",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Repay amount more than collateral amount"
            ]
          },
          {
            "Name": "LiquidatorIsBorrower",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Liquidator is same as borrower"
            ]
          },
          {
            "Name": "DepositsAreNotCollateral",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Deposits are not used as a collateral"
            ]
          },
          {
            "Name": "InsufficientShortfall",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Insufficient shortfall to repay"
            ]
          },
          {
            "Name": "InsufficientReserves",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Insufficient reserves"
            ]
          },
          {
            "Name": "InvalidRateModelParam",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "Invalid rate model params"
            ]
          },
          {
            "Name": "MarketNotActivated",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "Market not activated"
            ]
          },
          {
            "Name": "PriceOracleNotReady",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "Oracle price not ready"
            ]
          },
          {
            "Name": "PriceIsZero",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "Oracle price is zero"
            ]
          },
          {
            "Name": "InvalidCurrencyId",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "Invalid asset id"
            ]
          },
          {
            "Name": "InvalidLendTokenId",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "Invalid lend token id"
            ]
          },
          {
            "Name": "MarketDoesNotExist",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "Market does not exist"
            ]
          },
          {
            "Name": "MarketAlreadyExists",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "Market already exists"
            ]
          },
          {
            "Name": "NewMarketMustHavePendingState",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "New markets must have a pending state"
            ]
          },
          {
            "Name": "SupplyCapacityExceeded",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "Upper bound of supplying is exceeded"
            ]
          },
          {
            "Name": "BorrowCapacityExceeded",
            "TypeFields": null,
            "Index": 20,
            "Docs": [
              "Upper bound of borrowing is exceeded"
            ]
          },
          {
            "Name": "InsufficientCash",
            "TypeFields": null,
            "Index": 21,
            "Docs": [
              "Insufficient cash in the pool"
            ]
          },
          {
            "Name": "InvalidFactor",
            "TypeFields": null,
            "Index": 22,
            "Docs": [
              "The factor should be greater than 0% and less than 100%"
            ]
          },
          {
            "Name": "InvalidSupplyCap",
            "TypeFields": null,
            "Index": 23,
            "Docs": [
              "The supply cap cannot be zero"
            ]
          },
          {
            "Name": "InvalidExchangeRate",
            "TypeFields": null,
            "Index": 24,
            "Docs": [
              "The exchange rate should be greater than 0.02 and less than 1"
            ]
          },
          {
            "Name": "InvalidAmount",
            "TypeFields": null,
            "Index": 25,
            "Docs": [
              "Amount cannot be zero"
            ]
          },
          {
            "Name": "PayerIsSigner",
            "TypeFields": null,
            "Index": 26,
            "Docs": [
              "Payer cannot be signer"
            ]
          },
          {
            "Name": "CodecError",
            "TypeFields": null,
            "Index": 27,
            "Docs": [
              "Codec error"
            ]
          },
          {
            "Name": "CollateralReserved",
            "TypeFields": null,
            "Index": 28,
            "Docs": [
              "Collateral is reserved and cannot be liquidated"
            ]
          }
        ],
        "Path": [
          "lend_market",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "886": {
        "TypeFields": [
          {
            "Name": "value",
            "TypeName": "Value",
            "TypeId": 397
          },
          {
            "Name": "timestamp",
            "TypeName": "Moment",
            "TypeId": 11
          }
        ],
        "Path": [
          "orml_oracle",
          "module",
          "TimestampedValue"
        ],
        "TypeParams": [
          {
            "Name": "Value",
            "TypeId": 397
          },
          {
            "Name": "Moment",
            "TypeId": 11
          }
        ],
        "TypeDef": "Composite"
      },
      "887": {
        "TypeFields": [
          {
            "TypeName": "BoundedVec<T, S>",
            "TypeId": 888
          }
        ],
        "Path": [
          "orml_utilities",
          "ordered_set",
          "OrderedSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "888": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 38
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "889": {
        "Variants": [
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Sender does not have permission"
            ]
          },
          {
            "Name": "AlreadyFeeded",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Feeder has already feeded at this block"
            ]
          }
        ],
        "Path": [
          "orml_oracle",
          "module",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "890": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 38
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "891": {
        "Variants": [
          {
            "Name": "AlreadyMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Already a member."
            ]
          },
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Not a member."
            ]
          },
          {
            "Name": "TooManyMembers",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Too many members."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "892": {
        "Variants": [
          {
            "Name": "ArgumentsError",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NotSupportTokenType",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "leverage_staking",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "893": {
        "TypeIds": [
          0,
          894
        ],
        "TypeDef": "Tuple"
      },
      "894": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "895": {
        "Variants": [
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "ChannelNameTooLong",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "ConversionError",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "ChannelNotExist",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "TransferError",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "VtokenNotConfiguredForCommission",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "InvalidCommissionRate",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "CommissionTokenAlreadySet",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "InvalidVtoken",
            "TypeFields": null,
            "Index": 8
          }
        ],
        "Path": [
          "bifrost_channel_commission",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "896": {
        "Variants": [
          {
            "Name": "NotEnoughBalance",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "CalculationOverflow",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "LessThanExpected",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "LessThanExistentialDeposit",
            "TypeFields": null,
            "Index": 3
          }
        ],
        "Path": [
          "bifrost_clouds_convert",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "897": {
        "Variants": [
          {
            "Name": "ArgumentsError",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NotEnoughBalance",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "bifrost_buy_back",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "898": {
        "TypeFields": [
          {
            "TypeId": 13
          }
        ],
        "Path": [
          "sp_runtime",
          "generic",
          "unchecked_extrinsic",
          "UncheckedExtrinsic"
        ],
        "TypeParams": [
          {
            "Name": "Address",
            "TypeId": 65
          },
          {
            "Name": "Call",
            "TypeId": 58
          },
          {
            "Name": "Signature",
            "TypeId": 279
          },
          {
            "Name": "Extra",
            "TypeId": 899
          }
        ],
        "TypeDef": "Composite"
      },
      "899": {
        "TypeIds": [
          900,
          901,
          902,
          903,
          904,
          906,
          907,
          908
        ],
        "TypeDef": "Tuple"
      },
      "900": {
        "Path": [
          "frame_system",
          "extensions",
          "check_non_zero_sender",
          "CheckNonZeroSender"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "901": {
        "Path": [
          "frame_system",
          "extensions",
          "check_spec_version",
          "CheckSpecVersion"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "902": {
        "Path": [
          "frame_system",
          "extensions",
          "check_tx_version",
          "CheckTxVersion"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "903": {
        "Path": [
          "frame_system",
          "extensions",
          "check_genesis",
          "CheckGenesis"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "904": {
        "TypeFields": [
          {
            "TypeName": "Era",
            "TypeId": 905
          }
        ],
        "Path": [
          "frame_system",
          "extensions",
          "check_mortality",
          "CheckMortality"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "905": {
        "Variants": [
          {
            "Name": "Immortal",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Mortal1",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 1
          },
          {
            "Name": "Mortal2",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 2
          },
          {
            "Name": "Mortal3",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 3
          },
          {
            "Name": "Mortal4",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 4
          },
          {
            "Name": "Mortal5",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 5
          },
          {
            "Name": "Mortal6",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 6
          },
          {
            "Name": "Mortal7",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 7
          },
          {
            "Name": "Mortal8",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 8
          },
          {
            "Name": "Mortal9",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 9
          },
          {
            "Name": "Mortal10",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 10
          },
          {
            "Name": "Mortal11",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 11
          },
          {
            "Name": "Mortal12",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 12
          },
          {
            "Name": "Mortal13",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 13
          },
          {
            "Name": "Mortal14",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 14
          },
          {
            "Name": "Mortal15",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 15
          },
          {
            "Name": "Mortal16",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 16
          },
          {
            "Name": "Mortal17",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 17
          },
          {
            "Name": "Mortal18",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 18
          },
          {
            "Name": "Mortal19",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 19
          },
          {
            "Name": "Mortal20",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 20
          },
          {
            "Name": "Mortal21",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 21
          },
          {
            "Name": "Mortal22",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 22
          },
          {
            "Name": "Mortal23",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 23
          },
          {
            "Name": "Mortal24",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 24
          },
          {
            "Name": "Mortal25",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 25
          },
          {
            "Name": "Mortal26",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 26
          },
          {
            "Name": "Mortal27",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 27
          },
          {
            "Name": "Mortal28",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 28
          },
          {
            "Name": "Mortal29",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 29
          },
          {
            "Name": "Mortal30",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 30
          },
          {
            "Name": "Mortal31",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 31
          },
          {
            "Name": "Mortal32",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 32
          },
          {
            "Name": "Mortal33",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 33
          },
          {
            "Name": "Mortal34",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 34
          },
          {
            "Name": "Mortal35",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 35
          },
          {
            "Name": "Mortal36",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 36
          },
          {
            "Name": "Mortal37",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 37
          },
          {
            "Name": "Mortal38",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 38
          },
          {
            "Name": "Mortal39",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 39
          },
          {
            "Name": "Mortal40",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 40
          },
          {
            "Name": "Mortal41",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 41
          },
          {
            "Name": "Mortal42",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 42
          },
          {
            "Name": "Mortal43",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 43
          },
          {
            "Name": "Mortal44",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 44
          },
          {
            "Name": "Mortal45",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 45
          },
          {
            "Name": "Mortal46",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 46
          },
          {
            "Name": "Mortal47",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 47
          },
          {
            "Name": "Mortal48",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 48
          },
          {
            "Name": "Mortal49",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 49
          },
          {
            "Name": "Mortal50",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 50
          },
          {
            "Name": "Mortal51",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 51
          },
          {
            "Name": "Mortal52",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 52
          },
          {
            "Name": "Mortal53",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 53
          },
          {
            "Name": "Mortal54",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 54
          },
          {
            "Name": "Mortal55",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 55
          },
          {
            "Name": "Mortal56",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 56
          },
          {
            "Name": "Mortal57",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 57
          },
          {
            "Name": "Mortal58",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 58
          },
          {
            "Name": "Mortal59",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 59
          },
          {
            "Name": "Mortal60",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 60
          },
          {
            "Name": "Mortal61",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 61
          },
          {
            "Name": "Mortal62",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 62
          },
          {
            "Name": "Mortal63",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 63
          },
          {
            "Name": "Mortal64",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 64
          },
          {
            "Name": "Mortal65",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 65
          },
          {
            "Name": "Mortal66",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 66
          },
          {
            "Name": "Mortal67",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 67
          },
          {
            "Name": "Mortal68",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 68
          },
          {
            "Name": "Mortal69",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 69
          },
          {
            "Name": "Mortal70",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 70
          },
          {
            "Name": "Mortal71",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 71
          },
          {
            "Name": "Mortal72",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 72
          },
          {
            "Name": "Mortal73",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 73
          },
          {
            "Name": "Mortal74",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 74
          },
          {
            "Name": "Mortal75",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 75
          },
          {
            "Name": "Mortal76",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 76
          },
          {
            "Name": "Mortal77",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 77
          },
          {
            "Name": "Mortal78",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 78
          },
          {
            "Name": "Mortal79",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 79
          },
          {
            "Name": "Mortal80",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 80
          },
          {
            "Name": "Mortal81",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 81
          },
          {
            "Name": "Mortal82",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 82
          },
          {
            "Name": "Mortal83",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 83
          },
          {
            "Name": "Mortal84",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 84
          },
          {
            "Name": "Mortal85",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 85
          },
          {
            "Name": "Mortal86",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 86
          },
          {
            "Name": "Mortal87",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 87
          },
          {
            "Name": "Mortal88",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 88
          },
          {
            "Name": "Mortal89",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 89
          },
          {
            "Name": "Mortal90",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 90
          },
          {
            "Name": "Mortal91",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 91
          },
          {
            "Name": "Mortal92",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 92
          },
          {
            "Name": "Mortal93",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 93
          },
          {
            "Name": "Mortal94",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 94
          },
          {
            "Name": "Mortal95",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 95
          },
          {
            "Name": "Mortal96",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 96
          },
          {
            "Name": "Mortal97",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 97
          },
          {
            "Name": "Mortal98",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 98
          },
          {
            "Name": "Mortal99",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 99
          },
          {
            "Name": "Mortal100",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 100
          },
          {
            "Name": "Mortal101",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 101
          },
          {
            "Name": "Mortal102",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 102
          },
          {
            "Name": "Mortal103",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 103
          },
          {
            "Name": "Mortal104",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 104
          },
          {
            "Name": "Mortal105",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 105
          },
          {
            "Name": "Mortal106",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 106
          },
          {
            "Name": "Mortal107",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 107
          },
          {
            "Name": "Mortal108",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 108
          },
          {
            "Name": "Mortal109",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 109
          },
          {
            "Name": "Mortal110",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 110
          },
          {
            "Name": "Mortal111",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 111
          },
          {
            "Name": "Mortal112",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 112
          },
          {
            "Name": "Mortal113",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 113
          },
          {
            "Name": "Mortal114",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 114
          },
          {
            "Name": "Mortal115",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 115
          },
          {
            "Name": "Mortal116",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 116
          },
          {
            "Name": "Mortal117",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 117
          },
          {
            "Name": "Mortal118",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 118
          },
          {
            "Name": "Mortal119",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 119
          },
          {
            "Name": "Mortal120",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 120
          },
          {
            "Name": "Mortal121",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 121
          },
          {
            "Name": "Mortal122",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 122
          },
          {
            "Name": "Mortal123",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 123
          },
          {
            "Name": "Mortal124",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 124
          },
          {
            "Name": "Mortal125",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 125
          },
          {
            "Name": "Mortal126",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 126
          },
          {
            "Name": "Mortal127",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 127
          },
          {
            "Name": "Mortal128",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 128
          },
          {
            "Name": "Mortal129",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 129
          },
          {
            "Name": "Mortal130",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 130
          },
          {
            "Name": "Mortal131",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 131
          },
          {
            "Name": "Mortal132",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 132
          },
          {
            "Name": "Mortal133",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 133
          },
          {
            "Name": "Mortal134",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 134
          },
          {
            "Name": "Mortal135",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 135
          },
          {
            "Name": "Mortal136",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 136
          },
          {
            "Name": "Mortal137",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 137
          },
          {
            "Name": "Mortal138",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 138
          },
          {
            "Name": "Mortal139",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 139
          },
          {
            "Name": "Mortal140",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 140
          },
          {
            "Name": "Mortal141",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 141
          },
          {
            "Name": "Mortal142",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 142
          },
          {
            "Name": "Mortal143",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 143
          },
          {
            "Name": "Mortal144",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 144
          },
          {
            "Name": "Mortal145",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 145
          },
          {
            "Name": "Mortal146",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 146
          },
          {
            "Name": "Mortal147",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 147
          },
          {
            "Name": "Mortal148",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 148
          },
          {
            "Name": "Mortal149",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 149
          },
          {
            "Name": "Mortal150",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 150
          },
          {
            "Name": "Mortal151",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 151
          },
          {
            "Name": "Mortal152",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 152
          },
          {
            "Name": "Mortal153",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 153
          },
          {
            "Name": "Mortal154",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 154
          },
          {
            "Name": "Mortal155",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 155
          },
          {
            "Name": "Mortal156",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 156
          },
          {
            "Name": "Mortal157",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 157
          },
          {
            "Name": "Mortal158",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 158
          },
          {
            "Name": "Mortal159",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 159
          },
          {
            "Name": "Mortal160",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 160
          },
          {
            "Name": "Mortal161",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 161
          },
          {
            "Name": "Mortal162",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 162
          },
          {
            "Name": "Mortal163",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 163
          },
          {
            "Name": "Mortal164",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 164
          },
          {
            "Name": "Mortal165",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 165
          },
          {
            "Name": "Mortal166",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 166
          },
          {
            "Name": "Mortal167",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 167
          },
          {
            "Name": "Mortal168",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 168
          },
          {
            "Name": "Mortal169",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 169
          },
          {
            "Name": "Mortal170",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 170
          },
          {
            "Name": "Mortal171",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 171
          },
          {
            "Name": "Mortal172",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 172
          },
          {
            "Name": "Mortal173",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 173
          },
          {
            "Name": "Mortal174",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 174
          },
          {
            "Name": "Mortal175",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 175
          },
          {
            "Name": "Mortal176",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 176
          },
          {
            "Name": "Mortal177",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 177
          },
          {
            "Name": "Mortal178",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 178
          },
          {
            "Name": "Mortal179",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 179
          },
          {
            "Name": "Mortal180",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 180
          },
          {
            "Name": "Mortal181",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 181
          },
          {
            "Name": "Mortal182",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 182
          },
          {
            "Name": "Mortal183",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 183
          },
          {
            "Name": "Mortal184",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 184
          },
          {
            "Name": "Mortal185",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 185
          },
          {
            "Name": "Mortal186",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 186
          },
          {
            "Name": "Mortal187",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 187
          },
          {
            "Name": "Mortal188",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 188
          },
          {
            "Name": "Mortal189",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 189
          },
          {
            "Name": "Mortal190",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 190
          },
          {
            "Name": "Mortal191",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 191
          },
          {
            "Name": "Mortal192",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 192
          },
          {
            "Name": "Mortal193",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 193
          },
          {
            "Name": "Mortal194",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 194
          },
          {
            "Name": "Mortal195",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 195
          },
          {
            "Name": "Mortal196",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 196
          },
          {
            "Name": "Mortal197",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 197
          },
          {
            "Name": "Mortal198",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 198
          },
          {
            "Name": "Mortal199",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 199
          },
          {
            "Name": "Mortal200",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 200
          },
          {
            "Name": "Mortal201",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 201
          },
          {
            "Name": "Mortal202",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 202
          },
          {
            "Name": "Mortal203",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 203
          },
          {
            "Name": "Mortal204",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 204
          },
          {
            "Name": "Mortal205",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 205
          },
          {
            "Name": "Mortal206",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 206
          },
          {
            "Name": "Mortal207",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 207
          },
          {
            "Name": "Mortal208",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 208
          },
          {
            "Name": "Mortal209",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 209
          },
          {
            "Name": "Mortal210",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 210
          },
          {
            "Name": "Mortal211",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 211
          },
          {
            "Name": "Mortal212",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 212
          },
          {
            "Name": "Mortal213",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 213
          },
          {
            "Name": "Mortal214",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 214
          },
          {
            "Name": "Mortal215",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 215
          },
          {
            "Name": "Mortal216",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 216
          },
          {
            "Name": "Mortal217",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 217
          },
          {
            "Name": "Mortal218",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 218
          },
          {
            "Name": "Mortal219",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 219
          },
          {
            "Name": "Mortal220",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 220
          },
          {
            "Name": "Mortal221",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 221
          },
          {
            "Name": "Mortal222",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 222
          },
          {
            "Name": "Mortal223",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 223
          },
          {
            "Name": "Mortal224",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 224
          },
          {
            "Name": "Mortal225",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 225
          },
          {
            "Name": "Mortal226",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 226
          },
          {
            "Name": "Mortal227",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 227
          },
          {
            "Name": "Mortal228",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 228
          },
          {
            "Name": "Mortal229",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 229
          },
          {
            "Name": "Mortal230",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 230
          },
          {
            "Name": "Mortal231",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 231
          },
          {
            "Name": "Mortal232",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 232
          },
          {
            "Name": "Mortal233",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 233
          },
          {
            "Name": "Mortal234",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 234
          },
          {
            "Name": "Mortal235",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 235
          },
          {
            "Name": "Mortal236",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 236
          },
          {
            "Name": "Mortal237",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 237
          },
          {
            "Name": "Mortal238",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 238
          },
          {
            "Name": "Mortal239",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 239
          },
          {
            "Name": "Mortal240",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 240
          },
          {
            "Name": "Mortal241",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 241
          },
          {
            "Name": "Mortal242",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 242
          },
          {
            "Name": "Mortal243",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 243
          },
          {
            "Name": "Mortal244",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 244
          },
          {
            "Name": "Mortal245",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 245
          },
          {
            "Name": "Mortal246",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 246
          },
          {
            "Name": "Mortal247",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 247
          },
          {
            "Name": "Mortal248",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 248
          },
          {
            "Name": "Mortal249",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 249
          },
          {
            "Name": "Mortal250",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 250
          },
          {
            "Name": "Mortal251",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 251
          },
          {
            "Name": "Mortal252",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 252
          },
          {
            "Name": "Mortal253",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 253
          },
          {
            "Name": "Mortal254",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 254
          },
          {
            "Name": "Mortal255",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 255
          }
        ],
        "Path": [
          "sp_runtime",
          "generic",
          "era",
          "Era"
        ],
        "TypeDef": "Variant"
      },
      "906": {
        "TypeFields": [
          {
            "TypeName": "T::Nonce",
            "TypeId": 66
          }
        ],
        "Path": [
          "frame_system",
          "extensions",
          "check_nonce",
          "CheckNonce"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "907": {
        "Path": [
          "frame_system",
          "extensions",
          "check_weight",
          "CheckWeight"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "908": {
        "TypeFields": [
          {
            "TypeName": "BalanceOf<T>",
            "TypeId": 84
          }
        ],
        "Path": [
          "pallet_transaction_payment",
          "ChargeTransactionPayment"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "909": {
        "Path": [
          "bifrost_polkadot_runtime",
          "Runtime"
        ],
        "TypeDef": "Composite"
      }
    },
    "Modules": {
      "0": {
        "Name": "System",
        "Storage": {
          "Prefix": "System",
          "Entries": [
            {
              "Name": "Account",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 3
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA=",
              "Docs": [
                " The full account information for a particular account ID."
              ]
            },
            {
              "Name": "ExtrinsicCount",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Total extrinsics count for the current block."
              ]
            },
            {
              "Name": "BlockWeight",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAAAA",
              "Docs": [
                " The current weight for the block."
              ]
            },
            {
              "Name": "AllExtrinsicsLen",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Total length (in bytes) for all extrinsics put together, for the current block."
              ]
            },
            {
              "Name": "BlockHash",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 12
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Map of block numbers to block hashes."
              ]
            },
            {
              "Name": "ExtrinsicData",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 13
                }
              },
              "Default": "AA==",
              "Docs": [
                " Extrinsics data for the current block (maps an extrinsic's index to its data)."
              ]
            },
            {
              "Name": "Number",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The current block number being processed. Set by `execute_block`."
              ]
            },
            {
              "Name": "ParentHash",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 12,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Hash of the previous block."
              ]
            },
            {
              "Name": "Digest",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 14,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Digest of the current block, also part of the block header."
              ]
            },
            {
              "Name": "Events",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 18,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Events deposited for the current block.",
                "",
                " NOTE: The item is unbound and should therefore never be read on chain.",
                " It could otherwise inflate the PoV size of a block.",
                "",
                " Events have a large in-memory size. Box the events to not go out-of-memory",
                " just in case someone still reads them from within the runtime."
              ]
            },
            {
              "Name": "EventCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of events in the `Events<T>` list."
              ]
            },
            {
              "Name": "EventTopics",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 12,
                  "Value": 510
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                " of events in the `<Events<T>>` list.",
                "",
                " All topic vectors have deterministic storage locations depending on the topic. This",
                " allows light-clients to leverage the changes trie storage tracking mechanism and",
                " in case of changes fetch the list of events of interest.",
                "",
                " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                " the `EventIndex` then in case if the topic has the same contents on the next block",
                " no notification will be triggered thus the event might be lost."
              ]
            },
            {
              "Name": "LastRuntimeUpgrade",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 511,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
              ]
            },
            {
              "Name": "UpgradedToU32RefCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
              ]
            },
            {
              "Name": "UpgradedToTripleRefCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                " (default) if not."
              ]
            },
            {
              "Name": "ExecutionPhase",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 509,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The execution phase of the block."
              ]
            },
            {
              "Name": "AuthorizedUpgrade",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 513,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " `Some` if a code upgrade has been authorized."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 59
        },
        "Events": {
          "TypeId": 21
        },
        "Constants": [
          {
            "Name": "BlockWeights",
            "TypeId": 514,
            "Value": "AlsfXQAHAIhSanQCAEABwqCpHQABB9AJGKRLAgDQAAEHAOa9T1cCAPAAAQAAwqCpHQABB9CrrL5oAgAgAQEHAIhSanQCAEABAQcAopQaHQIAUADCoKkdAAAAAA==",
            "Docs": [
              " Block & extrinsics weights: base values and limits."
            ]
          },
          {
            "Name": "BlockLength",
            "TypeId": 517,
            "Value": "AAA8AAAAUAAAAFAA",
            "Docs": [
              " The maximum length of a block (in bytes)."
            ]
          },
          {
            "Name": "BlockHashCount",
            "TypeId": 4,
            "Value": "+gAAAA==",
            "Docs": [
              " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
            ]
          },
          {
            "Name": "DbWeight",
            "TypeId": 519,
            "Value": "QHh9AQAAAAAA4fUFAAAAAA==",
            "Docs": [
              " The weight of runtime database operations the runtime can invoke."
            ]
          },
          {
            "Name": "Version",
            "TypeId": 520,
            "Value": "QGJpZnJvc3RfcG9sa2Fkb3RAYmlmcm9zdF9wb2xrYWRvdAAAAAD4KgAAAAAAAEzSvJiX7tCPFQMAAADfastomQdgmwQAAABA/jrUAfiVmgYAAAC8nYmQT1uSPwEAAAA3yLsTUKmiqAQAAAA345f8fJH15AIAAAD3iyeL5T9FTAIAAACrPAVyKR/riwEAAADqk+Pxbz1pYgIAAADdcY1cxTJi1AEAAAD4d0aPTKDoJgEAAABgrtQ8tSRW8QEAAADcZVRo2DlBIAEAAAANlLgMF4Yw8AEAAACb9d/GTxWiSwEAAACx75FadSx6RgEAAABW7+9tuyE7rwEAAABODpWHTRpqPwEAAAD7xXe510fv1gEAAAABAAAAAA==",
            "Docs": [
              " Get the chain's current version."
            ]
          },
          {
            "Name": "SS58Prefix",
            "TypeId": 56,
            "Value": "BgA=",
            "Docs": [
              " The designated SS58 prefix of this chain.",
              "",
              " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
              " that the runtime should know about the prefix in order to make use of it as",
              " an identifier of the chain."
            ]
          }
        ],
        "Errors": {
          "TypeId": 524
        },
        "Index": 0
      },
      "1": {
        "Name": "Timestamp",
        "Storage": {
          "Prefix": "Timestamp",
          "Entries": [
            {
              "Name": "Now",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 11,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The current time for the current block."
              ]
            },
            {
              "Name": "DidUpdate",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Whether the timestamp has been updated in this block.",
                "",
                " This value is updated to `true` upon successful submission of a timestamp by a node.",
                " It is then checked at the end of each block execution in the `on_finalize` hook."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 63
        },
        "Events": null,
        "Constants": [
          {
            "Name": "MinimumPeriod",
            "TypeId": 11,
            "Value": "cBcAAAAAAAA=",
            "Docs": [
              " The minimum period between blocks.",
              "",
              " Be aware that this is different to the *expected* period that the block production",
              " apparatus provides. Your chosen consensus system will generally work with this to",
              " determine a sensible block time. For example, in the Aura pallet it will be double this",
              " period on default settings."
            ]
          }
        ],
        "Errors": null,
        "Index": 1
      },
      "2": {
        "Name": "Indices",
        "Storage": {
          "Prefix": "Indices",
          "Entries": [
            {
              "Name": "Accounts",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 525
                }
              },
              "Default": "AA==",
              "Docs": [
                " The lookup from index to account."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 64
        },
        "Events": {
          "TypeId": 31
        },
        "Constants": [
          {
            "Name": "Deposit",
            "TypeId": 6,
            "Value": "AKByThgJAAAAAAAAAAAAAA==",
            "Docs": [
              " The deposit needed for reserving an index."
            ]
          }
        ],
        "Errors": {
          "TypeId": 526
        },
        "Index": 2
      },
      "5": {
        "Name": "ParachainSystem",
        "Storage": {
          "Prefix": "ParachainSystem",
          "Entries": [
            {
              "Name": "UnincludedSegment",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 527,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Latest included block descendants the runtime accepted. In other words, these are",
                " ancestors of the currently executing block which have not been included in the observed",
                " relay-chain state.",
                "",
                " The segment length is limited by the capacity returned from the [`ConsensusHook`] configured",
                " in the pallet."
              ]
            },
            {
              "Name": "AggregatedUnincludedSegment",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 536,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Storage field that keeps track of bandwidth used by the unincluded segment along with the",
                " latest HRMP watermark. Used for limiting the acceptance of new blocks with",
                " respect to relay chain constraints."
              ]
            },
            {
              "Name": "PendingValidationCode",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 13,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " In case of a scheduled upgrade, this storage field contains the validation code to be",
                " applied.",
                "",
                " As soon as the relay chain gives us the go-ahead signal, we will overwrite the",
                " [`:code`][sp_core::storage::well_known_keys::CODE] which will result the next block process",
                " with the new validation code. This concludes the upgrade process."
              ]
            },
            {
              "Name": "NewValidationCode",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 13,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Validation code that is set by the parachain and is to be communicated to collator and",
                " consequently the relay-chain.",
                "",
                " This will be cleared in `on_initialize` of each new block if no other pallet already set",
                " the value."
              ]
            },
            {
              "Name": "ValidationData",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 70,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The [`PersistedValidationData`] set for this block.",
                " This value is expected to be set only once per block and it's never stored",
                " in the trie."
              ]
            },
            {
              "Name": "DidSetValidationCode",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Were the validation data set to notify the relay chain?"
              ]
            },
            {
              "Name": "LastRelayChainBlockNumber",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The relay chain block number associated with the last parachain block.",
                "",
                " This is updated in `on_finalize`."
              ]
            },
            {
              "Name": "UpgradeRestrictionSignal",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 537,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " An option which indicates if the relay-chain restricts signalling a validation code upgrade.",
                " In other words, if this is `Some` and [`NewValidationCode`] is `Some` then the produced",
                " candidate will be invalid.",
                "",
                " This storage item is a mirror of the corresponding value for the current parachain from the",
                " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                " set after the inherent."
              ]
            },
            {
              "Name": "UpgradeGoAhead",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 534,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Optional upgrade go-ahead signal from the relay-chain.",
                "",
                " This storage item is a mirror of the corresponding value for the current parachain from the",
                " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                " set after the inherent."
              ]
            },
            {
              "Name": "RelayStateProof",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 72,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The state proof for the last relay parent block.",
                "",
                " This field is meant to be updated each block with the validation data inherent. Therefore,",
                " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                "",
                " This data is also absent from the genesis."
              ]
            },
            {
              "Name": "RelevantMessagingState",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 539,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The snapshot of some state related to messaging relevant to the current parachain as per",
                " the relay parent.",
                "",
                " This field is meant to be updated each block with the validation data inherent. Therefore,",
                " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                "",
                " This data is also absent from the genesis."
              ]
            },
            {
              "Name": "HostConfiguration",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 544,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The parachain host configuration that was obtained from the relay parent.",
                "",
                " This field is meant to be updated each block with the validation data inherent. Therefore,",
                " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                "",
                " This data is also absent from the genesis."
              ]
            },
            {
              "Name": "LastDmqMqcHead",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 546,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " The last downward message queue chain head we have observed.",
                "",
                " This value is loaded before and saved after processing inbound downward messages carried",
                " by the system inherent."
              ]
            },
            {
              "Name": "LastHrmpMqcHeads",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 547,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The message queue chain heads we have observed per each channel incoming channel.",
                "",
                " This value is loaded before and saved after processing inbound downward messages carried",
                " by the system inherent."
              ]
            },
            {
              "Name": "ProcessedDownwardMessages",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Number of downward messages processed in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "Name": "HrmpWatermark",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " HRMP watermark that was set in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "Name": "HrmpOutboundMessages",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 550,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " HRMP messages that were sent in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "Name": "UpwardMessages",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 62,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Upward messages that were sent in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "Name": "PendingUpwardMessages",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 62,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Upward messages that are still pending and not yet send to the relay chain."
              ]
            },
            {
              "Name": "UpwardDeliveryFeeFactor",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 397,
                "Item2": null
              },
              "Default": "AABkp7O24A0AAAAAAAAAAA==",
              "Docs": [
                " The factor to multiply the base delivery fee by for UMP."
              ]
            },
            {
              "Name": "AnnouncedHrmpMessagesPerCandidate",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of HRMP messages we observed in `on_initialize` and thus used that number for",
                " announcing the weight of `on_initialize` and `on_finalize`."
              ]
            },
            {
              "Name": "ReservedXcmpWeightOverride",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 9,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The weight we reserve at the beginning of the block for processing XCMP messages. This",
                " overrides the amount set in the Config trait."
              ]
            },
            {
              "Name": "ReservedDmpWeightOverride",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 9,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The weight we reserve at the beginning of the block for processing DMP messages. This",
                " overrides the amount set in the Config trait."
              ]
            },
            {
              "Name": "CustomValidationHeadData",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 13,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " A custom head data that should be returned as result of `validate_block`.",
                "",
                " See `Pallet::set_custom_validation_head_data` for more information."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 68
        },
        "Events": {
          "TypeId": 32
        },
        "Constants": [],
        "Errors": {
          "TypeId": 552
        },
        "Index": 5
      },
      "6": {
        "Name": "ParachainInfo",
        "Storage": {
          "Prefix": "ParachainInfo",
          "Entries": [
            {
              "Name": "ParachainId",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 77,
                "Item2": null
              },
              "Default": "ZAAAAA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 82
        },
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 6
      },
      "10": {
        "Name": "Balances",
        "Storage": {
          "Prefix": "Balances",
          "Entries": [
            {
              "Name": "TotalIssuance",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The total units issued in the system."
              ]
            },
            {
              "Name": "InactiveIssuance",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The total units of outstanding deactivated balance in the system."
              ]
            },
            {
              "Name": "Account",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 5
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgA==",
              "Docs": [
                " The Balances pallet example of storing the balance of an account.",
                "",
                " # Example",
                "",
                " ```nocompile",
                "  impl pallet_balances::Config for Runtime {",
                "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                "  }",
                " ```",
                "",
                " You can also store the balance of an account in the `System` pallet.",
                "",
                " # Example",
                "",
                " ```nocompile",
                "  impl pallet_balances::Config for Runtime {",
                "   type AccountStore = System",
                "  }",
                " ```",
                "",
                " But this comes with tradeoffs, storing account balances in the system pallet stores",
                " `frame_system` data alongside the account data contrary to storing account balances in the",
                " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                " NOTE: This is only used in the case that this pallet is used to store balances."
              ]
            },
            {
              "Name": "Locks",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 553
                }
              },
              "Default": "AA==",
              "Docs": [
                " Any liquidity locks on some account balances.",
                " NOTE: Should only be accessed when setting, changing and freeing a lock."
              ]
            },
            {
              "Name": "Reserves",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 557
                }
              },
              "Default": "AA==",
              "Docs": [
                " Named reserves on some account balances."
              ]
            },
            {
              "Name": "Holds",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 560
                }
              },
              "Default": "AA==",
              "Docs": [
                " Holds on account balances."
              ]
            },
            {
              "Name": "Freezes",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 565
                }
              },
              "Default": "AA==",
              "Docs": [
                " Freeze locks on account balances."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 83
        },
        "Events": {
          "TypeId": 34
        },
        "Constants": [
          {
            "Name": "ExistentialDeposit",
            "TypeId": 6,
            "Value": "AOQLVAIAAAAAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",
              "",
              " If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for",
              " this pallet. However, you do so at your own risk: this will open up a major DoS vector.",
              " In case you have multiple sources of provider references, you may also get unexpected",
              " behaviour if you set this to zero.",
              "",
              " Bottom line: Do yourself a favour and make it at least one!"
            ]
          },
          {
            "Name": "MaxLocks",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum number of locks that should exist on an account.",
              " Not strictly enforced, but used for weight estimation."
            ]
          },
          {
            "Name": "MaxReserves",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum number of named reserves that can exist on an account."
            ]
          },
          {
            "Name": "MaxFreezes",
            "TypeId": 4,
            "Value": "AAAAAA==",
            "Docs": [
              " The maximum number of individual freeze locks that can exist on an account at any time."
            ]
          }
        ],
        "Errors": {
          "TypeId": 568
        },
        "Index": 10
      },
      "11": {
        "Name": "TransactionPayment",
        "Storage": {
          "Prefix": "TransactionPayment",
          "Entries": [
            {
              "Name": "NextFeeMultiplier",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 397,
                "Item2": null
              },
              "Default": "AABkp7O24A0AAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "StorageVersion",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 569,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": null,
        "Events": {
          "TypeId": 36
        },
        "Constants": [
          {
            "Name": "OperationalFeeMultiplier",
            "TypeId": 2,
            "Value": "BQ==",
            "Docs": [
              " A fee multiplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
              " `priority`",
              "",
              " This value is multiplied by the `final_fee` to obtain a \"virtual tip\" that is later",
              " added to a tip component in regular `priority` calculations.",
              " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
              " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
              "",
              " ```rust,ignore",
              " // For `Normal`",
              " let priority = priority_calc(tip);",
              "",
              " // For `Operational`",
              " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
              " let priority = priority_calc(tip + virtual_tip);",
              " ```",
              "",
              " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
              " sent with the transaction. So, not only does the transaction get a priority bump based",
              " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
              " transactions."
            ]
          }
        ],
        "Errors": null,
        "Index": 11
      },
      "20": {
        "Name": "Authorship",
        "Storage": {
          "Prefix": "Authorship",
          "Entries": [
            {
              "Name": "Author",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Author of current block."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 20
      },
      "21": {
        "Name": "CollatorSelection",
        "Storage": {
          "Prefix": "CollatorSelection",
          "Entries": [
            {
              "Name": "Invulnerables",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 570,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The invulnerable, permissioned collators. This list must be sorted."
              ]
            },
            {
              "Name": "CandidateList",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 571,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The (community, limited) collation candidates. `Candidates` and `Invulnerables` should be",
                " mutually exclusive.",
                "",
                " This list is sorted in ascending order by deposit and when the deposits are equal, the least",
                " recently updated is considered greater."
              ]
            },
            {
              "Name": "LastAuthoredBlock",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Last block authored by collator."
              ]
            },
            {
              "Name": "DesiredCandidates",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Desired number of candidates.",
                "",
                " This should ideally always be less than [`Config::MaxCandidates`] for weights to be correct."
              ]
            },
            {
              "Name": "CandidacyBond",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Fixed amount to deposit to become a collator.",
                "",
                " When a collator calls `leave_intent` they immediately receive the deposit back."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 86
        },
        "Events": {
          "TypeId": 37
        },
        "Constants": [],
        "Errors": {
          "TypeId": 574
        },
        "Index": 21
      },
      "22": {
        "Name": "Session",
        "Storage": {
          "Prefix": "Session",
          "Entries": [
            {
              "Name": "Validators",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 38,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current set of validators."
              ]
            },
            {
              "Name": "CurrentIndex",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Current index of the session."
              ]
            },
            {
              "Name": "QueuedChanged",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " True if the underlying economic identities or weighting behind the validators",
                " has changed in the queued validator set."
              ]
            },
            {
              "Name": "QueuedKeys",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 575,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The queued keys for the next session. When the next session begins, these keys",
                " will be used to determine the validator's session keys."
              ]
            },
            {
              "Name": "DisabledValidators",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 380,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Indices of disabled validators.",
                "",
                " The vec is always kept sorted so that we can find whether a given validator is",
                " disabled using binary search. It gets cleared when `on_session_ending` returns",
                " a new set of identities."
              ]
            },
            {
              "Name": "NextKeys",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 88
                }
              },
              "Default": "AA==",
              "Docs": [
                " The next session keys for a validator."
              ]
            },
            {
              "Name": "KeyOwner",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 577,
                  "Value": 0
                }
              },
              "Default": "AA==",
              "Docs": [
                " The owner of a key. The key is the `KeyTypeId` + the encoded key."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 87
        },
        "Events": {
          "TypeId": 39
        },
        "Constants": [],
        "Errors": {
          "TypeId": 579
        },
        "Index": 22
      },
      "23": {
        "Name": "Aura",
        "Storage": {
          "Prefix": "Aura",
          "Entries": [
            {
              "Name": "Authorities",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 580,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current authority set."
              ]
            },
            {
              "Name": "CurrentSlot",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 582,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The current slot of this block.",
                "",
                " This will be set in `on_initialize`."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 23
      },
      "24": {
        "Name": "AuraExt",
        "Storage": {
          "Prefix": "AuraExt",
          "Entries": [
            {
              "Name": "Authorities",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 580,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Serves as cache for the authorities.",
                "",
                " The authorities in AuRa are overwritten in `on_initialize` when we switch to a new session,",
                " but we require the old authorities to verify the seal when validating a PoV. This will",
                " always be updated to the latest AuRa authorities in `on_finalize`."
              ]
            },
            {
              "Name": "SlotInfo",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 583,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Current slot paired with a number of authored blocks.",
                "",
                " Updated on each block initialization."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 24
      },
      "30": {
        "Name": "Democracy",
        "Storage": {
          "Prefix": "Democracy",
          "Entries": [
            {
              "Name": "PublicPropCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of (public) proposals that have been made so far."
              ]
            },
            {
              "Name": "PublicProps",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 584,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The public proposals. Unsorted. The second item is the proposal."
              ]
            },
            {
              "Name": "DepositOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 587
                }
              },
              "Default": "AA==",
              "Docs": [
                " Those who have locked a deposit.",
                "",
                " TWOX-NOTE: Safe, as increasing integer keys are safe."
              ]
            },
            {
              "Name": "ReferendumCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The next free referendum index, aka the number of referenda started so far."
              ]
            },
            {
              "Name": "LowestUnbaked",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The lowest referendum index representing an unbaked referendum. Equal to",
                " `ReferendumCount` if there isn't a unbaked referendum."
              ]
            },
            {
              "Name": "ReferendumInfoOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 589
                }
              },
              "Default": "AA==",
              "Docs": [
                " Information concerning any given referendum.",
                "",
                " TWOX-NOTE: SAFE as indexes are not under an attacker���s control."
              ]
            },
            {
              "Name": "VotingOf",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 592
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
              "Docs": [
                " All votes for a particular voter. We store the balance for the number of votes that we",
                " have recorded. The second item is the total amount of delegations, that will be added.",
                "",
                " TWOX-NOTE: SAFE as `AccountId`s are crypto hashes anyway."
              ]
            },
            {
              "Name": "LastTabledWasExternal",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " True if the last referendum tabled was submitted externally. False if it was a public",
                " proposal."
              ]
            },
            {
              "Name": "NextExternal",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 598,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The referendum to be tabled whenever it would be valid to table an external proposal.",
                " This happens when a referendum needs to be tabled and one of two conditions are met:",
                " - `LastTabledWasExternal` is `false`; or",
                " - `PublicProps` is empty."
              ]
            },
            {
              "Name": "Blacklist",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 599
                }
              },
              "Default": "AA==",
              "Docs": [
                " A record of who vetoed what. Maps proposal hash to a possible existent block number",
                " (until when it may not be resubmitted) and who vetoed it."
              ]
            },
            {
              "Name": "Cancellations",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 30
                }
              },
              "Default": "AA==",
              "Docs": [
                " Record of all proposals that have been subject to emergency cancellation."
              ]
            },
            {
              "Name": "MetadataOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 44,
                  "Value": 12
                }
              },
              "Default": "AA==",
              "Docs": [
                " General information concerning any proposal or referendum.",
                " The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON",
                " dump or IPFS hash of a JSON file.",
                "",
                " Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)",
                " large preimages."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 91
        },
        "Events": {
          "TypeId": 40
        },
        "Constants": [
          {
            "Name": "EnactmentPeriod",
            "TypeId": 4,
            "Value": "gBMDAA==",
            "Docs": [
              " The period between a proposal being approved and enacted.",
              "",
              " It should generally be a little more than the unstake period to ensure that",
              " voting stakers have an opportunity to remove themselves from the system in the case",
              " where they are on the losing side of a vote."
            ]
          },
          {
            "Name": "LaunchPeriod",
            "TypeId": 4,
            "Value": "gBMDAA==",
            "Docs": [
              " How often (in blocks) new public referenda are launched."
            ]
          },
          {
            "Name": "VotingPeriod",
            "TypeId": 4,
            "Value": "gBMDAA==",
            "Docs": [
              " How often (in blocks) to check for new votes."
            ]
          },
          {
            "Name": "VoteLockingPeriod",
            "TypeId": 4,
            "Value": "gBMDAA==",
            "Docs": [
              " The minimum period of vote locking.",
              "",
              " It should be no shorter than enactment period to ensure that in the case of an approval,",
              " those successful voters are locked into the consequences that their votes entail."
            ]
          },
          {
            "Name": "MinimumDeposit",
            "TypeId": 6,
            "Value": "AEB6EPNaAAAAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount to be used as a deposit for a public referendum proposal."
            ]
          },
          {
            "Name": "InstantAllowed",
            "TypeId": 30,
            "Value": "AQ==",
            "Docs": [
              " Indicator for whether an emergency origin is even allowed to happen. Some chains may",
              " want to set this permanently to `false`, others may want to condition it on things such",
              " as an upgrade having happened recently."
            ]
          },
          {
            "Name": "FastTrackVotingPeriod",
            "TypeId": 4,
            "Value": "hAMAAA==",
            "Docs": [
              " Minimum voting period allowed for a fast-track referendum."
            ]
          },
          {
            "Name": "CooloffPeriod",
            "TypeId": 4,
            "Value": "4MQAAA==",
            "Docs": [
              " Period in blocks where an external proposal may not be re-submitted after being vetoed."
            ]
          },
          {
            "Name": "MaxVotes",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of votes for an account.",
              "",
              " Also used to compute weight, an overly big value can",
              " lead to extrinsic with very big weight: see `delegate` for instance."
            ]
          },
          {
            "Name": "MaxProposals",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of public proposals that can exist at any time."
            ]
          },
          {
            "Name": "MaxDeposits",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of deposits a public proposal may have at any time."
            ]
          },
          {
            "Name": "MaxBlacklisted",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of items which can be blacklisted."
            ]
          }
        ],
        "Errors": {
          "TypeId": 600
        },
        "Index": 30
      },
      "31": {
        "Name": "Council",
        "Storage": {
          "Prefix": "Council",
          "Entries": [
            {
              "Name": "Proposals",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 601,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The hashes of the active proposals."
              ]
            },
            {
              "Name": "ProposalOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 58
                }
              },
              "Default": "AA==",
              "Docs": [
                " Actual proposal for a given hash, if it's current."
              ]
            },
            {
              "Name": "Voting",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 602
                }
              },
              "Default": "AA==",
              "Docs": [
                " Votes on a given proposal, if it is ongoing."
              ]
            },
            {
              "Name": "ProposalCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Proposals so far."
              ]
            },
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 38,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current members of the collective. This is stored sorted (just by value)."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The prime member that helps determine the default vote behavior in case of absentations."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 95
        },
        "Events": {
          "TypeId": 45
        },
        "Constants": [
          {
            "Name": "MaxProposalWeight",
            "TypeId": 9,
            "Value": "BwBEKTU6AgCgAA==",
            "Docs": [
              " The maximum weight of a dispatch call that can be proposed and executed."
            ]
          }
        ],
        "Errors": {
          "TypeId": 603
        },
        "Index": 31
      },
      "32": {
        "Name": "TechnicalCommittee",
        "Storage": {
          "Prefix": "TechnicalCommittee",
          "Entries": [
            {
              "Name": "Proposals",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 604,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The hashes of the active proposals."
              ]
            },
            {
              "Name": "ProposalOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 58
                }
              },
              "Default": "AA==",
              "Docs": [
                " Actual proposal for a given hash, if it's current."
              ]
            },
            {
              "Name": "Voting",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 602
                }
              },
              "Default": "AA==",
              "Docs": [
                " Votes on a given proposal, if it is ongoing."
              ]
            },
            {
              "Name": "ProposalCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Proposals so far."
              ]
            },
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 38,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current members of the collective. This is stored sorted (just by value)."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The prime member that helps determine the default vote behavior in case of absentations."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 97
        },
        "Events": {
          "TypeId": 48
        },
        "Constants": [
          {
            "Name": "MaxProposalWeight",
            "TypeId": 9,
            "Value": "BwBEKTU6AgCgAA==",
            "Docs": [
              " The maximum weight of a dispatch call that can be proposed and executed."
            ]
          }
        ],
        "Errors": {
          "TypeId": 605
        },
        "Index": 32
      },
      "33": {
        "Name": "PhragmenElection",
        "Storage": {
          "Prefix": "PhragmenElection",
          "Entries": [
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 606,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current elected members.",
                "",
                " Invariant: Always sorted based on account id."
              ]
            },
            {
              "Name": "RunnersUp",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 606,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current reserved runners-up.",
                "",
                " Invariant: Always sorted based on rank (worse to best). Upon removal of a member, the",
                " last (i.e. _best_) runner-up will be replaced."
              ]
            },
            {
              "Name": "Candidates",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 50,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The present candidate list. A current member or runner-up can never enter this vector",
                " and is always implicitly assumed to be a candidate.",
                "",
                " Second element is the deposit.",
                "",
                " Invariant: Always sorted based on account id."
              ]
            },
            {
              "Name": "ElectionRounds",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The total number of vote rounds that have happened, excluding the upcoming one."
              ]
            },
            {
              "Name": "Voting",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 608
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
              "Docs": [
                " Votes and locked stake of a particular voter.",
                "",
                " TWOX-NOTE: SAFE as `AccountId` is a crypto hash."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 98
        },
        "Events": {
          "TypeId": 49
        },
        "Constants": [
          {
            "Name": "PalletId",
            "TypeId": 158,
            "Value": "cGhyZWxlY3Q=",
            "Docs": [
              " Identifier for the elections-phragmen pallet's lock"
            ]
          },
          {
            "Name": "CandidacyBond",
            "TypeId": 6,
            "Value": "AADBb/KGIwAAAAAAAAAAAA==",
            "Docs": [
              " How much should be locked up in order to submit one's candidacy."
            ]
          },
          {
            "Name": "VotingBondBase",
            "TypeId": 6,
            "Value": "AFyI/qADAAAAAAAAAAAAAA==",
            "Docs": [
              " Base deposit associated with voting.",
              "",
              " This should be sensibly high to economically ensure the pallet cannot be attacked by",
              " creating a gigantic number of votes."
            ]
          },
          {
            "Name": "VotingBondFactor",
            "TypeId": 6,
            "Value": "AADrCL8BAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of bond that need to be locked for each vote (32 bytes)."
            ]
          },
          {
            "Name": "DesiredMembers",
            "TypeId": 4,
            "Value": "AwAAAA==",
            "Docs": [
              " Number of members to elect."
            ]
          },
          {
            "Name": "DesiredRunnersUp",
            "TypeId": 4,
            "Value": "FAAAAA==",
            "Docs": [
              " Number of runners_up to keep."
            ]
          },
          {
            "Name": "TermDuration",
            "TypeId": 4,
            "Value": "4MQAAA==",
            "Docs": [
              " How long each seat is kept. This defines the next block number at which an election",
              " round will happen. If set to zero, no elections are ever triggered and the module will",
              " be in passive mode."
            ]
          },
          {
            "Name": "MaxCandidates",
            "TypeId": 4,
            "Value": "QAAAAA==",
            "Docs": [
              " The maximum number of candidates in a phragmen election.",
              "",
              " Warning: This impacts the size of the election which is run onchain. Chose wisely, and",
              " consider how it will impact `T::WeightInfo::election_phragmen`.",
              "",
              " When this limit is reached no more candidates are accepted in the election."
            ]
          },
          {
            "Name": "MaxVoters",
            "TypeId": 4,
            "Value": "AAIAAA==",
            "Docs": [
              " The maximum number of voters to allow in a phragmen election.",
              "",
              " Warning: This impacts the size of the election which is run onchain. Chose wisely, and",
              " consider how it will impact `T::WeightInfo::election_phragmen`.",
              "",
              " When the limit is reached the new voters are ignored."
            ]
          },
          {
            "Name": "MaxVotesPerVoter",
            "TypeId": 4,
            "Value": "EAAAAA==",
            "Docs": [
              " Maximum numbers of votes per voter.",
              "",
              " Warning: This impacts the size of the election which is run onchain. Chose wisely, and",
              " consider how it will impact `T::WeightInfo::election_phragmen`."
            ]
          }
        ],
        "Errors": {
          "TypeId": 609
        },
        "Index": 33
      },
      "34": {
        "Name": "CouncilMembership",
        "Storage": {
          "Prefix": "CouncilMembership",
          "Entries": [
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 610,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current membership, stored as an ordered Vec."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current prime member, if one exists."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 100
        },
        "Events": {
          "TypeId": 52
        },
        "Constants": [],
        "Errors": {
          "TypeId": 611
        },
        "Index": 34
      },
      "35": {
        "Name": "TechnicalMembership",
        "Storage": {
          "Prefix": "TechnicalMembership",
          "Entries": [
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 612,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current membership, stored as an ordered Vec."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current prime member, if one exists."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 101
        },
        "Events": {
          "TypeId": 53
        },
        "Constants": [],
        "Errors": {
          "TypeId": 613
        },
        "Index": 35
      },
      "36": {
        "Name": "ConvictionVoting",
        "Storage": {
          "Prefix": "ConvictionVoting",
          "Entries": [
            {
              "Name": "VotingFor",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 614,
                  "Value": 615
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
              "Docs": [
                " All voting for a particular voter in a particular voting class. We store the balance for the",
                " number of votes that we have recorded."
              ]
            },
            {
              "Name": "ClassLocksFor",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 623
                }
              },
              "Default": "AA==",
              "Docs": [
                " The voting classes which have a non-zero lock requirement and the lock amounts which they",
                " require. The actual amount locked on behalf of this pallet should always be the maximum of",
                " this list."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 102
        },
        "Events": {
          "TypeId": 54
        },
        "Constants": [
          {
            "Name": "MaxVotes",
            "TypeId": 4,
            "Value": "AAIAAA==",
            "Docs": [
              " The maximum number of concurrent votes an account may have.",
              "",
              " Also used to compute weight, an overly large value can lead to extrinsics with large",
              " weight estimation: see `delegate` for instance."
            ]
          },
          {
            "Name": "VoteLockingPeriod",
            "TypeId": 4,
            "Value": "IBwAAA==",
            "Docs": [
              " The minimum period of vote locking.",
              "",
              " It should be no shorter than enactment period to ensure that in the case of an approval,",
              " those successful voters are locked into the consequences that their votes entail."
            ]
          }
        ],
        "Errors": {
          "TypeId": 626
        },
        "Index": 36
      },
      "37": {
        "Name": "Referenda",
        "Storage": {
          "Prefix": "Referenda",
          "Entries": [
            {
              "Name": "ReferendumCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The next free referendum index, aka the number of referenda started so far."
              ]
            },
            {
              "Name": "ReferendumInfoFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 627
                }
              },
              "Default": "AA==",
              "Docs": [
                " Information concerning any given referendum."
              ]
            },
            {
              "Name": "TrackQueue",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 56,
                  "Value": 635
                }
              },
              "Default": "AA==",
              "Docs": [
                " The sorted list of referenda ready to be decided but not yet being decided, ordered by",
                " conviction-weighted approvals.",
                "",
                " This should be empty if `DecidingCount` is less than `TrackInfo::max_deciding`."
              ]
            },
            {
              "Name": "DecidingCount",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 56,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of referenda being decided currently."
              ]
            },
            {
              "Name": "MetadataOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 12
                }
              },
              "Default": "AA==",
              "Docs": [
                " The metadata is a general information concerning the referendum.",
                " The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON",
                " dump or IPFS hash of a JSON file.",
                "",
                " Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)",
                " large preimages."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 107
        },
        "Events": {
          "TypeId": 55
        },
        "Constants": [
          {
            "Name": "SubmissionDeposit",
            "TypeId": 6,
            "Value": "AKByThgJAAAAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount to be used as a deposit for a public referendum proposal."
            ]
          },
          {
            "Name": "MaxQueued",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " Maximum size of the referendum queue for a single track."
            ]
          },
          {
            "Name": "UndecidingTimeout",
            "TypeId": 4,
            "Value": "wIkBAA==",
            "Docs": [
              " The number of blocks after submission that a referendum must begin being decided by.",
              " Once this passes, then anyone may cancel the referendum."
            ]
          },
          {
            "Name": "AlarmInterval",
            "TypeId": 4,
            "Value": "AQAAAA==",
            "Docs": [
              " Quantization level for the referendum wakeup scheduler. A higher number will result in",
              " fewer storage reads/writes needed for smaller voters, but also result in delays to the",
              " automatic referendum status changes. Explicit servicing instructions are unaffected."
            ]
          },
          {
            "Name": "Tracks",
            "TypeId": 638,
            "Value": "IAAAEHJvb3QBAAAAAADFLryisQAAAAAAAAAAAFgCAADAiQEAIBwAACAcAAACkNc+DQAAAABXQ94TAAAAAFRD3hMAAAAAAADKmjsAAAAAAGXNHQEASHdoaXRlbGlzdGVkX2NhbGxlcmQAAAAAgOA3ecMRAAAAAAAAAAAASwAAAMCJAQAyAAAAMgAAAALslyUQAAAAAHtXPBcAAAAAQjkvEgAAAAACdConAAAAAADsKVEAAAAAAJk3CgEAAAAAAgBAZmVsbG93c2hpcF9hZG1pbgoAAAAAQPCbvOEIAAAAAAAAAAAAWAIAAMCJAQCEAwAAMgAAAADJQzAkAGXNHQDKmjsCXW94AAAAAADoLu0AAAAAAIxoif//////AwBQcmVmZXJlbmR1bV9jYW5jZWxsZXLoAwAAAIDgN3nDEQAAAAAAAAAAAFgCAADgxAAAhAMAADIAAAAAyUMwJABlzR0Aypo7Al1veAAAAAAA6C7tAAAAAACMaIn//////wQARHJlZmVyZW5kdW1fa2lsbGVy6AMAAACAYhde0VgAAAAAAAAAAABYAgAAwIkBAIQDAAAyAAAAAMlDMCQAZc0dAMqaOwJdb3gAAAAAAOgu7QAAAAAAjGiJ//////8KADhsaXF1aWRfc3Rha2luZwoAAAAAQPCbvOEIAAAAAAAAAAAAWAIAAMCJAQCEAwAAMgAAAAJn8GQEAAAAAN1GxgcAAAAAkUHqGQAAAAACb1ZCAAAAAACRioMAAAAAALc6vv//////DAAoc2FscF9hZG1pbgoAAAAAQPCbvOEIAAAAAAAAAAAASwAAAMCJAQAsAQAAMgAAAAJn8GQEAAAAAN1GxgcAAAAAkUHqGQAAAAACb1ZCAAAAAACRioMAAAAAALc6vv//////DQA4dHJlYXN1cnlfc3BlbmRkAAAAAEBjUr/GAQAAAAAAAAAAAFgCAADAiQEAhAMAADIAAAAAWwH2MABlzR0Aypo7AhFh2wAAAAAAv9GqAQAAAAAglyr//////w==",
            "Docs": [
              " Information concerning the different referendum tracks."
            ]
          }
        ],
        "Errors": {
          "TypeId": 644
        },
        "Index": 37
      },
      "38": {
        "Name": "Origins",
        "Storage": null,
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 38
      },
      "39": {
        "Name": "Whitelist",
        "Storage": {
          "Prefix": "Whitelist",
          "Entries": [
            {
              "Name": "WhitelistedCall",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 12,
                  "Value": 47
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 132
        },
        "Events": {
          "TypeId": 435
        },
        "Constants": [],
        "Errors": {
          "TypeId": 645
        },
        "Index": 39
      },
      "40": {
        "Name": "XcmpQueue",
        "Storage": {
          "Prefix": "XcmpQueue",
          "Entries": [
            {
              "Name": "InboundXcmpSuspended",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 646,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The suspended inbound XCMP channels. All others are not suspended.",
                "",
                " This is a `StorageValue` instead of a `StorageMap` since we expect multiple reads per block",
                " to different keys with a one byte payload. The access to `BoundedBTreeSet` will be cached",
                " within the block and therefore only included once in the proof size.",
                "",
                " NOTE: The PoV benchmarking cannot know this and will over-estimate, but the actual proof",
                " will be smaller."
              ]
            },
            {
              "Name": "OutboundXcmpStatus",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 649,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The non-empty XCMP channels in order of becoming non-empty, and the index of the first",
                " and last outbound message. If the two indices are equal, then it indicates an empty",
                " queue and there must be a non-`Ok` `OutboundStatus`. We assume queues grow no greater",
                " than 65535 items. Queue indices for normal messages begin at one; zero is reserved in",
                " case of the need to send a high-priority signal message this block.",
                " The bool is true if there is a signal message waiting to be sent."
              ]
            },
            {
              "Name": "OutboundXcmpMessages",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 652,
                  "Value": 13
                }
              },
              "Default": "AA==",
              "Docs": [
                " The messages outbound in a given XCMP channel."
              ]
            },
            {
              "Name": "SignalMessages",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 77,
                  "Value": 13
                }
              },
              "Default": "AA==",
              "Docs": [
                " Any signal messages waiting to be sent."
              ]
            },
            {
              "Name": "QueueConfig",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 653,
                "Item2": null
              },
              "Default": "IAAAADAAAAAIAAAA",
              "Docs": [
                " The configuration which controls the dynamics of the outbound queue."
              ]
            },
            {
              "Name": "QueueSuspended",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Whether or not the XCMP queue is suspended from executing incoming XCMs or not."
              ]
            },
            {
              "Name": "DeliveryFeeFactor",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 77,
                  "Value": 397
                }
              },
              "Default": "AABkp7O24A0AAAAAAAAAAA==",
              "Docs": [
                " The factor to multiply the base delivery fee by."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 133
        },
        "Events": {
          "TypeId": 440
        },
        "Constants": [
          {
            "Name": "MaxInboundSuspended",
            "TypeId": 4,
            "Value": "6AMAAA==",
            "Docs": [
              " The maximum number of inbound XCMP channels that can be suspended simultaneously.",
              "",
              " Any further channel suspensions will fail and messages may get dropped without further",
              " notice. Choosing a high value (1000) is okay; the trade-off that is described in",
              " [`InboundXcmpSuspended`] still applies at that scale."
            ]
          }
        ],
        "Errors": {
          "TypeId": 654
        },
        "Index": 40
      },
      "41": {
        "Name": "PolkadotXcm",
        "Storage": {
          "Prefix": "PolkadotXcm",
          "Entries": [
            {
              "Name": "QueryCounter",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 11,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The latest available query index."
              ]
            },
            {
              "Name": "Queries",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 11,
                  "Value": 655
                }
              },
              "Default": "AA==",
              "Docs": [
                " The ongoing queries."
              ]
            },
            {
              "Name": "AssetTraps",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The existing asset traps.",
                "",
                " Key is the blake2 256 hash of (origin, versioned `Assets`) pair. Value is the number of",
                " times this pair has been trapped (usually just 1 if it exists at all)."
              ]
            },
            {
              "Name": "SafeXcmVersion",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Default version to encode XCM when latest version of destination is unknown. If `None`,",
                " then the destinations whose XCM version is unknown are considered unreachable."
              ]
            },
            {
              "Name": "SupportedVersion",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 660,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " The Latest versions that we know various locations support."
              ]
            },
            {
              "Name": "VersionNotifiers",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 660,
                  "Value": 11
                }
              },
              "Default": "AA==",
              "Docs": [
                " All locations that we have requested version notifications from."
              ]
            },
            {
              "Name": "VersionNotifyTargets",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 660,
                  "Value": 661
                }
              },
              "Default": "AA==",
              "Docs": [
                " The target locations that are subscribed to our version changes, as well as the most recent",
                " of our versions we informed them of."
              ]
            },
            {
              "Name": "VersionDiscoveryQueue",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 662,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Destinations whose latest XCM version we would like to know. Duplicates not allowed, and",
                " the `u32` counter is the number of times that a send to the destination has been attempted,",
                " which is used as a prioritization."
              ]
            },
            {
              "Name": "CurrentMigration",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 665,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current migration's stage, if any."
              ]
            },
            {
              "Name": "RemoteLockedFungibles",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 666,
                  "Value": 668
                }
              },
              "Default": "AA==",
              "Docs": [
                " Fungible assets which we know are locked on a remote chain."
              ]
            },
            {
              "Name": "LockedFungibles",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 672
                }
              },
              "Default": "AA==",
              "Docs": [
                " Fungible assets which we know are locked on this chain."
              ]
            },
            {
              "Name": "XcmExecutionSuspended",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Global suspension state of the XCM executor."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 134
        },
        "Events": {
          "TypeId": 441
        },
        "Constants": [],
        "Errors": {
          "TypeId": 675
        },
        "Index": 41
      },
      "42": {
        "Name": "CumulusXcm",
        "Storage": null,
        "Calls": {
          "TypeId": 226
        },
        "Events": {
          "TypeId": 443
        },
        "Constants": [],
        "Errors": null,
        "Index": 42
      },
      "44": {
        "Name": "MessageQueue",
        "Storage": {
          "Prefix": "MessageQueue",
          "Entries": [
            {
              "Name": "BookStateFor",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 228,
                  "Value": 676
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " The index of the first and last (non-empty) pages."
              ]
            },
            {
              "Name": "ServiceHead",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 228,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The origin at which we should begin servicing."
              ]
            },
            {
              "Name": "Pages",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 679,
                  "Value": 680
                }
              },
              "Default": "AA==",
              "Docs": [
                " The map of page indices to pages."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 227
        },
        "Events": {
          "TypeId": 444
        },
        "Constants": [
          {
            "Name": "HeapSize",
            "TypeId": 4,
            "Value": "AAABAA==",
            "Docs": [
              " The size of the page; this implies the maximum message size which can be sent.",
              "",
              " A good value depends on the expected message sizes, their weights, the weight that is",
              " available for processing them and the maximal needed message size. The maximal message",
              " size is slightly lower than this as defined by [`MaxMessageLenOf`]."
            ]
          },
          {
            "Name": "MaxStale",
            "TypeId": 4,
            "Value": "CAAAAA==",
            "Docs": [
              " The maximum number of stale pages (i.e. of overweight messages) allowed before culling",
              " can happen. Once there are more stale pages than this, then historical pages may be",
              " dropped, even if they contain unprocessed overweight messages."
            ]
          },
          {
            "Name": "ServiceWeight",
            "TypeId": 438,
            "Value": "AQcAFtC+KAIAcAA=",
            "Docs": [
              " The amount of weight (if any) which should be provided to the message queue for",
              " servicing enqueued items.",
              "",
              " This may be legitimately `None` in the case that you will call",
              " `ServiceQueues::service_queues` manually."
            ]
          }
        ],
        "Errors": {
          "TypeId": 682
        },
        "Index": 44
      },
      "50": {
        "Name": "Utility",
        "Storage": null,
        "Calls": {
          "TypeId": 229
        },
        "Events": {
          "TypeId": 446
        },
        "Constants": [
          {
            "Name": "batched_calls_limit",
            "TypeId": 4,
            "Value": "qioAAA==",
            "Docs": [
              " The limit on the number of batched calls."
            ]
          }
        ],
        "Errors": {
          "TypeId": 683
        },
        "Index": 50
      },
      "51": {
        "Name": "Scheduler",
        "Storage": {
          "Prefix": "Scheduler",
          "Entries": [
            {
              "Name": "IncompleteSince",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "Agenda",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 684
                }
              },
              "Default": "AA==",
              "Docs": [
                " Items to be executed, indexed by the block number that they should be executed on."
              ]
            },
            {
              "Name": "Lookup",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 1,
                  "Value": 233
                }
              },
              "Default": "AA==",
              "Docs": [
                " Lookup from a name to the block number and index of the task.",
                "",
                " For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4",
                " identities."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 231
        },
        "Events": {
          "TypeId": 447
        },
        "Constants": [
          {
            "Name": "MaximumWeight",
            "TypeId": 9,
            "Value": "BwCg2yFdAgAAAQ==",
            "Docs": [
              " The maximum weight that may be scheduled per block for any dispatchables."
            ]
          },
          {
            "Name": "MaxScheduledPerBlock",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum number of scheduled calls in the queue for a single block.",
              "",
              " NOTE:",
              " + Dependent pallets' benchmarks might require a higher limit for the setting. Set a",
              " higher limit under `runtime-benchmarks` feature."
            ]
          }
        ],
        "Errors": {
          "TypeId": 688
        },
        "Index": 51
      },
      "52": {
        "Name": "Proxy",
        "Storage": {
          "Prefix": "Proxy",
          "Entries": [
            {
              "Name": "Proxies",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 689
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " The set of account proxies. Maps the account which has delegated to the accounts",
                " which are being delegated to, together with the amount held on deposit."
              ]
            },
            {
              "Name": "Announcements",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 693
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " The announcements made by the proxy (key)."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 234
        },
        "Events": {
          "TypeId": 448
        },
        "Constants": [
          {
            "Name": "ProxyDepositBase",
            "TypeId": 6,
            "Value": "ABztrpIAAAAAAAAAAAAAAA==",
            "Docs": [
              " The base amount of currency needed to reserve for creating a proxy.",
              "",
              " This is held for an additional storage item whose value size is",
              " `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes."
            ]
          },
          {
            "Name": "ProxyDepositFactor",
            "TypeId": 6,
            "Value": "AFgyAc0BAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of currency needed per proxy added.",
              "",
              " This is held for adding 32 bytes plus an instance of `ProxyType` more into a",
              " pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take",
              " into account `32 + proxy_type.encode().len()` bytes of data."
            ]
          },
          {
            "Name": "MaxProxies",
            "TypeId": 4,
            "Value": "IAAAAA==",
            "Docs": [
              " The maximum amount of proxies allowed for a single account."
            ]
          },
          {
            "Name": "MaxPending",
            "TypeId": 4,
            "Value": "IAAAAA==",
            "Docs": [
              " The maximum amount of time-delayed announcements that are allowed to be pending."
            ]
          },
          {
            "Name": "AnnouncementDepositBase",
            "TypeId": 6,
            "Value": "ABztrpIAAAAAAAAAAAAAAA==",
            "Docs": [
              " The base amount of currency needed to reserve for creating an announcement.",
              "",
              " This is held when a new storage item holding a `Balance` is created (typically 16",
              " bytes)."
            ]
          },
          {
            "Name": "AnnouncementDepositFactor",
            "TypeId": 6,
            "Value": "ALBkApoDAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of currency needed per announcement made.",
              "",
              " This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)",
              " into a pre-existing storage value."
            ]
          }
        ],
        "Errors": {
          "TypeId": 697
        },
        "Index": 52
      },
      "53": {
        "Name": "Multisig",
        "Storage": {
          "Prefix": "Multisig",
          "Entries": [
            {
              "Name": "Multisigs",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 698,
                  "Value": 699
                }
              },
              "Default": "AA==",
              "Docs": [
                " The set of open multisig operations."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 237
        },
        "Events": {
          "TypeId": 449
        },
        "Constants": [
          {
            "Name": "DepositBase",
            "TypeId": 6,
            "Value": "AJw4RfAEAAAAAAAAAAAAAA==",
            "Docs": [
              " The base amount of currency needed to reserve for creating a multisig execution or to",
              " store a dispatch call for later.",
              "",
              " This is held for an additional storage item whose value size is",
              " `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is",
              " `32 + sizeof(AccountId)` bytes."
            ]
          },
          {
            "Name": "DepositFactor",
            "TypeId": 6,
            "Value": "AADrCL8BAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of currency needed per unit threshold when creating a multisig execution.",
              "",
              " This is held for adding 32 bytes more into a pre-existing storage value."
            ]
          },
          {
            "Name": "MaxSignatories",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum amount of signatories allowed in the multisig."
            ]
          }
        ],
        "Errors": {
          "TypeId": 701
        },
        "Index": 53
      },
      "54": {
        "Name": "Identity",
        "Storage": {
          "Prefix": "Identity",
          "Entries": [
            {
              "Name": "IdentityOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 702
                }
              },
              "Default": "AA==",
              "Docs": [
                " Information that is pertinent to identify the entity behind an account. First item is the",
                " registration, second is the account's primary username.",
                "",
                " TWOX-NOTE: OK ��� `AccountId` is a secure hash."
              ]
            },
            {
              "Name": "SuperOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 276
                }
              },
              "Default": "AA==",
              "Docs": [
                " The super-identity of an alternative \"sub\" identity together with its name, within that",
                " context. If the account is not some other account's sub-identity, then just `None`."
              ]
            },
            {
              "Name": "SubsOf",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 708
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Alternative \"sub\" identities of this account.",
                "",
                " The first item is the deposit, the second is a vector of the accounts.",
                "",
                " TWOX-NOTE: OK ��� `AccountId` is a secure hash."
              ]
            },
            {
              "Name": "Registrars",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 710,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The set of registrars. Not expected to get very big as can only be added through a",
                " special origin (likely a council motion).",
                "",
                " The index into this can be cast to `RegistrarIndex` to get a valid value."
              ]
            },
            {
              "Name": "UsernameAuthorities",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 714
                }
              },
              "Default": "AA==",
              "Docs": [
                " A map of the accounts who are authorized to grant usernames."
              ]
            },
            {
              "Name": "AccountOfUsername",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 285,
                  "Value": 0
                }
              },
              "Default": "AA==",
              "Docs": [
                " Reverse lookup from `username` to the `AccountId` that has registered it. The value should",
                " be a key in the `IdentityOf` map, but it may not if the user has cleared their identity.",
                "",
                " Multiple usernames may map to the same `AccountId`, but `IdentityOf` will only map to one",
                " primary username."
              ]
            },
            {
              "Name": "PendingUsernames",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 285,
                  "Value": 716
                }
              },
              "Default": "AA==",
              "Docs": [
                " Usernames that an authority has granted, but that the account controller has not confirmed",
                " that they want it. Used primarily in cases where the `AccountId` cannot provide a signature",
                " because they are a pure proxy, multisig, etc. In order to confirm it, they should call",
                " [`Call::accept_username`].",
                "",
                " First tuple item is the account and second is the acceptance deadline."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 240
        },
        "Events": {
          "TypeId": 450
        },
        "Constants": [
          {
            "Name": "BasicDeposit",
            "TypeId": 6,
            "Value": "AAyZJDcOAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount held on deposit for a registered identity."
            ]
          },
          {
            "Name": "ByteDeposit",
            "TypeId": 6,
            "Value": "AFhH+A0AAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount held on deposit per encoded byte for a registered identity."
            ]
          },
          {
            "Name": "SubAccountDeposit",
            "TypeId": 6,
            "Value": "AJR3UwcDAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount held on deposit for a registered subaccount. This should account for the fact",
              " that one storage item's value will increase by the size of an account ID, and there will",
              " be another trie item whose value is the size of an account ID plus 32 bytes."
            ]
          },
          {
            "Name": "MaxSubAccounts",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of sub-accounts allowed per identified account."
            ]
          },
          {
            "Name": "MaxRegistrars",
            "TypeId": 4,
            "Value": "FAAAAA==",
            "Docs": [
              " Maxmimum number of registrars allowed in the system. Needed to bound the complexity",
              " of, e.g., updating judgements."
            ]
          },
          {
            "Name": "PendingUsernameExpiration",
            "TypeId": 4,
            "Value": "4MQAAA==",
            "Docs": [
              " The number of blocks within which a username grant must be accepted."
            ]
          },
          {
            "Name": "MaxSuffixLength",
            "TypeId": 4,
            "Value": "BwAAAA==",
            "Docs": [
              " The maximum length of a suffix."
            ]
          },
          {
            "Name": "MaxUsernameLength",
            "TypeId": 4,
            "Value": "IAAAAA==",
            "Docs": [
              " The maximum length of a username, including its suffix and any system-added delimiters."
            ]
          }
        ],
        "Errors": {
          "TypeId": 717
        },
        "Index": 54
      },
      "60": {
        "Name": "Vesting",
        "Storage": {
          "Prefix": "Vesting",
          "Entries": [
            {
              "Name": "VestingStartAt",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Start at"
              ]
            },
            {
              "Name": "Cliff",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " Cliff vesting"
              ]
            },
            {
              "Name": "Vesting",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 718
                }
              },
              "Default": "AA==",
              "Docs": [
                " Information regarding the vesting of a given account."
              ]
            },
            {
              "Name": "StorageVersion",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 720,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Storage version of the pallet.",
                "",
                " New networks start with latest version, as determined by the genesis build."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 286
        },
        "Events": {
          "TypeId": 451
        },
        "Constants": [
          {
            "Name": "MinVestedTransfer",
            "TypeId": 6,
            "Value": "AOQLVAIAAAAAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount transferred to call `vested_transfer`."
            ]
          },
          {
            "Name": "MaxVestingSchedules",
            "TypeId": 4,
            "Value": "HAAAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 721
        },
        "Index": 60
      },
      "61": {
        "Name": "Treasury",
        "Storage": {
          "Prefix": "Treasury",
          "Entries": [
            {
              "Name": "ProposalCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Number of proposals that have been made."
              ]
            },
            {
              "Name": "Proposals",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 722
                }
              },
              "Default": "AA==",
              "Docs": [
                " Proposals that have been made."
              ]
            },
            {
              "Name": "Deactivated",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The amount which has been reported as inactive to Currency."
              ]
            },
            {
              "Name": "Approvals",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 723,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Proposal indices that have been approved but not yet awarded."
              ]
            },
            {
              "Name": "SpendCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The count of spends that have been made."
              ]
            },
            {
              "Name": "Spends",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 724
                }
              },
              "Default": "AA==",
              "Docs": [
                " Spends that have been approved and being processed."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 288
        },
        "Events": {
          "TypeId": 452
        },
        "Constants": [
          {
            "Name": "ProposalBond",
            "TypeId": 323,
            "Value": "UMMAAA==",
            "Docs": [
              " Fraction of a proposal's value that should be bonded in order to place the proposal.",
              " An accepted proposal gets these back. A rejected proposal does not."
            ]
          },
          {
            "Name": "ProposalBondMinimum",
            "TypeId": 6,
            "Value": "AEB6EPNaAAAAAAAAAAAAAA==",
            "Docs": [
              " Minimum amount of funds that should be placed in a deposit for making a proposal."
            ]
          },
          {
            "Name": "ProposalBondMaximum",
            "TypeId": 320,
            "Value": "AQBAY1K/xgEAAAAAAAAAAAA=",
            "Docs": [
              " Maximum amount of funds that should be placed in a deposit for making a proposal."
            ]
          },
          {
            "Name": "SpendPeriod",
            "TypeId": 4,
            "Value": "wKgAAA==",
            "Docs": [
              " Period between successive spends."
            ]
          },
          {
            "Name": "Burn",
            "TypeId": 323,
            "Value": "AAAAAA==",
            "Docs": [
              " Percentage of spare funds (if any) that are burnt per spend period."
            ]
          },
          {
            "Name": "PalletId",
            "TypeId": 726,
            "Value": "YmYvdHJzcnk=",
            "Docs": [
              " The treasury's pallet id, used for deriving its sovereign account ID."
            ]
          },
          {
            "Name": "MaxApprovals",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of approvals that can wait in the spending queue.",
              "",
              " NOTE: This parameter is also used within the Bounties Pallet extension if enabled."
            ]
          },
          {
            "Name": "PayoutPeriod",
            "TypeId": 4,
            "Value": "wEsDAA==",
            "Docs": [
              " The period during which an approved treasury spend has to be claimed."
            ]
          }
        ],
        "Errors": {
          "TypeId": 727
        },
        "Index": 61
      },
      "64": {
        "Name": "Preimage",
        "Storage": {
          "Prefix": "Preimage",
          "Entries": [
            {
              "Name": "StatusFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 728
                }
              },
              "Default": "AA==",
              "Docs": [
                " The request status of a given hash."
              ]
            },
            {
              "Name": "RequestStatusFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 730
                }
              },
              "Default": "AA==",
              "Docs": [
                " The request status of a given hash."
              ]
            },
            {
              "Name": "PreimageFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 734,
                  "Value": 735
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 289
        },
        "Events": {
          "TypeId": 453
        },
        "Constants": [],
        "Errors": {
          "TypeId": 736
        },
        "Index": 64
      },
      "70": {
        "Name": "XTokens",
        "Storage": null,
        "Calls": {
          "TypeId": 291
        },
        "Events": {
          "TypeId": 454
        },
        "Constants": [
          {
            "Name": "SelfLocation",
            "TypeId": 114,
            "Value": "AAA=",
            "Docs": [
              " Self chain location."
            ]
          },
          {
            "Name": "BaseXcmWeight",
            "TypeId": 9,
            "Value": "Aihr7gA=",
            "Docs": [
              " Base XCM weight.",
              "",
              " The actually weight for an XCM message is `T::BaseXcmWeight +",
              " T::Weigher::weight(&msg)`."
            ]
          },
          {
            "Name": "RateLimiterId",
            "TypeId": 47,
            "Value": "",
            "Docs": [
              " The id of the RateLimiter."
            ]
          }
        ],
        "Errors": {
          "TypeId": 737
        },
        "Index": 70
      },
      "71": {
        "Name": "Tokens",
        "Storage": {
          "Prefix": "Tokens",
          "Entries": [
            {
              "Name": "TotalIssuance",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The total issuance of a token type."
              ]
            },
            {
              "Name": "Locks",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 738,
                  "Value": 739
                }
              },
              "Default": "AA==",
              "Docs": [
                " Any liquidity locks of a token type under an account.",
                " NOTE: Should only be accessed when setting, changing and freeing a lock."
              ]
            },
            {
              "Name": "Accounts",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 738,
                  "Value": 742
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
              "Docs": [
                " The balance of a token type under an account.",
                "",
                " NOTE: If the total is ever zero, decrease account ref account.",
                "",
                " NOTE: This is only used in the case that this module is used to store",
                " balances."
              ]
            },
            {
              "Name": "Reserves",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 738,
                  "Value": 743
                }
              },
              "Default": "AA==",
              "Docs": [
                " Named reserves on some account balances."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 297
        },
        "Events": {
          "TypeId": 455
        },
        "Constants": [
          {
            "Name": "MaxLocks",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": []
          },
          {
            "Name": "MaxReserves",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum number of named reserves that can exist on an account."
            ]
          }
        ],
        "Errors": {
          "TypeId": 746
        },
        "Index": 71
      },
      "72": {
        "Name": "Currencies",
        "Storage": null,
        "Calls": {
          "TypeId": 298
        },
        "Events": null,
        "Constants": [
          {
            "Name": "GetNativeCurrencyId",
            "TypeId": 292,
            "Value": "AAE=",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 747
        },
        "Index": 72
      },
      "73": {
        "Name": "UnknownTokens",
        "Storage": {
          "Prefix": "UnknownTokens",
          "Entries": [
            {
              "Name": "ConcreteFungibleBalances",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 748,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Concrete fungible balances under a given location and a concrete",
                " fungible id.",
                "",
                " double_map: who, asset_id => u128"
              ]
            },
            {
              "Name": "AbstractFungibleBalances",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 749,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Abstract fungible balances under a given location and a abstract",
                " fungible id.",
                "",
                " double_map: who, asset_id => u128"
              ]
            }
          ]
        },
        "Calls": null,
        "Events": {
          "TypeId": 456
        },
        "Constants": [],
        "Errors": {
          "TypeId": 750
        },
        "Index": 73
      },
      "74": {
        "Name": "OrmlXcm",
        "Storage": null,
        "Calls": {
          "TypeId": 300
        },
        "Events": {
          "TypeId": 457
        },
        "Constants": [],
        "Errors": {
          "TypeId": 751
        },
        "Index": 74
      },
      "80": {
        "Name": "ZenlinkProtocol",
        "Storage": {
          "Prefix": "ZenlinkProtocol",
          "Entries": [
            {
              "Name": "ForeignLedger",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 752,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Foreign foreign storage",
                " The number of units of assets held by any given account."
              ]
            },
            {
              "Name": "ForeignMeta",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 303,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " TWOX-NOTE: `AssetId` is trusted, so this is safe."
              ]
            },
            {
              "Name": "ForeignList",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 304,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "KLast",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 753,
                  "Value": 754
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Refer: https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2Pair.sol#L88",
                " Last unliquidated protocol fee;"
              ]
            },
            {
              "Name": "FeeMeta",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 756,
                "Item2": null
              },
              "Default": "AAA=",
              "Docs": [
                " (Option<fee_receiver>, fee_point)"
              ]
            },
            {
              "Name": "FeeReceiver",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 303,
                  "Value": 0
                }
              },
              "Default": "AA==",
              "Docs": [
                " AssetId => fee_receiver"
              ]
            },
            {
              "Name": "LiquidityPairs",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 753,
                  "Value": 757
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "PairStatuses",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 753,
                  "Value": 758
                }
              },
              "Default": "Ag==",
              "Docs": [
                " (T::AssetId, T::AssetId) -> PairStatus"
              ]
            },
            {
              "Name": "BootstrapPersonalSupply",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 761,
                  "Value": 409
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": []
            },
            {
              "Name": "BootstrapEndStatus",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 753,
                  "Value": 758
                }
              },
              "Default": "Ag==",
              "Docs": [
                " End status of bootstrap",
                "",
                " BootstrapEndStatus: map bootstrap pair => pairStatus"
              ]
            },
            {
              "Name": "BootstrapRewards",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 753,
                  "Value": 762
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "BootstrapLimits",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 753,
                  "Value": 762
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 301
        },
        "Events": {
          "TypeId": 458
        },
        "Constants": [
          {
            "Name": "PalletId",
            "TypeId": 726,
            "Value": "L3plbmxpbms=",
            "Docs": [
              " This pallet id."
            ]
          }
        ],
        "Errors": {
          "TypeId": 763
        },
        "Index": 80
      },
      "81": {
        "Name": "MerkleDistributor",
        "Storage": {
          "Prefix": "MerkleDistributor",
          "Entries": [
            {
              "Name": "MerkleDistributorMetadata",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 764
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "NextMerkleDistributorId",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": []
            },
            {
              "Name": "ClaimedBitMap",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 233,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": []
            },
            {
              "Name": "CreateWhiteSet",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 766,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Accounts in the whitelist can create merkle distributor."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 307
        },
        "Events": {
          "TypeId": 459
        },
        "Constants": [
          {
            "Name": "PalletId",
            "TypeId": 726,
            "Value": "YmYvbWtsZHM=",
            "Docs": []
          },
          {
            "Name": "StringLimit",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum length of a merkel description stored on-chain."
            ]
          }
        ],
        "Errors": {
          "TypeId": 767
        },
        "Index": 81
      },
      "100": {
        "Name": "FlexibleFee",
        "Storage": {
          "Prefix": "FlexibleFee",
          "Entries": [
            {
              "Name": "UniversalFeeCurrencyOrderList",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 310,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Universal fee currency order list for all users"
              ]
            },
            {
              "Name": "UserDefaultFeeCurrency",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 292
                }
              },
              "Default": "AA==",
              "Docs": [
                " User default fee currency, if set, will be used as the first fee currency, and then use the",
                " universal fee currency order list"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 308
        },
        "Events": {
          "TypeId": 460
        },
        "Constants": [
          {
            "Name": "TreasuryAccount",
            "TypeId": 0,
            "Value": "bW9kbGJmL3Ryc3J5AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": []
          },
          {
            "Name": "MaxFeeCurrencyOrderListLen",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 768
        },
        "Index": 100
      },
      "105": {
        "Name": "Salp",
        "Storage": {
          "Prefix": "Salp",
          "Entries": [
            {
              "Name": "MultisigConfirmAccount",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Multisig confirm account"
              ]
            },
            {
              "Name": "CurrentTrieIndex",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Tracker for the next available fund index"
              ]
            },
            {
              "Name": "CurrentNonce",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Tracker for the next nonce index"
              ]
            },
            {
              "Name": "QueryIdContributionInfo",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 11,
                  "Value": 769
                }
              },
              "Default": "AA==",
              "Docs": [
                " Record contribution"
              ]
            },
            {
              "Name": "Funds",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 770
                }
              },
              "Default": "AA==",
              "Docs": [
                " Info on all of the funds."
              ]
            },
            {
              "Name": "RedeemPool",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The balance can be redeemed to users."
              ]
            },
            {
              "Name": "FailedFundsToRefund",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 772,
                  "Value": 770
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "ReserveInfos",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 773,
                  "Value": 774
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 312
        },
        "Events": {
          "TypeId": 462
        },
        "Constants": [
          {
            "Name": "PalletId",
            "TypeId": 726,
            "Value": "YmYvc2FscCM=",
            "Docs": [
              " ModuleID for the crowdloan module. An appropriate value could be",
              " ```ModuleId(*b\"py/cfund\")```"
            ]
          },
          {
            "Name": "MinContribution",
            "TypeId": 6,
            "Value": "AHQ7pAsAAAAAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount that may be contributed into a crowdloan. Should almost certainly be",
              " at least ExistentialDeposit."
            ]
          },
          {
            "Name": "RelayChainToken",
            "TypeId": 292,
            "Value": "CAA=",
            "Docs": []
          },
          {
            "Name": "LeasePeriod",
            "TypeId": 4,
            "Value": "gDoJAA==",
            "Docs": [
              " The number of blocks over which a single period lasts."
            ]
          },
          {
            "Name": "VSBondValidPeriod",
            "TypeId": 4,
            "Value": "wEsDAA==",
            "Docs": []
          },
          {
            "Name": "ReleaseCycle",
            "TypeId": 4,
            "Value": "IBwAAA==",
            "Docs": [
              " The time interval from 1:1 redeem-pool to bancor-pool to release."
            ]
          },
          {
            "Name": "ReleaseRatio",
            "TypeId": 370,
            "Value": "Mg==",
            "Docs": [
              " The release ratio from the 1:1 redeem-pool to the bancor-pool per cycle.",
              "",
              " **NOTE: THE RELEASE RATIO MUST BE IN [0, 1].**"
            ]
          },
          {
            "Name": "RemoveKeysLimit",
            "TypeId": 4,
            "Value": "9AEAAA==",
            "Docs": []
          },
          {
            "Name": "SlotLength",
            "TypeId": 4,
            "Value": "CAAAAA==",
            "Docs": []
          },
          {
            "Name": "TreasuryAccount",
            "TypeId": 0,
            "Value": "bW9kbGJmL3Ryc3J5AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": []
          },
          {
            "Name": "BuybackPalletId",
            "TypeId": 726,
            "Value": "YmYvc2FscGM=",
            "Docs": []
          },
          {
            "Name": "LockId",
            "TypeId": 158,
            "Value": "c2FscGxvY2s=",
            "Docs": []
          },
          {
            "Name": "BatchLimit",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 775
        },
        "Index": 105
      },
      "112": {
        "Name": "CallSwitchgear",
        "Storage": {
          "Prefix": "CallSwitchgear",
          "Entries": [
            {
              "Name": "OverallToggle",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Controls whether or not all of the pallets are banned."
              ]
            },
            {
              "Name": "SwitchedOffTransactions",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 61,
                  "Value": 47
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "DisabledTransfers",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 47
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 315
        },
        "Events": {
          "TypeId": 463
        },
        "Constants": [],
        "Errors": {
          "TypeId": 776
        },
        "Index": 112
      },
      "114": {
        "Name": "AssetRegistry",
        "Storage": {
          "Prefix": "AssetRegistry",
          "Entries": [
            {
              "Name": "NextForeignAssetId",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Next available Foreign AssetId ID.",
                "",
                " NextForeignAssetId: ForeignAssetId"
              ]
            },
            {
              "Name": "NextTokenId",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 2,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Next available TokenId ID.",
                "",
                " NextTokenId: TokenId"
              ]
            },
            {
              "Name": "CurrencyIdToLocations",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 143
                }
              },
              "Default": "AA==",
              "Docs": [
                " The storages for Locations.",
                "",
                " CurrencyIdToLocations: map CurrencyId => Option<Location>"
              ]
            },
            {
              "Name": "LocationToCurrencyIds",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 143,
                  "Value": 292
                }
              },
              "Default": "AA==",
              "Docs": [
                " The storages for CurrencyIds.",
                "",
                " LocationToCurrencyIds: map Location => Option<CurrencyId>"
              ]
            },
            {
              "Name": "CurrencyIdToWeights",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 9
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "AssetMetadatas",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 465,
                  "Value": 317
                }
              },
              "Default": "AA==",
              "Docs": [
                " The storages for AssetMetadatas.",
                "",
                " AssetMetadatas: map AssetIds => Option<AssetMetadata>"
              ]
            },
            {
              "Name": "CurrencyMetadatas",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 317
                }
              },
              "Default": "AA==",
              "Docs": [
                " The storages for AssetMetadata.",
                "",
                " CurrencyMetadatas: map CurrencyId => Option<AssetMetadata>"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 316
        },
        "Events": {
          "TypeId": 464
        },
        "Constants": [],
        "Errors": {
          "TypeId": 777
        },
        "Index": 114
      },
      "115": {
        "Name": "VtokenMinting",
        "Storage": {
          "Prefix": "VtokenMinting",
          "Entries": [
            {
              "Name": "Fees",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 778,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": []
            },
            {
              "Name": "TokenPool",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "UnlockDuration",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 322
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "OngoingTimeUnit",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 322
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "MinimumMint",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "MinimumRedeem",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "TokenUnlockNextId",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": []
            },
            {
              "Name": "TokenUnlockLedger",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 779,
                  "Value": 780
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "UserUnlockLedger",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 738,
                  "Value": 782
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "TimeUnitUnlockLedger",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 784,
                  "Value": 785
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "TokenToRebond",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "MinTimeUnit",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 322
                }
              },
              "Default": "AAA=",
              "Docs": []
            },
            {
              "Name": "UnlockingTotal",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "HookIterationLimit",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": []
            },
            {
              "Name": "MintWithLockBlocks",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "VtokenIncentiveCoef",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "VtokenLockLedger",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 738,
                  "Value": 787
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 321
        },
        "Events": {
          "TypeId": 466
        },
        "Constants": [
          {
            "Name": "MaximumUnlockIdOfUser",
            "TypeId": 4,
            "Value": "CgAAAA==",
            "Docs": [
              " The amount of mint"
            ]
          },
          {
            "Name": "MaximumUnlockIdOfTimeUnit",
            "TypeId": 4,
            "Value": "MgAAAA==",
            "Docs": []
          },
          {
            "Name": "MaxLockRecords",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": []
          },
          {
            "Name": "EntranceAccount",
            "TypeId": 726,
            "Value": "YmYvdnRraW4=",
            "Docs": []
          },
          {
            "Name": "ExitAccount",
            "TypeId": 726,
            "Value": "YmYvdnRvdXQ=",
            "Docs": []
          },
          {
            "Name": "FeeAccount",
            "TypeId": 0,
            "Value": "bW9kbGJmL3Ryc3J5AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": []
          },
          {
            "Name": "RedeemFeeAccount",
            "TypeId": 0,
            "Value": "bW9kbGJmL3Ryc3J5AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": []
          },
          {
            "Name": "IncentivePoolAccount",
            "TypeId": 726,
            "Value": "YmYvaW5wb28=",
            "Docs": []
          },
          {
            "Name": "RelayChainToken",
            "TypeId": 292,
            "Value": "CAA=",
            "Docs": []
          },
          {
            "Name": "AstarParachainId",
            "TypeId": 4,
            "Value": "1gcAAA==",
            "Docs": []
          },
          {
            "Name": "MoonbeamParachainId",
            "TypeId": 4,
            "Value": "1AcAAA==",
            "Docs": []
          },
          {
            "Name": "HydradxParachainId",
            "TypeId": 4,
            "Value": "8gcAAA==",
            "Docs": []
          },
          {
            "Name": "InterlayParachainId",
            "TypeId": 4,
            "Value": "8AcAAA==",
            "Docs": []
          },
          {
            "Name": "MantaParachainId",
            "TypeId": 4,
            "Value": "OAgAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 790
        },
        "Index": 115
      },
      "116": {
        "Name": "Slp",
        "Storage": {
          "Prefix": "Slp",
          "Entries": [
            {
              "Name": "OperateOrigins",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 0
                }
              },
              "Default": "AA==",
              "Docs": [
                " One operate origin(can be a multisig account) for a currency. An operating origins are",
                " normal account in Bifrost chain."
              ]
            },
            {
              "Name": "FeeSources",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 332
                }
              },
              "Default": "AA==",
              "Docs": [
                " Origins and Amounts for the staking operating account fee supplement. An operating account",
                " is identified in MultiLocation format."
              ]
            },
            {
              "Name": "HostingFees",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 359
                }
              },
              "Default": "AA==",
              "Docs": [
                " Hosting fee percentage and beneficiary account for different chains"
              ]
            },
            {
              "Name": "DelegatorsIndex2Multilocation",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 791,
                  "Value": 143
                }
              },
              "Default": "AA==",
              "Docs": [
                " Delegators in service. A delegator is identified in MultiLocation format.",
                " Currency Id + Sub-account index => MultiLocation"
              ]
            },
            {
              "Name": "DelegatorsMultilocation2Index",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 792,
                  "Value": 56
                }
              },
              "Default": "AA==",
              "Docs": [
                " Delegators in service. Currency Id + MultiLocation => Sub-account index"
              ]
            },
            {
              "Name": "DelegatorNextIndex",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 56
                }
              },
              "Default": "AAA=",
              "Docs": [
                " Next index of different currency delegators."
              ]
            },
            {
              "Name": "Validators",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 793
                }
              },
              "Default": "AA==",
              "Docs": [
                " (VWL) Validator in service. A validator is identified in MultiLocation format."
              ]
            },
            {
              "Name": "ValidatorBoostList",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 794
                }
              },
              "Default": "AA==",
              "Docs": [
                " (VBL) Validator Boost List -> (validator multilocation, due block number)"
              ]
            },
            {
              "Name": "ValidatorsByDelegator",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 792,
                  "Value": 793
                }
              },
              "Default": "AA==",
              "Docs": [
                " Validators for each delegator. CurrencyId + Delegator => Vec<Validator>"
              ]
            },
            {
              "Name": "ValidatorsByDelegatorXcmUpdateQueue",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 11,
                  "Value": 795
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "DelegatorLedgers",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 792,
                  "Value": 335
                }
              },
              "Default": "AA==",
              "Docs": [
                " Delegator ledgers. A delegator is identified in MultiLocation format."
              ]
            },
            {
              "Name": "DelegatorLedgerXcmUpdateQueue",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 11,
                  "Value": 796
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "MinimumsAndMaximums",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 355
                }
              },
              "Default": "AA==",
              "Docs": [
                " Minimum and Maximum constraints for different chains."
              ]
            },
            {
              "Name": "CurrencyDelays",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 357
                }
              },
              "Default": "AA==",
              "Docs": [
                " TimeUnit delay params for different chains."
              ]
            },
            {
              "Name": "DelegatorLatestTuneRecord",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 792,
                  "Value": 322
                }
              },
              "Default": "AA==",
              "Docs": [
                " A delegator's tuning record of exchange rate for the current time unit.",
                " Currency Id + Delegator Id => latest tuned TimeUnit"
              ]
            },
            {
              "Name": "CurrencyLatestTuneRecord",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 797
                }
              },
              "Default": "AA==",
              "Docs": [
                " Currency's tuning record of exchange rate for the current time unit.",
                " Currency Id => (latest tuned TimeUnit, number of tuning times)"
              ]
            },
            {
              "Name": "CurrencyTuneExchangeRateLimit",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 361
                }
              },
              "Default": "AA==",
              "Docs": [
                " For each currencyId: how many times that a Currency's all delegators can tune the exchange",
                " rate for a single time unit, and how much at most each time can tune the",
                " exchange rate"
              ]
            },
            {
              "Name": "DelegationsOccupied",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 30
                }
              },
              "Default": "AA==",
              "Docs": [
                " reflect if all delegations are on a decrease/revoke status. If yes, then new user redeeming",
                " is unaccepted."
              ]
            },
            {
              "Name": "LastTimeUpdatedOngoingTimeUnit",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "OngoingTimeUnitUpdateInterval",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "SupplementFeeAccountWhitelist",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 798
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 324
        },
        "Events": {
          "TypeId": 468
        },
        "Constants": [
          {
            "Name": "MaxTypeEntryPerBlock",
            "TypeId": 4,
            "Value": "CgAAAA==",
            "Docs": []
          },
          {
            "Name": "MaxRefundPerBlock",
            "TypeId": 4,
            "Value": "CgAAAA==",
            "Docs": []
          },
          {
            "Name": "MaxLengthLimit",
            "TypeId": 4,
            "Value": "9AEAAA==",
            "Docs": []
          },
          {
            "Name": "TreasuryAccount",
            "TypeId": 0,
            "Value": "bW9kbGJmL3Ryc3J5AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 800
        },
        "Index": 116
      },
      "117": {
        "Name": "XcmInterface",
        "Storage": {
          "Prefix": "XcmInterface",
          "Entries": [
            {
              "Name": "XcmWeightAndFee",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 801,
                  "Value": 327
                }
              },
              "Default": "AA==",
              "Docs": [
                " The dest weight limit and fee for execution XCM msg sent by XcmInterface. Must be",
                " sufficient, otherwise the execution of XCM msg on relaychain will fail.",
                "",
                " XcmWeightAndFee: map: XcmOperationType => (Weight, Balance)"
              ]
            },
            {
              "Name": "CurrentNonce",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 362
        },
        "Events": {
          "TypeId": 478
        },
        "Constants": [
          {
            "Name": "RelaychainCurrencyId",
            "TypeId": 292,
            "Value": "CAA=",
            "Docs": [
              " The currency id of the RelayChain"
            ]
          },
          {
            "Name": "ParachainSovereignAccount",
            "TypeId": 0,
            "Value": "cGFyYe4HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": [
              " The account of parachain on the relaychain."
            ]
          },
          {
            "Name": "RelayNetwork",
            "TypeId": 119,
            "Value": "Ag==",
            "Docs": []
          },
          {
            "Name": "ParachainId",
            "TypeId": 77,
            "Value": "7gcAAA==",
            "Docs": []
          },
          {
            "Name": "CallBackTimeOut",
            "TypeId": 4,
            "Value": "CgAAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 802
        },
        "Index": 117
      },
      "118": {
        "Name": "TokenConversion",
        "Storage": {
          "Prefix": "TokenConversion",
          "Entries": [
            {
              "Name": "RelaychainLease",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": []
            },
            {
              "Name": "ExchangeRate",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 368,
                  "Value": 369
                }
              },
              "Default": "AAA=",
              "Docs": []
            },
            {
              "Name": "ExchangeFee",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 367,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " exchange fee"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 366
        },
        "Events": {
          "TypeId": 479
        },
        "Constants": [
          {
            "Name": "RelayCurrencyId",
            "TypeId": 292,
            "Value": "CAA=",
            "Docs": []
          },
          {
            "Name": "TreasuryAccount",
            "TypeId": 0,
            "Value": "bW9kbGJmL3Ryc3J5AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": []
          },
          {
            "Name": "VsbondAccount",
            "TypeId": 726,
            "Value": "YmYvc2FscGI=",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 803
        },
        "Index": 118
      },
      "119": {
        "Name": "Farming",
        "Storage": {
          "Prefix": "Farming",
          "Entries": [
            {
              "Name": "PoolNextId",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": []
            },
            {
              "Name": "GaugePoolNextId",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": []
            },
            {
              "Name": "RetireLimit",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": []
            },
            {
              "Name": "PoolInfos",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 804
                }
              },
              "Default": "AA==",
              "Docs": [
                " Record reward pool info.",
                "",
                " map PoolId => PoolInfo"
              ]
            },
            {
              "Name": "GaugePoolInfos",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 808
                }
              },
              "Default": "AA==",
              "Docs": [
                " Record gauge farming pool info.",
                "",
                " map PoolId => GaugePoolInfo"
              ]
            },
            {
              "Name": "GaugeInfos",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 773,
                  "Value": 814
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "SharesAndWithdrawnRewards",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 773,
                  "Value": 815
                }
              },
              "Default": "AA==",
              "Docs": [
                " Record share amount, reward currency and withdrawn reward amount for",
                " specific `AccountId` under `PoolId`.",
                "",
                " double_map (PoolId, AccountId) => ShareInfo"
              ]
            },
            {
              "Name": "BoostPoolInfos",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 816,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "UserBoostInfos",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 817
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "BoostWhitelist",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 47
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "BoostNextRoundWhitelist",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 47
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "BoostVotingPools",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 6
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "BoostBasicRewards",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 819,
                  "Value": 6
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 371
        },
        "Events": {
          "TypeId": 480
        },
        "Constants": [
          {
            "Name": "TreasuryAccount",
            "TypeId": 0,
            "Value": "bW9kbGJmL3Ryc3J5AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": []
          },
          {
            "Name": "Keeper",
            "TypeId": 726,
            "Value": "YmYvZm1rcHI=",
            "Docs": [
              " ModuleID for creating sub account"
            ]
          },
          {
            "Name": "RewardIssuer",
            "TypeId": 726,
            "Value": "YmYvZm1yaXI=",
            "Docs": []
          },
          {
            "Name": "FarmingBoost",
            "TypeId": 726,
            "Value": "YmYvZm1ic3Q=",
            "Docs": []
          },
          {
            "Name": "WhitelistMaximumLimit",
            "TypeId": 4,
            "Value": "CgAAAA==",
            "Docs": []
          },
          {
            "Name": "GaugeRewardIssuer",
            "TypeId": 726,
            "Value": "YmYvZm1nYXI=",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 820
        },
        "Index": 119
      },
      "120": {
        "Name": "SystemStaking",
        "Storage": {
          "Prefix": "SystemStaking",
          "Entries": [
            {
              "Name": "Round",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 821,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Current Round Information"
              ]
            },
            {
              "Name": "TokenStatus",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 822
                }
              },
              "Default": "AA==",
              "Docs": [
                " The tokenInfo for each currency"
              ]
            },
            {
              "Name": "TokenList",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 824,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " All token sets"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 383
        },
        "Events": {
          "TypeId": 481
        },
        "Constants": [
          {
            "Name": "TreasuryAccount",
            "TypeId": 0,
            "Value": "bW9kbGJmL3Ryc3J5AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": []
          },
          {
            "Name": "MaxTokenLen",
            "TypeId": 4,
            "Value": "9AEAAA==",
            "Docs": [
              " Max token length 500"
            ]
          },
          {
            "Name": "MaxFarmingPoolIdLen",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " Max farming poolid length"
            ]
          },
          {
            "Name": "PalletId",
            "TypeId": 726,
            "Value": "YmYvc3lzc3Q=",
            "Docs": [
              " ModuleID for creating sub account"
            ]
          },
          {
            "Name": "BlocksPerRound",
            "TypeId": 4,
            "Value": "3AUAAA==",
            "Docs": [
              " 1500"
            ]
          }
        ],
        "Errors": {
          "TypeId": 825
        },
        "Index": 120
      },
      "121": {
        "Name": "SystemMaker",
        "Storage": {
          "Prefix": "SystemMaker",
          "Entries": [
            {
              "Name": "Infos",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 389
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 388
        },
        "Events": {
          "TypeId": 482
        },
        "Constants": [
          {
            "Name": "TreasuryAccount",
            "TypeId": 0,
            "Value": "bW9kbGJmL3Ryc3J5AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": []
          },
          {
            "Name": "RelayChainToken",
            "TypeId": 292,
            "Value": "CAA=",
            "Docs": []
          },
          {
            "Name": "SystemMakerPalletId",
            "TypeId": 726,
            "Value": "YmYvc3lzbWs=",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 826
        },
        "Index": 121
      },
      "122": {
        "Name": "FeeShare",
        "Storage": {
          "Prefix": "FeeShare",
          "Entries": [
            {
              "Name": "DistributionInfos",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 484
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "DistributionNextId",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": []
            },
            {
              "Name": "AutoEra",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 233,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 390
        },
        "Events": {
          "TypeId": 483
        },
        "Constants": [
          {
            "Name": "FeeSharePalletId",
            "TypeId": 726,
            "Value": "YmYvZmVlc2g=",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 827
        },
        "Index": 122
      },
      "123": {
        "Name": "CrossInOut",
        "Storage": {
          "Prefix": "CrossInOut",
          "Entries": [
            {
              "Name": "CrossCurrencyRegistry",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 47
                }
              },
              "Default": "AA==",
              "Docs": [
                " To store currencies that support indirect cross-in and cross-out."
              ]
            },
            {
              "Name": "IssueWhiteList",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 828
                }
              },
              "Default": "AA==",
              "Docs": [
                " Accounts in the whitelist can issue the corresponding Currency."
              ]
            },
            {
              "Name": "RegisterWhiteList",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 38
                }
              },
              "Default": "AA==",
              "Docs": [
                " Accounts in the whitelist can register the mapping between a multilocation and an accountId."
              ]
            },
            {
              "Name": "AccountToOuterMultilocation",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 829,
                  "Value": 136
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping a Bifrost account to a multilocation of a outer chain"
              ]
            },
            {
              "Name": "OuterMultilocationToAccount",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 830,
                  "Value": 0
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping a multilocation of a outer chain to a Bifrost account"
              ]
            },
            {
              "Name": "CrossingMinimumAmount",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 409
                }
              },
              "Default": "AA==",
              "Docs": [
                " minimum crossin and crossout amount���crossinMinimum, crossoutMinimum���"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 395
        },
        "Events": {
          "TypeId": 486
        },
        "Constants": [
          {
            "Name": "MaxLengthLimit",
            "TypeId": 4,
            "Value": "9AEAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 831
        },
        "Index": 123
      },
      "124": {
        "Name": "VeMinting",
        "Storage": {
          "Prefix": "VeMinting",
          "Entries": [
            {
              "Name": "Supply",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "VeConfigs",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 488,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
              "Docs": []
            },
            {
              "Name": "Epoch",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 754,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": []
            },
            {
              "Name": "Locked",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 6,
                  "Value": 832
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": []
            },
            {
              "Name": "UserLocked",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "PointHistory",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 754,
                  "Value": 833
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "UserPointHistory",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 834,
                  "Value": 833
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "UserPointEpoch",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 6,
                  "Value": 754
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": []
            },
            {
              "Name": "SlopeChanges",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 299
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "IncentiveConfigs",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 489
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "UserRewardPerTokenPaid",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 490
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "Rewards",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 490
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "UserMarkupInfos",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 835
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "LockedTokens",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 829,
                  "Value": 836
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "TotalLock",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "MarkupCoefficient",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 837
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "Position",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "UserPositions",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 838
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 396
        },
        "Events": {
          "TypeId": 487
        },
        "Constants": [
          {
            "Name": "TokenType",
            "TypeId": 292,
            "Value": "AQE=",
            "Docs": []
          },
          {
            "Name": "VeMintingPalletId",
            "TypeId": 726,
            "Value": "YmYvdmVtbnQ=",
            "Docs": []
          },
          {
            "Name": "IncentivePalletId",
            "TypeId": 726,
            "Value": "YmYvdmVpY3Q=",
            "Docs": []
          },
          {
            "Name": "Week",
            "TypeId": 4,
            "Value": "4MQAAA==",
            "Docs": []
          },
          {
            "Name": "MaxBlock",
            "TypeId": 4,
            "Value": "gGagAA==",
            "Docs": []
          },
          {
            "Name": "Multiplier",
            "TypeId": 6,
            "Value": "ABCl1OgAAAAAAAAAAAAAAA==",
            "Docs": []
          },
          {
            "Name": "VoteWeightMultiplier",
            "TypeId": 6,
            "Value": "AQAAAAAAAAAAAAAAAAAAAA==",
            "Docs": []
          },
          {
            "Name": "MaxPositions",
            "TypeId": 4,
            "Value": "CgAAAA==",
            "Docs": [
              " The maximum number of positions that should exist on an account."
            ]
          },
          {
            "Name": "MarkupRefreshLimit",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 839
        },
        "Index": 124
      },
      "125": {
        "Name": "Slpx",
        "Storage": {
          "Prefix": "Slpx",
          "Entries": [
            {
              "Name": "WhitelistAccountId",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 401,
                  "Value": 840
                }
              },
              "Default": "AA==",
              "Docs": [
                " Contract whitelist"
              ]
            },
            {
              "Name": "ExecutionFee",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AA==",
              "Docs": [
                " Charge corresponding fees for different CurrencyId"
              ]
            },
            {
              "Name": "TransferToFee",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 401,
                  "Value": 6
                }
              },
              "Default": "AA==",
              "Docs": [
                " XCM fee for transferring to Moonbeam(BNC)"
              ]
            },
            {
              "Name": "XcmEthereumCallConfiguration",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 841,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "CurrencyIdList",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 842,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "SupportXcmFeeList",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 843,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "OrderQueue",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 844,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "DelayBlock",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 398
        },
        "Events": {
          "TypeId": 491
        },
        "Constants": [
          {
            "Name": "TreasuryAccount",
            "TypeId": 0,
            "Value": "bW9kbGJmL3Ryc3J5AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": [
              " TreasuryAccount"
            ]
          },
          {
            "Name": "ParachainId",
            "TypeId": 77,
            "Value": "7gcAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 846
        },
        "Index": 125
      },
      "126": {
        "Name": "FellowshipCollective",
        "Storage": {
          "Prefix": "FellowshipCollective",
          "Entries": [
            {
              "Name": "MemberCount",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 56,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of members in the collective who have at least the rank according to the index",
                " of the vec."
              ]
            },
            {
              "Name": "Members",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 847
                }
              },
              "Default": "AA==",
              "Docs": [
                " The current members of the collective."
              ]
            },
            {
              "Name": "IdToIndex",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 848,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " The index of each ranks's member into the group of members who have at least that rank."
              ]
            },
            {
              "Name": "IndexToId",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 849,
                  "Value": 0
                }
              },
              "Default": "AA==",
              "Docs": [
                " The members in the collective by index. All indices in the range `0..MemberCount` will",
                " return `Some`, however a member's index is not guaranteed to remain unchanged over time."
              ]
            },
            {
              "Name": "Voting",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 773,
                  "Value": 495
                }
              },
              "Default": "AA==",
              "Docs": [
                " Votes on a given proposal, if it is ongoing."
              ]
            },
            {
              "Name": "VotingCleanup",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 850
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 403
        },
        "Events": {
          "TypeId": 494
        },
        "Constants": [],
        "Errors": {
          "TypeId": 851
        },
        "Index": 126
      },
      "127": {
        "Name": "FellowshipReferenda",
        "Storage": {
          "Prefix": "FellowshipReferenda",
          "Entries": [
            {
              "Name": "ReferendumCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The next free referendum index, aka the number of referenda started so far."
              ]
            },
            {
              "Name": "ReferendumInfoFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 852
                }
              },
              "Default": "AA==",
              "Docs": [
                " Information concerning any given referendum."
              ]
            },
            {
              "Name": "TrackQueue",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 56,
                  "Value": 854
                }
              },
              "Default": "AA==",
              "Docs": [
                " The sorted list of referenda ready to be decided but not yet being decided, ordered by",
                " conviction-weighted approvals.",
                "",
                " This should be empty if `DecidingCount` is less than `TrackInfo::max_deciding`."
              ]
            },
            {
              "Name": "DecidingCount",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 56,
                  "Value": 4
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of referenda being decided currently."
              ]
            },
            {
              "Name": "MetadataOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 12
                }
              },
              "Default": "AA==",
              "Docs": [
                " The metadata is a general information concerning the referendum.",
                " The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON",
                " dump or IPFS hash of a JSON file.",
                "",
                " Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)",
                " large preimages."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 404
        },
        "Events": {
          "TypeId": 497
        },
        "Constants": [
          {
            "Name": "SubmissionDeposit",
            "TypeId": 6,
            "Value": "AAAAAAAAAAAAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount to be used as a deposit for a public referendum proposal."
            ]
          },
          {
            "Name": "MaxQueued",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " Maximum size of the referendum queue for a single track."
            ]
          },
          {
            "Name": "UndecidingTimeout",
            "TypeId": 4,
            "Value": "4MQAAA==",
            "Docs": [
              " The number of blocks after submission that a referendum must begin being decided by.",
              " Once this passes, then anyone may cancel the referendum."
            ]
          },
          {
            "Name": "AlarmInterval",
            "TypeId": 4,
            "Value": "AQAAAA==",
            "Docs": [
              " Quantization level for the referendum wakeup scheduler. A higher number will result in",
              " fewer storage reads/writes needed for smaller voters, but also result in delays to the",
              " automatic referendum status changes. Explicit servicing instructions are unaffected."
            ]
          },
          {
            "Name": "Tracks",
            "TypeId": 638,
            "Value": "KAAAKGNhbmRpZGF0ZXMKAAAAAEB6EPNaAAAAAAAAAAAAAAUAAABAOAAAGQAAAAUAAAAAAMqaOwBlzR0Aypo7AADKmjsAZc0dAEbDIwEAHG1lbWJlcnMKAAAAAKByThgJAAAAAAAAAAAAAAUAAABAOAAAGQAAAAUAAAAAAMqaOwBlzR0Aypo7AADKmjsAZc0dAEbDIwIALHByb2ZpY2llbnRzCgAAAACgck4YCQAAAAAAAAAAAAAFAAAAQDgAABkAAAAFAAAAAADKmjsAZc0dAMqaOwAAypo7AGXNHQBGwyMDABxmZWxsb3dzCgAAAACgck4YCQAAAAAAAAAAAAAFAAAAQDgAABkAAAAFAAAAAADKmjsAZc0dAMqaOwAAypo7AGXNHQBGwyMEADhzZW5pb3IgZmVsbG93cwoAAAAAoHJOGAkAAAAAAAAAAAAABQAAAEA4AAAZAAAABQAAAAAAypo7AGXNHQDKmjsAAMqaOwBlzR0ARsMjBQAcZXhwZXJ0cwoAAAAAEKXU6AAAAAAAAAAAAAAABQAAAEA4AAAZAAAABQAAAAAAypo7AGXNHQDKmjsAAMqaOwBlzR0ARsMjBgA4c2VuaW9yIGV4cGVydHMKAAAAABCl1OgAAAAAAAAAAAAAAAUAAABAOAAAGQAAAAUAAAAAAMqaOwBlzR0Aypo7AADKmjsAZc0dAEbDIwcAHG1hc3RlcnMKAAAAABCl1OgAAAAAAAAAAAAAAAUAAABAOAAAGQAAAAUAAAAAAMqaOwBlzR0Aypo7AADKmjsAZc0dAEbDIwgAOHNlbmlvciBtYXN0ZXJzCgAAAAAQpdToAAAAAAAAAAAAAAAFAAAAQDgAABkAAAAFAAAAAADKmjsAZc0dAMqaOwAAypo7AGXNHQBGwyMJADRncmFuZCBtYXN0ZXJzCgAAAAAQpdToAAAAAAAAAAAAAAAFAAAAQDgAABkAAAAFAAAAAADKmjsAZc0dAMqaOwAAypo7AGXNHQBGwyM=",
            "Docs": [
              " Information concerning the different referendum tracks."
            ]
          }
        ],
        "Errors": {
          "TypeId": 855
        },
        "Index": 127
      },
      "128": {
        "Name": "StableAsset",
        "Storage": {
          "Prefix": "StableAsset",
          "Entries": [
            {
              "Name": "PoolCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": []
            },
            {
              "Name": "Pools",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 856
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "TokenRateCaches",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 819,
                  "Value": 409
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "TokenRateHardcap",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 323
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": null,
        "Events": {
          "TypeId": 498
        },
        "Constants": [
          {
            "Name": "PalletId",
            "TypeId": 726,
            "Value": "YmYvc3RhYmw=",
            "Docs": []
          },
          {
            "Name": "FeePrecision",
            "TypeId": 6,
            "Value": "AOQLVAIAAAAAAAAAAAAAAA==",
            "Docs": []
          },
          {
            "Name": "SwapExactOverAmount",
            "TypeId": 6,
            "Value": "ZAAAAAAAAAAAAAAAAAAAAA==",
            "Docs": []
          },
          {
            "Name": "APrecision",
            "TypeId": 6,
            "Value": "ZAAAAAAAAAAAAAAAAAAAAA==",
            "Docs": []
          },
          {
            "Name": "PoolAssetLimit",
            "TypeId": 4,
            "Value": "BQAAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 857
        },
        "Index": 128
      },
      "129": {
        "Name": "StablePool",
        "Storage": null,
        "Calls": {
          "TypeId": 405
        },
        "Events": null,
        "Constants": [],
        "Errors": {
          "TypeId": 858
        },
        "Index": 129
      },
      "130": {
        "Name": "VtokenVoting",
        "Storage": {
          "Prefix": "VtokenVoting",
          "Entries": [
            {
              "Name": "ReferendumInfoFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 779,
                  "Value": 412
                }
              },
              "Default": "AA==",
              "Docs": [
                " Information concerning any given referendum."
              ]
            },
            {
              "Name": "VotingFor",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 859
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
              "Docs": [
                " All voting for a particular voter in a particular voting class. We store the balance for the",
                " number of votes that we have recorded."
              ]
            },
            {
              "Name": "ClassLocksFor",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 866
                }
              },
              "Default": "AA==",
              "Docs": [
                " The voting classes which have a non-zero lock requirement and the lock amounts which they",
                " require. The actual amount locked on behalf of this pallet should always be the maximum of",
                " this list."
              ]
            },
            {
              "Name": "PendingReferendumInfo",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 11,
                  "Value": 779
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "PendingVotingInfo",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 11,
                  "Value": 867
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "PendingRemoveDelegatorVote",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 11,
                  "Value": 870
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "VoteLockingPeriod",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "UndecidingTimeout",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "Delegators",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 871
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "VoteCapRatio",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 374
                }
              },
              "Default": "AAAAAA==",
              "Docs": []
            },
            {
              "Name": "DelegatorVotes",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 779,
                  "Value": 873
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "PendingDelegatorVotes",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 779,
                  "Value": 873
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "ReferendumTimeout",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 876
                }
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "VoteDelegatorFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 878,
                  "Value": 56
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 410
        },
        "Events": {
          "TypeId": 499
        },
        "Constants": [
          {
            "Name": "ParachainId",
            "TypeId": 77,
            "Value": "7gcAAA==",
            "Docs": []
          },
          {
            "Name": "MaxVotes",
            "TypeId": 4,
            "Value": "AAEAAA==",
            "Docs": [
              " The maximum number of concurrent votes an account may have."
            ]
          },
          {
            "Name": "QueryTimeout",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": []
          },
          {
            "Name": "ReferendumCheckInterval",
            "TypeId": 4,
            "Value": "LAEAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 879
        },
        "Index": 130
      },
      "131": {
        "Name": "LendMarket",
        "Storage": {
          "Prefix": "LendMarket",
          "Entries": [
            {
              "Name": "LastAccruedInterestTime",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 11
                }
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The timestamp of the last calculation of accrued interest"
              ]
            },
            {
              "Name": "LiquidationFreeCollaterals",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 311,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Liquidation free collateral."
              ]
            },
            {
              "Name": "TotalSupply",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Total number of collateral tokens in circulation",
                " CollateralType -> Balance"
              ]
            },
            {
              "Name": "TotalBorrows",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Total amount of outstanding borrows of the underlying in this market",
                " CurrencyId -> Balance"
              ]
            },
            {
              "Name": "TotalReserves",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Total amount of reserves of the underlying held in this market",
                " CurrencyId -> Balance"
              ]
            },
            {
              "Name": "AccountBorrows",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 829,
                  "Value": 880
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Mapping of account addresses to outstanding borrow balances",
                " CurrencyId -> Owner -> BorrowSnapshot"
              ]
            },
            {
              "Name": "AccountDeposits",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 829,
                  "Value": 881
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Mapping of account addresses to deposit details",
                " CollateralType -> Owner -> Deposits"
              ]
            },
            {
              "Name": "AccountEarned",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 829,
                  "Value": 882
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Mapping of account addresses to total deposit interest accrual",
                " CurrencyId -> Owner -> EarnedSnapshot"
              ]
            },
            {
              "Name": "BorrowIndex",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 397
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Accumulator of the total earned interest rate since the opening of the market",
                " CurrencyId -> u128"
              ]
            },
            {
              "Name": "ExchangeRate",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 397
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The exchange rate from the underlying to the internal collateral"
              ]
            },
            {
              "Name": "BorrowRate",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 397
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Mapping of borrow rate to currency type"
              ]
            },
            {
              "Name": "SupplyRate",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 397
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Mapping of supply rate to currency type"
              ]
            },
            {
              "Name": "UtilizationRatio",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 323
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Borrow utilization ratio"
              ]
            },
            {
              "Name": "Markets",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 416
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping of asset id to its market"
              ]
            },
            {
              "Name": "UnderlyingAssetId",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 292
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping of lend token id to asset id",
                " `lend token id`: voucher token id",
                " `asset id`: underlying token id"
              ]
            },
            {
              "Name": "RewardSupplySpeed",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Mapping of token id to supply reward speed"
              ]
            },
            {
              "Name": "RewardBorrowSpeed",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Mapping of token id to borrow reward speed"
              ]
            },
            {
              "Name": "RewardSupplyState",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 883
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " The Reward market supply state for each market"
              ]
            },
            {
              "Name": "RewardBorrowState",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 883
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " The Reward market borrow state for each market"
              ]
            },
            {
              "Name": "RewardSupplierIndex",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 829,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                "  The Reward index for each market for each supplier as of the last time they accrued Reward"
              ]
            },
            {
              "Name": "RewardBorrowerIndex",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 829,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                "  The Reward index for each market for each borrower as of the last time they accrued Reward"
              ]
            },
            {
              "Name": "RewardAccured",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The reward accrued but not yet transferred to each user."
              ]
            },
            {
              "Name": "StorageVersion",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 884,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Storage version of the pallet."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 415
        },
        "Events": {
          "TypeId": 500
        },
        "Constants": [
          {
            "Name": "PalletId",
            "TypeId": 726,
            "Value": "YmYvbGRta3Q=",
            "Docs": [
              " The loan's module id, keep all collaterals of CDPs."
            ]
          },
          {
            "Name": "RewardAssetId",
            "TypeId": 292,
            "Value": "AAE=",
            "Docs": [
              " Reward asset id."
            ]
          },
          {
            "Name": "LiquidationFreeAssetId",
            "TypeId": 292,
            "Value": "CAA=",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 885
        },
        "Index": 131
      },
      "132": {
        "Name": "Prices",
        "Storage": {
          "Prefix": "Prices",
          "Entries": [
            {
              "Name": "EmergencyPrice",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 397
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping from currency id to it's emergency price"
              ]
            },
            {
              "Name": "ForeignToNativeAsset",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 292
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping from foreign vault token to our's vault token"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 422
        },
        "Events": {
          "TypeId": 501
        },
        "Constants": [
          {
            "Name": "RelayCurrency",
            "TypeId": 292,
            "Value": "CAA=",
            "Docs": [
              " Relay currency"
            ]
          }
        ],
        "Errors": null,
        "Index": 132
      },
      "133": {
        "Name": "Oracle",
        "Storage": {
          "Prefix": "Oracle",
          "Entries": [
            {
              "Name": "RawValues",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 738,
                  "Value": 886
                }
              },
              "Default": "AA==",
              "Docs": [
                " Raw values for each oracle operators"
              ]
            },
            {
              "Name": "Values",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 886
                }
              },
              "Default": "AA==",
              "Docs": [
                " Up to date combined value from Raw Values"
              ]
            },
            {
              "Name": "HasDispatched",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 887,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " If an oracle operator has fed a value in this block"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 423
        },
        "Events": {
          "TypeId": 502
        },
        "Constants": [
          {
            "Name": "RootOperatorAccountId",
            "TypeId": 0,
            "Value": "bW9kbGJmL29yYWNsAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": [
              " The root operator account id, record all sudo feeds on this account."
            ]
          },
          {
            "Name": "MaxHasDispatchedSize",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " Maximum size of HasDispatched"
            ]
          },
          {
            "Name": "MaxFeedValues",
            "TypeId": 4,
            "Value": "ZAAAAA==",
            "Docs": [
              " Maximum size the vector used for feed values"
            ]
          }
        ],
        "Errors": {
          "TypeId": 889
        },
        "Index": 133
      },
      "134": {
        "Name": "OracleMembership",
        "Storage": {
          "Prefix": "OracleMembership",
          "Entries": [
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 890,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current membership, stored as an ordered Vec."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current prime member, if one exists."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 427
        },
        "Events": {
          "TypeId": 503
        },
        "Constants": [],
        "Errors": {
          "TypeId": 891
        },
        "Index": 134
      },
      "135": {
        "Name": "LeverageStaking",
        "Storage": null,
        "Calls": {
          "TypeId": 428
        },
        "Events": {
          "TypeId": 504
        },
        "Constants": [],
        "Errors": {
          "TypeId": 892
        },
        "Index": 135
      },
      "136": {
        "Name": "ChannelCommission",
        "Storage": {
          "Prefix": "ChannelCommission",
          "Entries": [
            {
              "Name": "ChannelNextId",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Auto increment channel id"
              ]
            },
            {
              "Name": "Channels",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 893
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping a channel id to a receive account and a name, ���channel_id =>(receive_account,",
                " name)���"
              ]
            },
            {
              "Name": "CommissionTokens",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 292
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping a vtoken to a commission token, ���vtoken => commission_token���"
              ]
            },
            {
              "Name": "ChannelCommissionTokenRates",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 819,
                  "Value": 370
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping a channel + vtoken to corresponding commission rate, ���(channel_id, vtoken) =>",
                " commission rate���"
              ]
            },
            {
              "Name": "ChannelVtokenShares",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 819,
                  "Value": 323
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Mapping a channel + vtoken to corresponding channel share, ���(channel_id, vtoken) => share���"
              ]
            },
            {
              "Name": "VtokenIssuanceSnapshots",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 409
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " ���vtoken => (old_issuance, new_issuance)���,old_issuance is the vtoken issuance at last",
                " clearing point,  new_issuance is the ongoing accumulative issuance the last clearing point"
              ]
            },
            {
              "Name": "PeriodVtokenTotalMint",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 409
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Vtoken total minted amount in the ongoing period for the chain, ���vtoken => (old_total_mint,",
                " new_total_mint)���"
              ]
            },
            {
              "Name": "PeriodVtokenTotalRedeem",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 409
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Vtoken total redeemed amount in the ongoing period for the chain, ���vtoken =>",
                " (old_total_redeem, new_total_redeem)���"
              ]
            },
            {
              "Name": "PeriodChannelVtokenMint",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 819,
                  "Value": 409
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Vtoken minted amount in the ongoing period for the channel, ���(channel_id, vtoken) =>",
                " (old_mint_amount, new_mint_amount)���"
              ]
            },
            {
              "Name": "PeriodTotalCommissions",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 409
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Commission pool for last period and ongoing period, ���commission token => (old_amount,",
                " new_amount)���"
              ]
            },
            {
              "Name": "PeriodClearedCommissions",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 292,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Commission amount that has been cleared for the current clearing process, ���commission token",
                " => amount���"
              ]
            },
            {
              "Name": "ChannelClaimableCommissions",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 819,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " Commission amount to be claimed by channels, ���channel id + commission token => amount���"
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 429
        },
        "Events": {
          "TypeId": 505
        },
        "Constants": [
          {
            "Name": "ClearingDuration",
            "TypeId": 4,
            "Value": "IBwAAA==",
            "Docs": []
          },
          {
            "Name": "NameLengthLimit",
            "TypeId": 4,
            "Value": "FAAAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 895
        },
        "Index": 136
      },
      "137": {
        "Name": "CloudsConvert",
        "Storage": null,
        "Calls": {
          "TypeId": 430
        },
        "Events": {
          "TypeId": 506
        },
        "Constants": [
          {
            "Name": "LockedBlocks",
            "TypeId": 4,
            "Value": "gGagAA==",
            "Docs": [
              " locked blocks for veBNC converted from clouds"
            ]
          }
        ],
        "Errors": {
          "TypeId": 896
        },
        "Index": 137
      },
      "138": {
        "Name": "BuyBack",
        "Storage": {
          "Prefix": "BuyBack",
          "Entries": [
            {
              "Name": "Infos",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 292,
                  "Value": 508
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 431
        },
        "Events": {
          "TypeId": 507
        },
        "Constants": [
          {
            "Name": "TreasuryAccount",
            "TypeId": 0,
            "Value": "bW9kbGJmL3Ryc3J5AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
            "Docs": []
          },
          {
            "Name": "RelayChainToken",
            "TypeId": 292,
            "Value": "CAA=",
            "Docs": []
          },
          {
            "Name": "BuyBackAccount",
            "TypeId": 726,
            "Value": "YmYvYnliY2s=",
            "Docs": []
          },
          {
            "Name": "LiquidityAccount",
            "TypeId": 726,
            "Value": "YmYvbGlxZHQ=",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 897
        },
        "Index": 138
      }
    },
    "Extrinsic": {
      "TypeId": 898,
      "Version": 4,
      "SignedExtensions": [
        {
          "SignedIdentifier": "CheckNonZeroSender",
          "SignedExtType": 900,
          "AddSignedExtType": 47
        },
        {
          "SignedIdentifier": "CheckSpecVersion",
          "SignedExtType": 901,
          "AddSignedExtType": 4
        },
        {
          "SignedIdentifier": "CheckTxVersion",
          "SignedExtType": 902,
          "AddSignedExtType": 4
        },
        {
          "SignedIdentifier": "CheckGenesis",
          "SignedExtType": 903,
          "AddSignedExtType": 12
        },
        {
          "SignedIdentifier": "CheckMortality",
          "SignedExtType": 904,
          "AddSignedExtType": 12
        },
        {
          "SignedIdentifier": "CheckNonce",
          "SignedExtType": 906,
          "AddSignedExtType": 47
        },
        {
          "SignedIdentifier": "CheckWeight",
          "SignedExtType": 907,
          "AddSignedExtType": 47
        },
        {
          "SignedIdentifier": "ChargeTransactionPayment",
          "SignedExtType": 908,
          "AddSignedExtType": 47
        }
      ]
    },
    "TypeId": 909
  }
}