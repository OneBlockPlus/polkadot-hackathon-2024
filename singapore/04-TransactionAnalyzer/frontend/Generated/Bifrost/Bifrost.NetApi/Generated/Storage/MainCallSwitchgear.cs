//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Bifrost.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> CallSwitchgearStorage
    /// </summary>
    public sealed class CallSwitchgearStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> CallSwitchgearStorage Constructor
        /// </summary>
        public CallSwitchgearStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CallSwitchgear", "OverallToggle"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.Bool)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CallSwitchgear", "SwitchedOffTransactions"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>), typeof(Substrate.NetApi.Model.Types.Base.BaseTuple)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CallSwitchgear", "DisabledTransfers"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Bifrost.NetApi.Generated.Model.bifrost_primitives.currency.EnumCurrencyId), typeof(Substrate.NetApi.Model.Types.Base.BaseTuple)));
        }
        
        /// <summary>
        /// >> OverallToggleParams
        ///  Controls whether or not all of the pallets are banned.
        /// </summary>
        public static string OverallToggleParams()
        {
            return RequestGenerator.GetStorage("CallSwitchgear", "OverallToggle", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> OverallToggleDefault
        /// Default value as hex string
        /// </summary>
        public static string OverallToggleDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> OverallToggle
        ///  Controls whether or not all of the pallets are banned.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.Bool> OverallToggle(string blockhash, CancellationToken token)
        {
            string parameters = CallSwitchgearStorage.OverallToggleParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.Bool>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> SwitchedOffTransactionsParams
        /// </summary>
        public static string SwitchedOffTransactionsParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>> key)
        {
            return RequestGenerator.GetStorage("CallSwitchgear", "SwitchedOffTransactions", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> SwitchedOffTransactionsDefault
        /// Default value as hex string
        /// </summary>
        public static string SwitchedOffTransactionsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> SwitchedOffTransactions
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseTuple> SwitchedOffTransactions(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>> key, string blockhash, CancellationToken token)
        {
            string parameters = CallSwitchgearStorage.SwitchedOffTransactionsParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseTuple>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> DisabledTransfersParams
        /// </summary>
        public static string DisabledTransfersParams(Bifrost.NetApi.Generated.Model.bifrost_primitives.currency.EnumCurrencyId key)
        {
            return RequestGenerator.GetStorage("CallSwitchgear", "DisabledTransfers", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> DisabledTransfersDefault
        /// Default value as hex string
        /// </summary>
        public static string DisabledTransfersDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> DisabledTransfers
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseTuple> DisabledTransfers(Bifrost.NetApi.Generated.Model.bifrost_primitives.currency.EnumCurrencyId key, string blockhash, CancellationToken token)
        {
            string parameters = CallSwitchgearStorage.DisabledTransfersParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseTuple>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> CallSwitchgearCalls
    /// </summary>
    public sealed class CallSwitchgearCalls
    {
        
        /// <summary>
        /// >> switchoff_transaction
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SwitchoffTransaction(Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8> pallet_name, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8> function_name)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(pallet_name.Encode());
            byteArray.AddRange(function_name.Encode());
            return new Method(112, "CallSwitchgear", 0, "switchoff_transaction", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> switchon_transaction
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SwitchonTransaction(Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8> pallet_name, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8> function_name)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(pallet_name.Encode());
            byteArray.AddRange(function_name.Encode());
            return new Method(112, "CallSwitchgear", 1, "switchon_transaction", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> disable_transfers
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method DisableTransfers(Bifrost.NetApi.Generated.Model.bifrost_primitives.currency.EnumCurrencyId currency_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(currency_id.Encode());
            return new Method(112, "CallSwitchgear", 2, "disable_transfers", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> enable_transfers
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method EnableTransfers(Bifrost.NetApi.Generated.Model.bifrost_primitives.currency.EnumCurrencyId currency_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(currency_id.Encode());
            return new Method(112, "CallSwitchgear", 3, "enable_transfers", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> CallSwitchgearConstants
    /// </summary>
    public sealed class CallSwitchgearConstants
    {
    }
    
    /// <summary>
    /// >> CallSwitchgearErrors
    /// </summary>
    public enum CallSwitchgearErrors
    {
        
        /// <summary>
        /// >> CannotSwitchOff
        /// can not switch off
        /// </summary>
        CannotSwitchOff,
        
        /// <summary>
        /// >> InvalidCharacter
        /// Invalid character
        /// </summary>
        InvalidCharacter,
    }
}
