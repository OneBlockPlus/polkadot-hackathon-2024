//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Bifrost.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> StablePoolStorage
    /// </summary>
    public sealed class StablePoolStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> StablePoolStorage Constructor
        /// </summary>
        public StablePoolStorage(SubstrateClientExt client)
        {
            this._client = client;
        }
    }
    
    /// <summary>
    /// >> StablePoolCalls
    /// </summary>
    public sealed class StablePoolCalls
    {
        
        /// <summary>
        /// >> create_pool
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method CreatePool(Substrate.NetApi.Model.Types.Base.BaseVec<Bifrost.NetApi.Generated.Model.bifrost_primitives.currency.EnumCurrencyId> assets, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U128> precisions, Substrate.NetApi.Model.Types.Primitive.U128 mint_fee, Substrate.NetApi.Model.Types.Primitive.U128 swap_fee, Substrate.NetApi.Model.Types.Primitive.U128 redeem_fee, Substrate.NetApi.Model.Types.Primitive.U128 initial_a, Bifrost.NetApi.Generated.Model.sp_core.crypto.AccountId32 fee_recipient, Bifrost.NetApi.Generated.Model.sp_core.crypto.AccountId32 yield_recipient, Substrate.NetApi.Model.Types.Primitive.U128 precision)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(assets.Encode());
            byteArray.AddRange(precisions.Encode());
            byteArray.AddRange(mint_fee.Encode());
            byteArray.AddRange(swap_fee.Encode());
            byteArray.AddRange(redeem_fee.Encode());
            byteArray.AddRange(initial_a.Encode());
            byteArray.AddRange(fee_recipient.Encode());
            byteArray.AddRange(yield_recipient.Encode());
            byteArray.AddRange(precision.Encode());
            return new Method(129, "StablePool", 0, "create_pool", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> add_liquidity
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method AddLiquidity(Substrate.NetApi.Model.Types.Primitive.U32 pool_id, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U128> amounts, Substrate.NetApi.Model.Types.Primitive.U128 min_mint_amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(pool_id.Encode());
            byteArray.AddRange(amounts.Encode());
            byteArray.AddRange(min_mint_amount.Encode());
            return new Method(129, "StablePool", 1, "add_liquidity", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> swap
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Swap(Substrate.NetApi.Model.Types.Primitive.U32 pool_id, Substrate.NetApi.Model.Types.Primitive.U32 i, Substrate.NetApi.Model.Types.Primitive.U32 j, Substrate.NetApi.Model.Types.Primitive.U128 dx, Substrate.NetApi.Model.Types.Primitive.U128 min_dy)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(pool_id.Encode());
            byteArray.AddRange(i.Encode());
            byteArray.AddRange(j.Encode());
            byteArray.AddRange(dx.Encode());
            byteArray.AddRange(min_dy.Encode());
            return new Method(129, "StablePool", 2, "swap", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> redeem_proportion
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RedeemProportion(Substrate.NetApi.Model.Types.Primitive.U32 pool_id, Substrate.NetApi.Model.Types.Primitive.U128 amount, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U128> min_redeem_amounts)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(pool_id.Encode());
            byteArray.AddRange(amount.Encode());
            byteArray.AddRange(min_redeem_amounts.Encode());
            return new Method(129, "StablePool", 3, "redeem_proportion", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> redeem_single
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RedeemSingle(Substrate.NetApi.Model.Types.Primitive.U32 pool_id, Substrate.NetApi.Model.Types.Primitive.U128 amount, Substrate.NetApi.Model.Types.Primitive.U32 i, Substrate.NetApi.Model.Types.Primitive.U128 min_redeem_amount, Substrate.NetApi.Model.Types.Primitive.U32 asset_length)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(pool_id.Encode());
            byteArray.AddRange(amount.Encode());
            byteArray.AddRange(i.Encode());
            byteArray.AddRange(min_redeem_amount.Encode());
            byteArray.AddRange(asset_length.Encode());
            return new Method(129, "StablePool", 4, "redeem_single", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> redeem_multi
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RedeemMulti(Substrate.NetApi.Model.Types.Primitive.U32 pool_id, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U128> amounts, Substrate.NetApi.Model.Types.Primitive.U128 max_redeem_amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(pool_id.Encode());
            byteArray.AddRange(amounts.Encode());
            byteArray.AddRange(max_redeem_amount.Encode());
            return new Method(129, "StablePool", 5, "redeem_multi", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> modify_a
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ModifyA(Substrate.NetApi.Model.Types.Primitive.U32 pool_id, Substrate.NetApi.Model.Types.Primitive.U128 a, Substrate.NetApi.Model.Types.Primitive.U32 future_a_block)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(pool_id.Encode());
            byteArray.AddRange(a.Encode());
            byteArray.AddRange(future_a_block.Encode());
            return new Method(129, "StablePool", 6, "modify_a", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> modify_fees
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ModifyFees(Substrate.NetApi.Model.Types.Primitive.U32 pool_id, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128> mint_fee, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128> swap_fee, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128> redeem_fee)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(pool_id.Encode());
            byteArray.AddRange(mint_fee.Encode());
            byteArray.AddRange(swap_fee.Encode());
            byteArray.AddRange(redeem_fee.Encode());
            return new Method(129, "StablePool", 7, "modify_fees", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> modify_recipients
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ModifyRecipients(Substrate.NetApi.Model.Types.Primitive.U32 pool_id, Substrate.NetApi.Model.Types.Base.BaseOpt<Bifrost.NetApi.Generated.Model.sp_core.crypto.AccountId32> fee_recipient, Substrate.NetApi.Model.Types.Base.BaseOpt<Bifrost.NetApi.Generated.Model.sp_core.crypto.AccountId32> yield_recipient)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(pool_id.Encode());
            byteArray.AddRange(fee_recipient.Encode());
            byteArray.AddRange(yield_recipient.Encode());
            return new Method(129, "StablePool", 8, "modify_recipients", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> edit_token_rate
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method EditTokenRate(Substrate.NetApi.Model.Types.Primitive.U32 pool_id, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Bifrost.NetApi.Generated.Model.bifrost_primitives.currency.EnumCurrencyId, Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U128, Substrate.NetApi.Model.Types.Primitive.U128>>> token_rate_info)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(pool_id.Encode());
            byteArray.AddRange(token_rate_info.Encode());
            return new Method(129, "StablePool", 9, "edit_token_rate", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> config_vtoken_auto_refresh
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ConfigVtokenAutoRefresh(Bifrost.NetApi.Generated.Model.bifrost_primitives.currency.EnumCurrencyId vtoken, Bifrost.NetApi.Generated.Model.sp_arithmetic.per_things.Permill hardcap)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(vtoken.Encode());
            byteArray.AddRange(hardcap.Encode());
            return new Method(129, "StablePool", 10, "config_vtoken_auto_refresh", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> remove_vtoken_auto_refresh
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RemoveVtokenAutoRefresh(Bifrost.NetApi.Generated.Model.bifrost_primitives.currency.EnumCurrencyId vtoken)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(vtoken.Encode());
            return new Method(129, "StablePool", 11, "remove_vtoken_auto_refresh", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> StablePoolConstants
    /// </summary>
    public sealed class StablePoolConstants
    {
    }
    
    /// <summary>
    /// >> StablePoolErrors
    /// </summary>
    public enum StablePoolErrors
    {
        
        /// <summary>
        /// >> SwapUnderMin
        /// </summary>
        SwapUnderMin,
        
        /// <summary>
        /// >> MintUnderMin
        /// </summary>
        MintUnderMin,
        
        /// <summary>
        /// >> CantMint
        /// </summary>
        CantMint,
        
        /// <summary>
        /// >> RedeemOverMax
        /// </summary>
        RedeemOverMax,
        
        /// <summary>
        /// >> TokenRateNotSet
        /// </summary>
        TokenRateNotSet,
    }
}
