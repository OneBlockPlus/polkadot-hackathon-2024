//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Bifrost.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> LeverageStakingStorage
    /// </summary>
    public sealed class LeverageStakingStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> LeverageStakingStorage Constructor
        /// </summary>
        public LeverageStakingStorage(SubstrateClientExt client)
        {
            this._client = client;
        }
    }
    
    /// <summary>
    /// >> LeverageStakingCalls
    /// </summary>
    public sealed class LeverageStakingCalls
    {
        
        /// <summary>
        /// >> flash_loan_deposit
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method FlashLoanDeposit(Bifrost.NetApi.Generated.Model.bifrost_primitives.currency.EnumCurrencyId asset_id, Bifrost.NetApi.Generated.Model.sp_arithmetic.fixed_point.FixedU128 rate)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(asset_id.Encode());
            byteArray.AddRange(rate.Encode());
            return new Method(135, "LeverageStaking", 0, "flash_loan_deposit", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> LeverageStakingConstants
    /// </summary>
    public sealed class LeverageStakingConstants
    {
    }
    
    /// <summary>
    /// >> LeverageStakingErrors
    /// </summary>
    public enum LeverageStakingErrors
    {
        
        /// <summary>
        /// >> ArgumentsError
        /// </summary>
        ArgumentsError,
        
        /// <summary>
        /// >> NotSupportTokenType
        /// </summary>
        NotSupportTokenType,
    }
}
