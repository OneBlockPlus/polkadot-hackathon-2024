//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Bifrost.NetApi.Generated.Model.bifrost_system_staking.types
{
    
    
    /// <summary>
    /// >> 822 - Composite[bifrost_system_staking.types.TokenInfo]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class TokenInfo : BaseType
    {
        
        /// <summary>
        /// >> farming_staking_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 FarmingStakingAmount { get; set; }
        /// <summary>
        /// >> system_stakable_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 SystemStakableAmount { get; set; }
        /// <summary>
        /// >> system_shadow_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 SystemShadowAmount { get; set; }
        /// <summary>
        /// >> pending_redeem_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 PendingRedeemAmount { get; set; }
        /// <summary>
        /// >> current_config
        /// </summary>
        public Bifrost.NetApi.Generated.Model.bifrost_system_staking.types.TokenConfig CurrentConfig { get; set; }
        /// <summary>
        /// >> new_config
        /// </summary>
        public Bifrost.NetApi.Generated.Model.bifrost_system_staking.types.TokenConfig NewConfig { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "TokenInfo";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(FarmingStakingAmount.Encode());
            result.AddRange(SystemStakableAmount.Encode());
            result.AddRange(SystemShadowAmount.Encode());
            result.AddRange(PendingRedeemAmount.Encode());
            result.AddRange(CurrentConfig.Encode());
            result.AddRange(NewConfig.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            FarmingStakingAmount = new Substrate.NetApi.Model.Types.Primitive.U128();
            FarmingStakingAmount.Decode(byteArray, ref p);
            SystemStakableAmount = new Substrate.NetApi.Model.Types.Primitive.U128();
            SystemStakableAmount.Decode(byteArray, ref p);
            SystemShadowAmount = new Substrate.NetApi.Model.Types.Primitive.U128();
            SystemShadowAmount.Decode(byteArray, ref p);
            PendingRedeemAmount = new Substrate.NetApi.Model.Types.Primitive.U128();
            PendingRedeemAmount.Decode(byteArray, ref p);
            CurrentConfig = new Bifrost.NetApi.Generated.Model.bifrost_system_staking.types.TokenConfig();
            CurrentConfig.Decode(byteArray, ref p);
            NewConfig = new Bifrost.NetApi.Generated.Model.bifrost_system_staking.types.TokenConfig();
            NewConfig.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
