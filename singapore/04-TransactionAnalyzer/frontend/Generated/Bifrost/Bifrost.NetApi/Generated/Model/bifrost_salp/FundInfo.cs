//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Bifrost.NetApi.Generated.Model.bifrost_salp
{
    
    
    /// <summary>
    /// >> 771 - Composite[bifrost_salp.FundInfo]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class FundInfo : BaseType
    {
        
        /// <summary>
        /// >> raised
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 Raised { get; set; }
        /// <summary>
        /// >> cap
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 Cap { get; set; }
        /// <summary>
        /// >> first_slot
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 FirstSlot { get; set; }
        /// <summary>
        /// >> last_slot
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 LastSlot { get; set; }
        /// <summary>
        /// >> trie_index
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 TrieIndex { get; set; }
        /// <summary>
        /// >> status
        /// </summary>
        public Bifrost.NetApi.Generated.Model.bifrost_salp.EnumFundStatus Status { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "FundInfo";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Raised.Encode());
            result.AddRange(Cap.Encode());
            result.AddRange(FirstSlot.Encode());
            result.AddRange(LastSlot.Encode());
            result.AddRange(TrieIndex.Encode());
            result.AddRange(Status.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Raised = new Substrate.NetApi.Model.Types.Primitive.U128();
            Raised.Decode(byteArray, ref p);
            Cap = new Substrate.NetApi.Model.Types.Primitive.U128();
            Cap.Decode(byteArray, ref p);
            FirstSlot = new Substrate.NetApi.Model.Types.Primitive.U32();
            FirstSlot.Decode(byteArray, ref p);
            LastSlot = new Substrate.NetApi.Model.Types.Primitive.U32();
            LastSlot.Decode(byteArray, ref p);
            TrieIndex = new Substrate.NetApi.Model.Types.Primitive.U32();
            TrieIndex.Decode(byteArray, ref p);
            Status = new Bifrost.NetApi.Generated.Model.bifrost_salp.EnumFundStatus();
            Status.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
