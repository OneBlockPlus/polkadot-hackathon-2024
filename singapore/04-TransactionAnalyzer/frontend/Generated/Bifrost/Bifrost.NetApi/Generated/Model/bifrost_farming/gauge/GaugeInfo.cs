//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Bifrost.NetApi.Generated.Model.bifrost_farming.gauge
{
    
    
    /// <summary>
    /// >> 814 - Composite[bifrost_farming.gauge.GaugeInfo]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class GaugeInfo : BaseType
    {
        
        /// <summary>
        /// >> who
        /// </summary>
        public Bifrost.NetApi.Generated.Model.sp_core.crypto.AccountId32 Who { get; set; }
        /// <summary>
        /// >> gauge_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 GaugeAmount { get; set; }
        /// <summary>
        /// >> total_time_factor
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 TotalTimeFactor { get; set; }
        /// <summary>
        /// >> latest_time_factor
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 LatestTimeFactor { get; set; }
        /// <summary>
        /// >> claimed_time_factor
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 ClaimedTimeFactor { get; set; }
        /// <summary>
        /// >> gauge_start_block
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GaugeStartBlock { get; set; }
        /// <summary>
        /// >> gauge_stop_block
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GaugeStopBlock { get; set; }
        /// <summary>
        /// >> gauge_last_block
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GaugeLastBlock { get; set; }
        /// <summary>
        /// >> last_claim_block
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 LastClaimBlock { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "GaugeInfo";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Who.Encode());
            result.AddRange(GaugeAmount.Encode());
            result.AddRange(TotalTimeFactor.Encode());
            result.AddRange(LatestTimeFactor.Encode());
            result.AddRange(ClaimedTimeFactor.Encode());
            result.AddRange(GaugeStartBlock.Encode());
            result.AddRange(GaugeStopBlock.Encode());
            result.AddRange(GaugeLastBlock.Encode());
            result.AddRange(LastClaimBlock.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Who = new Bifrost.NetApi.Generated.Model.sp_core.crypto.AccountId32();
            Who.Decode(byteArray, ref p);
            GaugeAmount = new Substrate.NetApi.Model.Types.Primitive.U128();
            GaugeAmount.Decode(byteArray, ref p);
            TotalTimeFactor = new Substrate.NetApi.Model.Types.Primitive.U128();
            TotalTimeFactor.Decode(byteArray, ref p);
            LatestTimeFactor = new Substrate.NetApi.Model.Types.Primitive.U128();
            LatestTimeFactor.Decode(byteArray, ref p);
            ClaimedTimeFactor = new Substrate.NetApi.Model.Types.Primitive.U128();
            ClaimedTimeFactor.Decode(byteArray, ref p);
            GaugeStartBlock = new Substrate.NetApi.Model.Types.Primitive.U32();
            GaugeStartBlock.Decode(byteArray, ref p);
            GaugeStopBlock = new Substrate.NetApi.Model.Types.Primitive.U32();
            GaugeStopBlock.Decode(byteArray, ref p);
            GaugeLastBlock = new Substrate.NetApi.Model.Types.Primitive.U32();
            GaugeLastBlock.Decode(byteArray, ref p);
            LastClaimBlock = new Substrate.NetApi.Model.Types.Primitive.U32();
            LastClaimBlock.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
