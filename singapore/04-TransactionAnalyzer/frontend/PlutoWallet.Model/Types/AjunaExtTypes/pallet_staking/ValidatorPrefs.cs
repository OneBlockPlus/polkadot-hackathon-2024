//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.NetApi.Generated.Model.pallet_staking
{
    
    
    /// <summary>
    /// >> 41 - Composite[pallet_staking.ValidatorPrefs]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class ValidatorPrefs : BaseType
    {
        
        /// <summary>
        /// >> commission
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Generated.Model.sp_arithmetic.per_things.Perbill> _commission;
        
        /// <summary>
        /// >> blocked
        /// </summary>
        private Substrate.NetApi.Model.Types.Primitive.Bool _blocked;
        
        public Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Generated.Model.sp_arithmetic.per_things.Perbill> Commission
        {
            get
            {
                return this._commission;
            }
            set
            {
                this._commission = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Primitive.Bool Blocked
        {
            get
            {
                return this._blocked;
            }
            set
            {
                this._blocked = value;
            }
        }
        
        public override string TypeName()
        {
            return "ValidatorPrefs";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Commission.Encode());
            result.AddRange(Blocked.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Commission = new Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Generated.Model.sp_arithmetic.per_things.Perbill>();
            Commission.Decode(byteArray, ref p);
            Blocked = new Substrate.NetApi.Model.Types.Primitive.Bool();
            Blocked.Decode(byteArray, ref p);
            TypeSize = p - start;
        }
    }
}
