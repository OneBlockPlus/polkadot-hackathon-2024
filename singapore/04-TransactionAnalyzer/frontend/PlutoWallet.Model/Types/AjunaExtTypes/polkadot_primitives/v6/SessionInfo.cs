//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.NetApi.Generated.Model.polkadot_primitives.v6
{
    
    
    /// <summary>
    /// >> 796 - Composite[polkadot_primitives.v6.SessionInfo]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class SessionInfo : BaseType
    {
        
        /// <summary>
        /// >> active_validator_indices
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Generated.Model.polkadot_primitives.v6.ValidatorIndex> ActiveValidatorIndices { get; set; }
        /// <summary>
        /// >> random_seed
        /// </summary>
        public Substrate.NetApi.Generated.Types.Base.Arr32U8 RandomSeed { get; set; }
        /// <summary>
        /// >> dispute_period
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 DisputePeriod { get; set; }
        /// <summary>
        /// >> validators
        /// </summary>
        public Substrate.NetApi.Generated.Model.polkadot_primitives.v6.IndexedVecT1 Validators { get; set; }
        /// <summary>
        /// >> discovery_keys
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Generated.Model.sp_authority_discovery.app.Public> DiscoveryKeys { get; set; }
        /// <summary>
        /// >> assignment_keys
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Generated.Model.polkadot_primitives.v6.assignment_app.Public> AssignmentKeys { get; set; }
        /// <summary>
        /// >> validator_groups
        /// </summary>
        public Substrate.NetApi.Generated.Model.polkadot_primitives.v6.IndexedVecT2 ValidatorGroups { get; set; }
        /// <summary>
        /// >> n_cores
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 NCores { get; set; }
        /// <summary>
        /// >> zeroth_delay_tranche_width
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 ZerothDelayTrancheWidth { get; set; }
        /// <summary>
        /// >> relay_vrf_modulo_samples
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 RelayVrfModuloSamples { get; set; }
        /// <summary>
        /// >> n_delay_tranches
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 NDelayTranches { get; set; }
        /// <summary>
        /// >> no_show_slots
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 NoShowSlots { get; set; }
        /// <summary>
        /// >> needed_approvals
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 NeededApprovals { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "SessionInfo";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(ActiveValidatorIndices.Encode());
            result.AddRange(RandomSeed.Encode());
            result.AddRange(DisputePeriod.Encode());
            result.AddRange(Validators.Encode());
            result.AddRange(DiscoveryKeys.Encode());
            result.AddRange(AssignmentKeys.Encode());
            result.AddRange(ValidatorGroups.Encode());
            result.AddRange(NCores.Encode());
            result.AddRange(ZerothDelayTrancheWidth.Encode());
            result.AddRange(RelayVrfModuloSamples.Encode());
            result.AddRange(NDelayTranches.Encode());
            result.AddRange(NoShowSlots.Encode());
            result.AddRange(NeededApprovals.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            ActiveValidatorIndices = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Generated.Model.polkadot_primitives.v6.ValidatorIndex>();
            ActiveValidatorIndices.Decode(byteArray, ref p);
            RandomSeed = new Substrate.NetApi.Generated.Types.Base.Arr32U8();
            RandomSeed.Decode(byteArray, ref p);
            DisputePeriod = new Substrate.NetApi.Model.Types.Primitive.U32();
            DisputePeriod.Decode(byteArray, ref p);
            Validators = new Substrate.NetApi.Generated.Model.polkadot_primitives.v6.IndexedVecT1();
            Validators.Decode(byteArray, ref p);
            DiscoveryKeys = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Generated.Model.sp_authority_discovery.app.Public>();
            DiscoveryKeys.Decode(byteArray, ref p);
            AssignmentKeys = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Generated.Model.polkadot_primitives.v6.assignment_app.Public>();
            AssignmentKeys.Decode(byteArray, ref p);
            ValidatorGroups = new Substrate.NetApi.Generated.Model.polkadot_primitives.v6.IndexedVecT2();
            ValidatorGroups.Decode(byteArray, ref p);
            NCores = new Substrate.NetApi.Model.Types.Primitive.U32();
            NCores.Decode(byteArray, ref p);
            ZerothDelayTrancheWidth = new Substrate.NetApi.Model.Types.Primitive.U32();
            ZerothDelayTrancheWidth.Decode(byteArray, ref p);
            RelayVrfModuloSamples = new Substrate.NetApi.Model.Types.Primitive.U32();
            RelayVrfModuloSamples.Decode(byteArray, ref p);
            NDelayTranches = new Substrate.NetApi.Model.Types.Primitive.U32();
            NDelayTranches.Decode(byteArray, ref p);
            NoShowSlots = new Substrate.NetApi.Model.Types.Primitive.U32();
            NoShowSlots.Decode(byteArray, ref p);
            NeededApprovals = new Substrate.NetApi.Model.Types.Primitive.U32();
            NeededApprovals.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
