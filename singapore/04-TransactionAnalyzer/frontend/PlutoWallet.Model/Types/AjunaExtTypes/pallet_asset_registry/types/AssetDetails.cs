//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.NetApi.Generated.Model.pallet_asset_registry.types
{
    
    
    /// <summary>
    /// >> 427 - Composite[pallet_asset_registry.types.AssetDetails]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class AssetDetails : BaseType
    {
        
        /// <summary>
        /// >> name
        /// </summary>
        private Substrate.NetApi.Generated.Model.sp_core.bounded.bounded_vec.BoundedVecT4 _name;
        
        /// <summary>
        /// >> asset_type
        /// </summary>
        private Substrate.NetApi.Generated.Model.pallet_asset_registry.types.EnumAssetType _assetType;
        
        /// <summary>
        /// >> existential_deposit
        /// </summary>
        private Substrate.NetApi.Model.Types.Primitive.U128 _existentialDeposit;
        
        /// <summary>
        /// >> xcm_rate_limit
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128> _xcmRateLimit;
        
        public Substrate.NetApi.Generated.Model.sp_core.bounded.bounded_vec.BoundedVecT4 Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }
        
        public Substrate.NetApi.Generated.Model.pallet_asset_registry.types.EnumAssetType AssetType
        {
            get
            {
                return this._assetType;
            }
            set
            {
                this._assetType = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Primitive.U128 ExistentialDeposit
        {
            get
            {
                return this._existentialDeposit;
            }
            set
            {
                this._existentialDeposit = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128> XcmRateLimit
        {
            get
            {
                return this._xcmRateLimit;
            }
            set
            {
                this._xcmRateLimit = value;
            }
        }
        
        public override string TypeName()
        {
            return "AssetDetails";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Name.Encode());
            result.AddRange(AssetType.Encode());
            result.AddRange(ExistentialDeposit.Encode());
            result.AddRange(XcmRateLimit.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Name = new Substrate.NetApi.Generated.Model.sp_core.bounded.bounded_vec.BoundedVecT4();
            Name.Decode(byteArray, ref p);
            AssetType = new Substrate.NetApi.Generated.Model.pallet_asset_registry.types.EnumAssetType();
            AssetType.Decode(byteArray, ref p);
            ExistentialDeposit = new Substrate.NetApi.Model.Types.Primitive.U128();
            ExistentialDeposit.Decode(byteArray, ref p);
            XcmRateLimit = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128>();
            XcmRateLimit.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
