{"id":"bfac45dadc47b3c2cd1f6dc527fc7e0f","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/PolkaGift.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\ncontract PolkaGift {\r\n\r\n    /// Highest bidder struct\r\n    struct highest_bidder_struct {\r\n        ///Token Id\r\n        string token_id;\r\n        ///Event Id\r\n        string event_id;\r\n        ///Highest Bidder\r\n        address wallet;\r\n        ///Highest Bid price\r\n        string price;\r\n    }\r\n\r\n\r\n    struct event_token_struct{\r\n        ///Event Id\r\n        string event_id;\r\n        ///Token Uri\r\n        string token_uri;\r\n    }\r\n    struct token_bid_struct{\r\n        ///Token Id\r\n        string token_id;\r\n        ///Bid URI\r\n        string bid_uri;\r\n\r\n    }\r\n\r\n    uint256 private _tokenIds;\r\n    uint256 private _bidIds;\r\n    uint256 private _eventIds;\r\n    uint256 private _EventTokenIds;\r\n    uint256 private _TokenBidIds;\r\n    uint256 private _TokenHighestBidIds;\r\n    uint256 public _EventTokenSearchIds;\r\n    mapping(string => bool) public AllEventEndTime; //Event ID => bool\r\n    mapping(uint256 => event_token_struct) private AllEventTokens;\r\n    mapping(uint256 => token_bid_struct) private AllTokensBids;\r\n    mapping(uint256 => highest_bidder_struct) public TokenHighestBidders; //_TokenHighestBidIds => highest bidder struct\r\n    mapping(string => string[2]) public _SearchedStore;\r\n    mapping(string => string) private _bidURIs;\r\n    mapping(string => string) private _tokenURIs; //_tokenIds => Token URI\r\n    mapping(string => string[2]) private _eventURIs;\r\n    mapping(string => string) private _eventRaised;\r\n\r\n    function claimToken(\r\n        address _claimer,\r\n        string memory _tokenURI,\r\n        string memory _eventid\r\n    ) public returns (uint256) {\r\n        _setTokenURI(string.concat(\"m_\" , Strings.toString(_tokenIds)), _tokenURI);\r\n        _setTokenEvent(_EventTokenIds, _eventid, _tokenURI);\r\n\r\n        _tokenIds++;\r\n        _EventTokenIds++;\r\n        return _tokenIds;\r\n    }\r\n\r\n    function _setTokenEvent(\r\n        uint256 EventTokenId,\r\n        string memory EventId,\r\n        string memory _tokenURI\r\n    ) public virtual {\r\n        AllEventTokens[EventTokenId] = event_token_struct(\r\n            string(EventId),\r\n            string(_tokenURI)\r\n        );\r\n    }\r\n\r\n    function createEvent(\r\n        string memory _eventWallet,\r\n        string memory _eventURI,\r\n        uint256 endtime\r\n    ) public returns (uint256) {\r\n        string memory new_event_id = string.concat(\"m_\" , Strings.toString(_eventIds));\r\n\r\n        _setEventURI(new_event_id, _eventWallet, _eventURI);\r\n        _setEventRaised(new_event_id, \"0\");\r\n        AllEventEndTime[new_event_id] = false;\r\n        _eventIds++;\r\n\r\n        return _eventIds;\r\n    }\r\n\r\n\r\n    function distribute_event(string memory eventID) public{ \r\n      \r\n    AllEventEndTime[eventID] = true;\r\n\r\n    }\r\n    function gettokenIdByUri(string memory _tokenURI)\r\n        public\r\n        view\r\n        virtual\r\n        returns (uint256)\r\n    {\r\n        for (uint256 i = 0; i < _tokenIds; i++) {\r\n            if (\r\n                keccak256(bytes(_tokenURIs[string.concat(\"m_\", Strings.toString(i))])) == keccak256(bytes(_tokenURI))\r\n            ) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function getEventIdByURI(string memory _eventURI)\r\n        public\r\n        view\r\n        virtual\r\n        returns (uint256)\r\n    {\r\n        for (uint256 i = 0; i < _eventIds; i++) {\r\n            if (\r\n                keccak256(bytes(_eventURIs[string.concat(\"m_\", Strings.toString(i))][1])) ==\r\n                keccak256(bytes(_eventURI))\r\n            ) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function getBidIdByUri(string memory _bidURI)\r\n        public\r\n        view\r\n        virtual\r\n        returns (uint256)\r\n    {\r\n        for (uint256 i = 0; i < _bidIds; i++) {\r\n            if (keccak256(bytes(_bidURIs[string.concat(\"m_\", Strings.toString(i))])) == keccak256(bytes(_bidURI))) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function gettokenSearchEventTotal(string memory EventID)\r\n        public\r\n        view\r\n        virtual\r\n        returns (string[] memory)\r\n    {\r\n        string[] memory _SearchedStoreToken = new string[](10);\r\n\r\n        uint256 _EventTokenSearchIds2 = 0;\r\n\r\n        for (uint256 i = 0; i < _EventTokenIds; i++) {\r\n            if (\r\n                keccak256(bytes(AllEventTokens[i].event_id)) ==\r\n                keccak256(bytes(string(EventID)))\r\n            ) {\r\n                _SearchedStoreToken[_EventTokenSearchIds2] = AllEventTokens[i].token_uri;\r\n                _EventTokenSearchIds2++;\r\n            }\r\n        }\r\n\r\n        return _SearchedStoreToken;\r\n    }\r\n\r\n    function getSearchEventbyWallet(string memory Wallet)\r\n        public\r\n        view\r\n        virtual\r\n        returns (string[] memory)\r\n    {\r\n        uint256 _TemporarySearch = 0;\r\n        uint256 _SearchIds = 0;\r\n\r\n        for (uint256 i = 0; i < _eventIds; i++) {\r\n            if (\r\n                keccak256(bytes(_eventURIs[string.concat(\"m_\", Strings.toString(i))][0])) == keccak256(bytes(Wallet))\r\n            ) {\r\n                _TemporarySearch++;\r\n            }\r\n        }\r\n        string[] memory _SearchedStoreEvents = new string[](_TemporarySearch);\r\n        for (uint256 i = 0; i < _eventIds; i++) {\r\n            if (\r\n                keccak256(bytes(_eventURIs[string.concat(\"m_\", Strings.toString(i))][0])) == keccak256(bytes(Wallet))\r\n            ) {\r\n                _SearchedStoreEvents[_SearchIds] = _eventURIs[string.concat(\"m_\", Strings.toString(i))][1];\r\n                _SearchIds++;\r\n            }\r\n        }\r\n\r\n        return _SearchedStoreEvents;\r\n    }\r\n\r\n    function getGetEventsTokenID(string memory EventId, string memory _tokenURI)\r\n        public\r\n        view\r\n        virtual\r\n        returns (uint256)\r\n    {\r\n        for (uint256 i = 0; i < _EventTokenIds; i++) {\r\n            if (\r\n                keccak256(bytes(AllEventTokens[i].event_id)) ==\r\n                keccak256(bytes(string(EventId))) &&\r\n                keccak256(bytes(AllEventTokens[i].token_uri)) ==\r\n                keccak256(bytes(_tokenURI))\r\n            ) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function _getSearchedTokenURI(string memory _tokenId)\r\n        public\r\n        view\r\n        virtual\r\n        returns (string memory)\r\n    {\r\n        return _SearchedStore[_tokenId][0];\r\n    }\r\n\r\n    function _setEventURI(\r\n        string memory eventId,\r\n        string memory _eventWallet,\r\n        string memory _eventURI\r\n    ) public virtual {\r\n        _eventURIs[eventId] = [_eventWallet, _eventURI];\r\n    }\r\n\r\n    function _setTokenURI(string memory tokenId, string memory _tokenURI)\r\n        public\r\n        virtual\r\n    {\r\n        _tokenURIs[tokenId] = _tokenURI;\r\n                \r\n    }\r\n\r\n    function eventURI(string memory eventId) public view returns (string[2] memory) {\r\n        return _eventURIs[eventId];\r\n    }\r\n\r\n    function tokenURI(string memory tokenId)\r\n        public\r\n        view\r\n        virtual\r\n        returns (string memory)\r\n    {\r\n        return _tokenURIs[tokenId];\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return _tokenIds;\r\n    }\r\n\r\n    function totalEvent() public view returns (uint256) {\r\n        return _eventIds;\r\n    }\r\n\r\n    function _setBidURI(string memory bidId, string memory _bidURI) public virtual {\r\n        _bidURIs[bidId] = _bidURI;\r\n    }\r\n\r\n    function BidURI(string memory BidId) public view returns (string memory) {\r\n        return _bidURIs[BidId];\r\n    }\r\n\r\n    function getTotalBid(string memory TokenID)\r\n        public\r\n        view\r\n        virtual\r\n        returns (string[] memory)\r\n    {\r\n        string[] memory _SearchedStoreBid = new string[](10);\r\n\r\n        uint256 _TokenBidSearchIds2 = 0;\r\n\r\n        for (uint256 i = 0; i < _TokenBidIds; i++) {\r\n            if (\r\n                keccak256(bytes(AllTokensBids[i].token_id)) ==\r\n                keccak256(bytes(string(TokenID)))\r\n            ) {\r\n                _SearchedStoreBid[_TokenBidSearchIds2] = AllTokensBids[i].bid_uri;\r\n                _TokenBidSearchIds2++;\r\n            }\r\n        }\r\n\r\n        return _SearchedStoreBid;\r\n    }\r\n\r\n    function getBidsSearchToken(string memory TokenID)\r\n        public\r\n        view\r\n        virtual\r\n        returns (string[] memory)\r\n    {\r\n        string[] memory _SearchedStoreBid = new string[](10);\r\n\r\n        uint256 _TokenBidSearchIds2 = 0;\r\n\r\n        for (uint256 i = 0; i < _TokenBidIds; i++) {\r\n            if (\r\n                keccak256(bytes(AllTokensBids[i].token_id)) ==\r\n                keccak256(bytes(string(TokenID)))\r\n            ) {\r\n                _SearchedStoreBid[_TokenBidSearchIds2] = AllTokensBids[i].bid_uri;\r\n                _TokenBidSearchIds2++;\r\n            }\r\n        }\r\n\r\n        return _SearchedStoreBid;\r\n    }\r\n\r\n    function _setTokenBid(\r\n        uint256 TokenBidId,\r\n        string memory TokenId,\r\n        string memory _BidURI\r\n    ) public virtual {\r\n        AllTokensBids[TokenBidId] = token_bid_struct(\r\n            string(TokenId),\r\n            string(_BidURI)\r\n        );\r\n    }\r\n\r\n\r\n    function _setTokenHighestBid(\r\n        string memory token_id,\r\n        string memory event_id,\r\n        address wallet,\r\n        string memory price\r\n    ) public virtual {\r\n\r\n        string memory old_id = getTokenHighestBid(token_id);\r\n        if ( keccak256(bytes(old_id)) != keccak256(bytes(string(\"-1\")))){\r\n\r\n            TokenHighestBidders[strToUint(old_id)]= highest_bidder_struct({\r\n                token_id: token_id,\r\n                event_id: event_id,\r\n                wallet: wallet,\r\n                price: price\r\n            });\r\n        }else{\r\n            TokenHighestBidders[_TokenHighestBidIds] = highest_bidder_struct({\r\n                token_id: token_id,\r\n                event_id: event_id,\r\n                wallet: wallet,\r\n                price: price\r\n            });\r\n            _TokenHighestBidIds++;\r\n        }\r\n\r\n    }\r\n    function strToUint(string memory _str) public pure returns(uint256 res) {\r\n        \r\n        for (uint256 i = 0; i < bytes(_str).length; i++) {\r\n            if ((uint8(bytes(_str)[i]) - 48) < 0 || (uint8(bytes(_str)[i]) - 48) > 9) {\r\n                return (0);\r\n            }\r\n            res += (uint8(bytes(_str)[i]) - 48) * 10**(bytes(_str).length - i - 1);\r\n        }\r\n        \r\n        return (res);\r\n    }\r\n    function getTokenHighestBid(string memory token_id)   \r\n        public\r\n        view\r\n        virtual\r\n        returns (string memory){\r\n            for (uint256 i = 0; i < _TokenHighestBidIds; i++) {\r\n            if (\r\n                    keccak256(bytes(TokenHighestBidders[i].token_id)) ==\r\n                    keccak256(bytes(string(token_id)))\r\n                ) {\r\n                    return Strings.toString(i);\r\n                }\r\n            }\r\n            return \"-1\";\r\n\r\n        }\r\n\r\n    function getEventRaised(string memory _eventId)\r\n        public\r\n        view\r\n        virtual\r\n        returns (string memory)\r\n    {\r\n        return _eventRaised[_eventId];\r\n    }\r\n\r\n    function _setEventRaised(string memory _eventId, string memory _raised) public {\r\n        _eventRaised[_eventId] = _raised;\r\n    }\r\n\r\n    function createBid(\r\n        string memory _tokenId,\r\n        string memory _bidURI,\r\n        string memory _eventid,\r\n        string memory _raised,\r\n        string memory _bid_price\r\n\r\n    ) public {\r\n        uint256 _EventTokenId = getGetEventsTokenID(\r\n            _eventid,\r\n            _tokenURIs[_tokenId]\r\n        );\r\n\r\n        _setTokenHighestBid(_tokenId,_eventid,msg.sender,_bid_price);\r\n        \r\n        _setEventRaised(_eventid, _raised);\r\n\r\n        _setTokenBid(_TokenBidIds, _tokenId, _bidURI);\r\n        _TokenBidIds++;\r\n        _bidIds++;\r\n    }\r\n}\r\n"},"contracts/precompiles/Batch.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity >=0.8.3;\r\n\r\n/// @dev The Batch contract's address.\r\naddress constant BATCH_ADDRESS = 0x0000000000000000000000000000000000000808;\r\n\r\n/// @dev The Batch contract's instance.\r\nBatch constant BATCH_CONTRACT = Batch(BATCH_ADDRESS);\r\n\r\n/// @author The Moonbeam Team\r\n/// @title Batch precompile\r\n/// @dev Allows to perform multiple calls throught one call to the precompile.\r\n/// Can be used by EOA to do multiple calls in a single transaction.\r\n/// @custom:address 0x0000000000000000000000000000000000000808\r\ninterface Batch {\r\n    /// @dev Batch multiple calls into a single transaction.\r\n    /// All calls are performed from the address calling this precompile.\r\n    ///\r\n    /// In case of one subcall reverting following subcalls will still be attempted.\r\n    ///\r\n    /// @param to List of addresses to call.\r\n    /// @param value List of values for each subcall. If array is shorter than \"to\" then additional\r\n    /// calls will be performed with a value of 0.\r\n    /// @param callData Call data for each `to` address. If array is shorter than \"to\" then\r\n    /// additional calls will be performed with an empty call data.\r\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\r\n    /// If array is shorter than \"to\" then the remaining gas available will be used.\r\n    /// @custom:selector 79df4b9c\r\n    function batchSome(\r\n        address[] memory to,\r\n        uint256[] memory value,\r\n        bytes[] memory callData,\r\n        uint64[] memory gasLimit\r\n    ) external;\r\n\r\n    /// @dev Batch multiple calls into a single transaction.\r\n    /// All calls are performed from the address calling this precompile.\r\n    ///\r\n    /// In case of one subcall reverting, no more subcalls will be executed but\r\n    /// the batch transaction will succeed. Use batchAll to revert on any subcall revert.\r\n    ///\r\n    /// @param to List of addresses to call.\r\n    /// @param value List of values for each subcall. If array is shorter than \"to\" then additional\r\n    /// calls will be performed with a value of 0.\r\n    /// @param callData Call data for each `to` address. If array is shorter than \"to\" then\r\n    /// additional calls will be performed with an empty call data.\r\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\r\n    /// If array is shorter than \"to\" then the remaining gas available will be used.\r\n    /// @custom:selector cf0491c7\r\n    function batchSomeUntilFailure(\r\n        address[] memory to,\r\n        uint256[] memory value,\r\n        bytes[] memory callData,\r\n        uint64[] memory gasLimit\r\n    ) external;\r\n\r\n    /// @dev Batch multiple calls into a single transaction.\r\n    /// All calls are performed from the address calling this precompile.\r\n    ///\r\n    /// In case of one subcall reverting, the entire batch will revert.\r\n    ///\r\n    /// @param to List of addresses to call.\r\n    /// @param value List of values for each subcall. If array is shorter than \"to\" then additional\r\n    /// calls will be performed with a value of 0.\r\n    /// @param callData Call data for each `to` address. If array is shorter than \"to\" then\r\n    /// additional calls will be performed with an empty call data.\r\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\r\n    /// If array is shorter than \"to\" then the remaining gas available will be used.\r\n    /// @custom:selector 96e292b8\r\n    function batchAll(\r\n        address[] memory to,\r\n        uint256[] memory value,\r\n        bytes[] memory callData,\r\n        uint64[] memory gasLimit\r\n    ) external;\r\n\r\n    /// Emitted when a subcall succeeds.\r\n    event SubcallSucceeded(uint256 index);\r\n\r\n    /// Emitted when a subcall fails.\r\n    event SubcallFailed(uint256 index);\r\n}"},"contracts/precompiles/CallPermit.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity >=0.8.3;\r\n\r\n/// @dev The CallPermit contract's address.\r\naddress constant CALL_PERMIT_ADDRESS = 0x000000000000000000000000000000000000080a;\r\n\r\n/// @dev The CallPermit contract's instance.\r\nCallPermit constant CALL_PERMIT_CONTRACT = CallPermit(CALL_PERMIT_ADDRESS);\r\n\r\n/// @author The Moonbeam Team\r\n/// @title Call Permit Interface\r\n/// @dev The interface aims to be a general-purpose tool to perform gas-less transactions. It uses the EIP-712 standard,\r\n/// and signed messages can be dispatched by another network participant with a transaction\r\n/// @custom:address 0x000000000000000000000000000000000000080a\r\ninterface CallPermit {\r\n    /// @dev Dispatch a call on the behalf of an other user with a EIP712 permit.\r\n    /// Will revert if the permit is not valid or if the dispatched call reverts or errors (such as\r\n    /// out of gas).\r\n    /// If successful the EIP712 nonce is increased to prevent this permit to be replayed.\r\n    /// @param from Who made the permit and want its call to be dispatched on their behalf.\r\n    /// @param to Which address the call is made to.\r\n    /// @param value Value being transfered from the \"from\" account.\r\n    /// @param data Call data\r\n    /// @param gaslimit Gaslimit the dispatched call requires.\r\n    ///     Providing it prevents the dispatcher to manipulate the gaslimit.\r\n    /// @param deadline Deadline in UNIX seconds after which the permit will no longer be valid.\r\n    /// @param v V part of the signature.\r\n    /// @param r R part of the signature.\r\n    /// @param s S part of the signature.\r\n    /// @return output Output of the call.\r\n    /// @custom:selector b5ea0966\r\n    function dispatch(\r\n        address from,\r\n        address to,\r\n        uint256 value,\r\n        bytes memory data,\r\n        uint64 gaslimit,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external returns (bytes memory output);\r\n\r\n    /// @dev Returns the current nonce for given owner.\r\n    /// A permit must have this nonce to be consumed, which will\r\n    /// increase the nonce by one.\r\n    /// @custom:selector 7ecebe00\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /// @dev Returns the EIP712 domain separator. It is used to avoid replay\r\n    /// attacks accross assets or other similar EIP712 message structures.\r\n    /// @custom:selector 3644e515\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/PolkaGift.sol:51:9:\n   |\n51 |         address _claimer,\n   |         ^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":1598,"file":"contracts/PolkaGift.sol","start":1582},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/PolkaGift.sol:77:9:\n   |\n77 |         uint256 endtime\n   |         ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":2348,"file":"contracts/PolkaGift.sol","start":2333},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/PolkaGift.sol:405:9:\n    |\n405 |         uint256 _EventTokenId = getGetEventsTokenID(\n    |         ^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":11575,"file":"contracts/PolkaGift.sol","start":11554},"type":"Warning"}],"sources":{"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1094],"SignedMath":[1199],"Strings":[228]},"id":229,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":229,"sourceUnit":1095,"src":"126:25:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":229,"sourceUnit":1200,"src":"152:31:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"185:34:0","text":" @dev String operations."},"fullyImplemented":true,"id":228,"linearizedBaseContracts":[228],"name":"Strings","nameLocation":"228:7:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":7,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:0","nodeType":"VariableDeclaration","scope":228,"src":"242:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":5,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:0","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":6,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":10,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:0","nodeType":"VariableDeclaration","scope":228,"src":"302:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":9,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":57,"nodeType":"Block","src":"518:625:0","statements":[{"id":56,"nodeType":"UncheckedBlock","src":"528:609:0","statements":[{"assignments":[19],"declarations":[{"constant":false,"id":19,"mutability":"mutable","name":"length","nameLocation":"560:6:0","nodeType":"VariableDeclaration","scope":56,"src":"552:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":26,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":25,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":22,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"580:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":20,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"569:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1094_$","typeString":"type(library Math)"}},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:0","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":931,"src":"569:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":24,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:0"},{"assignments":[28],"declarations":[{"constant":false,"id":28,"mutability":"mutable","name":"buffer","nameLocation":"618:6:0","nodeType":"VariableDeclaration","scope":56,"src":"604:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":27,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":33,"initialValue":{"arguments":[{"id":31,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"638:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":30,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":29,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:0"},{"assignments":[35],"declarations":[{"constant":false,"id":35,"mutability":"mutable","name":"ptr","nameLocation":"667:3:0","nodeType":"VariableDeclaration","scope":56,"src":"659:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":36,"nodeType":"VariableDeclarationStatement","src":"659:11:0"},{"AST":{"nodeType":"YulBlock","src":"740:67:0","statements":[{"nodeType":"YulAssignment","src":"758:35:0","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:0","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:0"},"nodeType":"YulFunctionCall","src":"777:15:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:0"},"nodeType":"YulFunctionCall","src":"765:28:0"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":28,"isOffset":false,"isSlot":false,"src":"769:6:0","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":false,"src":"785:6:0","valueSize":1},{"declaration":35,"isOffset":false,"isSlot":false,"src":"758:3:0","valueSize":1}],"id":37,"nodeType":"InlineAssembly","src":"731:76:0"},{"body":{"id":52,"nodeType":"Block","src":"833:267:0","statements":[{"expression":{"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:0","subExpression":{"id":39,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"851:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41,"nodeType":"ExpressionStatement","src":"851:5:0"},{"AST":{"nodeType":"YulBlock","src":"934:84:0","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:0"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:0","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:0"},"nodeType":"YulFunctionCall","src":"974:14:0"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:0"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:0"},"nodeType":"YulFunctionCall","src":"969:30:0"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:0"},"nodeType":"YulFunctionCall","src":"956:44:0"},"nodeType":"YulExpressionStatement","src":"956:44:0"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":7,"isOffset":false,"isSlot":false,"src":"990:8:0","valueSize":1},{"declaration":35,"isOffset":false,"isSlot":false,"src":"964:3:0","valueSize":1},{"declaration":13,"isOffset":false,"isSlot":false,"src":"978:5:0","valueSize":1}],"id":42,"nodeType":"InlineAssembly","src":"925:93:0"},{"expression":{"id":45,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1035:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":44,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":46,"nodeType":"ExpressionStatement","src":"1035:11:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1068:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":48,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":51,"nodeType":"IfStatement","src":"1064:21:0","trueBody":{"id":50,"nodeType":"Break","src":"1080:5:0"}}]},"condition":{"hexValue":"74727565","id":38,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":53,"nodeType":"WhileStatement","src":"820:280:0"},{"expression":{"id":54,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1120:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":17,"id":55,"nodeType":"Return","src":"1113:13:0"}]}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"352:90:0","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":58,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:0","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"value","nameLocation":"473:5:0","nodeType":"VariableDeclaration","scope":58,"src":"465:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:0"},"returnParameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"503:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:0"},"scope":228,"src":"447:696:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":85,"nodeType":"Block","src":"1313:103:0","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":70,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1354:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":74,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:0","trueExpression":{"hexValue":"2d","id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":79,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1400:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":77,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1385:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$1199_$","typeString":"type(library SignedMath)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:0","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":1198,"src":"1385:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":76,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[58,86],"referencedDeclaration":58,"src":"1376:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":68,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":67,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":66,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:0","typeDescriptions":{}}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":65,"id":84,"nodeType":"Return","src":"1323:86:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1149:89:0","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":86,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:0","nodeType":"FunctionDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"value","nameLocation":"1268:5:0","nodeType":"VariableDeclaration","scope":86,"src":"1261:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":60,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:0"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":86,"src":"1298:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":63,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:0"},"scope":228,"src":"1243:173:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":105,"nodeType":"Block","src":"1595:100:0","statements":[{"id":104,"nodeType":"UncheckedBlock","src":"1605:84:0","statements":[{"expression":{"arguments":[{"id":95,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"1648:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":98,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"1667:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":96,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"1655:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1094_$","typeString":"type(library Math)"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:0","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1054,"src":"1655:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":94,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[106,182,202],"referencedDeclaration":182,"src":"1636:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":93,"id":103,"nodeType":"Return","src":"1629:49:0"}]}]},"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"1422:94:0","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":106,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:0","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"value","nameLocation":"1550:5:0","nodeType":"VariableDeclaration","scope":106,"src":"1542:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:0"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":106,"src":"1580:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":91,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:0"},"scope":228,"src":"1521:174:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":181,"nodeType":"Block","src":"1908:347:0","statements":[{"assignments":[117],"declarations":[{"constant":false,"id":117,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:0","nodeType":"VariableDeclaration","scope":181,"src":"1918:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":116,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":126,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":121,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1954:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":118,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:0"},{"expression":{"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":127,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"1975:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":129,"indexExpression":{"hexValue":"30","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":132,"nodeType":"ExpressionStatement","src":"1975:15:0"},{"expression":{"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":133,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2000:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":135,"indexExpression":{"hexValue":"31","id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":138,"nodeType":"ExpressionStatement","src":"2000:15:0"},{"body":{"id":167,"nodeType":"Block","src":"2070:83:0","statements":[{"expression":{"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":153,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2084:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":155,"indexExpression":{"id":154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2091:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":156,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2096:8:0","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":160,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2105:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:0","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":162,"nodeType":"ExpressionStatement","src":"2084:33:0"},{"expression":{"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2131:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":166,"nodeType":"ExpressionStatement","src":"2131:11:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2058:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":168,"initializationExpression":{"assignments":[140],"declarations":[{"constant":false,"id":140,"mutability":"mutable","name":"i","nameLocation":"2038:1:0","nodeType":"VariableDeclaration","scope":168,"src":"2030:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":146,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":142,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2046:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:0"},"loopExpression":{"expression":{"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:0","subExpression":{"id":150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2067:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":152,"nodeType":"ExpressionStatement","src":"2065:3:0"},"nodeType":"ForStatement","src":"2025:128:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2170:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":175,"nodeType":"ExpressionStatement","src":"2162:55:0"},{"expression":{"arguments":[{"id":178,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2241:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":176,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:0","typeDescriptions":{}}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":115,"id":180,"nodeType":"Return","src":"2227:21:0"}]},"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"1701:112:0","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:0","nodeType":"FunctionDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"value","nameLocation":"1847:5:0","nodeType":"VariableDeclaration","scope":182,"src":"1839:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"length","nameLocation":"1862:6:0","nodeType":"VariableDeclaration","scope":182,"src":"1854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:0"},"returnParameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"1893:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":113,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:0"},"scope":228,"src":"1818:437:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":201,"nodeType":"Block","src":"2480:76:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":195,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"2525:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":193,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:0","typeDescriptions":{}}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:0","typeDescriptions":{}}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":198,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2533:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":190,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[106,182,202],"referencedDeclaration":182,"src":"2497:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":189,"id":200,"nodeType":"Return","src":"2490:59:0"}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"2261:141:0","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":202,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:0","nodeType":"FunctionDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"addr","nameLocation":"2436:4:0","nodeType":"VariableDeclaration","scope":202,"src":"2428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:0"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"2465:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":187,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:0"},"scope":228,"src":"2407:149:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":226,"nodeType":"Block","src":"2711:66:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":215,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2744:1:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":213,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:0","typeDescriptions":{}}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":212,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":221,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"2767:1:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":219,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:0","typeDescriptions":{}}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":218,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":211,"id":225,"nodeType":"Return","src":"2721:49:0"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"2562:66:0","text":" @dev Returns true if the two strings are equal."},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:0","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"a","nameLocation":"2662:1:0","nodeType":"VariableDeclaration","scope":227,"src":"2648:15:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":204,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"b","nameLocation":"2679:1:0","nodeType":"VariableDeclaration","scope":227,"src":"2665:15:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":206,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:0"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"2705:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":209,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:0"},"scope":228,"src":"2633:144:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":229,"src":"220:2559:0","usedErrors":[]}],"src":"101:2679:0"},"id":0},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1094]},"id":1095,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":230,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"128:73:1","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1094,"linearizedBaseContracts":[1094],"name":"Math","nameLocation":"210:4:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":235,"members":[{"id":232,"name":"Down","nameLocation":"245:4:1","nodeType":"EnumValue","src":"245:4:1"},{"id":233,"name":"Up","nameLocation":"287:2:1","nodeType":"EnumValue","src":"287:2:1"},{"id":234,"name":"Zero","nameLocation":"318:4:1","nodeType":"EnumValue","src":"318:4:1"}],"name":"Rounding","nameLocation":"226:8:1","nodeType":"EnumDefinition","src":"221:122:1"},{"body":{"id":252,"nodeType":"Block","src":"480:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"497:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":246,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"501:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":249,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"509:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:1","trueExpression":{"id":248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"505:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":244,"id":251,"nodeType":"Return","src":"490:20:1"}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"349:59:1","text":" @dev Returns the largest of two numbers."},"id":253,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:1","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"a","nameLocation":"434:1:1","nodeType":"VariableDeclaration","scope":253,"src":"426:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"b","nameLocation":"445:1:1","nodeType":"VariableDeclaration","scope":253,"src":"437:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:1"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":253,"src":"471:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:1"},"scope":1094,"src":"413:104:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":270,"nodeType":"Block","src":"655:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"672:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"676:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":267,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"684:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:1","trueExpression":{"id":266,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"680:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":262,"id":269,"nodeType":"Return","src":"665:20:1"}]},"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"523:60:1","text":" @dev Returns the smallest of two numbers."},"id":271,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:1","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"a","nameLocation":"609:1:1","nodeType":"VariableDeclaration","scope":271,"src":"601:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"b","nameLocation":"620:1:1","nodeType":"VariableDeclaration","scope":271,"src":"612:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:1"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":271,"src":"646:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:1"},"scope":1094,"src":"588:104:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"876:82:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"931:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":282,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"935:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"941:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"945:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":280,"id":292,"nodeType":"Return","src":"923:28:1"}]},"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"698:102:1","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:1","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"a","nameLocation":"830:1:1","nodeType":"VariableDeclaration","scope":294,"src":"822:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"b","nameLocation":"841:1:1","nodeType":"VariableDeclaration","scope":294,"src":"833:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:1"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"867:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:1"},"scope":1094,"src":"805:153:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":318,"nodeType":"Block","src":"1228:123:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1316:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1330:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":312,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"1339:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:1","trueExpression":{"hexValue":"30","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":303,"id":317,"nodeType":"Return","src":"1309:35:1"}]},"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"964:188:1","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":319,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:1","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"a","nameLocation":"1182:1:1","nodeType":"VariableDeclaration","scope":319,"src":"1174:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"b","nameLocation":"1193:1:1","nodeType":"VariableDeclaration","scope":319,"src":"1185:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:1"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"1219:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:1"},"scope":1094,"src":"1157:194:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"1765:4115:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"1775:4099:1","statements":[{"assignments":[332],"declarations":[{"constant":false,"id":332,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:1","nodeType":"VariableDeclaration","scope":440,"src":"2096:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":333,"nodeType":"VariableDeclarationStatement","src":"2096:13:1"},{"assignments":[335],"declarations":[{"constant":false,"id":335,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:1","nodeType":"VariableDeclaration","scope":440,"src":"2168:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":336,"nodeType":"VariableDeclarationStatement","src":"2168:13:1"},{"AST":{"nodeType":"YulBlock","src":"2248:157:1","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:1","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:1"},"nodeType":"YulFunctionCall","src":"2289:6:1"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:1"},"nodeType":"YulFunctionCall","src":"2276:20:1"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:1","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:1"},"nodeType":"YulFunctionCall","src":"2322:9:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:1"}]},{"nodeType":"YulAssignment","src":"2348:43:1","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:1"},"nodeType":"YulFunctionCall","src":"2361:14:1"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:1"},"nodeType":"YulFunctionCall","src":"2377:13:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:1"},"nodeType":"YulFunctionCall","src":"2357:34:1"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":332,"isOffset":false,"isSlot":false,"src":"2313:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"2369:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"2384:5:1","valueSize":1},{"declaration":335,"isOffset":false,"isSlot":false,"src":"2348:5:1","valueSize":1},{"declaration":322,"isOffset":false,"isSlot":false,"src":"2283:1:1","valueSize":1},{"declaration":322,"isOffset":false,"isSlot":false,"src":"2326:1:1","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"2286:1:1","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"2329:1:1","valueSize":1}],"id":337,"nodeType":"InlineAssembly","src":"2239:166:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":338,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2486:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":346,"nodeType":"IfStatement","src":"2482:368:1","trueBody":{"id":345,"nodeType":"Block","src":"2498:352:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":341,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"2816:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":342,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2824:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":330,"id":344,"nodeType":"Return","src":"2809:26:1"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":348,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2960:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":349,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2974:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":353,"nodeType":"ExpressionStatement","src":"2952:53:1"},{"assignments":[355],"declarations":[{"constant":false,"id":355,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:1","nodeType":"VariableDeclaration","scope":440,"src":"3261:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":356,"nodeType":"VariableDeclarationStatement","src":"3261:17:1"},{"AST":{"nodeType":"YulBlock","src":"3301:291:1","statements":[{"nodeType":"YulAssignment","src":"3370:38:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:1"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:1"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:1"},"nodeType":"YulFunctionCall","src":"3383:25:1"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:1"}]},{"nodeType":"YulAssignment","src":"3490:41:1","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:1"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:1"},"nodeType":"YulFunctionCall","src":"3510:20:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:1"},"nodeType":"YulFunctionCall","src":"3499:32:1"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:1"}]},{"nodeType":"YulAssignment","src":"3548:30:1","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:1"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:1"},"nodeType":"YulFunctionCall","src":"3557:21:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":326,"isOffset":false,"isSlot":false,"src":"3396:11:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"3524:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"3548:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"3561:5:1","valueSize":1},{"declaration":335,"isOffset":false,"isSlot":false,"src":"3490:5:1","valueSize":1},{"declaration":335,"isOffset":false,"isSlot":false,"src":"3503:5:1","valueSize":1},{"declaration":355,"isOffset":false,"isSlot":false,"src":"3370:9:1","valueSize":1},{"declaration":355,"isOffset":false,"isSlot":false,"src":"3513:9:1","valueSize":1},{"declaration":355,"isOffset":false,"isSlot":false,"src":"3568:9:1","valueSize":1},{"declaration":322,"isOffset":false,"isSlot":false,"src":"3390:1:1","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"3393:1:1","valueSize":1}],"id":357,"nodeType":"InlineAssembly","src":"3292:300:1"},{"assignments":[359],"declarations":[{"constant":false,"id":359,"mutability":"mutable","name":"twos","nameLocation":"3907:4:1","nodeType":"VariableDeclaration","scope":440,"src":"3899:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":367,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":360,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"3914:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:1","subExpression":{"id":361,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"3930:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:1"},{"AST":{"nodeType":"YulBlock","src":"3969:362:1","statements":[{"nodeType":"YulAssignment","src":"4034:37:1","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:1"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:1"},"nodeType":"YulFunctionCall","src":"4049:22:1"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:1"}]},{"nodeType":"YulAssignment","src":"4138:25:1","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:1"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:1"},"nodeType":"YulFunctionCall","src":"4147:16:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:1"}]},{"nodeType":"YulAssignment","src":"4278:39:1","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:1","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:1"},"nodeType":"YulFunctionCall","src":"4294:12:1"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:1"},"nodeType":"YulFunctionCall","src":"4290:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:1"},"nodeType":"YulFunctionCall","src":"4286:31:1"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":326,"isOffset":false,"isSlot":false,"src":"4034:11:1","valueSize":1},{"declaration":326,"isOffset":false,"isSlot":false,"src":"4053:11:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"4138:5:1","valueSize":1},{"declaration":332,"isOffset":false,"isSlot":false,"src":"4151:5:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4066:4:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4158:4:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4278:4:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4301:4:1","valueSize":1},{"declaration":359,"isOffset":false,"isSlot":false,"src":"4308:4:1","valueSize":1}],"id":368,"nodeType":"InlineAssembly","src":"3960:371:1"},{"expression":{"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":369,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"4397:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":370,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":371,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"4414:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":374,"nodeType":"ExpressionStatement","src":"4397:21:1"},{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:1","nodeType":"VariableDeclaration","scope":440,"src":"4736:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":383,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":378,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4759:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:1"},{"expression":{"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":384,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"4992:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":386,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5007:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":387,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5021:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":391,"nodeType":"ExpressionStatement","src":"4992:36:1"},{"expression":{"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":392,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5061:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":394,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5076:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":395,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5090:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":399,"nodeType":"ExpressionStatement","src":"5061:36:1"},{"expression":{"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":400,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5131:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":402,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5146:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":403,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5160:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":407,"nodeType":"ExpressionStatement","src":"5131:36:1"},{"expression":{"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":408,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5201:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":410,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5216:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":411,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5230:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":415,"nodeType":"ExpressionStatement","src":"5201:36:1"},{"expression":{"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":416,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5271:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":418,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5286:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":419,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5300:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":423,"nodeType":"ExpressionStatement","src":"5271:36:1"},{"expression":{"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":424,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5342:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":426,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5357:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":427,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5371:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":431,"nodeType":"ExpressionStatement","src":"5342:36:1"},{"expression":{"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5812:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"5821:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":434,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"5829:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ExpressionStatement","src":"5812:24:1"},{"expression":{"id":438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5857:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":330,"id":439,"nodeType":"Return","src":"5850:13:1"}]}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1357:305:1","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:1","nodeType":"FunctionDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"x","nameLocation":"1691:1:1","nodeType":"VariableDeclaration","scope":442,"src":"1683:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"y","nameLocation":"1702:1:1","nodeType":"VariableDeclaration","scope":442,"src":"1694:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":326,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:1","nodeType":"VariableDeclaration","scope":442,"src":"1705:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:1"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"result","nameLocation":"1757:6:1","nodeType":"VariableDeclaration","scope":442,"src":"1749:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:1"},"scope":1094,"src":"1667:4213:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":485,"nodeType":"Block","src":"6122:189:1","statements":[{"assignments":[458],"declarations":[{"constant":false,"id":458,"mutability":"mutable","name":"result","nameLocation":"6140:6:1","nodeType":"VariableDeclaration","scope":485,"src":"6132:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":464,"initialValue":{"arguments":[{"id":460,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6156:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":461,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6159:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":462,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6162:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":459,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[442,486],"referencedDeclaration":442,"src":"6149:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":465,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6188:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":466,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6200:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"6200:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"6188:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":470,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6222:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":471,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6225:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":472,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6228:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":469,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:1","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":482,"nodeType":"IfStatement","src":"6184:98:1","trueBody":{"id":481,"nodeType":"Block","src":"6246:36:1","statements":[{"expression":{"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":477,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"6260:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":480,"nodeType":"ExpressionStatement","src":"6260:11:1"}]}},{"expression":{"id":483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"6298:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":456,"id":484,"nodeType":"Return","src":"6291:13:1"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"5886:121:1","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":486,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:1","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"x","nameLocation":"6036:1:1","nodeType":"VariableDeclaration","scope":486,"src":"6028:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"y","nameLocation":"6047:1:1","nodeType":"VariableDeclaration","scope":486,"src":"6039:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:1","nodeType":"VariableDeclaration","scope":486,"src":"6050:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:1","nodeType":"VariableDeclaration","scope":486,"src":"6071:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"Rounding","nameLocations":["6071:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"6071:8:1"},"referencedDeclaration":235,"src":"6071:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:1"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":486,"src":"6113:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:1"},"scope":1094,"src":"6012:299:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":597,"nodeType":"Block","src":"6587:1585:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":494,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"6601:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":500,"nodeType":"IfStatement","src":"6597:45:1","trueBody":{"id":499,"nodeType":"Block","src":"6609:33:1","statements":[{"expression":{"hexValue":"30","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":493,"id":498,"nodeType":"Return","src":"6623:8:1"}]}},{"assignments":[502],"declarations":[{"constant":false,"id":502,"mutability":"mutable","name":"result","nameLocation":"7329:6:1","nodeType":"VariableDeclaration","scope":597,"src":"7321:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":511,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7349:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":504,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[766,802],"referencedDeclaration":766,"src":"7344:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:1"},{"id":596,"nodeType":"UncheckedBlock","src":"7758:408:1","statements":[{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7782:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7792:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7801:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7805:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"nodeType":"ExpressionStatement","src":"7782:35:1"},{"expression":{"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7831:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7841:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7850:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7854:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":533,"nodeType":"ExpressionStatement","src":"7831:35:1"},{"expression":{"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7880:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7890:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7899:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7903:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":544,"nodeType":"ExpressionStatement","src":"7880:35:1"},{"expression":{"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7929:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7939:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7948:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7952:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":555,"nodeType":"ExpressionStatement","src":"7929:35:1"},{"expression":{"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7978:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7988:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7997:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8001:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":566,"nodeType":"ExpressionStatement","src":"7978:35:1"},{"expression":{"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8027:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8037:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8046:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8050:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":577,"nodeType":"ExpressionStatement","src":"8027:35:1"},{"expression":{"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8076:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8086:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8095:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8099:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":588,"nodeType":"ExpressionStatement","src":"8076:35:1"},{"expression":{"arguments":[{"id":590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8136:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8144:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"8148:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":589,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8132:3:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":493,"id":595,"nodeType":"Return","src":"8125:30:1"}]}]},"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"6317:208:1","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":598,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:1","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"a","nameLocation":"6552:1:1","nodeType":"VariableDeclaration","scope":598,"src":"6544:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:1"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":598,"src":"6578:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":491,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:1"},"scope":1094,"src":"6530:1642:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":633,"nodeType":"Block","src":"8348:161:1","statements":[{"id":632,"nodeType":"UncheckedBlock","src":"8358:145:1","statements":[{"assignments":[610],"declarations":[{"constant":false,"id":610,"mutability":"mutable","name":"result","nameLocation":"8390:6:1","nodeType":"VariableDeclaration","scope":632,"src":"8382:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":614,"initialValue":{"arguments":[{"id":612,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"8404:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":611,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[598,634],"referencedDeclaration":598,"src":"8399:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"8427:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":616,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"8437:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":617,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"8449:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"8449:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"8437:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"8464:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"8473:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":623,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"8482:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:1","trueExpression":{"hexValue":"31","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":608,"id":631,"nodeType":"Return","src":"8420:72:1"}]}]},"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"8178:89:1","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":634,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:1","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"a","nameLocation":"8294:1:1","nodeType":"VariableDeclaration","scope":634,"src":"8286:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:1","nodeType":"VariableDeclaration","scope":634,"src":"8297:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":603,"nodeType":"UserDefinedTypeName","pathNode":{"id":602,"name":"Rounding","nameLocations":["8297:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"8297:8:1"},"referencedDeclaration":235,"src":"8297:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:1"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":634,"src":"8339:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:1"},"scope":1094,"src":"8272:237:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":765,"nodeType":"Block","src":"8694:922:1","statements":[{"assignments":[643],"declarations":[{"constant":false,"id":643,"mutability":"mutable","name":"result","nameLocation":"8712:6:1","nodeType":"VariableDeclaration","scope":765,"src":"8704:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":645,"initialValue":{"hexValue":"30","id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:1"},{"id":762,"nodeType":"UncheckedBlock","src":"8732:855:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8760:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":660,"nodeType":"IfStatement","src":"8756:99:1","trueBody":{"id":659,"nodeType":"Block","src":"8778:77:1","statements":[{"expression":{"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8796:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":654,"nodeType":"ExpressionStatement","src":"8796:13:1"},{"expression":{"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"8827:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":658,"nodeType":"ExpressionStatement","src":"8827:13:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8872:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":675,"nodeType":"IfStatement","src":"8868:96:1","trueBody":{"id":674,"nodeType":"Block","src":"8889:75:1","statements":[{"expression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8907:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":669,"nodeType":"ExpressionStatement","src":"8907:12:1"},{"expression":{"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"8937:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":673,"nodeType":"ExpressionStatement","src":"8937:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8981:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":690,"nodeType":"IfStatement","src":"8977:96:1","trueBody":{"id":689,"nodeType":"Block","src":"8998:75:1","statements":[{"expression":{"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9016:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":684,"nodeType":"ExpressionStatement","src":"9016:12:1"},{"expression":{"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9046:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":688,"nodeType":"ExpressionStatement","src":"9046:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9090:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":705,"nodeType":"IfStatement","src":"9086:96:1","trueBody":{"id":704,"nodeType":"Block","src":"9107:75:1","statements":[{"expression":{"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9125:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":699,"nodeType":"ExpressionStatement","src":"9125:12:1"},{"expression":{"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9155:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":703,"nodeType":"ExpressionStatement","src":"9155:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9199:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":720,"nodeType":"IfStatement","src":"9195:93:1","trueBody":{"id":719,"nodeType":"Block","src":"9215:73:1","statements":[{"expression":{"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9233:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":714,"nodeType":"ExpressionStatement","src":"9233:11:1"},{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":715,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9262:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":718,"nodeType":"ExpressionStatement","src":"9262:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9305:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":735,"nodeType":"IfStatement","src":"9301:93:1","trueBody":{"id":734,"nodeType":"Block","src":"9321:73:1","statements":[{"expression":{"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9339:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":729,"nodeType":"ExpressionStatement","src":"9339:11:1"},{"expression":{"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9368:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":733,"nodeType":"ExpressionStatement","src":"9368:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9411:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":750,"nodeType":"IfStatement","src":"9407:93:1","trueBody":{"id":749,"nodeType":"Block","src":"9427:73:1","statements":[{"expression":{"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9445:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":744,"nodeType":"ExpressionStatement","src":"9445:11:1"},{"expression":{"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9474:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":748,"nodeType":"ExpressionStatement","src":"9474:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9517:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":761,"nodeType":"IfStatement","src":"9513:64:1","trueBody":{"id":760,"nodeType":"Block","src":"9533:44:1","statements":[{"expression":{"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9551:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":759,"nodeType":"ExpressionStatement","src":"9551:11:1"}]}}]},{"expression":{"id":763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"9603:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":641,"id":764,"nodeType":"Return","src":"9596:13:1"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"8515:113:1","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":766,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:1","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"value","nameLocation":"8655:5:1","nodeType":"VariableDeclaration","scope":766,"src":"8647:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:1"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"8685:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:1"},"scope":1094,"src":"8633:983:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":801,"nodeType":"Block","src":"9849:165:1","statements":[{"id":800,"nodeType":"UncheckedBlock","src":"9859:149:1","statements":[{"assignments":[778],"declarations":[{"constant":false,"id":778,"mutability":"mutable","name":"result","nameLocation":"9891:6:1","nodeType":"VariableDeclaration","scope":800,"src":"9883:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":782,"initialValue":{"arguments":[{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9905:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":779,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[766,802],"referencedDeclaration":766,"src":"9900:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"9932:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"9942:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":785,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"9954:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"9954:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"9942:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"9974:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9983:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:1","trueExpression":{"hexValue":"31","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":776,"id":799,"nodeType":"Return","src":"9925:72:1"}]}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"9622:142:1","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":802,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:1","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"value","nameLocation":"9791:5:1","nodeType":"VariableDeclaration","scope":802,"src":"9783:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:1","nodeType":"VariableDeclaration","scope":802,"src":"9798:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":771,"nodeType":"UserDefinedTypeName","pathNode":{"id":770,"name":"Rounding","nameLocations":["9798:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"9798:8:1"},"referencedDeclaration":235,"src":"9798:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:1"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":802,"src":"9840:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":774,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:1"},"scope":1094,"src":"9769:245:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":930,"nodeType":"Block","src":"10201:854:1","statements":[{"assignments":[811],"declarations":[{"constant":false,"id":811,"mutability":"mutable","name":"result","nameLocation":"10219:6:1","nodeType":"VariableDeclaration","scope":930,"src":"10211:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":813,"initialValue":{"hexValue":"30","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:1"},{"id":927,"nodeType":"UncheckedBlock","src":"10239:787:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10267:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":830,"nodeType":"IfStatement","src":"10263:103:1","trueBody":{"id":829,"nodeType":"Block","src":"10286:80:1","statements":[{"expression":{"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10304:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":824,"nodeType":"ExpressionStatement","src":"10304:17:1"},{"expression":{"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10339:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":828,"nodeType":"ExpressionStatement","src":"10339:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10383:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":847,"nodeType":"IfStatement","src":"10379:103:1","trueBody":{"id":846,"nodeType":"Block","src":"10402:80:1","statements":[{"expression":{"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10420:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":841,"nodeType":"ExpressionStatement","src":"10420:17:1"},{"expression":{"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":842,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10455:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":845,"nodeType":"ExpressionStatement","src":"10455:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10499:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":864,"nodeType":"IfStatement","src":"10495:103:1","trueBody":{"id":863,"nodeType":"Block","src":"10518:80:1","statements":[{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10536:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ExpressionStatement","src":"10536:17:1"},{"expression":{"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":859,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10571:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":862,"nodeType":"ExpressionStatement","src":"10571:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10615:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":881,"nodeType":"IfStatement","src":"10611:100:1","trueBody":{"id":880,"nodeType":"Block","src":"10633:78:1","statements":[{"expression":{"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10651:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":875,"nodeType":"ExpressionStatement","src":"10651:16:1"},{"expression":{"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10685:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":879,"nodeType":"ExpressionStatement","src":"10685:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10728:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":898,"nodeType":"IfStatement","src":"10724:100:1","trueBody":{"id":897,"nodeType":"Block","src":"10746:78:1","statements":[{"expression":{"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10764:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":892,"nodeType":"ExpressionStatement","src":"10764:16:1"},{"expression":{"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10798:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":896,"nodeType":"ExpressionStatement","src":"10798:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10841:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:1","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":915,"nodeType":"IfStatement","src":"10837:100:1","trueBody":{"id":914,"nodeType":"Block","src":"10859:78:1","statements":[{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10877:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:1","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":909,"nodeType":"ExpressionStatement","src":"10877:16:1"},{"expression":{"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10911:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":913,"nodeType":"ExpressionStatement","src":"10911:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"10954:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"10950:66:1","trueBody":{"id":925,"nodeType":"Block","src":"10972:44:1","statements":[{"expression":{"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":921,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10990:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":924,"nodeType":"ExpressionStatement","src":"10990:11:1"}]}}]},{"expression":{"id":928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"11042:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":809,"id":929,"nodeType":"Return","src":"11035:13:1"}]},"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"10020:114:1","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":931,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:1","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"value","nameLocation":"10162:5:1","nodeType":"VariableDeclaration","scope":931,"src":"10154:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:1"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":931,"src":"10192:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:1"},"scope":1094,"src":"10139:916:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":966,"nodeType":"Block","src":"11290:167:1","statements":[{"id":965,"nodeType":"UncheckedBlock","src":"11300:151:1","statements":[{"assignments":[943],"declarations":[{"constant":false,"id":943,"mutability":"mutable","name":"result","nameLocation":"11332:6:1","nodeType":"VariableDeclaration","scope":965,"src":"11324:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":947,"initialValue":{"arguments":[{"id":945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"11347:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":944,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[931,967],"referencedDeclaration":931,"src":"11341:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"11374:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":949,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"11384:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":950,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"11396:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"11396:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"11384:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"11417:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"11426:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:1","trueExpression":{"hexValue":"31","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":941,"id":964,"nodeType":"Return","src":"11367:73:1"}]}]},"documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"11061:143:1","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":967,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:1","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"value","nameLocation":"11232:5:1","nodeType":"VariableDeclaration","scope":967,"src":"11224:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:1","nodeType":"VariableDeclaration","scope":967,"src":"11239:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":936,"nodeType":"UserDefinedTypeName","pathNode":{"id":935,"name":"Rounding","nameLocations":["11239:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"11239:8:1"},"referencedDeclaration":235,"src":"11239:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:1"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"11281:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:1"},"scope":1094,"src":"11209:248:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"11771:600:1","statements":[{"assignments":[976],"declarations":[{"constant":false,"id":976,"mutability":"mutable","name":"result","nameLocation":"11789:6:1","nodeType":"VariableDeclaration","scope":1053,"src":"11781:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":978,"initialValue":{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:1"},{"id":1050,"nodeType":"UncheckedBlock","src":"11809:533:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11837:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":993,"nodeType":"IfStatement","src":"11833:98:1","trueBody":{"id":992,"nodeType":"Block","src":"11855:76:1","statements":[{"expression":{"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11873:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":987,"nodeType":"ExpressionStatement","src":"11873:13:1"},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"11904:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"nodeType":"ExpressionStatement","src":"11904:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11948:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1008,"nodeType":"IfStatement","src":"11944:95:1","trueBody":{"id":1007,"nodeType":"Block","src":"11965:74:1","statements":[{"expression":{"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11983:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1002,"nodeType":"ExpressionStatement","src":"11983:12:1"},{"expression":{"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12013:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1006,"nodeType":"ExpressionStatement","src":"12013:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12056:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1023,"nodeType":"IfStatement","src":"12052:95:1","trueBody":{"id":1022,"nodeType":"Block","src":"12073:74:1","statements":[{"expression":{"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12091:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1017,"nodeType":"ExpressionStatement","src":"12091:12:1"},{"expression":{"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12121:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1021,"nodeType":"ExpressionStatement","src":"12121:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12164:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1038,"nodeType":"IfStatement","src":"12160:95:1","trueBody":{"id":1037,"nodeType":"Block","src":"12181:74:1","statements":[{"expression":{"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12199:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1032,"nodeType":"ExpressionStatement","src":"12199:12:1"},{"expression":{"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12229:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"nodeType":"ExpressionStatement","src":"12229:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"12272:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1049,"nodeType":"IfStatement","src":"12268:64:1","trueBody":{"id":1048,"nodeType":"Block","src":"12288:44:1","statements":[{"expression":{"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12306:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1047,"nodeType":"ExpressionStatement","src":"12306:11:1"}]}}]},{"expression":{"id":1051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"12358:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":974,"id":1052,"nodeType":"Return","src":"12351:13:1"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"11463:240:1","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:1","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"value","nameLocation":"11732:5:1","nodeType":"VariableDeclaration","scope":1054,"src":"11724:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:1"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"11762:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:1"},"scope":1094,"src":"11708:663:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1092,"nodeType":"Block","src":"12608:174:1","statements":[{"id":1091,"nodeType":"UncheckedBlock","src":"12618:158:1","statements":[{"assignments":[1066],"declarations":[{"constant":false,"id":1066,"mutability":"mutable","name":"result","nameLocation":"12650:6:1","nodeType":"VariableDeclaration","scope":1091,"src":"12642:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1070,"initialValue":{"arguments":[{"id":1068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12666:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1067,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1054,1093],"referencedDeclaration":1054,"src":"12659:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"12693:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1072,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"12703:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1073,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"12715:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$235_$","typeString":"type(enum Math.Rounding)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:1","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":233,"src":"12715:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"src":"12703:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"12736:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12751:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:1","trueExpression":{"hexValue":"31","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1064,"id":1090,"nodeType":"Return","src":"12686:79:1"}]}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"12377:144:1","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1093,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:1","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"value","nameLocation":"12550:5:1","nodeType":"VariableDeclaration","scope":1093,"src":"12542:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:1","nodeType":"VariableDeclaration","scope":1093,"src":"12557:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"},"typeName":{"id":1059,"nodeType":"UserDefinedTypeName","pathNode":{"id":1058,"name":"Rounding","nameLocations":["12557:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":235,"src":"12557:8:1"},"referencedDeclaration":235,"src":"12557:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$235","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:1"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1093,"src":"12599:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:1"},"scope":1094,"src":"12526:256:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1095,"src":"202:12582:1","usedErrors":[]}],"src":"103:12682:1"},"id":1},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[1199]},"id":1200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1096,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"134:80:2","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1199,"linearizedBaseContracts":[1199],"name":"SignedMath","nameLocation":"223:10:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":1114,"nodeType":"Block","src":"375:37:2","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"392:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1108,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"396:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"404:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:2","trueExpression":{"id":1110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"400:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1106,"id":1113,"nodeType":"Return","src":"385:20:2"}]},"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"240:66:2","text":" @dev Returns the largest of two signed numbers."},"id":1115,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:2","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"a","nameLocation":"331:1:2","nodeType":"VariableDeclaration","scope":1115,"src":"324:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1099,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"b","nameLocation":"341:1:2","nodeType":"VariableDeclaration","scope":1115,"src":"334:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1101,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:2"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"367:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1104,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:2"},"scope":1199,"src":"311:101:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1132,"nodeType":"Block","src":"554:37:2","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"571:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"575:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1129,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"583:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:2","trueExpression":{"id":1128,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"579:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1124,"id":1131,"nodeType":"Return","src":"564:20:2"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"418:67:2","text":" @dev Returns the smallest of two signed numbers."},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:2","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"a","nameLocation":"510:1:2","nodeType":"VariableDeclaration","scope":1133,"src":"503:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1117,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"b","nameLocation":"520:1:2","nodeType":"VariableDeclaration","scope":1133,"src":"513:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1119,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:2"},"returnParameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"546:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1122,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:2"},"scope":1199,"src":"490:101:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1176,"nodeType":"Block","src":"796:162:2","statements":[{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"x","nameLocation":"865:1:2","nodeType":"VariableDeclaration","scope":1176,"src":"858:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1143,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1157,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"870:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"874:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1149,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"881:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1150,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"885:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:2"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1158,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"910:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1163,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"930:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:2","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:2","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1159,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:2","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"944:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"948:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1142,"id":1175,"nodeType":"Return","src":"903:48:2"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"597:126:2","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1177,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:2","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"a","nameLocation":"752:1:2","nodeType":"VariableDeclaration","scope":1177,"src":"745:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1135,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"b","nameLocation":"762:1:2","nodeType":"VariableDeclaration","scope":1177,"src":"755:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1137,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:2"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1177,"src":"788:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1140,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:2"},"scope":1199,"src":"728:230:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"1102:158:2","statements":[{"id":1196,"nodeType":"UncheckedBlock","src":"1112:142:2","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1227:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:2","subExpression":{"id":1191,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1241:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:2","trueExpression":{"id":1190,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1236:1:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:2","typeDescriptions":{}}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1184,"id":1195,"nodeType":"Return","src":"1212:31:2"}]}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"964:78:2","text":" @dev Returns the absolute unsigned value of a signed value."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:2","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"n","nameLocation":"1067:1:2","nodeType":"VariableDeclaration","scope":1198,"src":"1060:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1179,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:2"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1198,"src":"1093:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:2"},"scope":1199,"src":"1047:213:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1200,"src":"215:1047:2","usedErrors":[]}],"src":"109:1154:2"},"id":2},"contracts/PolkaGift.sol":{"ast":{"absolutePath":"contracts/PolkaGift.sol","exportedSymbols":{"Math":[1094],"PolkaGift":[2381],"SignedMath":[1199],"Strings":[228]},"id":2382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1201,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2382,"sourceUnit":229,"src":"58:51:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"PolkaGift","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2381,"linearizedBaseContracts":[2381],"name":"PolkaGift","nameLocation":"120:9:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PolkaGift.highest_bidder_struct","id":1215,"members":[{"constant":false,"id":1205,"mutability":"mutable","name":"token_id","nameLocation":"238:8:3","nodeType":"VariableDeclaration","scope":1215,"src":"231:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1204,"name":"string","nodeType":"ElementaryTypeName","src":"231:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"event_id","nameLocation":"285:8:3","nodeType":"VariableDeclaration","scope":1215,"src":"278:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1207,"name":"string","nodeType":"ElementaryTypeName","src":"278:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"wallet","nameLocation":"339:6:3","nodeType":"VariableDeclaration","scope":1215,"src":"331:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"price","nameLocation":"393:5:3","nodeType":"VariableDeclaration","scope":1215,"src":"386:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1213,"name":"string","nodeType":"ElementaryTypeName","src":"386:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"highest_bidder_struct","nameLocation":"177:21:3","nodeType":"StructDefinition","scope":2381,"src":"170:236:3","visibility":"public"},{"canonicalName":"PolkaGift.event_token_struct","id":1222,"members":[{"constant":false,"id":1218,"mutability":"mutable","name":"event_id","nameLocation":"480:8:3","nodeType":"VariableDeclaration","scope":1222,"src":"473:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1217,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"token_uri","nameLocation":"528:9:3","nodeType":"VariableDeclaration","scope":1222,"src":"521:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1220,"name":"string","nodeType":"ElementaryTypeName","src":"521:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"event_token_struct","nameLocation":"423:18:3","nodeType":"StructDefinition","scope":2381,"src":"416:129:3","visibility":"public"},{"canonicalName":"PolkaGift.token_bid_struct","id":1229,"members":[{"constant":false,"id":1225,"mutability":"mutable","name":"token_id","nameLocation":"613:8:3","nodeType":"VariableDeclaration","scope":1229,"src":"606:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1224,"name":"string","nodeType":"ElementaryTypeName","src":"606:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"bid_uri","nameLocation":"659:7:3","nodeType":"VariableDeclaration","scope":1229,"src":"652:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1227,"name":"string","nodeType":"ElementaryTypeName","src":"652:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"token_bid_struct","nameLocation":"558:16:3","nodeType":"StructDefinition","scope":2381,"src":"551:125:3","visibility":"public"},{"constant":false,"id":1231,"mutability":"mutable","name":"_tokenIds","nameLocation":"700:9:3","nodeType":"VariableDeclaration","scope":2381,"src":"684:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1233,"mutability":"mutable","name":"_bidIds","nameLocation":"732:7:3","nodeType":"VariableDeclaration","scope":2381,"src":"716:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"716:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1235,"mutability":"mutable","name":"_eventIds","nameLocation":"762:9:3","nodeType":"VariableDeclaration","scope":2381,"src":"746:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"746:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1237,"mutability":"mutable","name":"_EventTokenIds","nameLocation":"794:14:3","nodeType":"VariableDeclaration","scope":2381,"src":"778:30:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"778:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1239,"mutability":"mutable","name":"_TokenBidIds","nameLocation":"831:12:3","nodeType":"VariableDeclaration","scope":2381,"src":"815:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1241,"mutability":"mutable","name":"_TokenHighestBidIds","nameLocation":"866:19:3","nodeType":"VariableDeclaration","scope":2381,"src":"850:35:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"850:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"144cbca6","id":1243,"mutability":"mutable","name":"_EventTokenSearchIds","nameLocation":"907:20:3","nodeType":"VariableDeclaration","scope":2381,"src":"892:35:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"3358f45b","id":1247,"mutability":"mutable","name":"AllEventEndTime","nameLocation":"965:15:3","nodeType":"VariableDeclaration","scope":2381,"src":"934:46:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":1246,"keyType":{"id":1244,"name":"string","nodeType":"ElementaryTypeName","src":"942:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"934:23:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueType":{"id":1245,"name":"bool","nodeType":"ElementaryTypeName","src":"952:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"id":1252,"mutability":"mutable","name":"AllEventTokens","nameLocation":"1053:14:3","nodeType":"VariableDeclaration","scope":2381,"src":"1006:61:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_event_token_struct_$1222_storage_$","typeString":"mapping(uint256 => struct PolkaGift.event_token_struct)"},"typeName":{"id":1251,"keyType":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1014:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1006:38:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_event_token_struct_$1222_storage_$","typeString":"mapping(uint256 => struct PolkaGift.event_token_struct)"},"valueType":{"id":1250,"nodeType":"UserDefinedTypeName","pathNode":{"id":1249,"name":"event_token_struct","nameLocations":["1025:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"1025:18:3"},"referencedDeclaration":1222,"src":"1025:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_event_token_struct_$1222_storage_ptr","typeString":"struct PolkaGift.event_token_struct"}}},"visibility":"private"},{"constant":false,"id":1257,"mutability":"mutable","name":"AllTokensBids","nameLocation":"1119:13:3","nodeType":"VariableDeclaration","scope":2381,"src":"1074:58:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_token_bid_struct_$1229_storage_$","typeString":"mapping(uint256 => struct PolkaGift.token_bid_struct)"},"typeName":{"id":1256,"keyType":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1074:36:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_token_bid_struct_$1229_storage_$","typeString":"mapping(uint256 => struct PolkaGift.token_bid_struct)"},"valueType":{"id":1255,"nodeType":"UserDefinedTypeName","pathNode":{"id":1254,"name":"token_bid_struct","nameLocations":["1093:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":1229,"src":"1093:16:3"},"referencedDeclaration":1229,"src":"1093:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_token_bid_struct_$1229_storage_ptr","typeString":"struct PolkaGift.token_bid_struct"}}},"visibility":"private"},{"constant":false,"functionSelector":"70881e72","id":1262,"mutability":"mutable","name":"TokenHighestBidders","nameLocation":"1188:19:3","nodeType":"VariableDeclaration","scope":2381,"src":"1139:68:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_highest_bidder_struct_$1215_storage_$","typeString":"mapping(uint256 => struct PolkaGift.highest_bidder_struct)"},"typeName":{"id":1261,"keyType":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1147:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1139:41:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_highest_bidder_struct_$1215_storage_$","typeString":"mapping(uint256 => struct PolkaGift.highest_bidder_struct)"},"valueType":{"id":1260,"nodeType":"UserDefinedTypeName","pathNode":{"id":1259,"name":"highest_bidder_struct","nameLocations":["1158:21:3"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"1158:21:3"},"referencedDeclaration":1215,"src":"1158:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_highest_bidder_struct_$1215_storage_ptr","typeString":"struct PolkaGift.highest_bidder_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"8c2715b7","id":1268,"mutability":"mutable","name":"_SearchedStore","nameLocation":"1297:14:3","nodeType":"VariableDeclaration","scope":2381,"src":"1261:50:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$2_storage_$","typeString":"mapping(string => string[2])"},"typeName":{"id":1267,"keyType":{"id":1263,"name":"string","nodeType":"ElementaryTypeName","src":"1269:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1261:28:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$2_storage_$","typeString":"mapping(string => string[2])"},"valueType":{"baseType":{"id":1264,"name":"string","nodeType":"ElementaryTypeName","src":"1279:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1266,"length":{"hexValue":"32","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1286:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"1279:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}}},"visibility":"public"},{"constant":false,"id":1272,"mutability":"mutable","name":"_bidURIs","nameLocation":"1352:8:3","nodeType":"VariableDeclaration","scope":2381,"src":"1318:42:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"typeName":{"id":1271,"keyType":{"id":1269,"name":"string","nodeType":"ElementaryTypeName","src":"1326:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1318:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"valueType":{"id":1270,"name":"string","nodeType":"ElementaryTypeName","src":"1336:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"constant":false,"id":1276,"mutability":"mutable","name":"_tokenURIs","nameLocation":"1401:10:3","nodeType":"VariableDeclaration","scope":2381,"src":"1367:44:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"typeName":{"id":1275,"keyType":{"id":1273,"name":"string","nodeType":"ElementaryTypeName","src":"1375:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1367:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"valueType":{"id":1274,"name":"string","nodeType":"ElementaryTypeName","src":"1385:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"constant":false,"id":1282,"mutability":"mutable","name":"_eventURIs","nameLocation":"1480:10:3","nodeType":"VariableDeclaration","scope":2381,"src":"1443:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$2_storage_$","typeString":"mapping(string => string[2])"},"typeName":{"id":1281,"keyType":{"id":1277,"name":"string","nodeType":"ElementaryTypeName","src":"1451:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1443:28:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$2_storage_$","typeString":"mapping(string => string[2])"},"valueType":{"baseType":{"id":1278,"name":"string","nodeType":"ElementaryTypeName","src":"1461:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1280,"length":{"hexValue":"32","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"1461:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}}},"visibility":"private"},{"constant":false,"id":1286,"mutability":"mutable","name":"_eventRaised","nameLocation":"1531:12:3","nodeType":"VariableDeclaration","scope":2381,"src":"1497:46:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"typeName":{"id":1285,"keyType":{"id":1283,"name":"string","nodeType":"ElementaryTypeName","src":"1505:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1497:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"valueType":{"id":1284,"name":"string","nodeType":"ElementaryTypeName","src":"1515:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"body":{"id":1324,"nodeType":"Block","src":"1698:233:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"6d5f","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1736:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},"value":"m_"},{"arguments":[{"id":1304,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"1760:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1302,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"1743:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$228_$","typeString":"type(library Strings)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1751:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":58,"src":"1743:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1743:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1298,"name":"string","nodeType":"ElementaryTypeName","src":"1722:6:3","typeDescriptions":{}}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1729:6:3","memberName":"concat","nodeType":"MemberAccess","src":"1722:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1307,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"1773:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1297,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"1709:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1709:74:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1309,"nodeType":"ExpressionStatement","src":"1709:74:3"},{"expression":{"arguments":[{"id":1311,"name":"_EventTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"1809:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1312,"name":"_eventid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"1825:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1313,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"1835:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1310,"name":"_setTokenEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"1794:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory,string memory)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1794:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1315,"nodeType":"ExpressionStatement","src":"1794:51:3"},{"expression":{"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1858:11:3","subExpression":{"id":1316,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"1858:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1318,"nodeType":"ExpressionStatement","src":"1858:11:3"},{"expression":{"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1880:16:3","subExpression":{"id":1319,"name":"_EventTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"1880:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1321,"nodeType":"ExpressionStatement","src":"1880:16:3"},{"expression":{"id":1322,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"1914:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1296,"id":1323,"nodeType":"Return","src":"1907:16:3"}]},"functionSelector":"2bde1581","id":1325,"implemented":true,"kind":"function","modifiers":[],"name":"claimToken","nameLocation":"1561:10:3","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"_claimer","nameLocation":"1590:8:3","nodeType":"VariableDeclaration","scope":1325,"src":"1582:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"_tokenURI","nameLocation":"1623:9:3","nodeType":"VariableDeclaration","scope":1325,"src":"1609:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1289,"name":"string","nodeType":"ElementaryTypeName","src":"1609:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"_eventid","nameLocation":"1657:8:3","nodeType":"VariableDeclaration","scope":1325,"src":"1643:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1291,"name":"string","nodeType":"ElementaryTypeName","src":"1643:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1571:101:3"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1325,"src":"1689:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1689:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1688:9:3"},"scope":2381,"src":"1552:379:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1349,"nodeType":"Block","src":"2082:141:3","statements":[{"expression":{"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1334,"name":"AllEventTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"2093:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_event_token_struct_$1222_storage_$","typeString":"mapping(uint256 => struct PolkaGift.event_token_struct storage ref)"}},"id":1336,"indexExpression":{"id":1335,"name":"EventTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"2108:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2093:28:3","typeDescriptions":{"typeIdentifier":"t_struct$_event_token_struct_$1222_storage","typeString":"struct PolkaGift.event_token_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1340,"name":"EventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"2164:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2157:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1338,"name":"string","nodeType":"ElementaryTypeName","src":"2157:6:3","typeDescriptions":{}}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":1344,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"2194:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2187:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1342,"name":"string","nodeType":"ElementaryTypeName","src":"2187:6:3","typeDescriptions":{}}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2187:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1337,"name":"event_token_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"2124:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_event_token_struct_$1222_storage_ptr_$","typeString":"type(struct PolkaGift.event_token_struct storage pointer)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2124:91:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_event_token_struct_$1222_memory_ptr","typeString":"struct PolkaGift.event_token_struct memory"}},"src":"2093:122:3","typeDescriptions":{"typeIdentifier":"t_struct$_event_token_struct_$1222_storage","typeString":"struct PolkaGift.event_token_struct storage ref"}},"id":1348,"nodeType":"ExpressionStatement","src":"2093:122:3"}]},"functionSelector":"b91e924f","id":1350,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenEvent","nameLocation":"1948:14:3","nodeType":"FunctionDefinition","parameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"EventTokenId","nameLocation":"1981:12:3","nodeType":"VariableDeclaration","scope":1350,"src":"1973:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"EventId","nameLocation":"2018:7:3","nodeType":"VariableDeclaration","scope":1350,"src":"2004:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1328,"name":"string","nodeType":"ElementaryTypeName","src":"2004:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"_tokenURI","nameLocation":"2050:9:3","nodeType":"VariableDeclaration","scope":1350,"src":"2036:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1330,"name":"string","nodeType":"ElementaryTypeName","src":"2036:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1962:104:3"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[],"src":"2082:0:3"},"scope":2381,"src":"1939:284:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1395,"nodeType":"Block","src":"2381:305:3","statements":[{"assignments":[1362],"declarations":[{"constant":false,"id":1362,"mutability":"mutable","name":"new_event_id","nameLocation":"2406:12:3","nodeType":"VariableDeclaration","scope":1395,"src":"2392:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1361,"name":"string","nodeType":"ElementaryTypeName","src":"2392:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1372,"initialValue":{"arguments":[{"hexValue":"6d5f","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2435:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},"value":"m_"},{"arguments":[{"id":1369,"name":"_eventIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"2459:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1367,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"2442:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$228_$","typeString":"type(library Strings)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":58,"src":"2442:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2442:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1363,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:3","typeDescriptions":{}}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2428:6:3","memberName":"concat","nodeType":"MemberAccess","src":"2421:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2392:78:3"},{"expression":{"arguments":[{"id":1374,"name":"new_event_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2496:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1375,"name":"_eventWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"2510:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1376,"name":"_eventURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"2524:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1373,"name":"_setEventURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"2483:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory,string memory)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2483:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1378,"nodeType":"ExpressionStatement","src":"2483:51:3"},{"expression":{"arguments":[{"id":1380,"name":"new_event_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2561:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2575:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""}],"id":1379,"name":"_setEventRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"2545:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2545:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1383,"nodeType":"ExpressionStatement","src":"2545:34:3"},{"expression":{"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1384,"name":"AllEventEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2590:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":1386,"indexExpression":{"id":1385,"name":"new_event_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2606:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2590:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2622:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2590:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1389,"nodeType":"ExpressionStatement","src":"2590:37:3"},{"expression":{"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2638:11:3","subExpression":{"id":1390,"name":"_eventIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"2638:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1392,"nodeType":"ExpressionStatement","src":"2638:11:3"},{"expression":{"id":1393,"name":"_eventIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"2669:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1360,"id":1394,"nodeType":"Return","src":"2662:16:3"}]},"functionSelector":"5555fe17","id":1396,"implemented":true,"kind":"function","modifiers":[],"name":"createEvent","nameLocation":"2240:11:3","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"_eventWallet","nameLocation":"2276:12:3","nodeType":"VariableDeclaration","scope":1396,"src":"2262:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1351,"name":"string","nodeType":"ElementaryTypeName","src":"2262:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1354,"mutability":"mutable","name":"_eventURI","nameLocation":"2313:9:3","nodeType":"VariableDeclaration","scope":1396,"src":"2299:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1353,"name":"string","nodeType":"ElementaryTypeName","src":"2299:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"endtime","nameLocation":"2341:7:3","nodeType":"VariableDeclaration","scope":1396,"src":"2333:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2333:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2251:104:3"},"returnParameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1396,"src":"2372:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2372:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2371:9:3"},"scope":2381,"src":"2231:455:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1407,"nodeType":"Block","src":"2751:57:3","statements":[{"expression":{"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1401,"name":"AllEventEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2767:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":1403,"indexExpression":{"id":1402,"name":"eventID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"2783:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2767:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2794:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2767:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1406,"nodeType":"ExpressionStatement","src":"2767:31:3"}]},"functionSelector":"545fa9ec","id":1408,"implemented":true,"kind":"function","modifiers":[],"name":"distribute_event","nameLocation":"2705:16:3","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"eventID","nameLocation":"2736:7:3","nodeType":"VariableDeclaration","scope":1408,"src":"2722:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1397,"name":"string","nodeType":"ElementaryTypeName","src":"2722:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2721:23:3"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"2751:0:3"},"scope":2381,"src":"2696:112:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1456,"nodeType":"Block","src":"2943:287:3","statements":[{"body":{"id":1452,"nodeType":"Block","src":"2994:208:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"baseExpression":{"id":1428,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3047:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":1438,"indexExpression":{"arguments":[{"hexValue":"6d5f","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3072:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},"value":"m_"},{"arguments":[{"id":1435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"3095:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1433,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"3078:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$228_$","typeString":"type(library Strings)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3086:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":58,"src":"3078:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3078:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3058:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1429,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:3","typeDescriptions":{}}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3065:6:3","memberName":"concat","nodeType":"MemberAccess","src":"3058:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3058:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3047:52:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3041:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1426,"name":"bytes","nodeType":"ElementaryTypeName","src":"3041:5:3","typeDescriptions":{}}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3041:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1425,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3031:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3031:70:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1444,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"3121:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3115:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1442,"name":"bytes","nodeType":"ElementaryTypeName","src":"3115:5:3","typeDescriptions":{}}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3115:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1441,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3105:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3105:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3031:101:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1451,"nodeType":"IfStatement","src":"3009:182:3","trueBody":{"id":1450,"nodeType":"Block","src":"3148:43:3","statements":[{"expression":{"id":1448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"3174:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1414,"id":1449,"nodeType":"Return","src":"3167:8:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1419,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"2974:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1420,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2978:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2974:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1453,"initializationExpression":{"assignments":[1416],"declarations":[{"constant":false,"id":1416,"mutability":"mutable","name":"i","nameLocation":"2967:1:3","nodeType":"VariableDeclaration","scope":1453,"src":"2959:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2959:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1418,"initialValue":{"hexValue":"30","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2971:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2959:13:3"},"loopExpression":{"expression":{"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2989:3:3","subExpression":{"id":1422,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"2989:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1424,"nodeType":"ExpressionStatement","src":"2989:3:3"},"nodeType":"ForStatement","src":"2954:248:3"},{"expression":{"hexValue":"30","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3221:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1414,"id":1455,"nodeType":"Return","src":"3214:8:3"}]},"functionSelector":"932a196b","id":1457,"implemented":true,"kind":"function","modifiers":[],"name":"gettokenIdByUri","nameLocation":"2823:15:3","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"_tokenURI","nameLocation":"2853:9:3","nodeType":"VariableDeclaration","scope":1457,"src":"2839:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1409,"name":"string","nodeType":"ElementaryTypeName","src":"2839:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2838:25:3"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1457,"src":"2929:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2929:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2928:9:3"},"scope":2381,"src":"2814:416:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1507,"nodeType":"Block","src":"3367:307:3","statements":[{"body":{"id":1503,"nodeType":"Block","src":"3418:228:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"baseExpression":{"baseExpression":{"id":1477,"name":"_eventURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"3471:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$2_storage_$","typeString":"mapping(string memory => string storage ref[2] storage ref)"}},"id":1487,"indexExpression":{"arguments":[{"hexValue":"6d5f","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3496:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},"value":"m_"},{"arguments":[{"id":1484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"3519:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1482,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"3502:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$228_$","typeString":"type(library Strings)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3510:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":58,"src":"3502:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3502:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3482:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1478,"name":"string","nodeType":"ElementaryTypeName","src":"3482:6:3","typeDescriptions":{}}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3489:6:3","memberName":"concat","nodeType":"MemberAccess","src":"3482:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3482:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3471:52:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage","typeString":"string storage ref[2] storage ref"}},"id":1489,"indexExpression":{"hexValue":"31","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3524:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3471:55:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3465:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"3465:5:3","typeDescriptions":{}}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3465:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1474,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3455:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1495,"name":"_eventURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"3565:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3559:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1493,"name":"bytes","nodeType":"ElementaryTypeName","src":"3559:5:3","typeDescriptions":{}}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3559:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1492,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3549:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3549:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3455:121:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1502,"nodeType":"IfStatement","src":"3433:202:3","trueBody":{"id":1501,"nodeType":"Block","src":"3592:43:3","statements":[{"expression":{"id":1499,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"3618:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1463,"id":1500,"nodeType":"Return","src":"3611:8:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1468,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"3398:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1469,"name":"_eventIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"3402:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3398:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1504,"initializationExpression":{"assignments":[1465],"declarations":[{"constant":false,"id":1465,"mutability":"mutable","name":"i","nameLocation":"3391:1:3","nodeType":"VariableDeclaration","scope":1504,"src":"3383:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"3383:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1467,"initialValue":{"hexValue":"30","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3395:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3383:13:3"},"loopExpression":{"expression":{"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3413:3:3","subExpression":{"id":1471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"3413:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"nodeType":"ExpressionStatement","src":"3413:3:3"},"nodeType":"ForStatement","src":"3378:268:3"},{"expression":{"hexValue":"30","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3665:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1463,"id":1506,"nodeType":"Return","src":"3658:8:3"}]},"functionSelector":"304b16db","id":1508,"implemented":true,"kind":"function","modifiers":[],"name":"getEventIdByURI","nameLocation":"3247:15:3","nodeType":"FunctionDefinition","parameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"_eventURI","nameLocation":"3277:9:3","nodeType":"VariableDeclaration","scope":1508,"src":"3263:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1458,"name":"string","nodeType":"ElementaryTypeName","src":"3263:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3262:25:3"},"returnParameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"3353:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"3353:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3352:9:3"},"scope":2381,"src":"3238:436:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1556,"nodeType":"Block","src":"3807:249:3","statements":[{"body":{"id":1552,"nodeType":"Block","src":"3856:172:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"baseExpression":{"id":1528,"name":"_bidURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"3891:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":1538,"indexExpression":{"arguments":[{"hexValue":"6d5f","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3914:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},"value":"m_"},{"arguments":[{"id":1535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"3937:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1533,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"3920:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$228_$","typeString":"type(library Strings)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3928:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":58,"src":"3920:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3920:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3900:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1529,"name":"string","nodeType":"ElementaryTypeName","src":"3900:6:3","typeDescriptions":{}}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3907:6:3","memberName":"concat","nodeType":"MemberAccess","src":"3900:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3900:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3891:50:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3885:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1526,"name":"bytes","nodeType":"ElementaryTypeName","src":"3885:5:3","typeDescriptions":{}}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3885:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1525,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3875:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3875:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1544,"name":"_bidURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"3963:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3957:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1542,"name":"bytes","nodeType":"ElementaryTypeName","src":"3957:5:3","typeDescriptions":{}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3957:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1541,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3947:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3947:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3875:97:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1551,"nodeType":"IfStatement","src":"3871:146:3","trueBody":{"id":1550,"nodeType":"Block","src":"3974:43:3","statements":[{"expression":{"id":1548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"4000:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1514,"id":1549,"nodeType":"Return","src":"3993:8:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"3838:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1520,"name":"_bidIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"3842:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3838:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1553,"initializationExpression":{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"i","nameLocation":"3831:1:3","nodeType":"VariableDeclaration","scope":1553,"src":"3823:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3823:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1518,"initialValue":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3835:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3823:13:3"},"loopExpression":{"expression":{"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3851:3:3","subExpression":{"id":1522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"3851:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1524,"nodeType":"ExpressionStatement","src":"3851:3:3"},"nodeType":"ForStatement","src":"3818:210:3"},{"expression":{"hexValue":"30","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4047:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1514,"id":1555,"nodeType":"Return","src":"4040:8:3"}]},"functionSelector":"d45fc516","id":1557,"implemented":true,"kind":"function","modifiers":[],"name":"getBidIdByUri","nameLocation":"3691:13:3","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"_bidURI","nameLocation":"3719:7:3","nodeType":"VariableDeclaration","scope":1557,"src":"3705:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1509,"name":"string","nodeType":"ElementaryTypeName","src":"3705:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3704:23:3"},"returnParameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1557,"src":"3793:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"3793:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3792:9:3"},"scope":2381,"src":"3682:374:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1627,"nodeType":"Block","src":"4208:526:3","statements":[{"assignments":[1569],"declarations":[{"constant":false,"id":1569,"mutability":"mutable","name":"_SearchedStoreToken","nameLocation":"4235:19:3","nodeType":"VariableDeclaration","scope":1627,"src":"4219:35:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1567,"name":"string","nodeType":"ElementaryTypeName","src":"4219:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1568,"nodeType":"ArrayTypeName","src":"4219:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1575,"initialValue":{"arguments":[{"hexValue":"3130","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4270:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}],"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4257:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1570,"name":"string","nodeType":"ElementaryTypeName","src":"4261:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1571,"nodeType":"ArrayTypeName","src":"4261:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4219:54:3"},{"assignments":[1577],"declarations":[{"constant":false,"id":1577,"mutability":"mutable","name":"_EventTokenSearchIds2","nameLocation":"4294:21:3","nodeType":"VariableDeclaration","scope":1627,"src":"4286:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1576,"name":"uint256","nodeType":"ElementaryTypeName","src":"4286:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1579,"initialValue":{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4318:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4286:33:3"},{"body":{"id":1623,"nodeType":"Block","src":"4377:311:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1593,"name":"AllEventTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"4430:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_event_token_struct_$1222_storage_$","typeString":"mapping(uint256 => struct PolkaGift.event_token_struct storage ref)"}},"id":1595,"indexExpression":{"id":1594,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4445:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4430:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_event_token_struct_$1222_storage","typeString":"struct PolkaGift.event_token_struct storage ref"}},"id":1596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4448:8:3","memberName":"event_id","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"4430:26:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4424:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1591,"name":"bytes","nodeType":"ElementaryTypeName","src":"4424:5:3","typeDescriptions":{}}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1590,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4414:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4414:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1604,"name":"EventID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"4502:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4495:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1602,"name":"string","nodeType":"ElementaryTypeName","src":"4495:6:3","typeDescriptions":{}}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4495:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4489:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1600,"name":"bytes","nodeType":"ElementaryTypeName","src":"4489:5:3","typeDescriptions":{}}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4489:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1599,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4479:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4479:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4414:98:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1622,"nodeType":"IfStatement","src":"4392:285:3","trueBody":{"id":1621,"nodeType":"Block","src":"4528:149:3","statements":[{"expression":{"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1609,"name":"_SearchedStoreToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"4547:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1611,"indexExpression":{"id":1610,"name":"_EventTokenSearchIds2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"4567:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4547:42:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1612,"name":"AllEventTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"4592:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_event_token_struct_$1222_storage_$","typeString":"mapping(uint256 => struct PolkaGift.event_token_struct storage ref)"}},"id":1614,"indexExpression":{"id":1613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4607:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4592:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_event_token_struct_$1222_storage","typeString":"struct PolkaGift.event_token_struct storage ref"}},"id":1615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4610:9:3","memberName":"token_uri","nodeType":"MemberAccess","referencedDeclaration":1221,"src":"4592:27:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"4547:72:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1617,"nodeType":"ExpressionStatement","src":"4547:72:3"},{"expression":{"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4638:23:3","subExpression":{"id":1618,"name":"_EventTokenSearchIds2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"4638:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1620,"nodeType":"ExpressionStatement","src":"4638:23:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1584,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4352:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1585,"name":"_EventTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"4356:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4352:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1624,"initializationExpression":{"assignments":[1581],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"i","nameLocation":"4345:1:3","nodeType":"VariableDeclaration","scope":1624,"src":"4337:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"4337:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1583,"initialValue":{"hexValue":"30","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4349:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4337:13:3"},"loopExpression":{"expression":{"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4372:3:3","subExpression":{"id":1587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4372:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1589,"nodeType":"ExpressionStatement","src":"4372:3:3"},"nodeType":"ForStatement","src":"4332:356:3"},{"expression":{"id":1625,"name":"_SearchedStoreToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"4707:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1564,"id":1626,"nodeType":"Return","src":"4700:26:3"}]},"functionSelector":"d0fb8699","id":1628,"implemented":true,"kind":"function","modifiers":[],"name":"gettokenSearchEventTotal","nameLocation":"4073:24:3","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"EventID","nameLocation":"4112:7:3","nodeType":"VariableDeclaration","scope":1628,"src":"4098:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1558,"name":"string","nodeType":"ElementaryTypeName","src":"4098:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4097:23:3"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1628,"src":"4186:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1561,"name":"string","nodeType":"ElementaryTypeName","src":"4186:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1562,"nodeType":"ArrayTypeName","src":"4186:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4185:17:3"},"scope":2381,"src":"4064:670:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1759,"nodeType":"Block","src":"4883:841:3","statements":[{"assignments":[1637],"declarations":[{"constant":false,"id":1637,"mutability":"mutable","name":"_TemporarySearch","nameLocation":"4902:16:3","nodeType":"VariableDeclaration","scope":1759,"src":"4894:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"4894:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1639,"initialValue":{"hexValue":"30","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4921:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4894:28:3"},{"assignments":[1641],"declarations":[{"constant":false,"id":1641,"mutability":"mutable","name":"_SearchIds","nameLocation":"4941:10:3","nodeType":"VariableDeclaration","scope":1759,"src":"4933:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"4933:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1643,"initialValue":{"hexValue":"30","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4954:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4933:22:3"},{"body":{"id":1684,"nodeType":"Block","src":"5008:218:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"baseExpression":{"baseExpression":{"id":1657,"name":"_eventURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"5061:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$2_storage_$","typeString":"mapping(string memory => string storage ref[2] storage ref)"}},"id":1667,"indexExpression":{"arguments":[{"hexValue":"6d5f","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5086:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},"value":"m_"},{"arguments":[{"id":1664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"5109:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1662,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"5092:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$228_$","typeString":"type(library Strings)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5100:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":58,"src":"5092:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5092:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5072:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1658,"name":"string","nodeType":"ElementaryTypeName","src":"5072:6:3","typeDescriptions":{}}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5079:6:3","memberName":"concat","nodeType":"MemberAccess","src":"5072:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5072:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5061:52:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage","typeString":"string storage ref[2] storage ref"}},"id":1669,"indexExpression":{"hexValue":"30","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5114:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5061:55:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5055:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1655,"name":"bytes","nodeType":"ElementaryTypeName","src":"5055:5:3","typeDescriptions":{}}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5055:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1654,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5045:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5045:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1675,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"5138:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5132:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"5132:5:3","typeDescriptions":{}}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5132:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1672,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5122:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5122:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5045:101:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1683,"nodeType":"IfStatement","src":"5023:192:3","trueBody":{"id":1682,"nodeType":"Block","src":"5162:53:3","statements":[{"expression":{"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5181:18:3","subExpression":{"id":1679,"name":"_TemporarySearch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"5181:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1681,"nodeType":"ExpressionStatement","src":"5181:18:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"4988:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1649,"name":"_eventIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"4992:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4988:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1685,"initializationExpression":{"assignments":[1645],"declarations":[{"constant":false,"id":1645,"mutability":"mutable","name":"i","nameLocation":"4981:1:3","nodeType":"VariableDeclaration","scope":1685,"src":"4973:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"4973:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1647,"initialValue":{"hexValue":"30","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4985:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4973:13:3"},"loopExpression":{"expression":{"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5003:3:3","subExpression":{"id":1651,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"5003:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1653,"nodeType":"ExpressionStatement","src":"5003:3:3"},"nodeType":"ForStatement","src":"4968:258:3"},{"assignments":[1690],"declarations":[{"constant":false,"id":1690,"mutability":"mutable","name":"_SearchedStoreEvents","nameLocation":"5252:20:3","nodeType":"VariableDeclaration","scope":1759,"src":"5236:36:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1688,"name":"string","nodeType":"ElementaryTypeName","src":"5236:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1689,"nodeType":"ArrayTypeName","src":"5236:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1696,"initialValue":{"arguments":[{"id":1694,"name":"_TemporarySearch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"5288:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5275:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1691,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1692,"nodeType":"ArrayTypeName","src":"5279:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5236:69:3"},{"body":{"id":1755,"nodeType":"Block","src":"5356:321:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"baseExpression":{"baseExpression":{"id":1710,"name":"_eventURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"5409:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$2_storage_$","typeString":"mapping(string memory => string storage ref[2] storage ref)"}},"id":1720,"indexExpression":{"arguments":[{"hexValue":"6d5f","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5434:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},"value":"m_"},{"arguments":[{"id":1717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"5457:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1715,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"5440:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$228_$","typeString":"type(library Strings)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5448:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":58,"src":"5440:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5420:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1711,"name":"string","nodeType":"ElementaryTypeName","src":"5420:6:3","typeDescriptions":{}}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5427:6:3","memberName":"concat","nodeType":"MemberAccess","src":"5420:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5409:52:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage","typeString":"string storage ref[2] storage ref"}},"id":1722,"indexExpression":{"hexValue":"30","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5462:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5409:55:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5403:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1708,"name":"bytes","nodeType":"ElementaryTypeName","src":"5403:5:3","typeDescriptions":{}}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5403:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1707,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5393:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5393:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1728,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"5486:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5480:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1726,"name":"bytes","nodeType":"ElementaryTypeName","src":"5480:5:3","typeDescriptions":{}}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5480:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1725,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5470:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5393:101:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1754,"nodeType":"IfStatement","src":"5371:295:3","trueBody":{"id":1753,"nodeType":"Block","src":"5510:156:3","statements":[{"expression":{"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1732,"name":"_SearchedStoreEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"5529:20:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1734,"indexExpression":{"id":1733,"name":"_SearchIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"5550:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5529:32:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":1735,"name":"_eventURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"5564:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$2_storage_$","typeString":"mapping(string memory => string storage ref[2] storage ref)"}},"id":1745,"indexExpression":{"arguments":[{"hexValue":"6d5f","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5589:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},"value":"m_"},{"arguments":[{"id":1742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"5612:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1740,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"5595:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$228_$","typeString":"type(library Strings)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5603:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":58,"src":"5595:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5595:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11","typeString":"literal_string \"m_\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5575:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1736,"name":"string","nodeType":"ElementaryTypeName","src":"5575:6:3","typeDescriptions":{}}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5582:6:3","memberName":"concat","nodeType":"MemberAccess","src":"5575:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5575:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5564:52:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage","typeString":"string storage ref[2] storage ref"}},"id":1747,"indexExpression":{"hexValue":"31","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5617:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5564:55:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"5529:90:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1749,"nodeType":"ExpressionStatement","src":"5529:90:3"},{"expression":{"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5638:12:3","subExpression":{"id":1750,"name":"_SearchIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"5638:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1752,"nodeType":"ExpressionStatement","src":"5638:12:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1701,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"5336:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1702,"name":"_eventIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"5340:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5336:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1756,"initializationExpression":{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"i","nameLocation":"5329:1:3","nodeType":"VariableDeclaration","scope":1756,"src":"5321:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1700,"initialValue":{"hexValue":"30","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5333:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5321:13:3"},"loopExpression":{"expression":{"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5351:3:3","subExpression":{"id":1704,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"5351:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1706,"nodeType":"ExpressionStatement","src":"5351:3:3"},"nodeType":"ForStatement","src":"5316:361:3"},{"expression":{"id":1757,"name":"_SearchedStoreEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"5696:20:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1635,"id":1758,"nodeType":"Return","src":"5689:27:3"}]},"functionSelector":"1e65e117","id":1760,"implemented":true,"kind":"function","modifiers":[],"name":"getSearchEventbyWallet","nameLocation":"4751:22:3","nodeType":"FunctionDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"Wallet","nameLocation":"4788:6:3","nodeType":"VariableDeclaration","scope":1760,"src":"4774:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1629,"name":"string","nodeType":"ElementaryTypeName","src":"4774:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4773:22:3"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1760,"src":"4861:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1632,"name":"string","nodeType":"ElementaryTypeName","src":"4861:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1633,"nodeType":"ArrayTypeName","src":"4861:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4860:17:3"},"scope":2381,"src":"4742:982:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1823,"nodeType":"Block","src":"5888:403:3","statements":[{"body":{"id":1819,"nodeType":"Block","src":"5944:319:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1782,"name":"AllEventTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"5997:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_event_token_struct_$1222_storage_$","typeString":"mapping(uint256 => struct PolkaGift.event_token_struct storage ref)"}},"id":1784,"indexExpression":{"id":1783,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"6012:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5997:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_event_token_struct_$1222_storage","typeString":"struct PolkaGift.event_token_struct storage ref"}},"id":1785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6015:8:3","memberName":"event_id","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"5997:26:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5991:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1780,"name":"bytes","nodeType":"ElementaryTypeName","src":"5991:5:3","typeDescriptions":{}}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5991:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1779,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5981:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5981:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1793,"name":"EventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"6069:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6062:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1791,"name":"string","nodeType":"ElementaryTypeName","src":"6062:6:3","typeDescriptions":{}}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6062:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6056:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1789,"name":"bytes","nodeType":"ElementaryTypeName","src":"6056:5:3","typeDescriptions":{}}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6056:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1788,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6046:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6046:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5981:98:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1801,"name":"AllEventTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"6116:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_event_token_struct_$1222_storage_$","typeString":"mapping(uint256 => struct PolkaGift.event_token_struct storage ref)"}},"id":1803,"indexExpression":{"id":1802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"6131:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6116:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_event_token_struct_$1222_storage","typeString":"struct PolkaGift.event_token_struct storage ref"}},"id":1804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6134:9:3","memberName":"token_uri","nodeType":"MemberAccess","referencedDeclaration":1221,"src":"6116:27:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6110:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1799,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:3","typeDescriptions":{}}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6110:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1798,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6100:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6100:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1810,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"6182:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6176:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1808,"name":"bytes","nodeType":"ElementaryTypeName","src":"6176:5:3","typeDescriptions":{}}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6176:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1807,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6166:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6166:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6100:93:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5981:212:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1818,"nodeType":"IfStatement","src":"5959:293:3","trueBody":{"id":1817,"nodeType":"Block","src":"6209:43:3","statements":[{"expression":{"id":1815,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"6235:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1768,"id":1816,"nodeType":"Return","src":"6228:8:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"5919:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1774,"name":"_EventTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"5923:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5919:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1820,"initializationExpression":{"assignments":[1770],"declarations":[{"constant":false,"id":1770,"mutability":"mutable","name":"i","nameLocation":"5912:1:3","nodeType":"VariableDeclaration","scope":1820,"src":"5904:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1772,"initialValue":{"hexValue":"30","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5916:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5904:13:3"},"loopExpression":{"expression":{"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5939:3:3","subExpression":{"id":1776,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"5939:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1778,"nodeType":"ExpressionStatement","src":"5939:3:3"},"nodeType":"ForStatement","src":"5899:364:3"},{"expression":{"hexValue":"30","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6282:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1768,"id":1822,"nodeType":"Return","src":"6275:8:3"}]},"functionSelector":"783db260","id":1824,"implemented":true,"kind":"function","modifiers":[],"name":"getGetEventsTokenID","nameLocation":"5741:19:3","nodeType":"FunctionDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"EventId","nameLocation":"5775:7:3","nodeType":"VariableDeclaration","scope":1824,"src":"5761:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1761,"name":"string","nodeType":"ElementaryTypeName","src":"5761:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"_tokenURI","nameLocation":"5798:9:3","nodeType":"VariableDeclaration","scope":1824,"src":"5784:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1763,"name":"string","nodeType":"ElementaryTypeName","src":"5784:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5760:48:3"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1824,"src":"5874:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"5874:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5873:9:3"},"scope":2381,"src":"5732:559:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1837,"nodeType":"Block","src":"6438:53:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1831,"name":"_SearchedStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6456:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$2_storage_$","typeString":"mapping(string memory => string storage ref[2] storage ref)"}},"id":1833,"indexExpression":{"id":1832,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"6471:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6456:24:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage","typeString":"string storage ref[2] storage ref"}},"id":1835,"indexExpression":{"hexValue":"30","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6481:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6456:27:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1830,"id":1836,"nodeType":"Return","src":"6449:34:3"}]},"functionSelector":"eacb4a74","id":1838,"implemented":true,"kind":"function","modifiers":[],"name":"_getSearchedTokenURI","nameLocation":"6308:20:3","nodeType":"FunctionDefinition","parameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"_tokenId","nameLocation":"6343:8:3","nodeType":"VariableDeclaration","scope":1838,"src":"6329:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1825,"name":"string","nodeType":"ElementaryTypeName","src":"6329:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6328:24:3"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1838,"src":"6418:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1828,"name":"string","nodeType":"ElementaryTypeName","src":"6418:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6417:15:3"},"scope":2381,"src":"6299:192:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1855,"nodeType":"Block","src":"6646:66:3","statements":[{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1847,"name":"_eventURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"6657:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$2_storage_$","typeString":"mapping(string memory => string storage ref[2] storage ref)"}},"id":1849,"indexExpression":{"id":1848,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"6668:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6657:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage","typeString":"string storage ref[2] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1850,"name":"_eventWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"6680:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1851,"name":"_eventURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"6694:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1852,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6679:25:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$2_memory_ptr","typeString":"string memory[2] memory"}},"src":"6657:47:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage","typeString":"string storage ref[2] storage ref"}},"id":1854,"nodeType":"ExpressionStatement","src":"6657:47:3"}]},"functionSelector":"bfee6f8e","id":1856,"implemented":true,"kind":"function","modifiers":[],"name":"_setEventURI","nameLocation":"6508:12:3","nodeType":"FunctionDefinition","parameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1840,"mutability":"mutable","name":"eventId","nameLocation":"6545:7:3","nodeType":"VariableDeclaration","scope":1856,"src":"6531:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1839,"name":"string","nodeType":"ElementaryTypeName","src":"6531:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1842,"mutability":"mutable","name":"_eventWallet","nameLocation":"6577:12:3","nodeType":"VariableDeclaration","scope":1856,"src":"6563:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1841,"name":"string","nodeType":"ElementaryTypeName","src":"6563:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"_eventURI","nameLocation":"6614:9:3","nodeType":"VariableDeclaration","scope":1856,"src":"6600:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1843,"name":"string","nodeType":"ElementaryTypeName","src":"6600:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6520:110:3"},"returnParameters":{"id":1846,"nodeType":"ParameterList","parameters":[],"src":"6646:0:3"},"scope":2381,"src":"6499:213:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1869,"nodeType":"Block","src":"6828:68:3","statements":[{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1863,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6839:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":1865,"indexExpression":{"id":1864,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6850:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6839:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1866,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"6861:9:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6839:31:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1868,"nodeType":"ExpressionStatement","src":"6839:31:3"}]},"functionSelector":"7ab4ab6e","id":1870,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"6729:12:3","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"tokenId","nameLocation":"6756:7:3","nodeType":"VariableDeclaration","scope":1870,"src":"6742:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1857,"name":"string","nodeType":"ElementaryTypeName","src":"6742:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"_tokenURI","nameLocation":"6779:9:3","nodeType":"VariableDeclaration","scope":1870,"src":"6765:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1859,"name":"string","nodeType":"ElementaryTypeName","src":"6765:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6741:48:3"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[],"src":"6828:0:3"},"scope":2381,"src":"6720:176:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1883,"nodeType":"Block","src":"6984:45:3","statements":[{"expression":{"baseExpression":{"id":1879,"name":"_eventURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"7002:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$2_storage_$","typeString":"mapping(string memory => string storage ref[2] storage ref)"}},"id":1881,"indexExpression":{"id":1880,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"7013:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7002:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage","typeString":"string storage ref[2] storage ref"}},"functionReturnParameters":1878,"id":1882,"nodeType":"Return","src":"6995:26:3"}]},"functionSelector":"6ebb4d87","id":1884,"implemented":true,"kind":"function","modifiers":[],"name":"eventURI","nameLocation":"6913:8:3","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"eventId","nameLocation":"6936:7:3","nodeType":"VariableDeclaration","scope":1884,"src":"6922:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1871,"name":"string","nodeType":"ElementaryTypeName","src":"6922:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6921:23:3"},"returnParameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"6966:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$2_memory_ptr","typeString":"string[2]"},"typeName":{"baseType":{"id":1874,"name":"string","nodeType":"ElementaryTypeName","src":"6966:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1876,"length":{"hexValue":"32","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6973:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"6966:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"visibility":"internal"}],"src":"6965:18:3"},"scope":2381,"src":"6904:125:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1895,"nodeType":"Block","src":"7163:45:3","statements":[{"expression":{"baseExpression":{"id":1891,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"7181:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":1893,"indexExpression":{"id":1892,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"7192:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7181:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1890,"id":1894,"nodeType":"Return","src":"7174:26:3"}]},"functionSelector":"4cf12d26","id":1896,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"7046:8:3","nodeType":"FunctionDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"tokenId","nameLocation":"7069:7:3","nodeType":"VariableDeclaration","scope":1896,"src":"7055:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1885,"name":"string","nodeType":"ElementaryTypeName","src":"7055:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7054:23:3"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1896,"src":"7143:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1888,"name":"string","nodeType":"ElementaryTypeName","src":"7143:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7142:15:3"},"scope":2381,"src":"7037:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1903,"nodeType":"Block","src":"7269:35:3","statements":[{"expression":{"id":1901,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"7287:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1900,"id":1902,"nodeType":"Return","src":"7280:16:3"}]},"functionSelector":"18160ddd","id":1904,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"7225:11:3","nodeType":"FunctionDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[],"src":"7236:2:3"},"returnParameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1904,"src":"7260:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"7260:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7259:9:3"},"scope":2381,"src":"7216:88:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1911,"nodeType":"Block","src":"7364:35:3","statements":[{"expression":{"id":1909,"name":"_eventIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"7382:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1908,"id":1910,"nodeType":"Return","src":"7375:16:3"}]},"functionSelector":"7eadfa6a","id":1912,"implemented":true,"kind":"function","modifiers":[],"name":"totalEvent","nameLocation":"7321:10:3","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[],"src":"7331:2:3"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1912,"src":"7355:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"7355:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7354:9:3"},"scope":2381,"src":"7312:87:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1925,"nodeType":"Block","src":"7486:44:3","statements":[{"expression":{"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1919,"name":"_bidURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"7497:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":1921,"indexExpression":{"id":1920,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"7506:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7497:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1922,"name":"_bidURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"7515:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7497:25:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1924,"nodeType":"ExpressionStatement","src":"7497:25:3"}]},"functionSelector":"df6b96c7","id":1926,"implemented":true,"kind":"function","modifiers":[],"name":"_setBidURI","nameLocation":"7416:10:3","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"bidId","nameLocation":"7441:5:3","nodeType":"VariableDeclaration","scope":1926,"src":"7427:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1913,"name":"string","nodeType":"ElementaryTypeName","src":"7427:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"_bidURI","nameLocation":"7462:7:3","nodeType":"VariableDeclaration","scope":1926,"src":"7448:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1915,"name":"string","nodeType":"ElementaryTypeName","src":"7448:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7426:44:3"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[],"src":"7486:0:3"},"scope":2381,"src":"7407:123:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1937,"nodeType":"Block","src":"7611:41:3","statements":[{"expression":{"baseExpression":{"id":1933,"name":"_bidURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"7629:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":1935,"indexExpression":{"id":1934,"name":"BidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7638:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7629:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1932,"id":1936,"nodeType":"Return","src":"7622:22:3"}]},"functionSelector":"5f08c6b5","id":1938,"implemented":true,"kind":"function","modifiers":[],"name":"BidURI","nameLocation":"7547:6:3","nodeType":"FunctionDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"BidId","nameLocation":"7568:5:3","nodeType":"VariableDeclaration","scope":1938,"src":"7554:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1927,"name":"string","nodeType":"ElementaryTypeName","src":"7554:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7553:21:3"},"returnParameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1938,"src":"7596:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1930,"name":"string","nodeType":"ElementaryTypeName","src":"7596:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7595:15:3"},"scope":2381,"src":"7538:114:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2008,"nodeType":"Block","src":"7791:508:3","statements":[{"assignments":[1950],"declarations":[{"constant":false,"id":1950,"mutability":"mutable","name":"_SearchedStoreBid","nameLocation":"7818:17:3","nodeType":"VariableDeclaration","scope":2008,"src":"7802:33:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1948,"name":"string","nodeType":"ElementaryTypeName","src":"7802:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1949,"nodeType":"ArrayTypeName","src":"7802:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1956,"initialValue":{"arguments":[{"hexValue":"3130","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7851:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}],"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7838:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1951,"name":"string","nodeType":"ElementaryTypeName","src":"7842:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1952,"nodeType":"ArrayTypeName","src":"7842:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7838:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7802:52:3"},{"assignments":[1958],"declarations":[{"constant":false,"id":1958,"mutability":"mutable","name":"_TokenBidSearchIds2","nameLocation":"7875:19:3","nodeType":"VariableDeclaration","scope":2008,"src":"7867:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"7867:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1960,"initialValue":{"hexValue":"30","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7897:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7867:31:3"},{"body":{"id":2004,"nodeType":"Block","src":"7954:301:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1974,"name":"AllTokensBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"8007:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_token_bid_struct_$1229_storage_$","typeString":"mapping(uint256 => struct PolkaGift.token_bid_struct storage ref)"}},"id":1976,"indexExpression":{"id":1975,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"8021:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8007:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_token_bid_struct_$1229_storage","typeString":"struct PolkaGift.token_bid_struct storage ref"}},"id":1977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8024:8:3","memberName":"token_id","nodeType":"MemberAccess","referencedDeclaration":1225,"src":"8007:25:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8001:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1972,"name":"bytes","nodeType":"ElementaryTypeName","src":"8001:5:3","typeDescriptions":{}}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1971,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7991:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7991:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1985,"name":"TokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"8078:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8071:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1983,"name":"string","nodeType":"ElementaryTypeName","src":"8071:6:3","typeDescriptions":{}}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8071:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1981,"name":"bytes","nodeType":"ElementaryTypeName","src":"8065:5:3","typeDescriptions":{}}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1980,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8055:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8055:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7991:97:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2003,"nodeType":"IfStatement","src":"7969:275:3","trueBody":{"id":2002,"nodeType":"Block","src":"8104:140:3","statements":[{"expression":{"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1990,"name":"_SearchedStoreBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"8123:17:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1992,"indexExpression":{"id":1991,"name":"_TokenBidSearchIds2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"8141:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8123:38:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1993,"name":"AllTokensBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"8164:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_token_bid_struct_$1229_storage_$","typeString":"mapping(uint256 => struct PolkaGift.token_bid_struct storage ref)"}},"id":1995,"indexExpression":{"id":1994,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"8178:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8164:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_token_bid_struct_$1229_storage","typeString":"struct PolkaGift.token_bid_struct storage ref"}},"id":1996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8181:7:3","memberName":"bid_uri","nodeType":"MemberAccess","referencedDeclaration":1228,"src":"8164:24:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"8123:65:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1998,"nodeType":"ExpressionStatement","src":"8123:65:3"},{"expression":{"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8207:21:3","subExpression":{"id":1999,"name":"_TokenBidSearchIds2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"8207:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2001,"nodeType":"ExpressionStatement","src":"8207:21:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1965,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"7931:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1966,"name":"_TokenBidIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"7935:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7931:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2005,"initializationExpression":{"assignments":[1962],"declarations":[{"constant":false,"id":1962,"mutability":"mutable","name":"i","nameLocation":"7924:1:3","nodeType":"VariableDeclaration","scope":2005,"src":"7916:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"7916:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1964,"initialValue":{"hexValue":"30","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7928:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7916:13:3"},"loopExpression":{"expression":{"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7949:3:3","subExpression":{"id":1968,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"7949:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1970,"nodeType":"ExpressionStatement","src":"7949:3:3"},"nodeType":"ForStatement","src":"7911:344:3"},{"expression":{"id":2006,"name":"_SearchedStoreBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"8274:17:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1945,"id":2007,"nodeType":"Return","src":"8267:24:3"}]},"functionSelector":"2a0d0373","id":2009,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalBid","nameLocation":"7669:11:3","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"TokenID","nameLocation":"7695:7:3","nodeType":"VariableDeclaration","scope":2009,"src":"7681:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1939,"name":"string","nodeType":"ElementaryTypeName","src":"7681:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7680:23:3"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2009,"src":"7769:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1942,"name":"string","nodeType":"ElementaryTypeName","src":"7769:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1943,"nodeType":"ArrayTypeName","src":"7769:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"7768:17:3"},"scope":2381,"src":"7660:639:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2079,"nodeType":"Block","src":"8445:508:3","statements":[{"assignments":[2021],"declarations":[{"constant":false,"id":2021,"mutability":"mutable","name":"_SearchedStoreBid","nameLocation":"8472:17:3","nodeType":"VariableDeclaration","scope":2079,"src":"8456:33:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2019,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2020,"nodeType":"ArrayTypeName","src":"8456:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2027,"initialValue":{"arguments":[{"hexValue":"3130","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8505:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}],"id":2024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8492:12:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2022,"name":"string","nodeType":"ElementaryTypeName","src":"8496:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2023,"nodeType":"ArrayTypeName","src":"8496:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8492:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8456:52:3"},{"assignments":[2029],"declarations":[{"constant":false,"id":2029,"mutability":"mutable","name":"_TokenBidSearchIds2","nameLocation":"8529:19:3","nodeType":"VariableDeclaration","scope":2079,"src":"8521:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"8521:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2031,"initialValue":{"hexValue":"30","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8551:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8521:31:3"},{"body":{"id":2075,"nodeType":"Block","src":"8608:301:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2045,"name":"AllTokensBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"8661:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_token_bid_struct_$1229_storage_$","typeString":"mapping(uint256 => struct PolkaGift.token_bid_struct storage ref)"}},"id":2047,"indexExpression":{"id":2046,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"8675:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8661:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_token_bid_struct_$1229_storage","typeString":"struct PolkaGift.token_bid_struct storage ref"}},"id":2048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8678:8:3","memberName":"token_id","nodeType":"MemberAccess","referencedDeclaration":1225,"src":"8661:25:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8655:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2043,"name":"bytes","nodeType":"ElementaryTypeName","src":"8655:5:3","typeDescriptions":{}}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8655:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2042,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8645:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8645:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2056,"name":"TokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"8732:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8725:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2054,"name":"string","nodeType":"ElementaryTypeName","src":"8725:6:3","typeDescriptions":{}}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8725:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8719:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2052,"name":"bytes","nodeType":"ElementaryTypeName","src":"8719:5:3","typeDescriptions":{}}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8719:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2051,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8709:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8709:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8645:97:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2074,"nodeType":"IfStatement","src":"8623:275:3","trueBody":{"id":2073,"nodeType":"Block","src":"8758:140:3","statements":[{"expression":{"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2061,"name":"_SearchedStoreBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"8777:17:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2063,"indexExpression":{"id":2062,"name":"_TokenBidSearchIds2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8795:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8777:38:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2064,"name":"AllTokensBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"8818:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_token_bid_struct_$1229_storage_$","typeString":"mapping(uint256 => struct PolkaGift.token_bid_struct storage ref)"}},"id":2066,"indexExpression":{"id":2065,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"8832:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8818:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_token_bid_struct_$1229_storage","typeString":"struct PolkaGift.token_bid_struct storage ref"}},"id":2067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8835:7:3","memberName":"bid_uri","nodeType":"MemberAccess","referencedDeclaration":1228,"src":"8818:24:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"8777:65:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2069,"nodeType":"ExpressionStatement","src":"8777:65:3"},{"expression":{"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8861:21:3","subExpression":{"id":2070,"name":"_TokenBidSearchIds2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8861:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2072,"nodeType":"ExpressionStatement","src":"8861:21:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"8585:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2037,"name":"_TokenBidIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"8589:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8585:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2076,"initializationExpression":{"assignments":[2033],"declarations":[{"constant":false,"id":2033,"mutability":"mutable","name":"i","nameLocation":"8578:1:3","nodeType":"VariableDeclaration","scope":2076,"src":"8570:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2035,"initialValue":{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8582:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8570:13:3"},"loopExpression":{"expression":{"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8603:3:3","subExpression":{"id":2039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"8603:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2041,"nodeType":"ExpressionStatement","src":"8603:3:3"},"nodeType":"ForStatement","src":"8565:344:3"},{"expression":{"id":2077,"name":"_SearchedStoreBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"8928:17:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2016,"id":2078,"nodeType":"Return","src":"8921:24:3"}]},"functionSelector":"25c11f74","id":2080,"implemented":true,"kind":"function","modifiers":[],"name":"getBidsSearchToken","nameLocation":"8316:18:3","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"TokenID","nameLocation":"8349:7:3","nodeType":"VariableDeclaration","scope":2080,"src":"8335:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2010,"name":"string","nodeType":"ElementaryTypeName","src":"8335:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8334:23:3"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2080,"src":"8423:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2013,"name":"string","nodeType":"ElementaryTypeName","src":"8423:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2014,"nodeType":"ArrayTypeName","src":"8423:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"8422:17:3"},"scope":2381,"src":"8307:646:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2104,"nodeType":"Block","src":"9098:134:3","statements":[{"expression":{"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2089,"name":"AllTokensBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9109:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_token_bid_struct_$1229_storage_$","typeString":"mapping(uint256 => struct PolkaGift.token_bid_struct storage ref)"}},"id":2091,"indexExpression":{"id":2090,"name":"TokenBidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"9123:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9109:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_token_bid_struct_$1229_storage","typeString":"struct PolkaGift.token_bid_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2095,"name":"TokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"9175:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9168:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2093,"name":"string","nodeType":"ElementaryTypeName","src":"9168:6:3","typeDescriptions":{}}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9168:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":2099,"name":"_BidURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"9205:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9198:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2097,"name":"string","nodeType":"ElementaryTypeName","src":"9198:6:3","typeDescriptions":{}}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9198:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2092,"name":"token_bid_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"9137:16:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_token_bid_struct_$1229_storage_ptr_$","typeString":"type(struct PolkaGift.token_bid_struct storage pointer)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9137:87:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_token_bid_struct_$1229_memory_ptr","typeString":"struct PolkaGift.token_bid_struct memory"}},"src":"9109:115:3","typeDescriptions":{"typeIdentifier":"t_struct$_token_bid_struct_$1229_storage","typeString":"struct PolkaGift.token_bid_struct storage ref"}},"id":2103,"nodeType":"ExpressionStatement","src":"9109:115:3"}]},"functionSelector":"5457bbf9","id":2105,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenBid","nameLocation":"8970:12:3","nodeType":"FunctionDefinition","parameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"TokenBidId","nameLocation":"9001:10:3","nodeType":"VariableDeclaration","scope":2105,"src":"8993:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2084,"mutability":"mutable","name":"TokenId","nameLocation":"9036:7:3","nodeType":"VariableDeclaration","scope":2105,"src":"9022:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2083,"name":"string","nodeType":"ElementaryTypeName","src":"9022:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2086,"mutability":"mutable","name":"_BidURI","nameLocation":"9068:7:3","nodeType":"VariableDeclaration","scope":2105,"src":"9054:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2085,"name":"string","nodeType":"ElementaryTypeName","src":"9054:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8982:100:3"},"returnParameters":{"id":2088,"nodeType":"ParameterList","parameters":[],"src":"9098:0:3"},"scope":2381,"src":"8961:271:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2168,"nodeType":"Block","src":"9414:679:3","statements":[{"assignments":[2117],"declarations":[{"constant":false,"id":2117,"mutability":"mutable","name":"old_id","nameLocation":"9441:6:3","nodeType":"VariableDeclaration","scope":2168,"src":"9427:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2116,"name":"string","nodeType":"ElementaryTypeName","src":"9427:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2121,"initialValue":{"arguments":[{"id":2119,"name":"token_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"9469:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2118,"name":"getTokenHighestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"9450:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) view returns (string memory)"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"9427:51:3"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2125,"name":"old_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"9510:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9504:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2123,"name":"bytes","nodeType":"ElementaryTypeName","src":"9504:5:3","typeDescriptions":{}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9504:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2122,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9494:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9494:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"2d31","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9545:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_798272c22de7de1bbb41d9d76b5240e67bb83e9ece1afeb940834536b3646693","typeString":"literal_string \"-1\""},"value":"-1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_798272c22de7de1bbb41d9d76b5240e67bb83e9ece1afeb940834536b3646693","typeString":"literal_string \"-1\""}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9538:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2131,"name":"string","nodeType":"ElementaryTypeName","src":"9538:6:3","typeDescriptions":{}}},"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9538:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9532:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2129,"name":"bytes","nodeType":"ElementaryTypeName","src":"9532:5:3","typeDescriptions":{}}},"id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9532:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2128,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9522:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9494:58:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2166,"nodeType":"Block","src":"9802:282:3","statements":[{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2152,"name":"TokenHighestBidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"9817:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_highest_bidder_struct_$1215_storage_$","typeString":"mapping(uint256 => struct PolkaGift.highest_bidder_struct storage ref)"}},"id":2154,"indexExpression":{"id":2153,"name":"_TokenHighestBidIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"9837:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9817:40:3","typeDescriptions":{"typeIdentifier":"t_struct$_highest_bidder_struct_$1215_storage","typeString":"struct PolkaGift.highest_bidder_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2156,"name":"token_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"9911:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2157,"name":"event_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"9948:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2158,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"9983:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2159,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"10015:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2155,"name":"highest_bidder_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"9860:21:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_highest_bidder_struct_$1215_storage_ptr_$","typeString":"type(struct PolkaGift.highest_bidder_struct storage pointer)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9901:8:3","9938:8:3","9975:6:3","10008:5:3"],"names":["token_id","event_id","wallet","price"],"nodeType":"FunctionCall","src":"9860:176:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_highest_bidder_struct_$1215_memory_ptr","typeString":"struct PolkaGift.highest_bidder_struct memory"}},"src":"9817:219:3","typeDescriptions":{"typeIdentifier":"t_struct$_highest_bidder_struct_$1215_storage","typeString":"struct PolkaGift.highest_bidder_struct storage ref"}},"id":2162,"nodeType":"ExpressionStatement","src":"9817:219:3"},{"expression":{"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10051:21:3","subExpression":{"id":2163,"name":"_TokenHighestBidIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"10051:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2165,"nodeType":"ExpressionStatement","src":"10051:21:3"}]},"id":2167,"nodeType":"IfStatement","src":"9489:595:3","trueBody":{"id":2151,"nodeType":"Block","src":"9553:245:3","statements":[{"expression":{"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2138,"name":"TokenHighestBidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"9570:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_highest_bidder_struct_$1215_storage_$","typeString":"mapping(uint256 => struct PolkaGift.highest_bidder_struct storage ref)"}},"id":2142,"indexExpression":{"arguments":[{"id":2140,"name":"old_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"9600:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2139,"name":"strToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"9590:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory) pure returns (uint256)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9590:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9570:38:3","typeDescriptions":{"typeIdentifier":"t_struct$_highest_bidder_struct_$1215_storage","typeString":"struct PolkaGift.highest_bidder_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2144,"name":"token_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"9661:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2145,"name":"event_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"9698:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2146,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"9733:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2147,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"9765:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2143,"name":"highest_bidder_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"9610:21:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_highest_bidder_struct_$1215_storage_ptr_$","typeString":"type(struct PolkaGift.highest_bidder_struct storage pointer)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9651:8:3","9688:8:3","9725:6:3","9758:5:3"],"names":["token_id","event_id","wallet","price"],"nodeType":"FunctionCall","src":"9610:176:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_highest_bidder_struct_$1215_memory_ptr","typeString":"struct PolkaGift.highest_bidder_struct memory"}},"src":"9570:216:3","typeDescriptions":{"typeIdentifier":"t_struct$_highest_bidder_struct_$1215_storage","typeString":"struct PolkaGift.highest_bidder_struct storage ref"}},"id":2150,"nodeType":"ExpressionStatement","src":"9570:216:3"}]}}]},"functionSelector":"ce65e748","id":2169,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenHighestBid","nameLocation":"9251:19:3","nodeType":"FunctionDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"token_id","nameLocation":"9295:8:3","nodeType":"VariableDeclaration","scope":2169,"src":"9281:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2106,"name":"string","nodeType":"ElementaryTypeName","src":"9281:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"event_id","nameLocation":"9328:8:3","nodeType":"VariableDeclaration","scope":2169,"src":"9314:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2108,"name":"string","nodeType":"ElementaryTypeName","src":"9314:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"wallet","nameLocation":"9355:6:3","nodeType":"VariableDeclaration","scope":2169,"src":"9347:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2110,"name":"address","nodeType":"ElementaryTypeName","src":"9347:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"price","nameLocation":"9386:5:3","nodeType":"VariableDeclaration","scope":2169,"src":"9372:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2112,"name":"string","nodeType":"ElementaryTypeName","src":"9372:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9270:128:3"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[],"src":"9414:0:3"},"scope":2381,"src":"9242:851:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2257,"nodeType":"Block","src":"10171:340:3","statements":[{"body":{"id":2252,"nodeType":"Block","src":"10241:230:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"arguments":[{"id":2194,"name":"_str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"10273:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10267:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2192,"name":"bytes","nodeType":"ElementaryTypeName","src":"10267:5:3","typeDescriptions":{}}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10267:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2197,"indexExpression":{"id":2196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"10279:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10267:14:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10261:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2190,"name":"uint8","nodeType":"ElementaryTypeName","src":"10261:5:3","typeDescriptions":{}}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10261:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3438","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:3","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"10261:26:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10260:28:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10291:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10260:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"arguments":[{"id":2208,"name":"_str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"10309:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2206,"name":"bytes","nodeType":"ElementaryTypeName","src":"10303:5:3","typeDescriptions":{}}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2211,"indexExpression":{"id":2210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"10315:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10303:14:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10297:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2204,"name":"uint8","nodeType":"ElementaryTypeName","src":"10297:5:3","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10297:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3438","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10321:2:3","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"10297:26:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10296:28:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10327:1:3","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"10296:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10260:68:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2223,"nodeType":"IfStatement","src":"10256:119:3","trueBody":{"id":2222,"nodeType":"Block","src":"10330:45:3","statements":[{"expression":{"components":[{"hexValue":"30","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10357:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10356:3:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}},"functionReturnParameters":2175,"id":2221,"nodeType":"Return","src":"10349:10:3"}]}},{"expression":{"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2224,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"10389:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"arguments":[{"id":2229,"name":"_str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"10409:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10403:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2227,"name":"bytes","nodeType":"ElementaryTypeName","src":"10403:5:3","typeDescriptions":{}}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10403:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2232,"indexExpression":{"id":2231,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"10415:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10403:14:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10397:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2225,"name":"uint8","nodeType":"ElementaryTypeName","src":"10397:5:3","typeDescriptions":{}}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10397:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3438","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10421:2:3","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"10397:26:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10396:28:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10427:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2240,"name":"_str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"10438:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2238,"name":"bytes","nodeType":"ElementaryTypeName","src":"10432:5:3","typeDescriptions":{}}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10432:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10444:6:3","memberName":"length","nodeType":"MemberAccess","src":"10432:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2243,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"10453:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10432:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10457:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10432:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10431:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10427:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10396:63:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:70:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2251,"nodeType":"ExpressionStatement","src":"10389:70:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2180,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"10212:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2183,"name":"_str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"10222:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10216:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2181,"name":"bytes","nodeType":"ElementaryTypeName","src":"10216:5:3","typeDescriptions":{}}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10216:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10228:6:3","memberName":"length","nodeType":"MemberAccess","src":"10216:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10212:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2253,"initializationExpression":{"assignments":[2177],"declarations":[{"constant":false,"id":2177,"mutability":"mutable","name":"i","nameLocation":"10205:1:3","nodeType":"VariableDeclaration","scope":2253,"src":"10197:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2176,"name":"uint256","nodeType":"ElementaryTypeName","src":"10197:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2179,"initialValue":{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10209:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10197:13:3"},"loopExpression":{"expression":{"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10236:3:3","subExpression":{"id":2187,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"10236:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2189,"nodeType":"ExpressionStatement","src":"10236:3:3"},"nodeType":"ForStatement","src":"10192:279:3"},{"expression":{"components":[{"id":2254,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"10499:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10498:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2175,"id":2256,"nodeType":"Return","src":"10491:12:3"}]},"functionSelector":"c5ef3ec5","id":2258,"implemented":true,"kind":"function","modifiers":[],"name":"strToUint","nameLocation":"10108:9:3","nodeType":"FunctionDefinition","parameters":{"id":2172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"_str","nameLocation":"10132:4:3","nodeType":"VariableDeclaration","scope":2258,"src":"10118:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2170,"name":"string","nodeType":"ElementaryTypeName","src":"10118:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10117:20:3"},"returnParameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"res","nameLocation":"10166:3:3","nodeType":"VariableDeclaration","scope":2258,"src":"10158:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2173,"name":"uint256","nodeType":"ElementaryTypeName","src":"10158:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10157:13:3"},"scope":2381,"src":"10099:412:3","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":2305,"nodeType":"Block","src":"10651:357:3","statements":[{"body":{"id":2301,"nodeType":"Block","src":"10716:253:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2278,"name":"TokenHighestBidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"10773:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_highest_bidder_struct_$1215_storage_$","typeString":"mapping(uint256 => struct PolkaGift.highest_bidder_struct storage ref)"}},"id":2280,"indexExpression":{"id":2279,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"10793:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10773:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_highest_bidder_struct_$1215_storage","typeString":"struct PolkaGift.highest_bidder_struct storage ref"}},"id":2281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10796:8:3","memberName":"token_id","nodeType":"MemberAccess","referencedDeclaration":1205,"src":"10773:31:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10767:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2276,"name":"bytes","nodeType":"ElementaryTypeName","src":"10767:5:3","typeDescriptions":{}}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10767:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2275,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10757:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10757:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2289,"name":"token_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"10854:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10847:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2287,"name":"string","nodeType":"ElementaryTypeName","src":"10847:6:3","typeDescriptions":{}}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10841:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2285,"name":"bytes","nodeType":"ElementaryTypeName","src":"10841:5:3","typeDescriptions":{}}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10841:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2284,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10831:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10831:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10757:108:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2300,"nodeType":"IfStatement","src":"10731:223:3","trueBody":{"id":2299,"nodeType":"Block","src":"10885:69:3","statements":[{"expression":{"arguments":[{"id":2296,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"10932:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2294,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"10915:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$228_$","typeString":"type(library Strings)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10923:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":58,"src":"10915:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10915:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2264,"id":2298,"nodeType":"Return","src":"10908:26:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"10686:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2270,"name":"_TokenHighestBidIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"10690:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10686:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2302,"initializationExpression":{"assignments":[2266],"declarations":[{"constant":false,"id":2266,"mutability":"mutable","name":"i","nameLocation":"10679:1:3","nodeType":"VariableDeclaration","scope":2302,"src":"10671:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"10671:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2268,"initialValue":{"hexValue":"30","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10683:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10671:13:3"},"loopExpression":{"expression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10711:3:3","subExpression":{"id":2272,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"10711:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"nodeType":"ExpressionStatement","src":"10711:3:3"},"nodeType":"ForStatement","src":"10666:303:3"},{"expression":{"hexValue":"2d31","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10990:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_798272c22de7de1bbb41d9d76b5240e67bb83e9ece1afeb940834536b3646693","typeString":"literal_string \"-1\""},"value":"-1"},"functionReturnParameters":2264,"id":2304,"nodeType":"Return","src":"10983:11:3"}]},"functionSelector":"6beee9d7","id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenHighestBid","nameLocation":"10526:18:3","nodeType":"FunctionDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"token_id","nameLocation":"10559:8:3","nodeType":"VariableDeclaration","scope":2306,"src":"10545:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2259,"name":"string","nodeType":"ElementaryTypeName","src":"10545:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10544:24:3"},"returnParameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2306,"src":"10637:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2262,"name":"string","nodeType":"ElementaryTypeName","src":"10637:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10636:15:3"},"scope":2381,"src":"10517:491:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2317,"nodeType":"Block","src":"11149:48:3","statements":[{"expression":{"baseExpression":{"id":2313,"name":"_eventRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"11167:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":2315,"indexExpression":{"id":2314,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"11180:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11167:22:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2312,"id":2316,"nodeType":"Return","src":"11160:29:3"}]},"functionSelector":"a42a665c","id":2318,"implemented":true,"kind":"function","modifiers":[],"name":"getEventRaised","nameLocation":"11025:14:3","nodeType":"FunctionDefinition","parameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"_eventId","nameLocation":"11054:8:3","nodeType":"VariableDeclaration","scope":2318,"src":"11040:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2307,"name":"string","nodeType":"ElementaryTypeName","src":"11040:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11039:24:3"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"11129:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2310,"name":"string","nodeType":"ElementaryTypeName","src":"11129:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11128:15:3"},"scope":2381,"src":"11016:181:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2331,"nodeType":"Block","src":"11284:51:3","statements":[{"expression":{"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2325,"name":"_eventRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"11295:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":2327,"indexExpression":{"id":2326,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"11308:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11295:22:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2328,"name":"_raised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"11320:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11295:32:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2330,"nodeType":"ExpressionStatement","src":"11295:32:3"}]},"functionSelector":"282e5e81","id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"_setEventRaised","nameLocation":"11214:15:3","nodeType":"FunctionDefinition","parameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"_eventId","nameLocation":"11244:8:3","nodeType":"VariableDeclaration","scope":2332,"src":"11230:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2319,"name":"string","nodeType":"ElementaryTypeName","src":"11230:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2322,"mutability":"mutable","name":"_raised","nameLocation":"11268:7:3","nodeType":"VariableDeclaration","scope":2332,"src":"11254:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2321,"name":"string","nodeType":"ElementaryTypeName","src":"11254:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11229:47:3"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[],"src":"11284:0:3"},"scope":2381,"src":"11205:130:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2379,"nodeType":"Block","src":"11543:362:3","statements":[{"assignments":[2346],"declarations":[{"constant":false,"id":2346,"mutability":"mutable","name":"_EventTokenId","nameLocation":"11562:13:3","nodeType":"VariableDeclaration","scope":2379,"src":"11554:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"11554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2353,"initialValue":{"arguments":[{"id":2348,"name":"_eventid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"11612:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"id":2349,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"11635:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":2351,"indexExpression":{"id":2350,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"11646:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11635:20:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2347,"name":"getGetEventsTokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"11578:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory,string memory) view returns (uint256)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11578:88:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11554:112:3"},{"expression":{"arguments":[{"id":2355,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"11699:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2356,"name":"_eventid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"11708:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2357,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11717:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11721:6:3","memberName":"sender","nodeType":"MemberAccess","src":"11717:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2359,"name":"_bid_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"11728:10:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2354,"name":"_setTokenHighestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"11679:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory,address,string memory)"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11679:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2361,"nodeType":"ExpressionStatement","src":"11679:60:3"},{"expression":{"arguments":[{"id":2363,"name":"_eventid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"11776:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2364,"name":"_raised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"11786:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2362,"name":"_setEventRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"11760:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11760:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2366,"nodeType":"ExpressionStatement","src":"11760:34:3"},{"expression":{"arguments":[{"id":2368,"name":"_TokenBidIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"11820:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2369,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"11834:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2370,"name":"_bidURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"11844:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2367,"name":"_setTokenBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"11807:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory,string memory)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11807:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2372,"nodeType":"ExpressionStatement","src":"11807:45:3"},{"expression":{"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11863:14:3","subExpression":{"id":2373,"name":"_TokenBidIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"11863:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2375,"nodeType":"ExpressionStatement","src":"11863:14:3"},{"expression":{"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11888:9:3","subExpression":{"id":2376,"name":"_bidIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"11888:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2378,"nodeType":"ExpressionStatement","src":"11888:9:3"}]},"functionSelector":"f7e34095","id":2380,"implemented":true,"kind":"function","modifiers":[],"name":"createBid","nameLocation":"11352:9:3","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"_tokenId","nameLocation":"11386:8:3","nodeType":"VariableDeclaration","scope":2380,"src":"11372:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2333,"name":"string","nodeType":"ElementaryTypeName","src":"11372:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"_bidURI","nameLocation":"11419:7:3","nodeType":"VariableDeclaration","scope":2380,"src":"11405:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2335,"name":"string","nodeType":"ElementaryTypeName","src":"11405:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"_eventid","nameLocation":"11451:8:3","nodeType":"VariableDeclaration","scope":2380,"src":"11437:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2337,"name":"string","nodeType":"ElementaryTypeName","src":"11437:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"_raised","nameLocation":"11484:7:3","nodeType":"VariableDeclaration","scope":2380,"src":"11470:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2339,"name":"string","nodeType":"ElementaryTypeName","src":"11470:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"_bid_price","nameLocation":"11516:10:3","nodeType":"VariableDeclaration","scope":2380,"src":"11502:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2341,"name":"string","nodeType":"ElementaryTypeName","src":"11502:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11361:174:3"},"returnParameters":{"id":2344,"nodeType":"ParameterList","parameters":[],"src":"11543:0:3"},"scope":2381,"src":"11343:562:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2382,"src":"111:11797:3","usedErrors":[]}],"src":"33:11877:3"},"id":3},"contracts/precompiles/Batch.sol":{"ast":{"absolutePath":"contracts/precompiles/Batch.sol","exportedSymbols":{"BATCH_ADDRESS":[2387],"BATCH_CONTRACT":[2394],"Batch":[2454]},"id":2455,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":2383,"literals":["solidity",">=","0.8",".3"],"nodeType":"PragmaDirective","src":"42:24:4"},{"constant":true,"id":2387,"mutability":"constant","name":"BATCH_ADDRESS","nameLocation":"127:13:4","nodeType":"VariableDeclaration","scope":2455,"src":"110:75:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2385,"name":"address","nodeType":"ElementaryTypeName","src":"110:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030383038","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"143:42:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000808"},"visibility":"internal"},{"constant":true,"id":2394,"mutability":"constant","name":"BATCH_CONTRACT","nameLocation":"246:14:4","nodeType":"VariableDeclaration","scope":2455,"src":"231:52:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Batch_$2454","typeString":"contract Batch"},"typeName":{"id":2390,"nodeType":"UserDefinedTypeName","pathNode":{"id":2389,"name":"Batch","nameLocations":["231:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":2454,"src":"231:5:4"},"referencedDeclaration":2454,"src":"231:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_Batch_$2454","typeString":"contract Batch"}},"value":{"arguments":[{"id":2392,"name":"BATCH_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"269:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2391,"name":"Batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"263:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Batch_$2454_$","typeString":"type(contract Batch)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"263:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Batch_$2454","typeString":"contract Batch"}},"visibility":"internal"},{"abstract":false,"baseContracts":[],"canonicalName":"Batch","contractDependencies":[],"contractKind":"interface","documentation":{"id":2395,"nodeType":"StructuredDocumentation","src":"288:274:4","text":"@author The Moonbeam Team\n @title Batch precompile\n @dev Allows to perform multiple calls throught one call to the precompile.\n Can be used by EOA to do multiple calls in a single transaction.\n @custom:address 0x0000000000000000000000000000000000000808"},"fullyImplemented":false,"id":2454,"linearizedBaseContracts":[2454],"name":"Batch","nameLocation":"572:5:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"585:815:4","text":"@dev Batch multiple calls into a single transaction.\n All calls are performed from the address calling this precompile.\n In case of one subcall reverting following subcalls will still be attempted.\n @param to List of addresses to call.\n @param value List of values for each subcall. If array is shorter than \"to\" then additional\n calls will be performed with a value of 0.\n @param callData Call data for each `to` address. If array is shorter than \"to\" then\n additional calls will be performed with an empty call data.\n @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\n If array is shorter than \"to\" then the remaining gas available will be used.\n @custom:selector 79df4b9c"},"functionSelector":"79df4b9c","id":2411,"implemented":false,"kind":"function","modifiers":[],"name":"batchSome","nameLocation":"1415:9:4","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"to","nameLocation":"1452:2:4","nodeType":"VariableDeclaration","scope":2411,"src":"1435:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"1435:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2398,"nodeType":"ArrayTypeName","src":"1435:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"value","nameLocation":"1482:5:4","nodeType":"VariableDeclaration","scope":2411,"src":"1465:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1465:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2401,"nodeType":"ArrayTypeName","src":"1465:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"callData","nameLocation":"1513:8:4","nodeType":"VariableDeclaration","scope":2411,"src":"1498:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2403,"name":"bytes","nodeType":"ElementaryTypeName","src":"1498:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2404,"nodeType":"ArrayTypeName","src":"1498:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"gasLimit","nameLocation":"1548:8:4","nodeType":"VariableDeclaration","scope":2411,"src":"1532:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":2406,"name":"uint64","nodeType":"ElementaryTypeName","src":"1532:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2407,"nodeType":"ArrayTypeName","src":"1532:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"1424:139:4"},"returnParameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"1572:0:4"},"scope":2454,"src":"1406:167:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"1581:901:4","text":"@dev Batch multiple calls into a single transaction.\n All calls are performed from the address calling this precompile.\n In case of one subcall reverting, no more subcalls will be executed but\n the batch transaction will succeed. Use batchAll to revert on any subcall revert.\n @param to List of addresses to call.\n @param value List of values for each subcall. If array is shorter than \"to\" then additional\n calls will be performed with a value of 0.\n @param callData Call data for each `to` address. If array is shorter than \"to\" then\n additional calls will be performed with an empty call data.\n @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\n If array is shorter than \"to\" then the remaining gas available will be used.\n @custom:selector cf0491c7"},"functionSelector":"cf0491c7","id":2427,"implemented":false,"kind":"function","modifiers":[],"name":"batchSomeUntilFailure","nameLocation":"2497:21:4","nodeType":"FunctionDefinition","parameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"to","nameLocation":"2546:2:4","nodeType":"VariableDeclaration","scope":2427,"src":"2529:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2413,"name":"address","nodeType":"ElementaryTypeName","src":"2529:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2414,"nodeType":"ArrayTypeName","src":"2529:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2418,"mutability":"mutable","name":"value","nameLocation":"2576:5:4","nodeType":"VariableDeclaration","scope":2427,"src":"2559:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"2559:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2417,"nodeType":"ArrayTypeName","src":"2559:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"callData","nameLocation":"2607:8:4","nodeType":"VariableDeclaration","scope":2427,"src":"2592:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2419,"name":"bytes","nodeType":"ElementaryTypeName","src":"2592:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2420,"nodeType":"ArrayTypeName","src":"2592:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2424,"mutability":"mutable","name":"gasLimit","nameLocation":"2642:8:4","nodeType":"VariableDeclaration","scope":2427,"src":"2626:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":2422,"name":"uint64","nodeType":"ElementaryTypeName","src":"2626:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2423,"nodeType":"ArrayTypeName","src":"2626:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"2518:139:4"},"returnParameters":{"id":2426,"nodeType":"ParameterList","parameters":[],"src":"2666:0:4"},"scope":2454,"src":"2488:179:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2428,"nodeType":"StructuredDocumentation","src":"2675:802:4","text":"@dev Batch multiple calls into a single transaction.\n All calls are performed from the address calling this precompile.\n In case of one subcall reverting, the entire batch will revert.\n @param to List of addresses to call.\n @param value List of values for each subcall. If array is shorter than \"to\" then additional\n calls will be performed with a value of 0.\n @param callData Call data for each `to` address. If array is shorter than \"to\" then\n additional calls will be performed with an empty call data.\n @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\n If array is shorter than \"to\" then the remaining gas available will be used.\n @custom:selector 96e292b8"},"functionSelector":"96e292b8","id":2443,"implemented":false,"kind":"function","modifiers":[],"name":"batchAll","nameLocation":"3492:8:4","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"to","nameLocation":"3528:2:4","nodeType":"VariableDeclaration","scope":2443,"src":"3511:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2429,"name":"address","nodeType":"ElementaryTypeName","src":"3511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2430,"nodeType":"ArrayTypeName","src":"3511:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"value","nameLocation":"3558:5:4","nodeType":"VariableDeclaration","scope":2443,"src":"3541:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2433,"nodeType":"ArrayTypeName","src":"3541:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"callData","nameLocation":"3589:8:4","nodeType":"VariableDeclaration","scope":2443,"src":"3574:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2435,"name":"bytes","nodeType":"ElementaryTypeName","src":"3574:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2436,"nodeType":"ArrayTypeName","src":"3574:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"gasLimit","nameLocation":"3624:8:4","nodeType":"VariableDeclaration","scope":2443,"src":"3608:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":2438,"name":"uint64","nodeType":"ElementaryTypeName","src":"3608:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2439,"nodeType":"ArrayTypeName","src":"3608:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"3500:139:4"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[],"src":"3648:0:4"},"scope":2454,"src":"3483:166:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":2444,"nodeType":"StructuredDocumentation","src":"3657:36:4","text":"Emitted when a subcall succeeds."},"eventSelector":"bf855484633929c3d6688eb3caf8eff910fb4bef030a8d7dbc9390d26759714d","id":2448,"name":"SubcallSucceeded","nameLocation":"3705:16:4","nodeType":"EventDefinition","parameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"3730:5:4","nodeType":"VariableDeclaration","scope":2448,"src":"3722:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"3722:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3721:15:4"},"src":"3699:38:4"},{"anonymous":false,"documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"3745:33:4","text":"Emitted when a subcall fails."},"eventSelector":"dbc5d06f4f877f959b1ff12d2161cdd693fa8e442ee53f1790b2804b24881f05","id":2453,"name":"SubcallFailed","nameLocation":"3790:13:4","nodeType":"EventDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"3812:5:4","nodeType":"VariableDeclaration","scope":2453,"src":"3804:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"3804:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3803:15:4"},"src":"3784:35:4"}],"scope":2455,"src":"562:3260:4","usedErrors":[]}],"src":"42:3780:4"},"id":4},"contracts/precompiles/CallPermit.sol":{"ast":{"absolutePath":"contracts/precompiles/CallPermit.sol","exportedSymbols":{"CALL_PERMIT_ADDRESS":[2460],"CALL_PERMIT_CONTRACT":[2467],"CallPermit":[2507]},"id":2508,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":2456,"literals":["solidity",">=","0.8",".3"],"nodeType":"PragmaDirective","src":"42:24:5"},{"constant":true,"id":2460,"mutability":"constant","name":"CALL_PERMIT_ADDRESS","nameLocation":"132:19:5","nodeType":"VariableDeclaration","scope":2508,"src":"115:81:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2458,"name":"address","nodeType":"ElementaryTypeName","src":"115:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030383061","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"154:42:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000000000000000000000000000000080a"},"visibility":"internal"},{"constant":true,"id":2467,"mutability":"constant","name":"CALL_PERMIT_CONTRACT","nameLocation":"267:20:5","nodeType":"VariableDeclaration","scope":2508,"src":"247:74:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CallPermit_$2507","typeString":"contract CallPermit"},"typeName":{"id":2463,"nodeType":"UserDefinedTypeName","pathNode":{"id":2462,"name":"CallPermit","nameLocations":["247:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":2507,"src":"247:10:5"},"referencedDeclaration":2507,"src":"247:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_CallPermit_$2507","typeString":"contract CallPermit"}},"value":{"arguments":[{"id":2465,"name":"CALL_PERMIT_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"301:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2464,"name":"CallPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"290:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CallPermit_$2507_$","typeString":"type(contract CallPermit)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"290:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CallPermit_$2507","typeString":"contract CallPermit"}},"visibility":"internal"},{"abstract":false,"baseContracts":[],"canonicalName":"CallPermit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"326:344:5","text":"@author The Moonbeam Team\n @title Call Permit Interface\n @dev The interface aims to be a general-purpose tool to perform gas-less transactions. It uses the EIP-712 standard,\n and signed messages can be dispatched by another network participant with a transaction\n @custom:address 0x000000000000000000000000000000000000080a"},"fullyImplemented":false,"id":2507,"linearizedBaseContracts":[2507],"name":"CallPermit","nameLocation":"680:10:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2469,"nodeType":"StructuredDocumentation","src":"698:988:5","text":"@dev Dispatch a call on the behalf of an other user with a EIP712 permit.\n Will revert if the permit is not valid or if the dispatched call reverts or errors (such as\n out of gas).\n If successful the EIP712 nonce is increased to prevent this permit to be replayed.\n @param from Who made the permit and want its call to be dispatched on their behalf.\n @param to Which address the call is made to.\n @param value Value being transfered from the \"from\" account.\n @param data Call data\n @param gaslimit Gaslimit the dispatched call requires.\n     Providing it prevents the dispatcher to manipulate the gaslimit.\n @param deadline Deadline in UNIX seconds after which the permit will no longer be valid.\n @param v V part of the signature.\n @param r R part of the signature.\n @param s S part of the signature.\n @return output Output of the call.\n @custom:selector b5ea0966"},"functionSelector":"b5ea0966","id":2492,"implemented":false,"kind":"function","modifiers":[],"name":"dispatch","nameLocation":"1701:8:5","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"from","nameLocation":"1728:4:5","nodeType":"VariableDeclaration","scope":2492,"src":"1720:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2470,"name":"address","nodeType":"ElementaryTypeName","src":"1720:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"to","nameLocation":"1751:2:5","nodeType":"VariableDeclaration","scope":2492,"src":"1743:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2472,"name":"address","nodeType":"ElementaryTypeName","src":"1743:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2475,"mutability":"mutable","name":"value","nameLocation":"1772:5:5","nodeType":"VariableDeclaration","scope":2492,"src":"1764:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"data","nameLocation":"1801:4:5","nodeType":"VariableDeclaration","scope":2492,"src":"1788:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2476,"name":"bytes","nodeType":"ElementaryTypeName","src":"1788:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2479,"mutability":"mutable","name":"gaslimit","nameLocation":"1823:8:5","nodeType":"VariableDeclaration","scope":2492,"src":"1816:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2478,"name":"uint64","nodeType":"ElementaryTypeName","src":"1816:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"deadline","nameLocation":"1850:8:5","nodeType":"VariableDeclaration","scope":2492,"src":"1842:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1842:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"v","nameLocation":"1875:1:5","nodeType":"VariableDeclaration","scope":2492,"src":"1869:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2482,"name":"uint8","nodeType":"ElementaryTypeName","src":"1869:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"r","nameLocation":"1895:1:5","nodeType":"VariableDeclaration","scope":2492,"src":"1887:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1887:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"s","nameLocation":"1915:1:5","nodeType":"VariableDeclaration","scope":2492,"src":"1907:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1907:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1709:214:5"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"output","nameLocation":"1955:6:5","nodeType":"VariableDeclaration","scope":2492,"src":"1942:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2489,"name":"bytes","nodeType":"ElementaryTypeName","src":"1942:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1941:21:5"},"scope":2507,"src":"1692:271:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2493,"nodeType":"StructuredDocumentation","src":"1971:188:5","text":"@dev Returns the current nonce for given owner.\n A permit must have this nonce to be consumed, which will\n increase the nonce by one.\n @custom:selector 7ecebe00"},"functionSelector":"7ecebe00","id":2500,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2174:6:5","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"owner","nameLocation":"2189:5:5","nodeType":"VariableDeclaration","scope":2500,"src":"2181:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2494,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2180:15:5"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"2219:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"2219:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2218:9:5"},"scope":2507,"src":"2165:63:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"2236:183:5","text":"@dev Returns the EIP712 domain separator. It is used to avoid replay\n attacks accross assets or other similar EIP712 message structures.\n @custom:selector 3644e515"},"functionSelector":"3644e515","id":2506,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2434:16:5","nodeType":"FunctionDefinition","parameters":{"id":2502,"nodeType":"ParameterList","parameters":[],"src":"2450:2:5"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2506,"src":"2476:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2476:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2475:9:5"},"scope":2507,"src":"2425:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2508,"src":"670:1818:5","usedErrors":[]}],"src":"42:2446:5"},"id":5}},"contracts":{"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/PolkaGift.sol":{"PolkaGift":{"abi":[{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"AllEventEndTime","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"BidId","type":"string"}],"name":"BidURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"TokenHighestBidders","outputs":[{"internalType":"string","name":"token_id","type":"string"},{"internalType":"string","name":"event_id","type":"string"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"string","name":"price","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_EventTokenSearchIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"_SearchedStore","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_tokenId","type":"string"}],"name":"_getSearchedTokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"bidId","type":"string"},{"internalType":"string","name":"_bidURI","type":"string"}],"name":"_setBidURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_eventId","type":"string"},{"internalType":"string","name":"_raised","type":"string"}],"name":"_setEventRaised","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"eventId","type":"string"},{"internalType":"string","name":"_eventWallet","type":"string"},{"internalType":"string","name":"_eventURI","type":"string"}],"name":"_setEventURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"TokenBidId","type":"uint256"},{"internalType":"string","name":"TokenId","type":"string"},{"internalType":"string","name":"_BidURI","type":"string"}],"name":"_setTokenBid","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"EventTokenId","type":"uint256"},{"internalType":"string","name":"EventId","type":"string"},{"internalType":"string","name":"_tokenURI","type":"string"}],"name":"_setTokenEvent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"token_id","type":"string"},{"internalType":"string","name":"event_id","type":"string"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"string","name":"price","type":"string"}],"name":"_setTokenHighestBid","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"tokenId","type":"string"},{"internalType":"string","name":"_tokenURI","type":"string"}],"name":"_setTokenURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_claimer","type":"address"},{"internalType":"string","name":"_tokenURI","type":"string"},{"internalType":"string","name":"_eventid","type":"string"}],"name":"claimToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_tokenId","type":"string"},{"internalType":"string","name":"_bidURI","type":"string"},{"internalType":"string","name":"_eventid","type":"string"},{"internalType":"string","name":"_raised","type":"string"},{"internalType":"string","name":"_bid_price","type":"string"}],"name":"createBid","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_eventWallet","type":"string"},{"internalType":"string","name":"_eventURI","type":"string"},{"internalType":"uint256","name":"endtime","type":"uint256"}],"name":"createEvent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"eventID","type":"string"}],"name":"distribute_event","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"eventId","type":"string"}],"name":"eventURI","outputs":[{"internalType":"string[2]","name":"","type":"string[2]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_bidURI","type":"string"}],"name":"getBidIdByUri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"TokenID","type":"string"}],"name":"getBidsSearchToken","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_eventURI","type":"string"}],"name":"getEventIdByURI","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_eventId","type":"string"}],"name":"getEventRaised","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"EventId","type":"string"},{"internalType":"string","name":"_tokenURI","type":"string"}],"name":"getGetEventsTokenID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"Wallet","type":"string"}],"name":"getSearchEventbyWallet","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"token_id","type":"string"}],"name":"getTokenHighestBid","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"TokenID","type":"string"}],"name":"getTotalBid","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_tokenURI","type":"string"}],"name":"gettokenIdByUri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"EventID","type":"string"}],"name":"gettokenSearchEventTotal","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_str","type":"string"}],"name":"strToUint","outputs":[{"internalType":"uint256","name":"res","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"tokenId","type":"string"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalEvent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061352c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806370881e721161010f578063bfee6f8e116100a2578063d45fc51611610071578063d45fc51614610676578063df6b96c7146106a6578063eacb4a74146106c2578063f7e34095146106f2576101f0565b8063bfee6f8e146105de578063c5ef3ec5146105fa578063ce65e7481461062a578063d0fb869914610646576101f0565b80638c2715b7116100de5780638c2715b714610532578063932a196b14610562578063a42a665c14610592578063b91e924f146105c2576101f0565b806370881e7214610495578063783db260146104c85780637ab4ab6e146104f85780637eadfa6a14610514576101f0565b80633358f45b116101875780635555fe17116101565780635555fe17146103d55780635f08c6b5146104055780636beee9d7146104355780636ebb4d8714610465576101f0565b80633358f45b1461033d5780634cf12d261461036d5780635457bbf91461039d578063545fa9ec146103b9576101f0565b8063282e5e81116101c3578063282e5e81146102915780632a0d0373146102ad5780632bde1581146102dd578063304b16db1461030d576101f0565b8063144cbca6146101f557806318160ddd146102135780631e65e1171461023157806325c11f7414610261575b600080fd5b6101fd61070e565b60405161020a91906122fb565b60405180910390f35b61021b610714565b60405161022891906122fb565b60405180910390f35b61024b60048036038101906102469190612470565b61071d565b60405161025891906125fa565b60405180910390f35b61027b60048036038101906102769190612470565b6109d5565b60405161028891906125fa565b60405180910390f35b6102ab60048036038101906102a6919061261c565b610b5a565b005b6102c760048036038101906102c29190612470565b610b8a565b6040516102d491906125fa565b60405180910390f35b6102f760048036038101906102f291906126f2565b610d0f565b60405161030491906122fb565b60405180910390f35b61032760048036038101906103229190612470565b610d8c565b60405161033491906122fb565b60405180910390f35b61035760048036038101906103529190612470565b610e40565b6040516103649190612798565b60405180910390f35b61038760048036038101906103829190612470565b610e76565b60405161039491906127fd565b60405180910390f35b6103b760048036038101906103b2919061284b565b610f26565b005b6103d360048036038101906103ce9190612470565b610f82565b005b6103ef60048036038101906103ea91906128d6565b610fbc565b6040516103fc91906122fb565b60405180910390f35b61041f600480360381019061041a9190612470565b611091565b60405161042c91906127fd565b60405180910390f35b61044f600480360381019061044a9190612470565b611141565b60405161045c91906127fd565b60405180910390f35b61047f600480360381019061047a9190612470565b6111eb565b60405161048c9190612a03565b60405180910390f35b6104af60048036038101906104aa9190612a25565b6112d6565b6040516104bf9493929190612a61565b60405180910390f35b6104e260048036038101906104dd919061261c565b6114be565b6040516104ef91906122fb565b60405180910390f35b610512600480360381019061050d919061261c565b61156d565b005b61051c61159d565b60405161052991906122fb565b60405180910390f35b61054c60048036038101906105479190612abb565b6115a7565b60405161055991906127fd565b60405180910390f35b61057c60048036038101906105779190612470565b61166d565b60405161058991906122fb565b60405180910390f35b6105ac60048036038101906105a79190612470565b61170d565b6040516105b991906127fd565b60405180910390f35b6105dc60048036038101906105d7919061284b565b6117bd565b005b6105f860048036038101906105f39190612b17565b611819565b005b610614600480360381019061060f9190612470565b611860565b60405161062191906122fb565b60405180910390f35b610644600480360381019061063f9190612bbe565b611973565b005b610660600480360381019061065b9190612470565b611ba5565b60405161066d91906125fa565b60405180910390f35b610690600480360381019061068b9190612470565b611d2a565b60405161069d91906122fb565b60405180910390f35b6106c060048036038101906106bb919061261c565b611dca565b005b6106dc60048036038101906106d79190612470565b611dfa565b6040516106e991906127fd565b60405180910390f35b61070c60048036038101906107079190612c79565b611ebe565b005b60065481565b60008054905090565b606060008060005b6002548110156107cc578480519060200120600e61074283611fcd565b6040516020016107529190612de2565b60405160208183030381529060405260405161076e9190612e08565b908152602001604051809103902060006002811061078f5761078e612e1f565b5b0160405161079d9190612f51565b6040518091039020036107b95782806107b590612f97565b9350505b80806107c490612f97565b915050610725565b5060008267ffffffffffffffff8111156107e9576107e8612345565b5b60405190808252806020026020018201604052801561081c57816020015b60608152602001906001900390816108075790505b50905060005b6002548110156109c9578580519060200120600e61083f83611fcd565b60405160200161084f9190612de2565b60405160208183030381529060405260405161086b9190612e08565b908152602001604051809103902060006002811061088c5761088b612e1f565b5b0160405161089a9190612f51565b6040518091039020036109b657600e6108b282611fcd565b6040516020016108c29190612de2565b6040516020818303038152906040526040516108de9190612e08565b90815260200160405180910390206001600281106108ff576108fe612e1f565b5b01805461090b90612e7d565b80601f016020809104026020016040519081016040528092919081815260200182805461093790612e7d565b80156109845780601f1061095957610100808354040283529160200191610984565b820191906000526020600020905b81548152906001019060200180831161096757829003601f168201915b505050505082848151811061099c5761099b612e1f565b5b602002602001018190525082806109b290612f97565b9350505b80806109c190612f97565b915050610822565b50809350505050919050565b60606000600a67ffffffffffffffff8111156109f4576109f3612345565b5b604051908082528060200260200182016040528015610a2757816020015b6060815260200190600190039081610a125790505b5090506000805b600454811015610b4f57848051906020012060096000838152602001908152602001600020600001604051610a639190612f51565b604051809103902003610b3c57600960008281526020019081526020016000206001018054610a9190612e7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610abd90612e7d565b8015610b0a5780601f10610adf57610100808354040283529160200191610b0a565b820191906000526020600020905b815481529060010190602001808311610aed57829003601f168201915b5050505050838381518110610b2257610b21612e1f565b5b60200260200101819052508180610b3890612f97565b9250505b8080610b4790612f97565b915050610a2e565b508192505050919050565b80600f83604051610b6b9190612e08565b90815260200160405180910390209081610b85919061318b565b505050565b60606000600a67ffffffffffffffff811115610ba957610ba8612345565b5b604051908082528060200260200182016040528015610bdc57816020015b6060815260200190600190039081610bc75790505b5090506000805b600454811015610d0457848051906020012060096000838152602001908152602001600020600001604051610c189190612f51565b604051809103902003610cf157600960008281526020019081526020016000206001018054610c4690612e7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7290612e7d565b8015610cbf5780601f10610c9457610100808354040283529160200191610cbf565b820191906000526020600020905b815481529060010190602001808311610ca257829003601f168201915b5050505050838381518110610cd757610cd6612e1f565b5b60200260200101819052508180610ced90612f97565b9250505b8080610cfc90612f97565b915050610be3565b508192505050919050565b6000610d44610d1f600054611fcd565b604051602001610d2f9190612de2565b6040516020818303038152906040528461156d565b610d5160035483856117bd565b600080815480929190610d6390612f97565b919050555060036000815480929190610d7b90612f97565b919050555060005490509392505050565b600080600090505b600254811015610e35578280519060200120600e610db183611fcd565b604051602001610dc19190612de2565b604051602081830303815290604052604051610ddd9190612e08565b9081526020016040518091039020600160028110610dfe57610dfd612e1f565b5b01604051610e0c9190612f51565b604051809103902003610e225780915050610e3b565b8080610e2d90612f97565b915050610d94565b50600090505b919050565b6007818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b6060600d82604051610e889190612e08565b90815260200160405180910390208054610ea190612e7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ecd90612e7d565b8015610f1a5780601f10610eef57610100808354040283529160200191610f1a565b820191906000526020600020905b815481529060010190602001808311610efd57829003601f168201915b50505050509050919050565b604051806040016040528083815260200182815250600960008581526020019081526020016000206000820151816000019081610f63919061318b565b506020820151816001019081610f79919061318b565b50905050505050565b6001600782604051610f949190612e08565b908152602001604051809103902060006101000a81548160ff02191690831515021790555050565b600080610fca600254611fcd565b604051602001610fda9190612de2565b6040516020818303038152906040529050610ff6818686611819565b611035816040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250610b5a565b60006007826040516110479190612e08565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506002600081548092919061107f90612f97565b91905055506002549150509392505050565b6060600c826040516110a39190612e08565b908152602001604051809103902080546110bc90612e7d565b80601f01602080910402602001604051908101604052809291908181526020018280546110e890612e7d565b80156111355780601f1061110a57610100808354040283529160200191611135565b820191906000526020600020905b81548152906001019060200180831161111857829003601f168201915b50505050509050919050565b606060005b6005548110156111ac578280519060200120600a600083815260200190815260200160002060000160405161117b9190612f51565b6040518091039020036111995761119181611fcd565b9150506111e6565b80806111a490612f97565b915050611146565b506040518060400160405280600281526020017f2d3100000000000000000000000000000000000000000000000000000000000081525090505b919050565b6111f36121ee565b600e826040516112039190612e08565b9081526020016040518091039020600280602002604051908101604052809291906000905b828210156112cb57838201805461123e90612e7d565b80601f016020809104026020016040519081016040528092919081815260200182805461126a90612e7d565b80156112b75780601f1061128c576101008083540402835291602001916112b7565b820191906000526020600020905b81548152906001019060200180831161129a57829003601f168201915b505050505081526020019060010190611228565b505050509050919050565b600a6020528060005260406000206000915090508060000180546112f990612e7d565b80601f016020809104026020016040519081016040528092919081815260200182805461132590612e7d565b80156113725780601f1061134757610100808354040283529160200191611372565b820191906000526020600020905b81548152906001019060200180831161135557829003601f168201915b50505050509080600101805461138790612e7d565b80601f01602080910402602001604051908101604052809291908181526020018280546113b390612e7d565b80156114005780601f106113d557610100808354040283529160200191611400565b820191906000526020600020905b8154815290600101906020018083116113e357829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600301805461143b90612e7d565b80601f016020809104026020016040519081016040528092919081815260200182805461146790612e7d565b80156114b45780601f10611489576101008083540402835291602001916114b4565b820191906000526020600020905b81548152906001019060200180831161149757829003601f168201915b5050505050905084565b600080600090505b600354811015611561578380519060200120600860008381526020019081526020016000206000016040516114fb9190612f51565b604051809103902014801561154057508280519060200120600860008381526020019081526020016000206001016040516115369190612f51565b6040518091039020145b1561154e5780915050611567565b808061155990612f97565b9150506114c6565b50600090505b92915050565b80600d8360405161157e9190612e08565b90815260200160405180910390209081611598919061318b565b505050565b6000600254905090565b600b8280516020810182018051848252602083016020850120818352809550505050505081600281106115d957600080fd5b016000915091505080546115ec90612e7d565b80601f016020809104026020016040519081016040528092919081815260200182805461161890612e7d565b80156116655780601f1061163a57610100808354040283529160200191611665565b820191906000526020600020905b81548152906001019060200180831161164857829003601f168201915b505050505081565b600080600090505b600054811015611702578280519060200120600d61169283611fcd565b6040516020016116a29190612de2565b6040516020818303038152906040526040516116be9190612e08565b90815260200160405180910390206040516116d99190612f51565b6040518091039020036116ef5780915050611708565b80806116fa90612f97565b915050611675565b50600090505b919050565b6060600f8260405161171f9190612e08565b9081526020016040518091039020805461173890612e7d565b80601f016020809104026020016040519081016040528092919081815260200182805461176490612e7d565b80156117b15780601f10611786576101008083540402835291602001916117b1565b820191906000526020600020905b81548152906001019060200180831161179457829003601f168201915b50505050509050919050565b6040518060400160405280838152602001828152506008600085815260200190815260200160002060008201518160000190816117fa919061318b565b506020820151816001019081611810919061318b565b50905050505050565b604051806040016040528083815260200182815250600e8460405161183e9190612e08565b908152602001604051809103902090600261185a929190612215565b50505050565b600080600090505b825181101561196c576000603084838151811061188857611887612e1f565b5b602001015160f81c60f81b60f81c6118a0919061326a565b60ff1610806118de5750600960308483815181106118c1576118c0612e1f565b5b602001015160f81c60f81b60f81c6118d9919061326a565b60ff16115b156118ed57600091505061196e565b60018184516118fc919061329f565b611906919061329f565b600a6119129190613406565b603084838151811061192757611926612e1f565b5b602001015160f81c60f81b60f81c61193f919061326a565b60ff1661194c9190613451565b826119579190613493565b9150808061196490612f97565b915050611868565b505b919050565b600061197e85611141565b90506040518060400160405280600281526020017f2d3100000000000000000000000000000000000000000000000000000000000081525080519060200120818051906020012014611aad5760405180608001604052808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600a6000611a0e84611860565b81526020019081526020016000206000820151816000019081611a31919061318b565b506020820151816001019081611a47919061318b565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019081611aa4919061318b565b50905050611b9e565b60405180608001604052808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600a600060055481526020019081526020016000206000820151816000019081611b0e919061318b565b506020820151816001019081611b24919061318b565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019081611b81919061318b565b5090505060056000815480929190611b9890612f97565b91905055505b5050505050565b60606000600a67ffffffffffffffff811115611bc457611bc3612345565b5b604051908082528060200260200182016040528015611bf757816020015b6060815260200190600190039081611be25790505b5090506000805b600354811015611d1f57848051906020012060086000838152602001908152602001600020600001604051611c339190612f51565b604051809103902003611d0c57600860008281526020019081526020016000206001018054611c6190612e7d565b80601f0160208091040260200160405190810160405280929190818152602001828054611c8d90612e7d565b8015611cda5780601f10611caf57610100808354040283529160200191611cda565b820191906000526020600020905b815481529060010190602001808311611cbd57829003601f168201915b5050505050838381518110611cf257611cf1612e1f565b5b60200260200101819052508180611d0890612f97565b9250505b8080611d1790612f97565b915050611bfe565b508192505050919050565b600080600090505b600154811015611dbf578280519060200120600c611d4f83611fcd565b604051602001611d5f9190612de2565b604051602081830303815290604052604051611d7b9190612e08565b9081526020016040518091039020604051611d969190612f51565b604051809103902003611dac5780915050611dc5565b8080611db790612f97565b915050611d32565b50600090505b919050565b80600c83604051611ddb9190612e08565b90815260200160405180910390209081611df5919061318b565b505050565b6060600b82604051611e0c9190612e08565b9081526020016040518091039020600060028110611e2d57611e2c612e1f565b5b018054611e3990612e7d565b80601f0160208091040260200160405190810160405280929190818152602001828054611e6590612e7d565b8015611eb25780601f10611e8757610100808354040283529160200191611eb2565b820191906000526020600020905b815481529060010190602001808311611e9557829003601f168201915b50505050509050919050565b6000611f7084600d88604051611ed49190612e08565b90815260200160405180910390208054611eed90612e7d565b80601f0160208091040260200160405190810160405280929190818152602001828054611f1990612e7d565b8015611f665780601f10611f3b57610100808354040283529160200191611f66565b820191906000526020600020905b815481529060010190602001808311611f4957829003601f168201915b50505050506114be565b9050611f7e86853385611973565b611f888484610b5a565b611f956004548787610f26565b60046000815480929190611fa890612f97565b919050555060016000815480929190611fc090612f97565b9190505550505050505050565b606060006001611fdc8461209b565b01905060008167ffffffffffffffff811115611ffb57611ffa612345565b5b6040519080825280601f01601f19166020018201604052801561202d5781602001600182028036833780820191505090505b509050600082602001820190505b600115612090578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581612084576120836134c7565b5b0494506000850361203b575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106120f9577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816120ef576120ee6134c7565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612136576d04ee2d6d415b85acef8100000000838161212c5761212b6134c7565b5b0492506020810190505b662386f26fc10000831061216557662386f26fc10000838161215b5761215a6134c7565b5b0492506010810190505b6305f5e100831061218e576305f5e1008381612184576121836134c7565b5b0492506008810190505b61271083106121b35761271083816121a9576121a86134c7565b5b0492506004810190505b606483106121d657606483816121cc576121cb6134c7565b5b0492506002810190505b600a83106121e5576001810190505b80915050919050565b60405180604001604052806002905b60608152602001906001900390816121fd5790505090565b8260028101928215612250579160200282015b8281111561224f57825182908161223f919061318b565b5091602001919060010190612228565b5b50905061225d9190612261565b5090565b5b8082111561228157600081816122789190612285565b50600101612262565b5090565b50805461229190612e7d565b6000825580601f106122a357506122c2565b601f0160209004906000526020600020908101906122c191906122c5565b5b50565b5b808211156122de5760008160009055506001016122c6565b5090565b6000819050919050565b6122f5816122e2565b82525050565b600060208201905061231060008301846122ec565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61237d82612334565b810181811067ffffffffffffffff8211171561239c5761239b612345565b5b80604052505050565b60006123af612316565b90506123bb8282612374565b919050565b600067ffffffffffffffff8211156123db576123da612345565b5b6123e482612334565b9050602081019050919050565b82818337600083830152505050565b600061241361240e846123c0565b6123a5565b90508281526020810184848401111561242f5761242e61232f565b5b61243a8482856123f1565b509392505050565b600082601f8301126124575761245661232a565b5b8135612467848260208601612400565b91505092915050565b60006020828403121561248657612485612320565b5b600082013567ffffffffffffffff8111156124a4576124a3612325565b5b6124b084828501612442565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561251f578082015181840152602081019050612504565b60008484015250505050565b6000612536826124e5565b61254081856124f0565b9350612550818560208601612501565b61255981612334565b840191505092915050565b6000612570838361252b565b905092915050565b6000602082019050919050565b6000612590826124b9565b61259a81856124c4565b9350836020820285016125ac856124d5565b8060005b858110156125e857848403895281516125c98582612564565b94506125d483612578565b925060208a019950506001810190506125b0565b50829750879550505050505092915050565b600060208201905081810360008301526126148184612585565b905092915050565b6000806040838503121561263357612632612320565b5b600083013567ffffffffffffffff81111561265157612650612325565b5b61265d85828601612442565b925050602083013567ffffffffffffffff81111561267e5761267d612325565b5b61268a85828601612442565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006126bf82612694565b9050919050565b6126cf816126b4565b81146126da57600080fd5b50565b6000813590506126ec816126c6565b92915050565b60008060006060848603121561270b5761270a612320565b5b6000612719868287016126dd565b935050602084013567ffffffffffffffff81111561273a57612739612325565b5b61274686828701612442565b925050604084013567ffffffffffffffff81111561276757612766612325565b5b61277386828701612442565b9150509250925092565b60008115159050919050565b6127928161277d565b82525050565b60006020820190506127ad6000830184612789565b92915050565b600082825260208201905092915050565b60006127cf826124e5565b6127d981856127b3565b93506127e9818560208601612501565b6127f281612334565b840191505092915050565b6000602082019050818103600083015261281781846127c4565b905092915050565b612828816122e2565b811461283357600080fd5b50565b6000813590506128458161281f565b92915050565b60008060006060848603121561286457612863612320565b5b600061287286828701612836565b935050602084013567ffffffffffffffff81111561289357612892612325565b5b61289f86828701612442565b925050604084013567ffffffffffffffff8111156128c0576128bf612325565b5b6128cc86828701612442565b9150509250925092565b6000806000606084860312156128ef576128ee612320565b5b600084013567ffffffffffffffff81111561290d5761290c612325565b5b61291986828701612442565b935050602084013567ffffffffffffffff81111561293a57612939612325565b5b61294686828701612442565b925050604061295786828701612836565b9150509250925092565b600060029050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b600061299982612961565b6129a3818561296c565b9350836020820285016129b585612977565b8060005b858110156129f157848403895281516129d28582612564565b94506129dd83612981565b925060208a019950506001810190506129b9565b50829750879550505050505092915050565b60006020820190508181036000830152612a1d818461298e565b905092915050565b600060208284031215612a3b57612a3a612320565b5b6000612a4984828501612836565b91505092915050565b612a5b816126b4565b82525050565b60006080820190508181036000830152612a7b81876127c4565b90508181036020830152612a8f81866127c4565b9050612a9e6040830185612a52565b8181036060830152612ab081846127c4565b905095945050505050565b60008060408385031215612ad257612ad1612320565b5b600083013567ffffffffffffffff811115612af057612aef612325565b5b612afc85828601612442565b9250506020612b0d85828601612836565b9150509250929050565b600080600060608486031215612b3057612b2f612320565b5b600084013567ffffffffffffffff811115612b4e57612b4d612325565b5b612b5a86828701612442565b935050602084013567ffffffffffffffff811115612b7b57612b7a612325565b5b612b8786828701612442565b925050604084013567ffffffffffffffff811115612ba857612ba7612325565b5b612bb486828701612442565b9150509250925092565b60008060008060808587031215612bd857612bd7612320565b5b600085013567ffffffffffffffff811115612bf657612bf5612325565b5b612c0287828801612442565b945050602085013567ffffffffffffffff811115612c2357612c22612325565b5b612c2f87828801612442565b9350506040612c40878288016126dd565b925050606085013567ffffffffffffffff811115612c6157612c60612325565b5b612c6d87828801612442565b91505092959194509250565b600080600080600060a08688031215612c9557612c94612320565b5b600086013567ffffffffffffffff811115612cb357612cb2612325565b5b612cbf88828901612442565b955050602086013567ffffffffffffffff811115612ce057612cdf612325565b5b612cec88828901612442565b945050604086013567ffffffffffffffff811115612d0d57612d0c612325565b5b612d1988828901612442565b935050606086013567ffffffffffffffff811115612d3a57612d39612325565b5b612d4688828901612442565b925050608086013567ffffffffffffffff811115612d6757612d66612325565b5b612d7388828901612442565b9150509295509295909350565b7f6d5f000000000000000000000000000000000000000000000000000000000000815250565b600081905092915050565b6000612dbc826124e5565b612dc68185612da6565b9350612dd6818560208601612501565b80840191505092915050565b6000612ded82612d80565b600282019150612dfd8284612db1565b915081905092915050565b6000612e148284612db1565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612e9557607f821691505b602082108103612ea857612ea7612e4e565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154612edb81612e7d565b612ee58186612eae565b94506001821660008114612f005760018114612f1557612f48565b60ff1983168652811515820286019350612f48565b612f1e85612eb9565b60005b83811015612f4057815481890152600182019150602081019050612f21565b838801955050505b50505092915050565b6000612f5d8284612ece565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612fa2826122e2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612fd457612fd3612f68565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026130417fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613004565b61304b8683613004565b95508019841693508086168417925050509392505050565b6000819050919050565b600061308861308361307e846122e2565b613063565b6122e2565b9050919050565b6000819050919050565b6130a28361306d565b6130b66130ae8261308f565b848454613011565b825550505050565b600090565b6130cb6130be565b6130d6818484613099565b505050565b5b818110156130fa576130ef6000826130c3565b6001810190506130dc565b5050565b601f82111561313f5761311081612fdf565b61311984612ff4565b81016020851015613128578190505b61313c61313485612ff4565b8301826130db565b50505b505050565b600082821c905092915050565b600061316260001984600802613144565b1980831691505092915050565b600061317b8383613151565b9150826002028217905092915050565b613194826124e5565b67ffffffffffffffff8111156131ad576131ac612345565b5b6131b78254612e7d565b6131c28282856130fe565b600060209050601f8311600181146131f557600084156131e3578287015190505b6131ed858261316f565b865550613255565b601f19841661320386612fdf565b60005b8281101561322b57848901518255600182019150602085019450602081019050613206565b868310156132485784890151613244601f891682613151565b8355505b6001600288020188555050505b505050505050565b600060ff82169050919050565b60006132758261325d565b91506132808361325d565b9250828203905060ff81111561329957613298612f68565b5b92915050565b60006132aa826122e2565b91506132b5836122e2565b92508282039050818111156132cd576132cc612f68565b5b92915050565b60008160011c9050919050565b6000808291508390505b600185111561332a5780860481111561330657613305612f68565b5b60018516156133155780820291505b8081029050613323856132d3565b94506132ea565b94509492505050565b60008261334357600190506133ff565b8161335157600090506133ff565b81600181146133675760028114613371576133a0565b60019150506133ff565b60ff84111561338357613382612f68565b5b8360020a91508482111561339a57613399612f68565b5b506133ff565b5060208310610133831016604e8410600b84101617156133d55782820a9050838111156133d0576133cf612f68565b5b6133ff565b6133e284848460016132e0565b925090508184048111156133f9576133f8612f68565b5b81810290505b9392505050565b6000613411826122e2565b915061341c836122e2565b92506134497fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484613333565b905092915050565b600061345c826122e2565b9150613467836122e2565b9250828202613475816122e2565b9150828204841483151761348c5761348b612f68565b5b5092915050565b600061349e826122e2565b91506134a9836122e2565b92508282019050808211156134c1576134c0612f68565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220449cdc079e5cde619269038b64f9ef031827eac756e1b33fa63e4205514e557764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x352C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70881E72 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xBFEE6F8E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD45FC516 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD45FC516 EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0xDF6B96C7 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xEACB4A74 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xF7E34095 EQ PUSH2 0x6F2 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xBFEE6F8E EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0xC5EF3EC5 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xCE65E748 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0xD0FB8699 EQ PUSH2 0x646 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x8C2715B7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8C2715B7 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0x932A196B EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0xA42A665C EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xB91E924F EQ PUSH2 0x5C2 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x70881E72 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x783DB260 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x7AB4AB6E EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x7EADFA6A EQ PUSH2 0x514 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3358F45B GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x5555FE17 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x5555FE17 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x5F08C6B5 EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0x6BEEE9D7 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x6EBB4D87 EQ PUSH2 0x465 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3358F45B EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x4CF12D26 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x5457BBF9 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x545FA9EC EQ PUSH2 0x3B9 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x282E5E81 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x282E5E81 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x2A0D0373 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x2BDE1581 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x304B16DB EQ PUSH2 0x30D JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x144CBCA6 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x1E65E117 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x25C11F74 EQ PUSH2 0x261 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0xB5A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xD8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2798 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH2 0xF26 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xF82 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x14BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x156D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51C PUSH2 0x159D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x2ABB JUMP JUMPDEST PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x170D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH2 0x17BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH2 0x1819 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x614 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x1860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST PUSH2 0x1973 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x660 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x690 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68B SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x1DCA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x707 SWAP2 SWAP1 PUSH2 0x2C79 JUMP JUMPDEST PUSH2 0x1EBE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x7CC JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH2 0x742 DUP4 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x76E SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x78F JUMPI PUSH2 0x78E PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST ADD PUSH1 0x40 MLOAD PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x7B9 JUMPI DUP3 DUP1 PUSH2 0x7B5 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x7C4 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x725 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E8 PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x81C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x807 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x9C9 JUMPI DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH2 0x83F DUP4 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x88C JUMPI PUSH2 0x88B PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST ADD PUSH1 0x40 MLOAD PUSH2 0x89A SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x9B6 JUMPI PUSH1 0xE PUSH2 0x8B2 DUP3 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8C2 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x8FF JUMPI PUSH2 0x8FE PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST ADD DUP1 SLOAD PUSH2 0x90B SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x937 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x984 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x959 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x984 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x967 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x99C JUMPI PUSH2 0x99B PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x9B2 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x9C1 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x822 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9F4 JUMPI PUSH2 0x9F3 PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA27 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA12 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xB4F JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xA63 SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xB3C JUMPI PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xA91 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xABD SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB0A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB0A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xB38 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xB47 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA2E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB6B SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 DUP2 PUSH2 0xB85 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBA9 JUMPI PUSH2 0xBA8 PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDC JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xBC7 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xD04 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xC18 SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xCF1 JUMPI PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC46 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC72 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCBF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC94 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCBF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCA2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCD7 JUMPI PUSH2 0xCD6 PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xCED SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xCFC SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBE3 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD44 PUSH2 0xD1F PUSH1 0x0 SLOAD PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD2F SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP5 PUSH2 0x156D JUMP JUMPDEST PUSH2 0xD51 PUSH1 0x3 SLOAD DUP4 DUP6 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD63 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD7B SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xE35 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH2 0xDB1 DUP4 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDC1 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xDDD SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0xDFE JUMPI PUSH2 0xDFD PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST ADD PUSH1 0x40 MLOAD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xE22 JUMPI DUP1 SWAP2 POP POP PUSH2 0xE3B JUMP JUMPDEST DUP1 DUP1 PUSH2 0xE2D SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD94 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD DUP3 PUSH1 0x40 MLOAD PUSH2 0xE88 SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xEA1 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xECD SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF1A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEEF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF1A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEFD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0xF63 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xF79 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF94 SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFCA PUSH1 0x2 SLOAD PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFDA SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0xFF6 DUP2 DUP7 DUP7 PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x1035 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1047 SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x107F SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 SLOAD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC DUP3 PUSH1 0x40 MLOAD PUSH2 0x10A3 SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x10BC SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10E8 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1135 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x110A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1135 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1118 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x11AC JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x117B SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1199 JUMPI PUSH2 0x1191 DUP2 PUSH2 0x1FCD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11E6 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11A4 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1146 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2D31000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F3 PUSH2 0x21EE JUMP JUMPDEST PUSH1 0xE DUP3 PUSH1 0x40 MLOAD PUSH2 0x1203 SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x12CB JUMPI DUP4 DUP3 ADD DUP1 SLOAD PUSH2 0x123E SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x126A SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x128C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x129A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1228 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x12F9 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1325 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1372 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1372 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1355 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1387 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13B3 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1400 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1400 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x143B SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1467 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1489 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1497 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1561 JUMPI DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x14FB SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ DUP1 ISZERO PUSH2 0x1540 JUMPI POP DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x1536 SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x154E JUMPI DUP1 SWAP2 POP POP PUSH2 0x1567 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1559 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14C6 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0xD DUP4 PUSH1 0x40 MLOAD PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 DUP2 PUSH2 0x1598 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB DUP3 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x15D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 SLOAD PUSH2 0x15EC SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1618 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1665 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x163A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1665 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1648 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x1702 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH2 0x1692 DUP4 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16A2 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x16BE SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x16D9 SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x16EF JUMPI DUP1 SWAP2 POP POP PUSH2 0x1708 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x16FA SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1675 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF DUP3 PUSH1 0x40 MLOAD PUSH2 0x171F SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1738 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1764 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1786 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1794 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1810 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xE DUP5 PUSH1 0x40 MLOAD PUSH2 0x183E SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 PUSH1 0x2 PUSH2 0x185A SWAP3 SWAP2 SWAP1 PUSH2 0x2215 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x196C JUMPI PUSH1 0x0 PUSH1 0x30 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1888 JUMPI PUSH2 0x1887 PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH2 0x18A0 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0xFF AND LT DUP1 PUSH2 0x18DE JUMPI POP PUSH1 0x9 PUSH1 0x30 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18C1 JUMPI PUSH2 0x18C0 PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH2 0x18D9 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0xFF AND GT JUMPDEST ISZERO PUSH2 0x18ED JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x196E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP5 MLOAD PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x329F JUMP JUMPDEST PUSH2 0x1906 SWAP2 SWAP1 PUSH2 0x329F JUMP JUMPDEST PUSH1 0xA PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST PUSH1 0x30 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1927 JUMPI PUSH2 0x1926 PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH2 0x193F SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x194C SWAP2 SWAP1 PUSH2 0x3451 JUMP JUMPDEST DUP3 PUSH2 0x1957 SWAP2 SWAP1 PUSH2 0x3493 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1964 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1868 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197E DUP6 PUSH2 0x1141 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2D31000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x1AAD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 PUSH2 0x1A0E DUP5 PUSH2 0x1860 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1A31 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1AA4 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP SWAP1 POP POP PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1B0E SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1B24 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1B81 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1B98 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BC4 JUMPI PUSH2 0x1BC3 PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BF7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1BE2 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1D1F JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x1C33 SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1D0C JUMPI PUSH1 0x8 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1C61 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C8D SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CDA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CAF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CDA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CBD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CF2 JUMPI PUSH2 0x1CF1 PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x1D08 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1D17 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BFE JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x1DBF JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC PUSH2 0x1D4F DUP4 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D5F SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1D7B SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1D96 SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1DAC JUMPI DUP1 SWAP2 POP POP PUSH2 0x1DC5 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1DB7 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D32 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xC DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DDB SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 DUP2 PUSH2 0x1DF5 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP3 PUSH1 0x40 MLOAD PUSH2 0x1E0C SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1E2D JUMPI PUSH2 0x1E2C PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST ADD DUP1 SLOAD PUSH2 0x1E39 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E65 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EB2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E87 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1EB2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E95 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F70 DUP5 PUSH1 0xD DUP9 PUSH1 0x40 MLOAD PUSH2 0x1ED4 SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1EED SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F19 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F66 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F3B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F66 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F49 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP PUSH2 0x1F7E DUP7 DUP6 CALLER DUP6 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1F88 DUP5 DUP5 PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x1F95 PUSH1 0x4 SLOAD DUP8 DUP8 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA8 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1FC0 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1FDC DUP5 PUSH2 0x209B JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FFB JUMPI PUSH2 0x1FFA PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x202D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2090 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2084 JUMPI PUSH2 0x2083 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x203B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x20F9 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x20EF JUMPI PUSH2 0x20EE PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2136 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x212C JUMPI PUSH2 0x212B PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2165 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x215B JUMPI PUSH2 0x215A PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x218E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2184 JUMPI PUSH2 0x2183 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x21B3 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x21A9 JUMPI PUSH2 0x21A8 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x21D6 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x21CC JUMPI PUSH2 0x21CB PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x21E5 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x21FD JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2250 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x224F JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH2 0x223F SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2228 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x225D SWAP2 SWAP1 PUSH2 0x2261 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2281 JUMPI PUSH1 0x0 DUP2 DUP2 PUSH2 0x2278 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2262 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2291 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x22A3 JUMPI POP PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x22C1 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x22DE JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x22C6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F5 DUP2 PUSH2 0x22E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2310 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x237D DUP3 PUSH2 0x2334 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x239C JUMPI PUSH2 0x239B PUSH2 0x2345 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23AF PUSH2 0x2316 JUMP JUMPDEST SWAP1 POP PUSH2 0x23BB DUP3 DUP3 PUSH2 0x2374 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x23DB JUMPI PUSH2 0x23DA PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH2 0x23E4 DUP3 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2413 PUSH2 0x240E DUP5 PUSH2 0x23C0 JUMP JUMPDEST PUSH2 0x23A5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x242F JUMPI PUSH2 0x242E PUSH2 0x232F JUMP JUMPDEST JUMPDEST PUSH2 0x243A DUP5 DUP3 DUP6 PUSH2 0x23F1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2457 JUMPI PUSH2 0x2456 PUSH2 0x232A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2467 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2400 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2486 JUMPI PUSH2 0x2485 PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24A4 JUMPI PUSH2 0x24A3 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x24B0 DUP5 DUP3 DUP6 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x251F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2504 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2536 DUP3 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0x2540 DUP2 DUP6 PUSH2 0x24F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2550 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2501 JUMP JUMPDEST PUSH2 0x2559 DUP2 PUSH2 0x2334 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2570 DUP4 DUP4 PUSH2 0x252B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2590 DUP3 PUSH2 0x24B9 JUMP JUMPDEST PUSH2 0x259A DUP2 DUP6 PUSH2 0x24C4 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x25AC DUP6 PUSH2 0x24D5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x25E8 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x25C9 DUP6 DUP3 PUSH2 0x2564 JUMP JUMPDEST SWAP5 POP PUSH2 0x25D4 DUP4 PUSH2 0x2578 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25B0 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2614 DUP2 DUP5 PUSH2 0x2585 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2633 JUMPI PUSH2 0x2632 PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2651 JUMPI PUSH2 0x2650 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x265D DUP6 DUP3 DUP7 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x267E JUMPI PUSH2 0x267D PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x268A DUP6 DUP3 DUP7 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26BF DUP3 PUSH2 0x2694 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26CF DUP2 PUSH2 0x26B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x26DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26EC DUP2 PUSH2 0x26C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x270B JUMPI PUSH2 0x270A PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2719 DUP7 DUP3 DUP8 ADD PUSH2 0x26DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x273A JUMPI PUSH2 0x2739 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2746 DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2767 JUMPI PUSH2 0x2766 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2773 DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2792 DUP2 PUSH2 0x277D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2789 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27CF DUP3 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0x27D9 DUP2 DUP6 PUSH2 0x27B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x27E9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2501 JUMP JUMPDEST PUSH2 0x27F2 DUP2 PUSH2 0x2334 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2817 DUP2 DUP5 PUSH2 0x27C4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2828 DUP2 PUSH2 0x22E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2845 DUP2 PUSH2 0x281F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2864 JUMPI PUSH2 0x2863 PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2872 DUP7 DUP3 DUP8 ADD PUSH2 0x2836 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2893 JUMPI PUSH2 0x2892 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x289F DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28C0 JUMPI PUSH2 0x28BF PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x28CC DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x28EF JUMPI PUSH2 0x28EE PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x290D JUMPI PUSH2 0x290C PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2919 DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x293A JUMPI PUSH2 0x2939 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2946 DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2957 DUP7 DUP3 DUP8 ADD PUSH2 0x2836 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2999 DUP3 PUSH2 0x2961 JUMP JUMPDEST PUSH2 0x29A3 DUP2 DUP6 PUSH2 0x296C JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x29B5 DUP6 PUSH2 0x2977 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x29F1 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x29D2 DUP6 DUP3 PUSH2 0x2564 JUMP JUMPDEST SWAP5 POP PUSH2 0x29DD DUP4 PUSH2 0x2981 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x29B9 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A1D DUP2 DUP5 PUSH2 0x298E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A3B JUMPI PUSH2 0x2A3A PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A49 DUP5 DUP3 DUP6 ADD PUSH2 0x2836 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A5B DUP2 PUSH2 0x26B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A7B DUP2 DUP8 PUSH2 0x27C4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2A8F DUP2 DUP7 PUSH2 0x27C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A9E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2A52 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2AB0 DUP2 DUP5 PUSH2 0x27C4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AD2 JUMPI PUSH2 0x2AD1 PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AF0 JUMPI PUSH2 0x2AEF PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2AFC DUP6 DUP3 DUP7 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B0D DUP6 DUP3 DUP7 ADD PUSH2 0x2836 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B30 JUMPI PUSH2 0x2B2F PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B4E JUMPI PUSH2 0x2B4D PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2B5A DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B7B JUMPI PUSH2 0x2B7A PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2B87 DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BA8 JUMPI PUSH2 0x2BA7 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2BB4 DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2BD8 JUMPI PUSH2 0x2BD7 PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BF6 JUMPI PUSH2 0x2BF5 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2C02 DUP8 DUP3 DUP9 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C23 JUMPI PUSH2 0x2C22 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2C2F DUP8 DUP3 DUP9 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2C40 DUP8 DUP3 DUP9 ADD PUSH2 0x26DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C61 JUMPI PUSH2 0x2C60 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2C6D DUP8 DUP3 DUP9 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C95 JUMPI PUSH2 0x2C94 PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB3 JUMPI PUSH2 0x2CB2 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2CBF DUP9 DUP3 DUP10 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CE0 JUMPI PUSH2 0x2CDF PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2CEC DUP9 DUP3 DUP10 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D0D JUMPI PUSH2 0x2D0C PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2D19 DUP9 DUP3 DUP10 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D3A JUMPI PUSH2 0x2D39 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2D46 DUP9 DUP3 DUP10 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D67 JUMPI PUSH2 0x2D66 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2D73 DUP9 DUP3 DUP10 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x6D5F000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DBC DUP3 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0x2DC6 DUP2 DUP6 PUSH2 0x2DA6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DD6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2501 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DED DUP3 PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x2DFD DUP3 DUP5 PUSH2 0x2DB1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E14 DUP3 DUP5 PUSH2 0x2DB1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E95 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2EA8 JUMPI PUSH2 0x2EA7 PUSH2 0x2E4E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2EDB DUP2 PUSH2 0x2E7D JUMP JUMPDEST PUSH2 0x2EE5 DUP2 DUP7 PUSH2 0x2EAE JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2F00 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2F15 JUMPI PUSH2 0x2F48 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x2F48 JUMP JUMPDEST PUSH2 0x2F1E DUP6 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F40 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F21 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F5D DUP3 DUP5 PUSH2 0x2ECE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2FA2 DUP3 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2FD4 JUMPI PUSH2 0x2FD3 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3041 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3004 JUMP JUMPDEST PUSH2 0x304B DUP7 DUP4 PUSH2 0x3004 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3088 PUSH2 0x3083 PUSH2 0x307E DUP5 PUSH2 0x22E2 JUMP JUMPDEST PUSH2 0x3063 JUMP JUMPDEST PUSH2 0x22E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30A2 DUP4 PUSH2 0x306D JUMP JUMPDEST PUSH2 0x30B6 PUSH2 0x30AE DUP3 PUSH2 0x308F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3011 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x30CB PUSH2 0x30BE JUMP JUMPDEST PUSH2 0x30D6 DUP2 DUP5 DUP5 PUSH2 0x3099 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x30FA JUMPI PUSH2 0x30EF PUSH1 0x0 DUP3 PUSH2 0x30C3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x30DC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x313F JUMPI PUSH2 0x3110 DUP2 PUSH2 0x2FDF JUMP JUMPDEST PUSH2 0x3119 DUP5 PUSH2 0x2FF4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3128 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x313C PUSH2 0x3134 DUP6 PUSH2 0x2FF4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x30DB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3162 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3144 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317B DUP4 DUP4 PUSH2 0x3151 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3194 DUP3 PUSH2 0x24E5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31AD JUMPI PUSH2 0x31AC PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH2 0x31B7 DUP3 SLOAD PUSH2 0x2E7D JUMP JUMPDEST PUSH2 0x31C2 DUP3 DUP3 DUP6 PUSH2 0x30FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x31F5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x31E3 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x31ED DUP6 DUP3 PUSH2 0x316F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3255 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3203 DUP7 PUSH2 0x2FDF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x322B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3206 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3248 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3244 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3151 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3275 DUP3 PUSH2 0x325D JUMP JUMPDEST SWAP2 POP PUSH2 0x3280 DUP4 PUSH2 0x325D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x3299 JUMPI PUSH2 0x3298 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AA DUP3 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x32B5 DUP4 PUSH2 0x22E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x32CD JUMPI PUSH2 0x32CC PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x332A JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x3306 JUMPI PUSH2 0x3305 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x3315 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x3323 DUP6 PUSH2 0x32D3 JUMP JUMPDEST SWAP5 POP PUSH2 0x32EA JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3343 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x33FF JUMP JUMPDEST DUP2 PUSH2 0x3351 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x33FF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3367 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3371 JUMPI PUSH2 0x33A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x33FF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3383 JUMPI PUSH2 0x3382 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x339A JUMPI PUSH2 0x3399 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST POP PUSH2 0x33FF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x33D5 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x33D0 JUMPI PUSH2 0x33CF PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST PUSH2 0x33FF JUMP JUMPDEST PUSH2 0x33E2 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x32E0 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x33F9 JUMPI PUSH2 0x33F8 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3411 DUP3 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x341C DUP4 PUSH2 0x22E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x3449 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x3333 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345C DUP3 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3467 DUP4 PUSH2 0x22E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3475 DUP2 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x348C JUMPI PUSH2 0x348B PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x349E DUP3 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x34A9 DUP4 PUSH2 0x22E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x34C1 JUMPI PUSH2 0x34C0 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY SWAP13 0xDC SMOD SWAP15 0x5C 0xDE PUSH2 0x9269 SUB DUP12 PUSH5 0xF9EF031827 0xEA 0xC7 JUMP 0xE1 0xB3 EXTCODEHASH 0xA6 RETURNDATACOPY TIMESTAMP SDIV MLOAD 0x4E SSTORE PUSH24 0x64736F6C6343000811003300000000000000000000000000 ","sourceMap":"111:11797:3:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@AllEventEndTime_1247":{"entryPoint":3648,"id":1247,"parameterSlots":0,"returnSlots":0},"@BidURI_1938":{"entryPoint":4241,"id":1938,"parameterSlots":1,"returnSlots":1},"@TokenHighestBidders_1262":{"entryPoint":4822,"id":1262,"parameterSlots":0,"returnSlots":0},"@_EventTokenSearchIds_1243":{"entryPoint":1806,"id":1243,"parameterSlots":0,"returnSlots":0},"@_SearchedStore_1268":{"entryPoint":5543,"id":1268,"parameterSlots":0,"returnSlots":0},"@_getSearchedTokenURI_1838":{"entryPoint":7674,"id":1838,"parameterSlots":1,"returnSlots":1},"@_setBidURI_1926":{"entryPoint":7626,"id":1926,"parameterSlots":2,"returnSlots":0},"@_setEventRaised_2332":{"entryPoint":2906,"id":2332,"parameterSlots":2,"returnSlots":0},"@_setEventURI_1856":{"entryPoint":6169,"id":1856,"parameterSlots":3,"returnSlots":0},"@_setTokenBid_2105":{"entryPoint":3878,"id":2105,"parameterSlots":3,"returnSlots":0},"@_setTokenEvent_1350":{"entryPoint":6077,"id":1350,"parameterSlots":3,"returnSlots":0},"@_setTokenHighestBid_2169":{"entryPoint":6515,"id":2169,"parameterSlots":4,"returnSlots":0},"@_setTokenURI_1870":{"entryPoint":5485,"id":1870,"parameterSlots":2,"returnSlots":0},"@claimToken_1325":{"entryPoint":3343,"id":1325,"parameterSlots":3,"returnSlots":1},"@createBid_2380":{"entryPoint":7870,"id":2380,"parameterSlots":5,"returnSlots":0},"@createEvent_1396":{"entryPoint":4028,"id":1396,"parameterSlots":3,"returnSlots":1},"@distribute_event_1408":{"entryPoint":3970,"id":1408,"parameterSlots":1,"returnSlots":0},"@eventURI_1884":{"entryPoint":4587,"id":1884,"parameterSlots":1,"returnSlots":1},"@getBidIdByUri_1557":{"entryPoint":7466,"id":1557,"parameterSlots":1,"returnSlots":1},"@getBidsSearchToken_2080":{"entryPoint":2517,"id":2080,"parameterSlots":1,"returnSlots":1},"@getEventIdByURI_1508":{"entryPoint":3468,"id":1508,"parameterSlots":1,"returnSlots":1},"@getEventRaised_2318":{"entryPoint":5901,"id":2318,"parameterSlots":1,"returnSlots":1},"@getGetEventsTokenID_1824":{"entryPoint":5310,"id":1824,"parameterSlots":2,"returnSlots":1},"@getSearchEventbyWallet_1760":{"entryPoint":1821,"id":1760,"parameterSlots":1,"returnSlots":1},"@getTokenHighestBid_2306":{"entryPoint":4417,"id":2306,"parameterSlots":1,"returnSlots":1},"@getTotalBid_2009":{"entryPoint":2954,"id":2009,"parameterSlots":1,"returnSlots":1},"@gettokenIdByUri_1457":{"entryPoint":5741,"id":1457,"parameterSlots":1,"returnSlots":1},"@gettokenSearchEventTotal_1628":{"entryPoint":7077,"id":1628,"parameterSlots":1,"returnSlots":1},"@log10_931":{"entryPoint":8347,"id":931,"parameterSlots":1,"returnSlots":1},"@strToUint_2258":{"entryPoint":6240,"id":2258,"parameterSlots":1,"returnSlots":1},"@toString_58":{"entryPoint":8141,"id":58,"parameterSlots":1,"returnSlots":1},"@tokenURI_1896":{"entryPoint":3702,"id":1896,"parameterSlots":1,"returnSlots":1},"@totalEvent_1912":{"entryPoint":5533,"id":1912,"parameterSlots":0,"returnSlots":1},"@totalSupply_1904":{"entryPoint":1812,"id":1904,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":9216,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9949,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":9282,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr":{"entryPoint":9970,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":9328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr":{"entryPoint":9756,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_string_memory_ptr":{"entryPoint":11198,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr":{"entryPoint":11031,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr":{"entryPoint":11385,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":10454,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_memory_ptrt_uint256":{"entryPoint":10939,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":10789,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":10315,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":9572,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10834,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_string_memory_ptr_$2_memory_ptr_to_t_array$_t_string_memory_ptr_$2_memory_ptr_fromStack":{"entryPoint":10638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":9605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10121,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":9515,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10180,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11697,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11_to_t_bytes2_nonPadded_inplace_fromStack":{"entryPoint":11648,"id":null,"parameterSlots":1,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8940,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11_t_string_memory_ptr__to_t_bytes2_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11746,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$2_memory_ptr__to_t_array$_t_string_memory_ptr_$2_memory_ptr__fromStack_reversed":{"entryPoint":10755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9722,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":10136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10237,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10849,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8955,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":9125,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":8982,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":9152,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$2_memory_ptr":{"entryPoint":10615,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":9429,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":11961,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":12255,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$2_memory_ptr":{"entryPoint":10593,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":9401,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9445,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$2_memory_ptr":{"entryPoint":10625,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":9592,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$2_memory_ptr_fromStack":{"entryPoint":10604,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":9412,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11950,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":9456,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10163,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11686,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13459,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":13024,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":13318,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":13107,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":13393,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":12959,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint8":{"entryPoint":12906,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":12542,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":9908,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10109,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9876,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8930,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":12893,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":12507,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":12397,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":12683,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":9201,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":9473,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":12276,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":11901,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":12655,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":9076,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":12387,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":12183,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":12625,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":12136,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":13511,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11854,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11807,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9029,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":12431,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9002,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9007,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8997,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8992,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9012,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":12292,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":13011,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":12612,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":12483,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":12305,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":12441,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9926,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10271,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":12478,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:32840:6","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:6","statements":[{"nodeType":"YulAssignment","src":"62:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:6","type":""}],"src":"7:77:6"},{"body":{"nodeType":"YulBlock","src":"155:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:6"},"nodeType":"YulFunctionCall","src":"177:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:6"},"nodeType":"YulFunctionCall","src":"165:37:6"},"nodeType":"YulExpressionStatement","src":"165:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:6","type":""}],"src":"90:118:6"},{"body":{"nodeType":"YulBlock","src":"312:124:6","statements":[{"nodeType":"YulAssignment","src":"322:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:6"},"nodeType":"YulFunctionCall","src":"330:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:6"},"nodeType":"YulFunctionCall","src":"411:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:6"},"nodeType":"YulFunctionCall","src":"358:71:6"},"nodeType":"YulExpressionStatement","src":"358:71:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:6","type":""}],"src":"214:222:6"},{"body":{"nodeType":"YulBlock","src":"482:35:6","statements":[{"nodeType":"YulAssignment","src":"492:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:6"},"nodeType":"YulFunctionCall","src":"502:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:6","type":""}],"src":"442:75:6"},{"body":{"nodeType":"YulBlock","src":"612:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:6"},"nodeType":"YulFunctionCall","src":"622:12:6"},"nodeType":"YulExpressionStatement","src":"622:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:6"},{"body":{"nodeType":"YulBlock","src":"735:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:6"},"nodeType":"YulFunctionCall","src":"745:12:6"},"nodeType":"YulExpressionStatement","src":"745:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:6"},{"body":{"nodeType":"YulBlock","src":"858:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"875:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"878:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"868:6:6"},"nodeType":"YulFunctionCall","src":"868:12:6"},"nodeType":"YulExpressionStatement","src":"868:12:6"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"769:117:6"},{"body":{"nodeType":"YulBlock","src":"981:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"998:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1001:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"991:6:6"},"nodeType":"YulFunctionCall","src":"991:12:6"},"nodeType":"YulExpressionStatement","src":"991:12:6"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"892:117:6"},{"body":{"nodeType":"YulBlock","src":"1063:54:6","statements":[{"nodeType":"YulAssignment","src":"1073:38:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1091:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"1098:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1087:3:6"},"nodeType":"YulFunctionCall","src":"1087:14:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1107:2:6","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1103:3:6"},"nodeType":"YulFunctionCall","src":"1103:7:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1083:3:6"},"nodeType":"YulFunctionCall","src":"1083:28:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1073:6:6"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1046:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1056:6:6","type":""}],"src":"1015:102:6"},{"body":{"nodeType":"YulBlock","src":"1151:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1168:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1171:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1161:6:6"},"nodeType":"YulFunctionCall","src":"1161:88:6"},"nodeType":"YulExpressionStatement","src":"1161:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1265:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1268:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1258:6:6"},"nodeType":"YulFunctionCall","src":"1258:15:6"},"nodeType":"YulExpressionStatement","src":"1258:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1289:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1292:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1282:6:6"},"nodeType":"YulFunctionCall","src":"1282:15:6"},"nodeType":"YulExpressionStatement","src":"1282:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1123:180:6"},{"body":{"nodeType":"YulBlock","src":"1352:238:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1362:58:6","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1384:6:6"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1414:4:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1392:21:6"},"nodeType":"YulFunctionCall","src":"1392:27:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1380:3:6"},"nodeType":"YulFunctionCall","src":"1380:40:6"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1366:10:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1531:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1533:16:6"},"nodeType":"YulFunctionCall","src":"1533:18:6"},"nodeType":"YulExpressionStatement","src":"1533:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1474:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"1486:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1471:2:6"},"nodeType":"YulFunctionCall","src":"1471:34:6"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1510:10:6"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1522:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1507:2:6"},"nodeType":"YulFunctionCall","src":"1507:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1468:2:6"},"nodeType":"YulFunctionCall","src":"1468:62:6"},"nodeType":"YulIf","src":"1465:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1569:2:6","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1573:10:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1562:6:6"},"nodeType":"YulFunctionCall","src":"1562:22:6"},"nodeType":"YulExpressionStatement","src":"1562:22:6"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1338:6:6","type":""},{"name":"size","nodeType":"YulTypedName","src":"1346:4:6","type":""}],"src":"1309:281:6"},{"body":{"nodeType":"YulBlock","src":"1637:88:6","statements":[{"nodeType":"YulAssignment","src":"1647:30:6","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1657:18:6"},"nodeType":"YulFunctionCall","src":"1657:20:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1647:6:6"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1706:6:6"},{"name":"size","nodeType":"YulIdentifier","src":"1714:4:6"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1686:19:6"},"nodeType":"YulFunctionCall","src":"1686:33:6"},"nodeType":"YulExpressionStatement","src":"1686:33:6"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1621:4:6","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1630:6:6","type":""}],"src":"1596:129:6"},{"body":{"nodeType":"YulBlock","src":"1798:241:6","statements":[{"body":{"nodeType":"YulBlock","src":"1903:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1905:16:6"},"nodeType":"YulFunctionCall","src":"1905:18:6"},"nodeType":"YulExpressionStatement","src":"1905:18:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1875:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1883:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1872:2:6"},"nodeType":"YulFunctionCall","src":"1872:30:6"},"nodeType":"YulIf","src":"1869:56:6"},{"nodeType":"YulAssignment","src":"1935:37:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1965:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1943:21:6"},"nodeType":"YulFunctionCall","src":"1943:29:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1935:4:6"}]},{"nodeType":"YulAssignment","src":"2009:23:6","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2021:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"2027:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2017:3:6"},"nodeType":"YulFunctionCall","src":"2017:15:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2009:4:6"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1782:6:6","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1793:4:6","type":""}],"src":"1731:308:6"},{"body":{"nodeType":"YulBlock","src":"2109:82:6","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2132:3:6"},{"name":"src","nodeType":"YulIdentifier","src":"2137:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"2142:6:6"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2119:12:6"},"nodeType":"YulFunctionCall","src":"2119:30:6"},"nodeType":"YulExpressionStatement","src":"2119:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2169:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"2174:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2165:3:6"},"nodeType":"YulFunctionCall","src":"2165:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"2183:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2158:6:6"},"nodeType":"YulFunctionCall","src":"2158:27:6"},"nodeType":"YulExpressionStatement","src":"2158:27:6"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2091:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2096:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"2101:6:6","type":""}],"src":"2045:146:6"},{"body":{"nodeType":"YulBlock","src":"2281:341:6","statements":[{"nodeType":"YulAssignment","src":"2291:75:6","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2358:6:6"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2316:41:6"},"nodeType":"YulFunctionCall","src":"2316:49:6"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2300:15:6"},"nodeType":"YulFunctionCall","src":"2300:66:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2291:5:6"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2382:5:6"},{"name":"length","nodeType":"YulIdentifier","src":"2389:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2375:6:6"},"nodeType":"YulFunctionCall","src":"2375:21:6"},"nodeType":"YulExpressionStatement","src":"2375:21:6"},{"nodeType":"YulVariableDeclaration","src":"2405:27:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2420:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2427:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2416:3:6"},"nodeType":"YulFunctionCall","src":"2416:16:6"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2409:3:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"2470:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2472:77:6"},"nodeType":"YulFunctionCall","src":"2472:79:6"},"nodeType":"YulExpressionStatement","src":"2472:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2451:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"2456:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2447:3:6"},"nodeType":"YulFunctionCall","src":"2447:16:6"},{"name":"end","nodeType":"YulIdentifier","src":"2465:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2444:2:6"},"nodeType":"YulFunctionCall","src":"2444:25:6"},"nodeType":"YulIf","src":"2441:112:6"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2599:3:6"},{"name":"dst","nodeType":"YulIdentifier","src":"2604:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"2609:6:6"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2562:36:6"},"nodeType":"YulFunctionCall","src":"2562:54:6"},"nodeType":"YulExpressionStatement","src":"2562:54:6"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2254:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"2259:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2267:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2275:5:6","type":""}],"src":"2197:425:6"},{"body":{"nodeType":"YulBlock","src":"2704:278:6","statements":[{"body":{"nodeType":"YulBlock","src":"2753:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2755:77:6"},"nodeType":"YulFunctionCall","src":"2755:79:6"},"nodeType":"YulExpressionStatement","src":"2755:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2732:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2740:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2728:3:6"},"nodeType":"YulFunctionCall","src":"2728:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"2747:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2724:3:6"},"nodeType":"YulFunctionCall","src":"2724:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2717:6:6"},"nodeType":"YulFunctionCall","src":"2717:35:6"},"nodeType":"YulIf","src":"2714:122:6"},{"nodeType":"YulVariableDeclaration","src":"2845:34:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2872:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2859:12:6"},"nodeType":"YulFunctionCall","src":"2859:20:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2849:6:6","type":""}]},{"nodeType":"YulAssignment","src":"2888:88:6","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2949:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2957:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2945:3:6"},"nodeType":"YulFunctionCall","src":"2945:17:6"},{"name":"length","nodeType":"YulIdentifier","src":"2964:6:6"},{"name":"end","nodeType":"YulIdentifier","src":"2972:3:6"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2897:47:6"},"nodeType":"YulFunctionCall","src":"2897:79:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2888:5:6"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2682:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2690:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2698:5:6","type":""}],"src":"2642:340:6"},{"body":{"nodeType":"YulBlock","src":"3064:433:6","statements":[{"body":{"nodeType":"YulBlock","src":"3110:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3112:77:6"},"nodeType":"YulFunctionCall","src":"3112:79:6"},"nodeType":"YulExpressionStatement","src":"3112:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3085:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"3094:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3081:3:6"},"nodeType":"YulFunctionCall","src":"3081:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"3106:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3077:3:6"},"nodeType":"YulFunctionCall","src":"3077:32:6"},"nodeType":"YulIf","src":"3074:119:6"},{"nodeType":"YulBlock","src":"3203:287:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3218:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3249:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3260:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3245:3:6"},"nodeType":"YulFunctionCall","src":"3245:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3232:12:6"},"nodeType":"YulFunctionCall","src":"3232:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3222:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"3310:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3312:77:6"},"nodeType":"YulFunctionCall","src":"3312:79:6"},"nodeType":"YulExpressionStatement","src":"3312:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3282:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3290:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3279:2:6"},"nodeType":"YulFunctionCall","src":"3279:30:6"},"nodeType":"YulIf","src":"3276:117:6"},{"nodeType":"YulAssignment","src":"3407:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3452:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"3463:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3448:3:6"},"nodeType":"YulFunctionCall","src":"3448:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3472:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3417:30:6"},"nodeType":"YulFunctionCall","src":"3417:63:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3407:6:6"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3034:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3045:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3057:6:6","type":""}],"src":"2988:509:6"},{"body":{"nodeType":"YulBlock","src":"3587:40:6","statements":[{"nodeType":"YulAssignment","src":"3598:22:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3614:5:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3608:5:6"},"nodeType":"YulFunctionCall","src":"3608:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3598:6:6"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3570:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3580:6:6","type":""}],"src":"3503:124:6"},{"body":{"nodeType":"YulBlock","src":"3754:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3771:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"3776:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3764:6:6"},"nodeType":"YulFunctionCall","src":"3764:19:6"},"nodeType":"YulExpressionStatement","src":"3764:19:6"},{"nodeType":"YulAssignment","src":"3792:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3811:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"3816:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3807:3:6"},"nodeType":"YulFunctionCall","src":"3807:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3792:11:6"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3726:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"3731:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3742:11:6","type":""}],"src":"3633:194:6"},{"body":{"nodeType":"YulBlock","src":"3915:60:6","statements":[{"nodeType":"YulAssignment","src":"3925:11:6","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3933:3:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3925:4:6"}]},{"nodeType":"YulAssignment","src":"3946:22:6","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3958:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"3963:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3954:3:6"},"nodeType":"YulFunctionCall","src":"3954:14:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3946:4:6"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3902:3:6","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3910:4:6","type":""}],"src":"3833:142:6"},{"body":{"nodeType":"YulBlock","src":"4040:40:6","statements":[{"nodeType":"YulAssignment","src":"4051:22:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4067:5:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4061:5:6"},"nodeType":"YulFunctionCall","src":"4061:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4051:6:6"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4023:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4033:6:6","type":""}],"src":"3981:99:6"},{"body":{"nodeType":"YulBlock","src":"4172:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4189:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4194:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4182:6:6"},"nodeType":"YulFunctionCall","src":"4182:19:6"},"nodeType":"YulExpressionStatement","src":"4182:19:6"},{"nodeType":"YulAssignment","src":"4210:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4229:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"4234:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4225:3:6"},"nodeType":"YulFunctionCall","src":"4225:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4210:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4144:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"4149:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4160:11:6","type":""}],"src":"4086:159:6"},{"body":{"nodeType":"YulBlock","src":"4313:184:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4323:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4332:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4327:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"4392:63:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4417:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"4422:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4413:3:6"},"nodeType":"YulFunctionCall","src":"4413:11:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4436:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"4441:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4432:3:6"},"nodeType":"YulFunctionCall","src":"4432:11:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4426:5:6"},"nodeType":"YulFunctionCall","src":"4426:18:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4406:6:6"},"nodeType":"YulFunctionCall","src":"4406:39:6"},"nodeType":"YulExpressionStatement","src":"4406:39:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4353:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"4356:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4350:2:6"},"nodeType":"YulFunctionCall","src":"4350:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4364:19:6","statements":[{"nodeType":"YulAssignment","src":"4366:15:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4375:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"4378:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4371:3:6"},"nodeType":"YulFunctionCall","src":"4371:10:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4366:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"4346:3:6","statements":[]},"src":"4342:113:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4475:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4480:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4471:3:6"},"nodeType":"YulFunctionCall","src":"4471:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"4489:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4464:6:6"},"nodeType":"YulFunctionCall","src":"4464:27:6"},"nodeType":"YulExpressionStatement","src":"4464:27:6"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4295:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4300:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"4305:6:6","type":""}],"src":"4251:246:6"},{"body":{"nodeType":"YulBlock","src":"4585:275:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4595:53:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4642:5:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4609:32:6"},"nodeType":"YulFunctionCall","src":"4609:39:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4599:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4657:68:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4713:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4718:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4664:48:6"},"nodeType":"YulFunctionCall","src":"4664:61:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4657:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4773:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"4780:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4769:3:6"},"nodeType":"YulFunctionCall","src":"4769:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"4787:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4792:6:6"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4734:34:6"},"nodeType":"YulFunctionCall","src":"4734:65:6"},"nodeType":"YulExpressionStatement","src":"4734:65:6"},{"nodeType":"YulAssignment","src":"4808:46:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4819:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4846:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4824:21:6"},"nodeType":"YulFunctionCall","src":"4824:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4815:3:6"},"nodeType":"YulFunctionCall","src":"4815:39:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4808:3:6"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4566:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4573:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4581:3:6","type":""}],"src":"4503:357:6"},{"body":{"nodeType":"YulBlock","src":"4966:96:6","statements":[{"nodeType":"YulAssignment","src":"4976:80:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5044:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"5052:3:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4990:53:6"},"nodeType":"YulFunctionCall","src":"4990:66:6"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4976:10:6"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"4939:6:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4947:3:6","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"4955:10:6","type":""}],"src":"4866:196:6"},{"body":{"nodeType":"YulBlock","src":"5153:38:6","statements":[{"nodeType":"YulAssignment","src":"5163:22:6","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5175:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"5180:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5171:3:6"},"nodeType":"YulFunctionCall","src":"5171:14:6"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"5163:4:6"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5140:3:6","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"5148:4:6","type":""}],"src":"5068:123:6"},{"body":{"nodeType":"YulBlock","src":"5369:847:6","statements":[{"nodeType":"YulVariableDeclaration","src":"5379:78:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5451:5:6"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5393:57:6"},"nodeType":"YulFunctionCall","src":"5393:64:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5383:6:6","type":""}]},{"nodeType":"YulAssignment","src":"5466:103:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5557:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"5562:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5473:83:6"},"nodeType":"YulFunctionCall","src":"5473:96:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5466:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"5578:20:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"5595:3:6"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"5582:9:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5607:39:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5623:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5632:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"5640:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5628:3:6"},"nodeType":"YulFunctionCall","src":"5628:17:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5619:3:6"},"nodeType":"YulFunctionCall","src":"5619:27:6"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5611:4:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5655:81:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5730:5:6"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5670:59:6"},"nodeType":"YulFunctionCall","src":"5670:66:6"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5659:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5745:21:6","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5759:7:6"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5749:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"5835:336:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5856:3:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5865:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"5871:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5861:3:6"},"nodeType":"YulFunctionCall","src":"5861:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5849:6:6"},"nodeType":"YulFunctionCall","src":"5849:33:6"},"nodeType":"YulExpressionStatement","src":"5849:33:6"},{"nodeType":"YulVariableDeclaration","src":"5895:34:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5922:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5916:5:6"},"nodeType":"YulFunctionCall","src":"5916:13:6"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5899:13:6","type":""}]},{"nodeType":"YulAssignment","src":"5942:92:6","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"6014:13:6"},{"name":"tail","nodeType":"YulIdentifier","src":"6029:4:6"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5950:63:6"},"nodeType":"YulFunctionCall","src":"5950:84:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5942:4:6"}]},{"nodeType":"YulAssignment","src":"6047:80:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6120:6:6"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6057:62:6"},"nodeType":"YulFunctionCall","src":"6057:70:6"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6047:6:6"}]},{"nodeType":"YulAssignment","src":"6140:21:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6151:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"6156:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6147:3:6"},"nodeType":"YulFunctionCall","src":"6147:14:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6140:3:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5797:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"5800:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5794:2:6"},"nodeType":"YulFunctionCall","src":"5794:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5808:18:6","statements":[{"nodeType":"YulAssignment","src":"5810:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5819:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"5822:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5815:3:6"},"nodeType":"YulFunctionCall","src":"5815:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5810:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"5779:14:6","statements":[{"nodeType":"YulVariableDeclaration","src":"5781:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"5790:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5785:1:6","type":""}]}]},"src":"5775:396:6"},{"nodeType":"YulAssignment","src":"6180:11:6","value":{"name":"tail","nodeType":"YulIdentifier","src":"6187:4:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6180:3:6"}]},{"nodeType":"YulAssignment","src":"6200:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"6207:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6200:3:6"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5348:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5355:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5364:3:6","type":""}],"src":"5225:991:6"},{"body":{"nodeType":"YulBlock","src":"6390:245:6","statements":[{"nodeType":"YulAssignment","src":"6400:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6412:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6423:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6408:3:6"},"nodeType":"YulFunctionCall","src":"6408:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6400:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6447:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6458:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6443:3:6"},"nodeType":"YulFunctionCall","src":"6443:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6466:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"6472:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6462:3:6"},"nodeType":"YulFunctionCall","src":"6462:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6436:6:6"},"nodeType":"YulFunctionCall","src":"6436:47:6"},"nodeType":"YulExpressionStatement","src":"6436:47:6"},{"nodeType":"YulAssignment","src":"6492:136:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6614:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"6623:4:6"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6500:113:6"},"nodeType":"YulFunctionCall","src":"6500:128:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6492:4:6"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6362:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6374:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6385:4:6","type":""}],"src":"6222:413:6"},{"body":{"nodeType":"YulBlock","src":"6744:731:6","statements":[{"body":{"nodeType":"YulBlock","src":"6790:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6792:77:6"},"nodeType":"YulFunctionCall","src":"6792:79:6"},"nodeType":"YulExpressionStatement","src":"6792:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6765:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"6774:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6761:3:6"},"nodeType":"YulFunctionCall","src":"6761:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"6786:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6757:3:6"},"nodeType":"YulFunctionCall","src":"6757:32:6"},"nodeType":"YulIf","src":"6754:119:6"},{"nodeType":"YulBlock","src":"6883:287:6","statements":[{"nodeType":"YulVariableDeclaration","src":"6898:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6929:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6940:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6925:3:6"},"nodeType":"YulFunctionCall","src":"6925:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6912:12:6"},"nodeType":"YulFunctionCall","src":"6912:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6902:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"6990:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6992:77:6"},"nodeType":"YulFunctionCall","src":"6992:79:6"},"nodeType":"YulExpressionStatement","src":"6992:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6962:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"6970:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6959:2:6"},"nodeType":"YulFunctionCall","src":"6959:30:6"},"nodeType":"YulIf","src":"6956:117:6"},{"nodeType":"YulAssignment","src":"7087:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7132:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"7143:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7128:3:6"},"nodeType":"YulFunctionCall","src":"7128:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7152:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7097:30:6"},"nodeType":"YulFunctionCall","src":"7097:63:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7087:6:6"}]}]},{"nodeType":"YulBlock","src":"7180:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"7195:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7226:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7237:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7222:3:6"},"nodeType":"YulFunctionCall","src":"7222:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7209:12:6"},"nodeType":"YulFunctionCall","src":"7209:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7199:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"7288:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7290:77:6"},"nodeType":"YulFunctionCall","src":"7290:79:6"},"nodeType":"YulExpressionStatement","src":"7290:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7260:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"7268:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7257:2:6"},"nodeType":"YulFunctionCall","src":"7257:30:6"},"nodeType":"YulIf","src":"7254:117:6"},{"nodeType":"YulAssignment","src":"7385:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7430:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"7441:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7426:3:6"},"nodeType":"YulFunctionCall","src":"7426:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7450:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7395:30:6"},"nodeType":"YulFunctionCall","src":"7395:63:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7385:6:6"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6706:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6717:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6729:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6737:6:6","type":""}],"src":"6641:834:6"},{"body":{"nodeType":"YulBlock","src":"7526:81:6","statements":[{"nodeType":"YulAssignment","src":"7536:65:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7551:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"7558:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7547:3:6"},"nodeType":"YulFunctionCall","src":"7547:54:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7536:7:6"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7508:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7518:7:6","type":""}],"src":"7481:126:6"},{"body":{"nodeType":"YulBlock","src":"7658:51:6","statements":[{"nodeType":"YulAssignment","src":"7668:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7697:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7679:17:6"},"nodeType":"YulFunctionCall","src":"7679:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7668:7:6"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7640:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7650:7:6","type":""}],"src":"7613:96:6"},{"body":{"nodeType":"YulBlock","src":"7758:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"7815:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7824:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7827:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7817:6:6"},"nodeType":"YulFunctionCall","src":"7817:12:6"},"nodeType":"YulExpressionStatement","src":"7817:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7781:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7806:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7788:17:6"},"nodeType":"YulFunctionCall","src":"7788:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7778:2:6"},"nodeType":"YulFunctionCall","src":"7778:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7771:6:6"},"nodeType":"YulFunctionCall","src":"7771:43:6"},"nodeType":"YulIf","src":"7768:63:6"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7751:5:6","type":""}],"src":"7715:122:6"},{"body":{"nodeType":"YulBlock","src":"7895:87:6","statements":[{"nodeType":"YulAssignment","src":"7905:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7927:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7914:12:6"},"nodeType":"YulFunctionCall","src":"7914:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7905:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7970:5:6"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"7943:26:6"},"nodeType":"YulFunctionCall","src":"7943:33:6"},"nodeType":"YulExpressionStatement","src":"7943:33:6"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7873:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"7881:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7889:5:6","type":""}],"src":"7843:139:6"},{"body":{"nodeType":"YulBlock","src":"8108:859:6","statements":[{"body":{"nodeType":"YulBlock","src":"8154:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8156:77:6"},"nodeType":"YulFunctionCall","src":"8156:79:6"},"nodeType":"YulExpressionStatement","src":"8156:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8129:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"8138:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8125:3:6"},"nodeType":"YulFunctionCall","src":"8125:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"8150:2:6","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8121:3:6"},"nodeType":"YulFunctionCall","src":"8121:32:6"},"nodeType":"YulIf","src":"8118:119:6"},{"nodeType":"YulBlock","src":"8247:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8262:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"8276:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8266:6:6","type":""}]},{"nodeType":"YulAssignment","src":"8291:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8326:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"8337:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8322:3:6"},"nodeType":"YulFunctionCall","src":"8322:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8346:7:6"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8301:20:6"},"nodeType":"YulFunctionCall","src":"8301:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8291:6:6"}]}]},{"nodeType":"YulBlock","src":"8374:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8389:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8420:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8431:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8416:3:6"},"nodeType":"YulFunctionCall","src":"8416:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8403:12:6"},"nodeType":"YulFunctionCall","src":"8403:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8393:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"8482:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8484:77:6"},"nodeType":"YulFunctionCall","src":"8484:79:6"},"nodeType":"YulExpressionStatement","src":"8484:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8454:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"8462:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8451:2:6"},"nodeType":"YulFunctionCall","src":"8451:30:6"},"nodeType":"YulIf","src":"8448:117:6"},{"nodeType":"YulAssignment","src":"8579:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8624:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"8635:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8620:3:6"},"nodeType":"YulFunctionCall","src":"8620:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8644:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8589:30:6"},"nodeType":"YulFunctionCall","src":"8589:63:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8579:6:6"}]}]},{"nodeType":"YulBlock","src":"8672:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8687:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8718:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8729:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8714:3:6"},"nodeType":"YulFunctionCall","src":"8714:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8701:12:6"},"nodeType":"YulFunctionCall","src":"8701:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8691:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"8780:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8782:77:6"},"nodeType":"YulFunctionCall","src":"8782:79:6"},"nodeType":"YulExpressionStatement","src":"8782:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8752:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"8760:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8749:2:6"},"nodeType":"YulFunctionCall","src":"8749:30:6"},"nodeType":"YulIf","src":"8746:117:6"},{"nodeType":"YulAssignment","src":"8877:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8922:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"8933:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8918:3:6"},"nodeType":"YulFunctionCall","src":"8918:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8942:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8887:30:6"},"nodeType":"YulFunctionCall","src":"8887:63:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8877:6:6"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8062:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8073:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8085:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8093:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8101:6:6","type":""}],"src":"7988:979:6"},{"body":{"nodeType":"YulBlock","src":"9015:48:6","statements":[{"nodeType":"YulAssignment","src":"9025:32:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9050:5:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9043:6:6"},"nodeType":"YulFunctionCall","src":"9043:13:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9036:6:6"},"nodeType":"YulFunctionCall","src":"9036:21:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9025:7:6"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8997:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9007:7:6","type":""}],"src":"8973:90:6"},{"body":{"nodeType":"YulBlock","src":"9128:50:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9145:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9165:5:6"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9150:14:6"},"nodeType":"YulFunctionCall","src":"9150:21:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9138:6:6"},"nodeType":"YulFunctionCall","src":"9138:34:6"},"nodeType":"YulExpressionStatement","src":"9138:34:6"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9116:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9123:3:6","type":""}],"src":"9069:109:6"},{"body":{"nodeType":"YulBlock","src":"9276:118:6","statements":[{"nodeType":"YulAssignment","src":"9286:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9298:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9309:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9294:3:6"},"nodeType":"YulFunctionCall","src":"9294:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9286:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9360:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9373:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9384:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9369:3:6"},"nodeType":"YulFunctionCall","src":"9369:17:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"9322:37:6"},"nodeType":"YulFunctionCall","src":"9322:65:6"},"nodeType":"YulExpressionStatement","src":"9322:65:6"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9248:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9260:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9271:4:6","type":""}],"src":"9184:210:6"},{"body":{"nodeType":"YulBlock","src":"9496:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9513:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"9518:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9506:6:6"},"nodeType":"YulFunctionCall","src":"9506:19:6"},"nodeType":"YulExpressionStatement","src":"9506:19:6"},{"nodeType":"YulAssignment","src":"9534:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9553:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"9558:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9549:3:6"},"nodeType":"YulFunctionCall","src":"9549:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9534:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9468:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"9473:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9484:11:6","type":""}],"src":"9400:169:6"},{"body":{"nodeType":"YulBlock","src":"9667:285:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9677:53:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9724:5:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9691:32:6"},"nodeType":"YulFunctionCall","src":"9691:39:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9681:6:6","type":""}]},{"nodeType":"YulAssignment","src":"9739:78:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9805:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"9810:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9746:58:6"},"nodeType":"YulFunctionCall","src":"9746:71:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9739:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9865:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"9872:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9861:3:6"},"nodeType":"YulFunctionCall","src":"9861:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"9879:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"9884:6:6"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9826:34:6"},"nodeType":"YulFunctionCall","src":"9826:65:6"},"nodeType":"YulExpressionStatement","src":"9826:65:6"},{"nodeType":"YulAssignment","src":"9900:46:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9911:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9938:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9916:21:6"},"nodeType":"YulFunctionCall","src":"9916:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9907:3:6"},"nodeType":"YulFunctionCall","src":"9907:39:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9900:3:6"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9648:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9655:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9663:3:6","type":""}],"src":"9575:377:6"},{"body":{"nodeType":"YulBlock","src":"10076:195:6","statements":[{"nodeType":"YulAssignment","src":"10086:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10098:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10109:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10094:3:6"},"nodeType":"YulFunctionCall","src":"10094:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10086:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10133:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10144:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10129:3:6"},"nodeType":"YulFunctionCall","src":"10129:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10152:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"10158:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10148:3:6"},"nodeType":"YulFunctionCall","src":"10148:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10122:6:6"},"nodeType":"YulFunctionCall","src":"10122:47:6"},"nodeType":"YulExpressionStatement","src":"10122:47:6"},{"nodeType":"YulAssignment","src":"10178:86:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10250:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"10259:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10186:63:6"},"nodeType":"YulFunctionCall","src":"10186:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10178:4:6"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10048:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10060:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10071:4:6","type":""}],"src":"9958:313:6"},{"body":{"nodeType":"YulBlock","src":"10320:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"10377:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10386:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10389:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10379:6:6"},"nodeType":"YulFunctionCall","src":"10379:12:6"},"nodeType":"YulExpressionStatement","src":"10379:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10343:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10368:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10350:17:6"},"nodeType":"YulFunctionCall","src":"10350:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10340:2:6"},"nodeType":"YulFunctionCall","src":"10340:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10333:6:6"},"nodeType":"YulFunctionCall","src":"10333:43:6"},"nodeType":"YulIf","src":"10330:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10313:5:6","type":""}],"src":"10277:122:6"},{"body":{"nodeType":"YulBlock","src":"10457:87:6","statements":[{"nodeType":"YulAssignment","src":"10467:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10489:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10476:12:6"},"nodeType":"YulFunctionCall","src":"10476:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10467:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10532:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"10505:26:6"},"nodeType":"YulFunctionCall","src":"10505:33:6"},"nodeType":"YulExpressionStatement","src":"10505:33:6"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10435:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"10443:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10451:5:6","type":""}],"src":"10405:139:6"},{"body":{"nodeType":"YulBlock","src":"10670:859:6","statements":[{"body":{"nodeType":"YulBlock","src":"10716:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10718:77:6"},"nodeType":"YulFunctionCall","src":"10718:79:6"},"nodeType":"YulExpressionStatement","src":"10718:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10691:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"10700:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10687:3:6"},"nodeType":"YulFunctionCall","src":"10687:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"10712:2:6","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10683:3:6"},"nodeType":"YulFunctionCall","src":"10683:32:6"},"nodeType":"YulIf","src":"10680:119:6"},{"nodeType":"YulBlock","src":"10809:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10824:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"10838:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10828:6:6","type":""}]},{"nodeType":"YulAssignment","src":"10853:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10888:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"10899:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10884:3:6"},"nodeType":"YulFunctionCall","src":"10884:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10908:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10863:20:6"},"nodeType":"YulFunctionCall","src":"10863:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10853:6:6"}]}]},{"nodeType":"YulBlock","src":"10936:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10951:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10982:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10993:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10978:3:6"},"nodeType":"YulFunctionCall","src":"10978:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10965:12:6"},"nodeType":"YulFunctionCall","src":"10965:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10955:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"11044:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11046:77:6"},"nodeType":"YulFunctionCall","src":"11046:79:6"},"nodeType":"YulExpressionStatement","src":"11046:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11016:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"11024:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11013:2:6"},"nodeType":"YulFunctionCall","src":"11013:30:6"},"nodeType":"YulIf","src":"11010:117:6"},{"nodeType":"YulAssignment","src":"11141:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11186:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"11197:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11182:3:6"},"nodeType":"YulFunctionCall","src":"11182:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11206:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11151:30:6"},"nodeType":"YulFunctionCall","src":"11151:63:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11141:6:6"}]}]},{"nodeType":"YulBlock","src":"11234:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11249:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11280:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"11291:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11276:3:6"},"nodeType":"YulFunctionCall","src":"11276:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11263:12:6"},"nodeType":"YulFunctionCall","src":"11263:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11253:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"11342:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11344:77:6"},"nodeType":"YulFunctionCall","src":"11344:79:6"},"nodeType":"YulExpressionStatement","src":"11344:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11314:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"11322:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11311:2:6"},"nodeType":"YulFunctionCall","src":"11311:30:6"},"nodeType":"YulIf","src":"11308:117:6"},{"nodeType":"YulAssignment","src":"11439:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11484:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"11495:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11480:3:6"},"nodeType":"YulFunctionCall","src":"11480:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11504:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11449:30:6"},"nodeType":"YulFunctionCall","src":"11449:63:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11439:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10624:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10635:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10647:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10655:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10663:6:6","type":""}],"src":"10550:979:6"},{"body":{"nodeType":"YulBlock","src":"11655:859:6","statements":[{"body":{"nodeType":"YulBlock","src":"11701:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11703:77:6"},"nodeType":"YulFunctionCall","src":"11703:79:6"},"nodeType":"YulExpressionStatement","src":"11703:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11676:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"11685:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11672:3:6"},"nodeType":"YulFunctionCall","src":"11672:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"11697:2:6","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11668:3:6"},"nodeType":"YulFunctionCall","src":"11668:32:6"},"nodeType":"YulIf","src":"11665:119:6"},{"nodeType":"YulBlock","src":"11794:287:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11809:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11840:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"11851:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11836:3:6"},"nodeType":"YulFunctionCall","src":"11836:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11823:12:6"},"nodeType":"YulFunctionCall","src":"11823:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11813:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"11901:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11903:77:6"},"nodeType":"YulFunctionCall","src":"11903:79:6"},"nodeType":"YulExpressionStatement","src":"11903:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11873:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"11881:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11870:2:6"},"nodeType":"YulFunctionCall","src":"11870:30:6"},"nodeType":"YulIf","src":"11867:117:6"},{"nodeType":"YulAssignment","src":"11998:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12043:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"12054:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12039:3:6"},"nodeType":"YulFunctionCall","src":"12039:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12063:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12008:30:6"},"nodeType":"YulFunctionCall","src":"12008:63:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11998:6:6"}]}]},{"nodeType":"YulBlock","src":"12091:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"12106:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12137:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12148:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12133:3:6"},"nodeType":"YulFunctionCall","src":"12133:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12120:12:6"},"nodeType":"YulFunctionCall","src":"12120:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12110:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"12199:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12201:77:6"},"nodeType":"YulFunctionCall","src":"12201:79:6"},"nodeType":"YulExpressionStatement","src":"12201:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12171:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"12179:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12168:2:6"},"nodeType":"YulFunctionCall","src":"12168:30:6"},"nodeType":"YulIf","src":"12165:117:6"},{"nodeType":"YulAssignment","src":"12296:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12341:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"12352:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12337:3:6"},"nodeType":"YulFunctionCall","src":"12337:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12361:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12306:30:6"},"nodeType":"YulFunctionCall","src":"12306:63:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12296:6:6"}]}]},{"nodeType":"YulBlock","src":"12389:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"12404:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"12418:2:6","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12408:6:6","type":""}]},{"nodeType":"YulAssignment","src":"12434:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12469:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"12480:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12465:3:6"},"nodeType":"YulFunctionCall","src":"12465:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12489:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12444:20:6"},"nodeType":"YulFunctionCall","src":"12444:53:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12434:6:6"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11609:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11620:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11632:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11640:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11648:6:6","type":""}],"src":"11535:979:6"},{"body":{"nodeType":"YulBlock","src":"12602:32:6","statements":[{"nodeType":"YulAssignment","src":"12613:14:6","value":{"kind":"number","nodeType":"YulLiteral","src":"12623:4:6","type":"","value":"0x02"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12613:6:6"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12585:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12595:6:6","type":""}],"src":"12520:114:6"},{"body":{"nodeType":"YulBlock","src":"12759:34:6","statements":[{"nodeType":"YulAssignment","src":"12769:18:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"12784:3:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12769:11:6"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$2_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12731:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"12736:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12747:11:6","type":""}],"src":"12640:153:6"},{"body":{"nodeType":"YulBlock","src":"12879:28:6","statements":[{"nodeType":"YulAssignment","src":"12889:11:6","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12897:3:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12889:4:6"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12866:3:6","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12874:4:6","type":""}],"src":"12799:108:6"},{"body":{"nodeType":"YulBlock","src":"12996:38:6","statements":[{"nodeType":"YulAssignment","src":"13006:22:6","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13018:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"13023:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13014:3:6"},"nodeType":"YulFunctionCall","src":"13014:14:6"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"13006:4:6"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12983:3:6","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"12991:4:6","type":""}],"src":"12913:121:6"},{"body":{"nodeType":"YulBlock","src":"13210:839:6","statements":[{"nodeType":"YulVariableDeclaration","src":"13220:76:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13290:5:6"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$2_memory_ptr","nodeType":"YulIdentifier","src":"13234:55:6"},"nodeType":"YulFunctionCall","src":"13234:62:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13224:6:6","type":""}]},{"nodeType":"YulAssignment","src":"13305:101:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13394:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"13399:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$2_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13312:81:6"},"nodeType":"YulFunctionCall","src":"13312:94:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13305:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"13415:20:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"13432:3:6"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"13419:9:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13444:39:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13460:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13469:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"13477:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13465:3:6"},"nodeType":"YulFunctionCall","src":"13465:17:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13456:3:6"},"nodeType":"YulFunctionCall","src":"13456:27:6"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"13448:4:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13492:79:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13565:5:6"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$2_memory_ptr","nodeType":"YulIdentifier","src":"13507:57:6"},"nodeType":"YulFunctionCall","src":"13507:64:6"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"13496:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13580:21:6","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"13594:7:6"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13584:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"13670:334:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13691:3:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13700:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"13706:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13696:3:6"},"nodeType":"YulFunctionCall","src":"13696:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13684:6:6"},"nodeType":"YulFunctionCall","src":"13684:33:6"},"nodeType":"YulExpressionStatement","src":"13684:33:6"},{"nodeType":"YulVariableDeclaration","src":"13730:34:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13757:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13751:5:6"},"nodeType":"YulFunctionCall","src":"13751:13:6"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"13734:13:6","type":""}]},{"nodeType":"YulAssignment","src":"13777:92:6","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"13849:13:6"},{"name":"tail","nodeType":"YulIdentifier","src":"13864:4:6"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13785:63:6"},"nodeType":"YulFunctionCall","src":"13785:84:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13777:4:6"}]},{"nodeType":"YulAssignment","src":"13882:78:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13953:6:6"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$2_memory_ptr","nodeType":"YulIdentifier","src":"13892:60:6"},"nodeType":"YulFunctionCall","src":"13892:68:6"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13882:6:6"}]},{"nodeType":"YulAssignment","src":"13973:21:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13984:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"13989:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13980:3:6"},"nodeType":"YulFunctionCall","src":"13980:14:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13973:3:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13632:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"13635:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13629:2:6"},"nodeType":"YulFunctionCall","src":"13629:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13643:18:6","statements":[{"nodeType":"YulAssignment","src":"13645:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13654:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"13657:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13650:3:6"},"nodeType":"YulFunctionCall","src":"13650:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13645:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"13614:14:6","statements":[{"nodeType":"YulVariableDeclaration","src":"13616:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"13625:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13620:1:6","type":""}]}]},"src":"13610:394:6"},{"nodeType":"YulAssignment","src":"14013:11:6","value":{"name":"tail","nodeType":"YulIdentifier","src":"14020:4:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14013:3:6"}]},{"nodeType":"YulAssignment","src":"14033:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"14040:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14033:3:6"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$2_memory_ptr_to_t_array$_t_string_memory_ptr_$2_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13189:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13196:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13205:3:6","type":""}],"src":"13070:979:6"},{"body":{"nodeType":"YulBlock","src":"14219:241:6","statements":[{"nodeType":"YulAssignment","src":"14229:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14241:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"14252:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14237:3:6"},"nodeType":"YulFunctionCall","src":"14237:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14229:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14276:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"14287:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14272:3:6"},"nodeType":"YulFunctionCall","src":"14272:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14295:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"14301:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14291:3:6"},"nodeType":"YulFunctionCall","src":"14291:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14265:6:6"},"nodeType":"YulFunctionCall","src":"14265:47:6"},"nodeType":"YulExpressionStatement","src":"14265:47:6"},{"nodeType":"YulAssignment","src":"14321:132:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14439:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"14448:4:6"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$2_memory_ptr_to_t_array$_t_string_memory_ptr_$2_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14329:109:6"},"nodeType":"YulFunctionCall","src":"14329:124:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14321:4:6"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$2_memory_ptr__to_t_array$_t_string_memory_ptr_$2_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14191:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14203:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14214:4:6","type":""}],"src":"14055:405:6"},{"body":{"nodeType":"YulBlock","src":"14532:263:6","statements":[{"body":{"nodeType":"YulBlock","src":"14578:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14580:77:6"},"nodeType":"YulFunctionCall","src":"14580:79:6"},"nodeType":"YulExpressionStatement","src":"14580:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14553:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"14562:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14549:3:6"},"nodeType":"YulFunctionCall","src":"14549:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"14574:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14545:3:6"},"nodeType":"YulFunctionCall","src":"14545:32:6"},"nodeType":"YulIf","src":"14542:119:6"},{"nodeType":"YulBlock","src":"14671:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"14686:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"14700:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14690:6:6","type":""}]},{"nodeType":"YulAssignment","src":"14715:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14750:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"14761:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14746:3:6"},"nodeType":"YulFunctionCall","src":"14746:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14770:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14725:20:6"},"nodeType":"YulFunctionCall","src":"14725:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14715:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14502:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14513:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14525:6:6","type":""}],"src":"14466:329:6"},{"body":{"nodeType":"YulBlock","src":"14866:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14883:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14906:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14888:17:6"},"nodeType":"YulFunctionCall","src":"14888:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14876:6:6"},"nodeType":"YulFunctionCall","src":"14876:37:6"},"nodeType":"YulExpressionStatement","src":"14876:37:6"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14854:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14861:3:6","type":""}],"src":"14801:118:6"},{"body":{"nodeType":"YulBlock","src":"15167:584:6","statements":[{"nodeType":"YulAssignment","src":"15177:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15189:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15200:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15185:3:6"},"nodeType":"YulFunctionCall","src":"15185:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15177:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15225:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15236:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15221:3:6"},"nodeType":"YulFunctionCall","src":"15221:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15244:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"15250:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15240:3:6"},"nodeType":"YulFunctionCall","src":"15240:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15214:6:6"},"nodeType":"YulFunctionCall","src":"15214:47:6"},"nodeType":"YulExpressionStatement","src":"15214:47:6"},{"nodeType":"YulAssignment","src":"15270:86:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15342:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"15351:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15278:63:6"},"nodeType":"YulFunctionCall","src":"15278:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15270:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15377:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15388:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15373:3:6"},"nodeType":"YulFunctionCall","src":"15373:18:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15397:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"15403:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15393:3:6"},"nodeType":"YulFunctionCall","src":"15393:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15366:6:6"},"nodeType":"YulFunctionCall","src":"15366:48:6"},"nodeType":"YulExpressionStatement","src":"15366:48:6"},{"nodeType":"YulAssignment","src":"15423:86:6","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15495:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"15504:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15431:63:6"},"nodeType":"YulFunctionCall","src":"15431:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15423:4:6"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15563:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15576:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15587:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15572:3:6"},"nodeType":"YulFunctionCall","src":"15572:18:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15519:43:6"},"nodeType":"YulFunctionCall","src":"15519:72:6"},"nodeType":"YulExpressionStatement","src":"15519:72:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15612:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15623:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15608:3:6"},"nodeType":"YulFunctionCall","src":"15608:18:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15632:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"15638:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15628:3:6"},"nodeType":"YulFunctionCall","src":"15628:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15601:6:6"},"nodeType":"YulFunctionCall","src":"15601:48:6"},"nodeType":"YulExpressionStatement","src":"15601:48:6"},{"nodeType":"YulAssignment","src":"15658:86:6","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15730:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"15739:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15666:63:6"},"nodeType":"YulFunctionCall","src":"15666:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15658:4:6"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15115:9:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15127:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15135:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15143:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15151:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15162:4:6","type":""}],"src":"14925:826:6"},{"body":{"nodeType":"YulBlock","src":"15850:561:6","statements":[{"body":{"nodeType":"YulBlock","src":"15896:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15898:77:6"},"nodeType":"YulFunctionCall","src":"15898:79:6"},"nodeType":"YulExpressionStatement","src":"15898:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15871:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"15880:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15867:3:6"},"nodeType":"YulFunctionCall","src":"15867:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"15892:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15863:3:6"},"nodeType":"YulFunctionCall","src":"15863:32:6"},"nodeType":"YulIf","src":"15860:119:6"},{"nodeType":"YulBlock","src":"15989:287:6","statements":[{"nodeType":"YulVariableDeclaration","src":"16004:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16035:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16046:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16031:3:6"},"nodeType":"YulFunctionCall","src":"16031:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16018:12:6"},"nodeType":"YulFunctionCall","src":"16018:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16008:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"16096:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16098:77:6"},"nodeType":"YulFunctionCall","src":"16098:79:6"},"nodeType":"YulExpressionStatement","src":"16098:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16068:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"16076:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16065:2:6"},"nodeType":"YulFunctionCall","src":"16065:30:6"},"nodeType":"YulIf","src":"16062:117:6"},{"nodeType":"YulAssignment","src":"16193:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16238:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"16249:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16234:3:6"},"nodeType":"YulFunctionCall","src":"16234:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16258:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16203:30:6"},"nodeType":"YulFunctionCall","src":"16203:63:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16193:6:6"}]}]},{"nodeType":"YulBlock","src":"16286:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"16301:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"16315:2:6","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16305:6:6","type":""}]},{"nodeType":"YulAssignment","src":"16331:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16366:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"16377:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16362:3:6"},"nodeType":"YulFunctionCall","src":"16362:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16386:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16341:20:6"},"nodeType":"YulFunctionCall","src":"16341:53:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16331:6:6"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15812:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15823:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15835:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15843:6:6","type":""}],"src":"15757:654:6"},{"body":{"nodeType":"YulBlock","src":"16547:1029:6","statements":[{"body":{"nodeType":"YulBlock","src":"16593:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16595:77:6"},"nodeType":"YulFunctionCall","src":"16595:79:6"},"nodeType":"YulExpressionStatement","src":"16595:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16568:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"16577:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16564:3:6"},"nodeType":"YulFunctionCall","src":"16564:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"16589:2:6","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16560:3:6"},"nodeType":"YulFunctionCall","src":"16560:32:6"},"nodeType":"YulIf","src":"16557:119:6"},{"nodeType":"YulBlock","src":"16686:287:6","statements":[{"nodeType":"YulVariableDeclaration","src":"16701:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16732:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16743:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16728:3:6"},"nodeType":"YulFunctionCall","src":"16728:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16715:12:6"},"nodeType":"YulFunctionCall","src":"16715:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16705:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"16793:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16795:77:6"},"nodeType":"YulFunctionCall","src":"16795:79:6"},"nodeType":"YulExpressionStatement","src":"16795:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16765:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"16773:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16762:2:6"},"nodeType":"YulFunctionCall","src":"16762:30:6"},"nodeType":"YulIf","src":"16759:117:6"},{"nodeType":"YulAssignment","src":"16890:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16935:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"16946:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16931:3:6"},"nodeType":"YulFunctionCall","src":"16931:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16955:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16900:30:6"},"nodeType":"YulFunctionCall","src":"16900:63:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16890:6:6"}]}]},{"nodeType":"YulBlock","src":"16983:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"16998:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17029:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"17040:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17025:3:6"},"nodeType":"YulFunctionCall","src":"17025:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17012:12:6"},"nodeType":"YulFunctionCall","src":"17012:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17002:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"17091:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17093:77:6"},"nodeType":"YulFunctionCall","src":"17093:79:6"},"nodeType":"YulExpressionStatement","src":"17093:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17063:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"17071:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17060:2:6"},"nodeType":"YulFunctionCall","src":"17060:30:6"},"nodeType":"YulIf","src":"17057:117:6"},{"nodeType":"YulAssignment","src":"17188:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17233:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"17244:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17229:3:6"},"nodeType":"YulFunctionCall","src":"17229:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17253:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17198:30:6"},"nodeType":"YulFunctionCall","src":"17198:63:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17188:6:6"}]}]},{"nodeType":"YulBlock","src":"17281:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"17296:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17327:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"17338:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17323:3:6"},"nodeType":"YulFunctionCall","src":"17323:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17310:12:6"},"nodeType":"YulFunctionCall","src":"17310:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17300:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"17389:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17391:77:6"},"nodeType":"YulFunctionCall","src":"17391:79:6"},"nodeType":"YulExpressionStatement","src":"17391:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17361:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"17369:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17358:2:6"},"nodeType":"YulFunctionCall","src":"17358:30:6"},"nodeType":"YulIf","src":"17355:117:6"},{"nodeType":"YulAssignment","src":"17486:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17531:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"17542:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17527:3:6"},"nodeType":"YulFunctionCall","src":"17527:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17551:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17496:30:6"},"nodeType":"YulFunctionCall","src":"17496:63:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17486:6:6"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16501:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16512:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16524:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16532:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16540:6:6","type":""}],"src":"16417:1159:6"},{"body":{"nodeType":"YulBlock","src":"17729:1158:6","statements":[{"body":{"nodeType":"YulBlock","src":"17776:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17778:77:6"},"nodeType":"YulFunctionCall","src":"17778:79:6"},"nodeType":"YulExpressionStatement","src":"17778:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17750:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"17759:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17746:3:6"},"nodeType":"YulFunctionCall","src":"17746:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"17771:3:6","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17742:3:6"},"nodeType":"YulFunctionCall","src":"17742:33:6"},"nodeType":"YulIf","src":"17739:120:6"},{"nodeType":"YulBlock","src":"17869:287:6","statements":[{"nodeType":"YulVariableDeclaration","src":"17884:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17915:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"17926:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17911:3:6"},"nodeType":"YulFunctionCall","src":"17911:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17898:12:6"},"nodeType":"YulFunctionCall","src":"17898:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17888:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"17976:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17978:77:6"},"nodeType":"YulFunctionCall","src":"17978:79:6"},"nodeType":"YulExpressionStatement","src":"17978:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17948:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"17956:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17945:2:6"},"nodeType":"YulFunctionCall","src":"17945:30:6"},"nodeType":"YulIf","src":"17942:117:6"},{"nodeType":"YulAssignment","src":"18073:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18118:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"18129:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18114:3:6"},"nodeType":"YulFunctionCall","src":"18114:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18138:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18083:30:6"},"nodeType":"YulFunctionCall","src":"18083:63:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18073:6:6"}]}]},{"nodeType":"YulBlock","src":"18166:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"18181:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18212:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"18223:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18208:3:6"},"nodeType":"YulFunctionCall","src":"18208:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18195:12:6"},"nodeType":"YulFunctionCall","src":"18195:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18185:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"18274:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18276:77:6"},"nodeType":"YulFunctionCall","src":"18276:79:6"},"nodeType":"YulExpressionStatement","src":"18276:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18246:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"18254:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18243:2:6"},"nodeType":"YulFunctionCall","src":"18243:30:6"},"nodeType":"YulIf","src":"18240:117:6"},{"nodeType":"YulAssignment","src":"18371:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18416:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"18427:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18412:3:6"},"nodeType":"YulFunctionCall","src":"18412:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18436:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18381:30:6"},"nodeType":"YulFunctionCall","src":"18381:63:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18371:6:6"}]}]},{"nodeType":"YulBlock","src":"18464:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"18479:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"18493:2:6","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18483:6:6","type":""}]},{"nodeType":"YulAssignment","src":"18509:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18544:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"18555:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18540:3:6"},"nodeType":"YulFunctionCall","src":"18540:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18564:7:6"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18519:20:6"},"nodeType":"YulFunctionCall","src":"18519:53:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18509:6:6"}]}]},{"nodeType":"YulBlock","src":"18592:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"18607:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18638:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"18649:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18634:3:6"},"nodeType":"YulFunctionCall","src":"18634:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18621:12:6"},"nodeType":"YulFunctionCall","src":"18621:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18611:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"18700:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18702:77:6"},"nodeType":"YulFunctionCall","src":"18702:79:6"},"nodeType":"YulExpressionStatement","src":"18702:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18672:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"18680:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18669:2:6"},"nodeType":"YulFunctionCall","src":"18669:30:6"},"nodeType":"YulIf","src":"18666:117:6"},{"nodeType":"YulAssignment","src":"18797:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18842:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"18853:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18838:3:6"},"nodeType":"YulFunctionCall","src":"18838:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18862:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18807:30:6"},"nodeType":"YulFunctionCall","src":"18807:63:6"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"18797:6:6"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17675:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17686:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17698:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17706:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17714:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17722:6:6","type":""}],"src":"17582:1305:6"},{"body":{"nodeType":"YulBlock","src":"19077:1627:6","statements":[{"body":{"nodeType":"YulBlock","src":"19124:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19126:77:6"},"nodeType":"YulFunctionCall","src":"19126:79:6"},"nodeType":"YulExpressionStatement","src":"19126:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19098:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"19107:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19094:3:6"},"nodeType":"YulFunctionCall","src":"19094:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"19119:3:6","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19090:3:6"},"nodeType":"YulFunctionCall","src":"19090:33:6"},"nodeType":"YulIf","src":"19087:120:6"},{"nodeType":"YulBlock","src":"19217:287:6","statements":[{"nodeType":"YulVariableDeclaration","src":"19232:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19263:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"19274:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19259:3:6"},"nodeType":"YulFunctionCall","src":"19259:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19246:12:6"},"nodeType":"YulFunctionCall","src":"19246:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19236:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"19324:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19326:77:6"},"nodeType":"YulFunctionCall","src":"19326:79:6"},"nodeType":"YulExpressionStatement","src":"19326:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19296:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"19304:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19293:2:6"},"nodeType":"YulFunctionCall","src":"19293:30:6"},"nodeType":"YulIf","src":"19290:117:6"},{"nodeType":"YulAssignment","src":"19421:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19466:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"19477:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19462:3:6"},"nodeType":"YulFunctionCall","src":"19462:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19486:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19431:30:6"},"nodeType":"YulFunctionCall","src":"19431:63:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19421:6:6"}]}]},{"nodeType":"YulBlock","src":"19514:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"19529:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19560:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"19571:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19556:3:6"},"nodeType":"YulFunctionCall","src":"19556:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19543:12:6"},"nodeType":"YulFunctionCall","src":"19543:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19533:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"19622:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19624:77:6"},"nodeType":"YulFunctionCall","src":"19624:79:6"},"nodeType":"YulExpressionStatement","src":"19624:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19594:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"19602:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19591:2:6"},"nodeType":"YulFunctionCall","src":"19591:30:6"},"nodeType":"YulIf","src":"19588:117:6"},{"nodeType":"YulAssignment","src":"19719:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19764:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"19775:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19760:3:6"},"nodeType":"YulFunctionCall","src":"19760:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19784:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19729:30:6"},"nodeType":"YulFunctionCall","src":"19729:63:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19719:6:6"}]}]},{"nodeType":"YulBlock","src":"19812:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"19827:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19858:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"19869:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19854:3:6"},"nodeType":"YulFunctionCall","src":"19854:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19841:12:6"},"nodeType":"YulFunctionCall","src":"19841:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19831:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"19920:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19922:77:6"},"nodeType":"YulFunctionCall","src":"19922:79:6"},"nodeType":"YulExpressionStatement","src":"19922:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19892:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"19900:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19889:2:6"},"nodeType":"YulFunctionCall","src":"19889:30:6"},"nodeType":"YulIf","src":"19886:117:6"},{"nodeType":"YulAssignment","src":"20017:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20062:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"20073:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20058:3:6"},"nodeType":"YulFunctionCall","src":"20058:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20082:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20027:30:6"},"nodeType":"YulFunctionCall","src":"20027:63:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20017:6:6"}]}]},{"nodeType":"YulBlock","src":"20110:288:6","statements":[{"nodeType":"YulVariableDeclaration","src":"20125:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20156:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"20167:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20152:3:6"},"nodeType":"YulFunctionCall","src":"20152:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20139:12:6"},"nodeType":"YulFunctionCall","src":"20139:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20129:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"20218:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20220:77:6"},"nodeType":"YulFunctionCall","src":"20220:79:6"},"nodeType":"YulExpressionStatement","src":"20220:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20190:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"20198:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20187:2:6"},"nodeType":"YulFunctionCall","src":"20187:30:6"},"nodeType":"YulIf","src":"20184:117:6"},{"nodeType":"YulAssignment","src":"20315:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20360:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"20371:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20356:3:6"},"nodeType":"YulFunctionCall","src":"20356:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20380:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20325:30:6"},"nodeType":"YulFunctionCall","src":"20325:63:6"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"20315:6:6"}]}]},{"nodeType":"YulBlock","src":"20408:289:6","statements":[{"nodeType":"YulVariableDeclaration","src":"20423:47:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20454:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"20465:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20450:3:6"},"nodeType":"YulFunctionCall","src":"20450:19:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20437:12:6"},"nodeType":"YulFunctionCall","src":"20437:33:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20427:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"20517:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20519:77:6"},"nodeType":"YulFunctionCall","src":"20519:79:6"},"nodeType":"YulExpressionStatement","src":"20519:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20489:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"20497:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20486:2:6"},"nodeType":"YulFunctionCall","src":"20486:30:6"},"nodeType":"YulIf","src":"20483:117:6"},{"nodeType":"YulAssignment","src":"20614:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20659:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"20670:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20655:3:6"},"nodeType":"YulFunctionCall","src":"20655:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20679:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20624:30:6"},"nodeType":"YulFunctionCall","src":"20624:63:6"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"20614:6:6"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19015:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19026:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19038:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19046:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19054:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19062:6:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19070:6:6","type":""}],"src":"18893:1811:6"},{"body":{"nodeType":"YulBlock","src":"20856:33:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20873:3:6"},{"hexValue":"6d5f","kind":"string","nodeType":"YulLiteral","src":"20878:4:6","type":"","value":"m_"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20866:6:6"},"nodeType":"YulFunctionCall","src":"20866:17:6"},"nodeType":"YulExpressionStatement","src":"20866:17:6"}]},"name":"abi_encode_t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11_to_t_bytes2_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20851:3:6","type":""}],"src":"20710:179:6"},{"body":{"nodeType":"YulBlock","src":"21009:34:6","statements":[{"nodeType":"YulAssignment","src":"21019:18:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"21034:3:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21019:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20981:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"20986:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20997:11:6","type":""}],"src":"20895:148:6"},{"body":{"nodeType":"YulBlock","src":"21159:280:6","statements":[{"nodeType":"YulVariableDeclaration","src":"21169:53:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21216:5:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21183:32:6"},"nodeType":"YulFunctionCall","src":"21183:39:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21173:6:6","type":""}]},{"nodeType":"YulAssignment","src":"21231:96:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21315:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"21320:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21238:76:6"},"nodeType":"YulFunctionCall","src":"21238:89:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21231:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21375:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"21382:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21371:3:6"},"nodeType":"YulFunctionCall","src":"21371:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"21389:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"21394:6:6"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"21336:34:6"},"nodeType":"YulFunctionCall","src":"21336:65:6"},"nodeType":"YulExpressionStatement","src":"21336:65:6"},{"nodeType":"YulAssignment","src":"21410:23:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21421:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"21426:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21417:3:6"},"nodeType":"YulFunctionCall","src":"21417:16:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21410:3:6"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21140:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21147:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21155:3:6","type":""}],"src":"21049:390:6"},{"body":{"nodeType":"YulBlock","src":"21671:313:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21815:3:6"}],"functionName":{"name":"abi_encode_t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11_to_t_bytes2_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21682:131:6"},"nodeType":"YulFunctionCall","src":"21682:137:6"},"nodeType":"YulExpressionStatement","src":"21682:137:6"},{"nodeType":"YulAssignment","src":"21828:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21839:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"21844:1:6","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21835:3:6"},"nodeType":"YulFunctionCall","src":"21835:11:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21828:3:6"}]},{"nodeType":"YulAssignment","src":"21856:102:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21945:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"21954:3:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21863:81:6"},"nodeType":"YulFunctionCall","src":"21863:95:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21856:3:6"}]},{"nodeType":"YulAssignment","src":"21968:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"21975:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21968:3:6"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11_t_string_memory_ptr__to_t_bytes2_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21650:3:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21656:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21667:3:6","type":""}],"src":"21445:539:6"},{"body":{"nodeType":"YulBlock","src":"22126:139:6","statements":[{"nodeType":"YulAssignment","src":"22137:102:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22226:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"22235:3:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22144:81:6"},"nodeType":"YulFunctionCall","src":"22144:95:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22137:3:6"}]},{"nodeType":"YulAssignment","src":"22249:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"22256:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22249:3:6"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22105:3:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22111:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22122:3:6","type":""}],"src":"21990:275:6"},{"body":{"nodeType":"YulBlock","src":"22299:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22316:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22319:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22309:6:6"},"nodeType":"YulFunctionCall","src":"22309:88:6"},"nodeType":"YulExpressionStatement","src":"22309:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22413:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22416:4:6","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22406:6:6"},"nodeType":"YulFunctionCall","src":"22406:15:6"},"nodeType":"YulExpressionStatement","src":"22406:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22437:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22440:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22430:6:6"},"nodeType":"YulFunctionCall","src":"22430:15:6"},"nodeType":"YulExpressionStatement","src":"22430:15:6"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22271:180:6"},{"body":{"nodeType":"YulBlock","src":"22485:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22502:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22505:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22495:6:6"},"nodeType":"YulFunctionCall","src":"22495:88:6"},"nodeType":"YulExpressionStatement","src":"22495:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22599:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22602:4:6","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22592:6:6"},"nodeType":"YulFunctionCall","src":"22592:15:6"},"nodeType":"YulExpressionStatement","src":"22592:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22623:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22626:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22616:6:6"},"nodeType":"YulFunctionCall","src":"22616:15:6"},"nodeType":"YulExpressionStatement","src":"22616:15:6"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"22457:180:6"},{"body":{"nodeType":"YulBlock","src":"22694:269:6","statements":[{"nodeType":"YulAssignment","src":"22704:22:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22718:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"22724:1:6","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22714:3:6"},"nodeType":"YulFunctionCall","src":"22714:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22704:6:6"}]},{"nodeType":"YulVariableDeclaration","src":"22735:38:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22765:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"22771:1:6","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22761:3:6"},"nodeType":"YulFunctionCall","src":"22761:12:6"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"22739:18:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"22812:51:6","statements":[{"nodeType":"YulAssignment","src":"22826:27:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22840:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"22848:4:6","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22836:3:6"},"nodeType":"YulFunctionCall","src":"22836:17:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22826:6:6"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"22792:18:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22785:6:6"},"nodeType":"YulFunctionCall","src":"22785:26:6"},"nodeType":"YulIf","src":"22782:81:6"},{"body":{"nodeType":"YulBlock","src":"22915:42:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"22929:16:6"},"nodeType":"YulFunctionCall","src":"22929:18:6"},"nodeType":"YulExpressionStatement","src":"22929:18:6"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"22879:18:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22902:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"22910:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22899:2:6"},"nodeType":"YulFunctionCall","src":"22899:14:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22876:2:6"},"nodeType":"YulFunctionCall","src":"22876:38:6"},"nodeType":"YulIf","src":"22873:84:6"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"22678:4:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22687:6:6","type":""}],"src":"22643:320:6"},{"body":{"nodeType":"YulBlock","src":"23082:34:6","statements":[{"nodeType":"YulAssignment","src":"23092:18:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"23107:3:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23092:11:6"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23054:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"23059:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23070:11:6","type":""}],"src":"22969:147:6"},{"body":{"nodeType":"YulBlock","src":"23179:87:6","statements":[{"nodeType":"YulAssignment","src":"23189:11:6","value":{"name":"ptr","nodeType":"YulIdentifier","src":"23197:3:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23189:4:6"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23217:1:6","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"23220:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23210:6:6"},"nodeType":"YulFunctionCall","src":"23210:14:6"},"nodeType":"YulExpressionStatement","src":"23210:14:6"},{"nodeType":"YulAssignment","src":"23233:26:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23251:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23254:4:6","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"23241:9:6"},"nodeType":"YulFunctionCall","src":"23241:18:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23233:4:6"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"23166:3:6","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"23174:4:6","type":""}],"src":"23122:144:6"},{"body":{"nodeType":"YulBlock","src":"23403:769:6","statements":[{"nodeType":"YulVariableDeclaration","src":"23413:29:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23436:5:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"23430:5:6"},"nodeType":"YulFunctionCall","src":"23430:12:6"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"23417:9:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23451:50:6","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"23491:9:6"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"23465:25:6"},"nodeType":"YulFunctionCall","src":"23465:36:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23455:6:6","type":""}]},{"nodeType":"YulAssignment","src":"23510:95:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23593:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"23598:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23517:75:6"},"nodeType":"YulFunctionCall","src":"23517:88:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23510:3:6"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"23654:159:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23707:3:6"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"23716:9:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23731:4:6","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23727:3:6"},"nodeType":"YulFunctionCall","src":"23727:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23712:3:6"},"nodeType":"YulFunctionCall","src":"23712:25:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23700:6:6"},"nodeType":"YulFunctionCall","src":"23700:38:6"},"nodeType":"YulExpressionStatement","src":"23700:38:6"},{"nodeType":"YulAssignment","src":"23751:52:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23762:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23771:6:6"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23793:6:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23786:6:6"},"nodeType":"YulFunctionCall","src":"23786:14:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23779:6:6"},"nodeType":"YulFunctionCall","src":"23779:22:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23767:3:6"},"nodeType":"YulFunctionCall","src":"23767:35:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23758:3:6"},"nodeType":"YulFunctionCall","src":"23758:45:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23751:3:6"}]}]},"nodeType":"YulCase","src":"23647:166:6","value":{"kind":"number","nodeType":"YulLiteral","src":"23652:1:6","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"23829:337:6","statements":[{"nodeType":"YulVariableDeclaration","src":"23874:56:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23924:5:6"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"23889:34:6"},"nodeType":"YulFunctionCall","src":"23889:41:6"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"23878:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23943:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"23952:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"23947:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"24010:110:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24039:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"24044:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24035:3:6"},"nodeType":"YulFunctionCall","src":"24035:11:6"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"24054:7:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"24048:5:6"},"nodeType":"YulFunctionCall","src":"24048:14:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24028:6:6"},"nodeType":"YulFunctionCall","src":"24028:35:6"},"nodeType":"YulExpressionStatement","src":"24028:35:6"},{"nodeType":"YulAssignment","src":"24080:26:6","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"24095:7:6"},{"kind":"number","nodeType":"YulLiteral","src":"24104:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24091:3:6"},"nodeType":"YulFunctionCall","src":"24091:15:6"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"24080:7:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23977:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"23980:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23974:2:6"},"nodeType":"YulFunctionCall","src":"23974:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23988:21:6","statements":[{"nodeType":"YulAssignment","src":"23990:17:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23999:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"24002:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23995:3:6"},"nodeType":"YulFunctionCall","src":"23995:12:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"23990:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"23970:3:6","statements":[]},"src":"23966:154:6"},{"nodeType":"YulAssignment","src":"24133:23:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24144:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"24149:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24140:3:6"},"nodeType":"YulFunctionCall","src":"24140:16:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24133:3:6"}]}]},"nodeType":"YulCase","src":"23822:344:6","value":{"kind":"number","nodeType":"YulLiteral","src":"23827:1:6","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"23625:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"23636:1:6","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23621:3:6"},"nodeType":"YulFunctionCall","src":"23621:17:6"},"nodeType":"YulSwitch","src":"23614:552:6"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23384:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23391:3:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23399:3:6","type":""}],"src":"23294:878:6"},{"body":{"nodeType":"YulBlock","src":"24313:138:6","statements":[{"nodeType":"YulAssignment","src":"24324:101:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24412:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"24421:3:6"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24331:80:6"},"nodeType":"YulFunctionCall","src":"24331:94:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24324:3:6"}]},{"nodeType":"YulAssignment","src":"24435:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"24442:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24435:3:6"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24292:3:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24298:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24309:3:6","type":""}],"src":"24178:273:6"},{"body":{"nodeType":"YulBlock","src":"24485:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24502:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24505:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24495:6:6"},"nodeType":"YulFunctionCall","src":"24495:88:6"},"nodeType":"YulExpressionStatement","src":"24495:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24599:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24602:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24592:6:6"},"nodeType":"YulFunctionCall","src":"24592:15:6"},"nodeType":"YulExpressionStatement","src":"24592:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24623:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24626:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24616:6:6"},"nodeType":"YulFunctionCall","src":"24616:15:6"},"nodeType":"YulExpressionStatement","src":"24616:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"24457:180:6"},{"body":{"nodeType":"YulBlock","src":"24686:190:6","statements":[{"nodeType":"YulAssignment","src":"24696:33:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24723:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24705:17:6"},"nodeType":"YulFunctionCall","src":"24705:24:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24696:5:6"}]},{"body":{"nodeType":"YulBlock","src":"24819:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24821:16:6"},"nodeType":"YulFunctionCall","src":"24821:18:6"},"nodeType":"YulExpressionStatement","src":"24821:18:6"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24744:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"24751:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24741:2:6"},"nodeType":"YulFunctionCall","src":"24741:77:6"},"nodeType":"YulIf","src":"24738:103:6"},{"nodeType":"YulAssignment","src":"24850:20:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24861:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"24868:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24857:3:6"},"nodeType":"YulFunctionCall","src":"24857:13:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24850:3:6"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24672:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24682:3:6","type":""}],"src":"24643:233:6"},{"body":{"nodeType":"YulBlock","src":"24936:87:6","statements":[{"nodeType":"YulAssignment","src":"24946:11:6","value":{"name":"ptr","nodeType":"YulIdentifier","src":"24954:3:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"24946:4:6"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24974:1:6","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"24977:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24967:6:6"},"nodeType":"YulFunctionCall","src":"24967:14:6"},"nodeType":"YulExpressionStatement","src":"24967:14:6"},{"nodeType":"YulAssignment","src":"24990:26:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25008:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25011:4:6","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"24998:9:6"},"nodeType":"YulFunctionCall","src":"24998:18:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"24990:4:6"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"24923:3:6","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"24931:4:6","type":""}],"src":"24882:141:6"},{"body":{"nodeType":"YulBlock","src":"25073:49:6","statements":[{"nodeType":"YulAssignment","src":"25083:33:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25101:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"25108:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25097:3:6"},"nodeType":"YulFunctionCall","src":"25097:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"25113:2:6","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25093:3:6"},"nodeType":"YulFunctionCall","src":"25093:23:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"25083:6:6"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25056:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"25066:6:6","type":""}],"src":"25029:93:6"},{"body":{"nodeType":"YulBlock","src":"25181:54:6","statements":[{"nodeType":"YulAssignment","src":"25191:37:6","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"25216:4:6"},{"name":"value","nodeType":"YulIdentifier","src":"25222:5:6"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25212:3:6"},"nodeType":"YulFunctionCall","src":"25212:16:6"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"25191:8:6"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"25156:4:6","type":""},{"name":"value","nodeType":"YulTypedName","src":"25162:5:6","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"25172:8:6","type":""}],"src":"25128:107:6"},{"body":{"nodeType":"YulBlock","src":"25317:317:6","statements":[{"nodeType":"YulVariableDeclaration","src":"25327:35:6","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"25348:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"25360:1:6","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25344:3:6"},"nodeType":"YulFunctionCall","src":"25344:18:6"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"25331:9:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25371:109:6","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"25402:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"25413:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"25383:18:6"},"nodeType":"YulFunctionCall","src":"25383:97:6"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"25375:4:6","type":""}]},{"nodeType":"YulAssignment","src":"25489:51:6","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"25520:9:6"},{"name":"toInsert","nodeType":"YulIdentifier","src":"25531:8:6"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"25501:18:6"},"nodeType":"YulFunctionCall","src":"25501:39:6"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"25489:8:6"}]},{"nodeType":"YulAssignment","src":"25549:30:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25562:5:6"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"25573:4:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25569:3:6"},"nodeType":"YulFunctionCall","src":"25569:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25558:3:6"},"nodeType":"YulFunctionCall","src":"25558:21:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25549:5:6"}]},{"nodeType":"YulAssignment","src":"25588:40:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25601:5:6"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"25612:8:6"},{"name":"mask","nodeType":"YulIdentifier","src":"25622:4:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25608:3:6"},"nodeType":"YulFunctionCall","src":"25608:19:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"25598:2:6"},"nodeType":"YulFunctionCall","src":"25598:30:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"25588:6:6"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25278:5:6","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"25285:10:6","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"25297:8:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"25310:6:6","type":""}],"src":"25241:393:6"},{"body":{"nodeType":"YulBlock","src":"25672:28:6","statements":[{"nodeType":"YulAssignment","src":"25682:12:6","value":{"name":"value","nodeType":"YulIdentifier","src":"25689:5:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"25682:3:6"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25658:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"25668:3:6","type":""}],"src":"25640:60:6"},{"body":{"nodeType":"YulBlock","src":"25766:82:6","statements":[{"nodeType":"YulAssignment","src":"25776:66:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25834:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25816:17:6"},"nodeType":"YulFunctionCall","src":"25816:24:6"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"25807:8:6"},"nodeType":"YulFunctionCall","src":"25807:34:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25789:17:6"},"nodeType":"YulFunctionCall","src":"25789:53:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"25776:9:6"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25746:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"25756:9:6","type":""}],"src":"25706:142:6"},{"body":{"nodeType":"YulBlock","src":"25901:28:6","statements":[{"nodeType":"YulAssignment","src":"25911:12:6","value":{"name":"value","nodeType":"YulIdentifier","src":"25918:5:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"25911:3:6"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25887:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"25897:3:6","type":""}],"src":"25854:75:6"},{"body":{"nodeType":"YulBlock","src":"26011:193:6","statements":[{"nodeType":"YulVariableDeclaration","src":"26021:63:6","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"26076:7:6"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"26045:30:6"},"nodeType":"YulFunctionCall","src":"26045:39:6"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"26025:16:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26100:4:6"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26140:4:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"26134:5:6"},"nodeType":"YulFunctionCall","src":"26134:11:6"},{"name":"offset","nodeType":"YulIdentifier","src":"26147:6:6"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"26179:16:6"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"26155:23:6"},"nodeType":"YulFunctionCall","src":"26155:41:6"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"26106:27:6"},"nodeType":"YulFunctionCall","src":"26106:91:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"26093:6:6"},"nodeType":"YulFunctionCall","src":"26093:105:6"},"nodeType":"YulExpressionStatement","src":"26093:105:6"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"25988:4:6","type":""},{"name":"offset","nodeType":"YulTypedName","src":"25994:6:6","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"26002:7:6","type":""}],"src":"25935:269:6"},{"body":{"nodeType":"YulBlock","src":"26259:24:6","statements":[{"nodeType":"YulAssignment","src":"26269:8:6","value":{"kind":"number","nodeType":"YulLiteral","src":"26276:1:6","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26269:3:6"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26255:3:6","type":""}],"src":"26210:73:6"},{"body":{"nodeType":"YulBlock","src":"26342:136:6","statements":[{"nodeType":"YulVariableDeclaration","src":"26352:46:6","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"26366:30:6"},"nodeType":"YulFunctionCall","src":"26366:32:6"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"26356:6:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26451:4:6"},{"name":"offset","nodeType":"YulIdentifier","src":"26457:6:6"},{"name":"zero_0","nodeType":"YulIdentifier","src":"26465:6:6"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"26407:43:6"},"nodeType":"YulFunctionCall","src":"26407:65:6"},"nodeType":"YulExpressionStatement","src":"26407:65:6"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"26328:4:6","type":""},{"name":"offset","nodeType":"YulTypedName","src":"26334:6:6","type":""}],"src":"26289:189:6"},{"body":{"nodeType":"YulBlock","src":"26534:136:6","statements":[{"body":{"nodeType":"YulBlock","src":"26601:63:6","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26645:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"26652:1:6","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"26615:29:6"},"nodeType":"YulFunctionCall","src":"26615:39:6"},"nodeType":"YulExpressionStatement","src":"26615:39:6"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26554:5:6"},{"name":"end","nodeType":"YulIdentifier","src":"26561:3:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26551:2:6"},"nodeType":"YulFunctionCall","src":"26551:14:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"26566:26:6","statements":[{"nodeType":"YulAssignment","src":"26568:22:6","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26581:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"26588:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26577:3:6"},"nodeType":"YulFunctionCall","src":"26577:13:6"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"26568:5:6"}]}]},"pre":{"nodeType":"YulBlock","src":"26548:2:6","statements":[]},"src":"26544:120:6"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"26522:5:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"26529:3:6","type":""}],"src":"26484:186:6"},{"body":{"nodeType":"YulBlock","src":"26755:464:6","statements":[{"body":{"nodeType":"YulBlock","src":"26781:431:6","statements":[{"nodeType":"YulVariableDeclaration","src":"26795:54:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"26843:5:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"26811:31:6"},"nodeType":"YulFunctionCall","src":"26811:38:6"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"26799:8:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"26862:63:6","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"26885:8:6"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"26913:10:6"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"26895:17:6"},"nodeType":"YulFunctionCall","src":"26895:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26881:3:6"},"nodeType":"YulFunctionCall","src":"26881:44:6"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"26866:11:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"27082:27:6","statements":[{"nodeType":"YulAssignment","src":"27084:23:6","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"27099:8:6"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"27084:11:6"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"27066:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"27078:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27063:2:6"},"nodeType":"YulFunctionCall","src":"27063:18:6"},"nodeType":"YulIf","src":"27060:49:6"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"27151:11:6"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"27168:8:6"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"27196:3:6"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"27178:17:6"},"nodeType":"YulFunctionCall","src":"27178:22:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27164:3:6"},"nodeType":"YulFunctionCall","src":"27164:37:6"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"27122:28:6"},"nodeType":"YulFunctionCall","src":"27122:80:6"},"nodeType":"YulExpressionStatement","src":"27122:80:6"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"26772:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"26777:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26769:2:6"},"nodeType":"YulFunctionCall","src":"26769:11:6"},"nodeType":"YulIf","src":"26766:446:6"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"26731:5:6","type":""},{"name":"len","nodeType":"YulTypedName","src":"26738:3:6","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"26743:10:6","type":""}],"src":"26676:543:6"},{"body":{"nodeType":"YulBlock","src":"27288:54:6","statements":[{"nodeType":"YulAssignment","src":"27298:37:6","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"27323:4:6"},{"name":"value","nodeType":"YulIdentifier","src":"27329:5:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"27319:3:6"},"nodeType":"YulFunctionCall","src":"27319:16:6"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"27298:8:6"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"27263:4:6","type":""},{"name":"value","nodeType":"YulTypedName","src":"27269:5:6","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"27279:8:6","type":""}],"src":"27225:117:6"},{"body":{"nodeType":"YulBlock","src":"27399:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"27409:68:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27458:1:6","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"27461:5:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27454:3:6"},"nodeType":"YulFunctionCall","src":"27454:13:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27473:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27469:3:6"},"nodeType":"YulFunctionCall","src":"27469:6:6"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"27425:28:6"},"nodeType":"YulFunctionCall","src":"27425:51:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27421:3:6"},"nodeType":"YulFunctionCall","src":"27421:56:6"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"27413:4:6","type":""}]},{"nodeType":"YulAssignment","src":"27486:25:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27500:4:6"},{"name":"mask","nodeType":"YulIdentifier","src":"27506:4:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27496:3:6"},"nodeType":"YulFunctionCall","src":"27496:15:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"27486:6:6"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27376:4:6","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"27382:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"27392:6:6","type":""}],"src":"27348:169:6"},{"body":{"nodeType":"YulBlock","src":"27603:214:6","statements":[{"nodeType":"YulAssignment","src":"27736:37:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27763:4:6"},{"name":"len","nodeType":"YulIdentifier","src":"27769:3:6"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"27744:18:6"},"nodeType":"YulFunctionCall","src":"27744:29:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"27736:4:6"}]},{"nodeType":"YulAssignment","src":"27782:29:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27793:4:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27803:1:6","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"27806:3:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27799:3:6"},"nodeType":"YulFunctionCall","src":"27799:11:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"27790:2:6"},"nodeType":"YulFunctionCall","src":"27790:21:6"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"27782:4:6"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27584:4:6","type":""},{"name":"len","nodeType":"YulTypedName","src":"27590:3:6","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"27598:4:6","type":""}],"src":"27522:295:6"},{"body":{"nodeType":"YulBlock","src":"27914:1303:6","statements":[{"nodeType":"YulVariableDeclaration","src":"27925:51:6","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27972:3:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"27939:32:6"},"nodeType":"YulFunctionCall","src":"27939:37:6"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"27929:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"28061:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"28063:16:6"},"nodeType":"YulFunctionCall","src":"28063:18:6"},"nodeType":"YulExpressionStatement","src":"28063:18:6"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28033:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"28041:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28030:2:6"},"nodeType":"YulFunctionCall","src":"28030:30:6"},"nodeType":"YulIf","src":"28027:56:6"},{"nodeType":"YulVariableDeclaration","src":"28093:52:6","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28139:4:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"28133:5:6"},"nodeType":"YulFunctionCall","src":"28133:11:6"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"28107:25:6"},"nodeType":"YulFunctionCall","src":"28107:38:6"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"28097:6:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28238:4:6"},{"name":"oldLen","nodeType":"YulIdentifier","src":"28244:6:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"28252:6:6"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"28192:45:6"},"nodeType":"YulFunctionCall","src":"28192:67:6"},"nodeType":"YulExpressionStatement","src":"28192:67:6"},{"nodeType":"YulVariableDeclaration","src":"28269:18:6","value":{"kind":"number","nodeType":"YulLiteral","src":"28286:1:6","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"28273:9:6","type":""}]},{"nodeType":"YulAssignment","src":"28297:17:6","value":{"kind":"number","nodeType":"YulLiteral","src":"28310:4:6","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"28297:9:6"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"28361:611:6","statements":[{"nodeType":"YulVariableDeclaration","src":"28375:37:6","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28394:6:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28406:4:6","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28402:3:6"},"nodeType":"YulFunctionCall","src":"28402:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28390:3:6"},"nodeType":"YulFunctionCall","src":"28390:22:6"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"28379:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28426:51:6","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28472:4:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"28440:31:6"},"nodeType":"YulFunctionCall","src":"28440:37:6"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"28430:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28490:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"28499:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"28494:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"28558:163:6","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28583:6:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"28601:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"28606:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28597:3:6"},"nodeType":"YulFunctionCall","src":"28597:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28591:5:6"},"nodeType":"YulFunctionCall","src":"28591:26:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"28576:6:6"},"nodeType":"YulFunctionCall","src":"28576:42:6"},"nodeType":"YulExpressionStatement","src":"28576:42:6"},{"nodeType":"YulAssignment","src":"28635:24:6","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28649:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"28657:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28645:3:6"},"nodeType":"YulFunctionCall","src":"28645:14:6"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28635:6:6"}]},{"nodeType":"YulAssignment","src":"28676:31:6","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"28693:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"28704:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28689:3:6"},"nodeType":"YulFunctionCall","src":"28689:18:6"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"28676:9:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28524:1:6"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"28527:7:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28521:2:6"},"nodeType":"YulFunctionCall","src":"28521:14:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"28536:21:6","statements":[{"nodeType":"YulAssignment","src":"28538:17:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28547:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"28550:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28543:3:6"},"nodeType":"YulFunctionCall","src":"28543:12:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"28538:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"28517:3:6","statements":[]},"src":"28513:208:6"},{"body":{"nodeType":"YulBlock","src":"28757:156:6","statements":[{"nodeType":"YulVariableDeclaration","src":"28775:43:6","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"28802:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"28807:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28798:3:6"},"nodeType":"YulFunctionCall","src":"28798:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28792:5:6"},"nodeType":"YulFunctionCall","src":"28792:26:6"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"28779:9:6","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28842:6:6"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"28869:9:6"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28884:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"28892:4:6","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28880:3:6"},"nodeType":"YulFunctionCall","src":"28880:17:6"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"28850:18:6"},"nodeType":"YulFunctionCall","src":"28850:48:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"28835:6:6"},"nodeType":"YulFunctionCall","src":"28835:64:6"},"nodeType":"YulExpressionStatement","src":"28835:64:6"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"28740:7:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"28749:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28737:2:6"},"nodeType":"YulFunctionCall","src":"28737:19:6"},"nodeType":"YulIf","src":"28734:179:6"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28933:4:6"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28947:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"28955:1:6","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28943:3:6"},"nodeType":"YulFunctionCall","src":"28943:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"28959:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28939:3:6"},"nodeType":"YulFunctionCall","src":"28939:22:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"28926:6:6"},"nodeType":"YulFunctionCall","src":"28926:36:6"},"nodeType":"YulExpressionStatement","src":"28926:36:6"}]},"nodeType":"YulCase","src":"28354:618:6","value":{"kind":"number","nodeType":"YulLiteral","src":"28359:1:6","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"28989:222:6","statements":[{"nodeType":"YulVariableDeclaration","src":"29003:14:6","value":{"kind":"number","nodeType":"YulLiteral","src":"29016:1:6","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"29007:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"29040:67:6","statements":[{"nodeType":"YulAssignment","src":"29058:35:6","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"29077:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"29082:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29073:3:6"},"nodeType":"YulFunctionCall","src":"29073:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29067:5:6"},"nodeType":"YulFunctionCall","src":"29067:26:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29058:5:6"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"29033:6:6"},"nodeType":"YulIf","src":"29030:77:6"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29127:4:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29186:5:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"29193:6:6"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"29133:52:6"},"nodeType":"YulFunctionCall","src":"29133:67:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29120:6:6"},"nodeType":"YulFunctionCall","src":"29120:81:6"},"nodeType":"YulExpressionStatement","src":"29120:81:6"}]},"nodeType":"YulCase","src":"28981:230:6","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28334:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"28342:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28331:2:6"},"nodeType":"YulFunctionCall","src":"28331:14:6"},"nodeType":"YulSwitch","src":"28324:887:6"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"27903:4:6","type":""},{"name":"src","nodeType":"YulTypedName","src":"27909:3:6","type":""}],"src":"27822:1395:6"},{"body":{"nodeType":"YulBlock","src":"29266:43:6","statements":[{"nodeType":"YulAssignment","src":"29276:27:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29291:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"29298:4:6","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29287:3:6"},"nodeType":"YulFunctionCall","src":"29287:16:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"29276:7:6"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29248:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"29258:7:6","type":""}],"src":"29223:86:6"},{"body":{"nodeType":"YulBlock","src":"29358:148:6","statements":[{"nodeType":"YulAssignment","src":"29368:23:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29389:1:6"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"29373:15:6"},"nodeType":"YulFunctionCall","src":"29373:18:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29368:1:6"}]},{"nodeType":"YulAssignment","src":"29400:23:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29421:1:6"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"29405:15:6"},"nodeType":"YulFunctionCall","src":"29405:18:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29400:1:6"}]},{"nodeType":"YulAssignment","src":"29432:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29444:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"29447:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29440:3:6"},"nodeType":"YulFunctionCall","src":"29440:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"29432:4:6"}]},{"body":{"nodeType":"YulBlock","src":"29477:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29479:16:6"},"nodeType":"YulFunctionCall","src":"29479:18:6"},"nodeType":"YulExpressionStatement","src":"29479:18:6"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"29465:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"29471:4:6","type":"","value":"0xff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29462:2:6"},"nodeType":"YulFunctionCall","src":"29462:14:6"},"nodeType":"YulIf","src":"29459:40:6"}]},"name":"checked_sub_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29344:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"29347:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"29353:4:6","type":""}],"src":"29315:191:6"},{"body":{"nodeType":"YulBlock","src":"29557:149:6","statements":[{"nodeType":"YulAssignment","src":"29567:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29590:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29572:17:6"},"nodeType":"YulFunctionCall","src":"29572:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29567:1:6"}]},{"nodeType":"YulAssignment","src":"29601:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29624:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29606:17:6"},"nodeType":"YulFunctionCall","src":"29606:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29601:1:6"}]},{"nodeType":"YulAssignment","src":"29635:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29647:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"29650:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29643:3:6"},"nodeType":"YulFunctionCall","src":"29643:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"29635:4:6"}]},{"body":{"nodeType":"YulBlock","src":"29677:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29679:16:6"},"nodeType":"YulFunctionCall","src":"29679:18:6"},"nodeType":"YulExpressionStatement","src":"29679:18:6"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"29668:4:6"},{"name":"x","nodeType":"YulIdentifier","src":"29674:1:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29665:2:6"},"nodeType":"YulFunctionCall","src":"29665:11:6"},"nodeType":"YulIf","src":"29662:37:6"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29543:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"29546:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"29552:4:6","type":""}],"src":"29512:194:6"},{"body":{"nodeType":"YulBlock","src":"29763:51:6","statements":[{"nodeType":"YulAssignment","src":"29773:34:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29798:1:6","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"29801:5:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"29794:3:6"},"nodeType":"YulFunctionCall","src":"29794:13:6"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"29773:8:6"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29744:5:6","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"29754:8:6","type":""}],"src":"29712:102:6"},{"body":{"nodeType":"YulBlock","src":"29893:775:6","statements":[{"nodeType":"YulAssignment","src":"29903:15:6","value":{"name":"_power","nodeType":"YulIdentifier","src":"29912:6:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"29903:5:6"}]},{"nodeType":"YulAssignment","src":"29927:14:6","value":{"name":"_base","nodeType":"YulIdentifier","src":"29936:5:6"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"29927:4:6"}]},{"body":{"nodeType":"YulBlock","src":"29985:677:6","statements":[{"body":{"nodeType":"YulBlock","src":"30073:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30075:16:6"},"nodeType":"YulFunctionCall","src":"30075:18:6"},"nodeType":"YulExpressionStatement","src":"30075:18:6"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"30051:4:6"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"30061:3:6"},{"name":"base","nodeType":"YulIdentifier","src":"30066:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"30057:3:6"},"nodeType":"YulFunctionCall","src":"30057:14:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30048:2:6"},"nodeType":"YulFunctionCall","src":"30048:24:6"},"nodeType":"YulIf","src":"30045:50:6"},{"body":{"nodeType":"YulBlock","src":"30140:419:6","statements":[{"nodeType":"YulAssignment","src":"30520:25:6","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"30533:5:6"},{"name":"base","nodeType":"YulIdentifier","src":"30540:4:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30529:3:6"},"nodeType":"YulFunctionCall","src":"30529:16:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"30520:5:6"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"30115:8:6"},{"kind":"number","nodeType":"YulLiteral","src":"30125:1:6","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30111:3:6"},"nodeType":"YulFunctionCall","src":"30111:16:6"},"nodeType":"YulIf","src":"30108:451:6"},{"nodeType":"YulAssignment","src":"30572:23:6","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"30584:4:6"},{"name":"base","nodeType":"YulIdentifier","src":"30590:4:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30580:3:6"},"nodeType":"YulFunctionCall","src":"30580:15:6"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"30572:4:6"}]},{"nodeType":"YulAssignment","src":"30608:44:6","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"30643:8:6"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"30620:22:6"},"nodeType":"YulFunctionCall","src":"30620:32:6"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"30608:8:6"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"29961:8:6"},{"kind":"number","nodeType":"YulLiteral","src":"29971:1:6","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29958:2:6"},"nodeType":"YulFunctionCall","src":"29958:15:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"29974:2:6","statements":[]},"pre":{"nodeType":"YulBlock","src":"29954:3:6","statements":[]},"src":"29950:712:6"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"29848:6:6","type":""},{"name":"_base","nodeType":"YulTypedName","src":"29856:5:6","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"29863:8:6","type":""},{"name":"max","nodeType":"YulTypedName","src":"29873:3:6","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"29881:5:6","type":""},{"name":"base","nodeType":"YulTypedName","src":"29888:4:6","type":""}],"src":"29820:848:6"},{"body":{"nodeType":"YulBlock","src":"30734:1013:6","statements":[{"body":{"nodeType":"YulBlock","src":"30929:20:6","statements":[{"nodeType":"YulAssignment","src":"30931:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"30940:1:6","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"30931:5:6"}]},{"nodeType":"YulLeave","src":"30942:5:6"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"30919:8:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30912:6:6"},"nodeType":"YulFunctionCall","src":"30912:16:6"},"nodeType":"YulIf","src":"30909:40:6"},{"body":{"nodeType":"YulBlock","src":"30974:20:6","statements":[{"nodeType":"YulAssignment","src":"30976:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"30985:1:6","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"30976:5:6"}]},{"nodeType":"YulLeave","src":"30987:5:6"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"30968:4:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30961:6:6"},"nodeType":"YulFunctionCall","src":"30961:12:6"},"nodeType":"YulIf","src":"30958:36:6"},{"cases":[{"body":{"nodeType":"YulBlock","src":"31104:20:6","statements":[{"nodeType":"YulAssignment","src":"31106:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"31115:1:6","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"31106:5:6"}]},{"nodeType":"YulLeave","src":"31117:5:6"}]},"nodeType":"YulCase","src":"31097:27:6","value":{"kind":"number","nodeType":"YulLiteral","src":"31102:1:6","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"31148:176:6","statements":[{"body":{"nodeType":"YulBlock","src":"31183:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"31185:16:6"},"nodeType":"YulFunctionCall","src":"31185:18:6"},"nodeType":"YulExpressionStatement","src":"31185:18:6"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"31168:8:6"},{"kind":"number","nodeType":"YulLiteral","src":"31178:3:6","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31165:2:6"},"nodeType":"YulFunctionCall","src":"31165:17:6"},"nodeType":"YulIf","src":"31162:43:6"},{"nodeType":"YulAssignment","src":"31218:25:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31231:1:6","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"31234:8:6"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"31227:3:6"},"nodeType":"YulFunctionCall","src":"31227:16:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"31218:5:6"}]},{"body":{"nodeType":"YulBlock","src":"31274:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"31276:16:6"},"nodeType":"YulFunctionCall","src":"31276:18:6"},"nodeType":"YulExpressionStatement","src":"31276:18:6"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"31262:5:6"},{"name":"max","nodeType":"YulIdentifier","src":"31269:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31259:2:6"},"nodeType":"YulFunctionCall","src":"31259:14:6"},"nodeType":"YulIf","src":"31256:40:6"},{"nodeType":"YulLeave","src":"31309:5:6"}]},"nodeType":"YulCase","src":"31133:191:6","value":{"kind":"number","nodeType":"YulLiteral","src":"31138:1:6","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"31054:4:6"},"nodeType":"YulSwitch","src":"31047:277:6"},{"body":{"nodeType":"YulBlock","src":"31456:123:6","statements":[{"nodeType":"YulAssignment","src":"31470:28:6","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"31483:4:6"},{"name":"exponent","nodeType":"YulIdentifier","src":"31489:8:6"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"31479:3:6"},"nodeType":"YulFunctionCall","src":"31479:19:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"31470:5:6"}]},{"body":{"nodeType":"YulBlock","src":"31529:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"31531:16:6"},"nodeType":"YulFunctionCall","src":"31531:18:6"},"nodeType":"YulExpressionStatement","src":"31531:18:6"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"31517:5:6"},{"name":"max","nodeType":"YulIdentifier","src":"31524:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31514:2:6"},"nodeType":"YulFunctionCall","src":"31514:14:6"},"nodeType":"YulIf","src":"31511:40:6"},{"nodeType":"YulLeave","src":"31564:5:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"31359:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"31365:2:6","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31356:2:6"},"nodeType":"YulFunctionCall","src":"31356:12:6"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"31373:8:6"},{"kind":"number","nodeType":"YulLiteral","src":"31383:2:6","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31370:2:6"},"nodeType":"YulFunctionCall","src":"31370:16:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31352:3:6"},"nodeType":"YulFunctionCall","src":"31352:35:6"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"31408:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"31414:3:6","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31405:2:6"},"nodeType":"YulFunctionCall","src":"31405:13:6"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"31423:8:6"},{"kind":"number","nodeType":"YulLiteral","src":"31433:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31420:2:6"},"nodeType":"YulFunctionCall","src":"31420:16:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31401:3:6"},"nodeType":"YulFunctionCall","src":"31401:36:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"31336:2:6"},"nodeType":"YulFunctionCall","src":"31336:111:6"},"nodeType":"YulIf","src":"31333:246:6"},{"nodeType":"YulAssignment","src":"31589:57:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31623:1:6","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"31626:4:6"},{"name":"exponent","nodeType":"YulIdentifier","src":"31632:8:6"},{"name":"max","nodeType":"YulIdentifier","src":"31642:3:6"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"31604:18:6"},"nodeType":"YulFunctionCall","src":"31604:42:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"31589:5:6"},{"name":"base","nodeType":"YulIdentifier","src":"31596:4:6"}]},{"body":{"nodeType":"YulBlock","src":"31685:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"31687:16:6"},"nodeType":"YulFunctionCall","src":"31687:18:6"},"nodeType":"YulExpressionStatement","src":"31687:18:6"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"31662:5:6"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"31673:3:6"},{"name":"base","nodeType":"YulIdentifier","src":"31678:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"31669:3:6"},"nodeType":"YulFunctionCall","src":"31669:14:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31659:2:6"},"nodeType":"YulFunctionCall","src":"31659:25:6"},"nodeType":"YulIf","src":"31656:51:6"},{"nodeType":"YulAssignment","src":"31716:25:6","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"31729:5:6"},{"name":"base","nodeType":"YulIdentifier","src":"31736:4:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31725:3:6"},"nodeType":"YulFunctionCall","src":"31725:16:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"31716:5:6"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"30704:4:6","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"30710:8:6","type":""},{"name":"max","nodeType":"YulTypedName","src":"30720:3:6","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"30728:5:6","type":""}],"src":"30674:1073:6"},{"body":{"nodeType":"YulBlock","src":"31819:219:6","statements":[{"nodeType":"YulAssignment","src":"31829:31:6","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"31855:4:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31837:17:6"},"nodeType":"YulFunctionCall","src":"31837:23:6"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"31829:4:6"}]},{"nodeType":"YulAssignment","src":"31869:39:6","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"31899:8:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31881:17:6"},"nodeType":"YulFunctionCall","src":"31881:27:6"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"31869:8:6"}]},{"nodeType":"YulAssignment","src":"31918:113:6","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"31948:4:6"},{"name":"exponent","nodeType":"YulIdentifier","src":"31954:8:6"},{"kind":"number","nodeType":"YulLiteral","src":"31964:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"31927:20:6"},"nodeType":"YulFunctionCall","src":"31927:104:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"31918:5:6"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"31794:4:6","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"31800:8:6","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"31813:5:6","type":""}],"src":"31753:285:6"},{"body":{"nodeType":"YulBlock","src":"32092:362:6","statements":[{"nodeType":"YulAssignment","src":"32102:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32125:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32107:17:6"},"nodeType":"YulFunctionCall","src":"32107:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"32102:1:6"}]},{"nodeType":"YulAssignment","src":"32136:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32159:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32141:17:6"},"nodeType":"YulFunctionCall","src":"32141:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"32136:1:6"}]},{"nodeType":"YulVariableDeclaration","src":"32170:28:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32193:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"32196:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32189:3:6"},"nodeType":"YulFunctionCall","src":"32189:9:6"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"32174:11:6","type":""}]},{"nodeType":"YulAssignment","src":"32207:41:6","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"32236:11:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32218:17:6"},"nodeType":"YulFunctionCall","src":"32218:30:6"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"32207:7:6"}]},{"body":{"nodeType":"YulBlock","src":"32425:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32427:16:6"},"nodeType":"YulFunctionCall","src":"32427:18:6"},"nodeType":"YulExpressionStatement","src":"32427:18:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32358:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32351:6:6"},"nodeType":"YulFunctionCall","src":"32351:9:6"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32381:1:6"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"32388:7:6"},{"name":"x","nodeType":"YulIdentifier","src":"32397:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"32384:3:6"},"nodeType":"YulFunctionCall","src":"32384:15:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32378:2:6"},"nodeType":"YulFunctionCall","src":"32378:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"32331:2:6"},"nodeType":"YulFunctionCall","src":"32331:83:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32311:6:6"},"nodeType":"YulFunctionCall","src":"32311:113:6"},"nodeType":"YulIf","src":"32308:139:6"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"32075:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"32078:1:6","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"32084:7:6","type":""}],"src":"32044:410:6"},{"body":{"nodeType":"YulBlock","src":"32504:147:6","statements":[{"nodeType":"YulAssignment","src":"32514:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32537:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32519:17:6"},"nodeType":"YulFunctionCall","src":"32519:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"32514:1:6"}]},{"nodeType":"YulAssignment","src":"32548:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32571:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32553:17:6"},"nodeType":"YulFunctionCall","src":"32553:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"32548:1:6"}]},{"nodeType":"YulAssignment","src":"32582:16:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32593:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"32596:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32589:3:6"},"nodeType":"YulFunctionCall","src":"32589:9:6"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"32582:3:6"}]},{"body":{"nodeType":"YulBlock","src":"32622:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32624:16:6"},"nodeType":"YulFunctionCall","src":"32624:18:6"},"nodeType":"YulExpressionStatement","src":"32624:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32614:1:6"},{"name":"sum","nodeType":"YulIdentifier","src":"32617:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32611:2:6"},"nodeType":"YulFunctionCall","src":"32611:10:6"},"nodeType":"YulIf","src":"32608:36:6"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"32491:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"32494:1:6","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"32500:3:6","type":""}],"src":"32460:191:6"},{"body":{"nodeType":"YulBlock","src":"32685:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32702:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32705:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32695:6:6"},"nodeType":"YulFunctionCall","src":"32695:88:6"},"nodeType":"YulExpressionStatement","src":"32695:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32799:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32802:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32792:6:6"},"nodeType":"YulFunctionCall","src":"32792:15:6"},"nodeType":"YulExpressionStatement","src":"32792:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32823:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32826:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32816:6:6"},"nodeType":"YulFunctionCall","src":"32816:15:6"},"nodeType":"YulExpressionStatement","src":"32816:15:6"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"32657:180:6"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$2_memory_ptr(value) -> length {\n\n        length := 0x02\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$2_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$2_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$2_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[2] -> string[2]\n    function abi_encode_t_array$_t_string_memory_ptr_$2_memory_ptr_to_t_array$_t_string_memory_ptr_$2_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$2_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$2_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$2_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$2_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$2_memory_ptr__to_t_array$_t_string_memory_ptr_$2_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$2_memory_ptr_to_t_array$_t_string_memory_ptr_$2_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11_to_t_bytes2_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \"m_\")\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11_t_string_memory_ptr__to_t_bytes2_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_stringliteral_0490ab94b74e0b882aa6c84b60388353abfbfe9bf8a6d788f6a4809ca67add11_to_t_bytes2_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 2)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xff) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101f05760003560e01c806370881e721161010f578063bfee6f8e116100a2578063d45fc51611610071578063d45fc51614610676578063df6b96c7146106a6578063eacb4a74146106c2578063f7e34095146106f2576101f0565b8063bfee6f8e146105de578063c5ef3ec5146105fa578063ce65e7481461062a578063d0fb869914610646576101f0565b80638c2715b7116100de5780638c2715b714610532578063932a196b14610562578063a42a665c14610592578063b91e924f146105c2576101f0565b806370881e7214610495578063783db260146104c85780637ab4ab6e146104f85780637eadfa6a14610514576101f0565b80633358f45b116101875780635555fe17116101565780635555fe17146103d55780635f08c6b5146104055780636beee9d7146104355780636ebb4d8714610465576101f0565b80633358f45b1461033d5780634cf12d261461036d5780635457bbf91461039d578063545fa9ec146103b9576101f0565b8063282e5e81116101c3578063282e5e81146102915780632a0d0373146102ad5780632bde1581146102dd578063304b16db1461030d576101f0565b8063144cbca6146101f557806318160ddd146102135780631e65e1171461023157806325c11f7414610261575b600080fd5b6101fd61070e565b60405161020a91906122fb565b60405180910390f35b61021b610714565b60405161022891906122fb565b60405180910390f35b61024b60048036038101906102469190612470565b61071d565b60405161025891906125fa565b60405180910390f35b61027b60048036038101906102769190612470565b6109d5565b60405161028891906125fa565b60405180910390f35b6102ab60048036038101906102a6919061261c565b610b5a565b005b6102c760048036038101906102c29190612470565b610b8a565b6040516102d491906125fa565b60405180910390f35b6102f760048036038101906102f291906126f2565b610d0f565b60405161030491906122fb565b60405180910390f35b61032760048036038101906103229190612470565b610d8c565b60405161033491906122fb565b60405180910390f35b61035760048036038101906103529190612470565b610e40565b6040516103649190612798565b60405180910390f35b61038760048036038101906103829190612470565b610e76565b60405161039491906127fd565b60405180910390f35b6103b760048036038101906103b2919061284b565b610f26565b005b6103d360048036038101906103ce9190612470565b610f82565b005b6103ef60048036038101906103ea91906128d6565b610fbc565b6040516103fc91906122fb565b60405180910390f35b61041f600480360381019061041a9190612470565b611091565b60405161042c91906127fd565b60405180910390f35b61044f600480360381019061044a9190612470565b611141565b60405161045c91906127fd565b60405180910390f35b61047f600480360381019061047a9190612470565b6111eb565b60405161048c9190612a03565b60405180910390f35b6104af60048036038101906104aa9190612a25565b6112d6565b6040516104bf9493929190612a61565b60405180910390f35b6104e260048036038101906104dd919061261c565b6114be565b6040516104ef91906122fb565b60405180910390f35b610512600480360381019061050d919061261c565b61156d565b005b61051c61159d565b60405161052991906122fb565b60405180910390f35b61054c60048036038101906105479190612abb565b6115a7565b60405161055991906127fd565b60405180910390f35b61057c60048036038101906105779190612470565b61166d565b60405161058991906122fb565b60405180910390f35b6105ac60048036038101906105a79190612470565b61170d565b6040516105b991906127fd565b60405180910390f35b6105dc60048036038101906105d7919061284b565b6117bd565b005b6105f860048036038101906105f39190612b17565b611819565b005b610614600480360381019061060f9190612470565b611860565b60405161062191906122fb565b60405180910390f35b610644600480360381019061063f9190612bbe565b611973565b005b610660600480360381019061065b9190612470565b611ba5565b60405161066d91906125fa565b60405180910390f35b610690600480360381019061068b9190612470565b611d2a565b60405161069d91906122fb565b60405180910390f35b6106c060048036038101906106bb919061261c565b611dca565b005b6106dc60048036038101906106d79190612470565b611dfa565b6040516106e991906127fd565b60405180910390f35b61070c60048036038101906107079190612c79565b611ebe565b005b60065481565b60008054905090565b606060008060005b6002548110156107cc578480519060200120600e61074283611fcd565b6040516020016107529190612de2565b60405160208183030381529060405260405161076e9190612e08565b908152602001604051809103902060006002811061078f5761078e612e1f565b5b0160405161079d9190612f51565b6040518091039020036107b95782806107b590612f97565b9350505b80806107c490612f97565b915050610725565b5060008267ffffffffffffffff8111156107e9576107e8612345565b5b60405190808252806020026020018201604052801561081c57816020015b60608152602001906001900390816108075790505b50905060005b6002548110156109c9578580519060200120600e61083f83611fcd565b60405160200161084f9190612de2565b60405160208183030381529060405260405161086b9190612e08565b908152602001604051809103902060006002811061088c5761088b612e1f565b5b0160405161089a9190612f51565b6040518091039020036109b657600e6108b282611fcd565b6040516020016108c29190612de2565b6040516020818303038152906040526040516108de9190612e08565b90815260200160405180910390206001600281106108ff576108fe612e1f565b5b01805461090b90612e7d565b80601f016020809104026020016040519081016040528092919081815260200182805461093790612e7d565b80156109845780601f1061095957610100808354040283529160200191610984565b820191906000526020600020905b81548152906001019060200180831161096757829003601f168201915b505050505082848151811061099c5761099b612e1f565b5b602002602001018190525082806109b290612f97565b9350505b80806109c190612f97565b915050610822565b50809350505050919050565b60606000600a67ffffffffffffffff8111156109f4576109f3612345565b5b604051908082528060200260200182016040528015610a2757816020015b6060815260200190600190039081610a125790505b5090506000805b600454811015610b4f57848051906020012060096000838152602001908152602001600020600001604051610a639190612f51565b604051809103902003610b3c57600960008281526020019081526020016000206001018054610a9190612e7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610abd90612e7d565b8015610b0a5780601f10610adf57610100808354040283529160200191610b0a565b820191906000526020600020905b815481529060010190602001808311610aed57829003601f168201915b5050505050838381518110610b2257610b21612e1f565b5b60200260200101819052508180610b3890612f97565b9250505b8080610b4790612f97565b915050610a2e565b508192505050919050565b80600f83604051610b6b9190612e08565b90815260200160405180910390209081610b85919061318b565b505050565b60606000600a67ffffffffffffffff811115610ba957610ba8612345565b5b604051908082528060200260200182016040528015610bdc57816020015b6060815260200190600190039081610bc75790505b5090506000805b600454811015610d0457848051906020012060096000838152602001908152602001600020600001604051610c189190612f51565b604051809103902003610cf157600960008281526020019081526020016000206001018054610c4690612e7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7290612e7d565b8015610cbf5780601f10610c9457610100808354040283529160200191610cbf565b820191906000526020600020905b815481529060010190602001808311610ca257829003601f168201915b5050505050838381518110610cd757610cd6612e1f565b5b60200260200101819052508180610ced90612f97565b9250505b8080610cfc90612f97565b915050610be3565b508192505050919050565b6000610d44610d1f600054611fcd565b604051602001610d2f9190612de2565b6040516020818303038152906040528461156d565b610d5160035483856117bd565b600080815480929190610d6390612f97565b919050555060036000815480929190610d7b90612f97565b919050555060005490509392505050565b600080600090505b600254811015610e35578280519060200120600e610db183611fcd565b604051602001610dc19190612de2565b604051602081830303815290604052604051610ddd9190612e08565b9081526020016040518091039020600160028110610dfe57610dfd612e1f565b5b01604051610e0c9190612f51565b604051809103902003610e225780915050610e3b565b8080610e2d90612f97565b915050610d94565b50600090505b919050565b6007818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b6060600d82604051610e889190612e08565b90815260200160405180910390208054610ea190612e7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ecd90612e7d565b8015610f1a5780601f10610eef57610100808354040283529160200191610f1a565b820191906000526020600020905b815481529060010190602001808311610efd57829003601f168201915b50505050509050919050565b604051806040016040528083815260200182815250600960008581526020019081526020016000206000820151816000019081610f63919061318b565b506020820151816001019081610f79919061318b565b50905050505050565b6001600782604051610f949190612e08565b908152602001604051809103902060006101000a81548160ff02191690831515021790555050565b600080610fca600254611fcd565b604051602001610fda9190612de2565b6040516020818303038152906040529050610ff6818686611819565b611035816040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250610b5a565b60006007826040516110479190612e08565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506002600081548092919061107f90612f97565b91905055506002549150509392505050565b6060600c826040516110a39190612e08565b908152602001604051809103902080546110bc90612e7d565b80601f01602080910402602001604051908101604052809291908181526020018280546110e890612e7d565b80156111355780601f1061110a57610100808354040283529160200191611135565b820191906000526020600020905b81548152906001019060200180831161111857829003601f168201915b50505050509050919050565b606060005b6005548110156111ac578280519060200120600a600083815260200190815260200160002060000160405161117b9190612f51565b6040518091039020036111995761119181611fcd565b9150506111e6565b80806111a490612f97565b915050611146565b506040518060400160405280600281526020017f2d3100000000000000000000000000000000000000000000000000000000000081525090505b919050565b6111f36121ee565b600e826040516112039190612e08565b9081526020016040518091039020600280602002604051908101604052809291906000905b828210156112cb57838201805461123e90612e7d565b80601f016020809104026020016040519081016040528092919081815260200182805461126a90612e7d565b80156112b75780601f1061128c576101008083540402835291602001916112b7565b820191906000526020600020905b81548152906001019060200180831161129a57829003601f168201915b505050505081526020019060010190611228565b505050509050919050565b600a6020528060005260406000206000915090508060000180546112f990612e7d565b80601f016020809104026020016040519081016040528092919081815260200182805461132590612e7d565b80156113725780601f1061134757610100808354040283529160200191611372565b820191906000526020600020905b81548152906001019060200180831161135557829003601f168201915b50505050509080600101805461138790612e7d565b80601f01602080910402602001604051908101604052809291908181526020018280546113b390612e7d565b80156114005780601f106113d557610100808354040283529160200191611400565b820191906000526020600020905b8154815290600101906020018083116113e357829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600301805461143b90612e7d565b80601f016020809104026020016040519081016040528092919081815260200182805461146790612e7d565b80156114b45780601f10611489576101008083540402835291602001916114b4565b820191906000526020600020905b81548152906001019060200180831161149757829003601f168201915b5050505050905084565b600080600090505b600354811015611561578380519060200120600860008381526020019081526020016000206000016040516114fb9190612f51565b604051809103902014801561154057508280519060200120600860008381526020019081526020016000206001016040516115369190612f51565b6040518091039020145b1561154e5780915050611567565b808061155990612f97565b9150506114c6565b50600090505b92915050565b80600d8360405161157e9190612e08565b90815260200160405180910390209081611598919061318b565b505050565b6000600254905090565b600b8280516020810182018051848252602083016020850120818352809550505050505081600281106115d957600080fd5b016000915091505080546115ec90612e7d565b80601f016020809104026020016040519081016040528092919081815260200182805461161890612e7d565b80156116655780601f1061163a57610100808354040283529160200191611665565b820191906000526020600020905b81548152906001019060200180831161164857829003601f168201915b505050505081565b600080600090505b600054811015611702578280519060200120600d61169283611fcd565b6040516020016116a29190612de2565b6040516020818303038152906040526040516116be9190612e08565b90815260200160405180910390206040516116d99190612f51565b6040518091039020036116ef5780915050611708565b80806116fa90612f97565b915050611675565b50600090505b919050565b6060600f8260405161171f9190612e08565b9081526020016040518091039020805461173890612e7d565b80601f016020809104026020016040519081016040528092919081815260200182805461176490612e7d565b80156117b15780601f10611786576101008083540402835291602001916117b1565b820191906000526020600020905b81548152906001019060200180831161179457829003601f168201915b50505050509050919050565b6040518060400160405280838152602001828152506008600085815260200190815260200160002060008201518160000190816117fa919061318b565b506020820151816001019081611810919061318b565b50905050505050565b604051806040016040528083815260200182815250600e8460405161183e9190612e08565b908152602001604051809103902090600261185a929190612215565b50505050565b600080600090505b825181101561196c576000603084838151811061188857611887612e1f565b5b602001015160f81c60f81b60f81c6118a0919061326a565b60ff1610806118de5750600960308483815181106118c1576118c0612e1f565b5b602001015160f81c60f81b60f81c6118d9919061326a565b60ff16115b156118ed57600091505061196e565b60018184516118fc919061329f565b611906919061329f565b600a6119129190613406565b603084838151811061192757611926612e1f565b5b602001015160f81c60f81b60f81c61193f919061326a565b60ff1661194c9190613451565b826119579190613493565b9150808061196490612f97565b915050611868565b505b919050565b600061197e85611141565b90506040518060400160405280600281526020017f2d3100000000000000000000000000000000000000000000000000000000000081525080519060200120818051906020012014611aad5760405180608001604052808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600a6000611a0e84611860565b81526020019081526020016000206000820151816000019081611a31919061318b565b506020820151816001019081611a47919061318b565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019081611aa4919061318b565b50905050611b9e565b60405180608001604052808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600a600060055481526020019081526020016000206000820151816000019081611b0e919061318b565b506020820151816001019081611b24919061318b565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019081611b81919061318b565b5090505060056000815480929190611b9890612f97565b91905055505b5050505050565b60606000600a67ffffffffffffffff811115611bc457611bc3612345565b5b604051908082528060200260200182016040528015611bf757816020015b6060815260200190600190039081611be25790505b5090506000805b600354811015611d1f57848051906020012060086000838152602001908152602001600020600001604051611c339190612f51565b604051809103902003611d0c57600860008281526020019081526020016000206001018054611c6190612e7d565b80601f0160208091040260200160405190810160405280929190818152602001828054611c8d90612e7d565b8015611cda5780601f10611caf57610100808354040283529160200191611cda565b820191906000526020600020905b815481529060010190602001808311611cbd57829003601f168201915b5050505050838381518110611cf257611cf1612e1f565b5b60200260200101819052508180611d0890612f97565b9250505b8080611d1790612f97565b915050611bfe565b508192505050919050565b600080600090505b600154811015611dbf578280519060200120600c611d4f83611fcd565b604051602001611d5f9190612de2565b604051602081830303815290604052604051611d7b9190612e08565b9081526020016040518091039020604051611d969190612f51565b604051809103902003611dac5780915050611dc5565b8080611db790612f97565b915050611d32565b50600090505b919050565b80600c83604051611ddb9190612e08565b90815260200160405180910390209081611df5919061318b565b505050565b6060600b82604051611e0c9190612e08565b9081526020016040518091039020600060028110611e2d57611e2c612e1f565b5b018054611e3990612e7d565b80601f0160208091040260200160405190810160405280929190818152602001828054611e6590612e7d565b8015611eb25780601f10611e8757610100808354040283529160200191611eb2565b820191906000526020600020905b815481529060010190602001808311611e9557829003601f168201915b50505050509050919050565b6000611f7084600d88604051611ed49190612e08565b90815260200160405180910390208054611eed90612e7d565b80601f0160208091040260200160405190810160405280929190818152602001828054611f1990612e7d565b8015611f665780601f10611f3b57610100808354040283529160200191611f66565b820191906000526020600020905b815481529060010190602001808311611f4957829003601f168201915b50505050506114be565b9050611f7e86853385611973565b611f888484610b5a565b611f956004548787610f26565b60046000815480929190611fa890612f97565b919050555060016000815480929190611fc090612f97565b9190505550505050505050565b606060006001611fdc8461209b565b01905060008167ffffffffffffffff811115611ffb57611ffa612345565b5b6040519080825280601f01601f19166020018201604052801561202d5781602001600182028036833780820191505090505b509050600082602001820190505b600115612090578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581612084576120836134c7565b5b0494506000850361203b575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106120f9577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816120ef576120ee6134c7565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612136576d04ee2d6d415b85acef8100000000838161212c5761212b6134c7565b5b0492506020810190505b662386f26fc10000831061216557662386f26fc10000838161215b5761215a6134c7565b5b0492506010810190505b6305f5e100831061218e576305f5e1008381612184576121836134c7565b5b0492506008810190505b61271083106121b35761271083816121a9576121a86134c7565b5b0492506004810190505b606483106121d657606483816121cc576121cb6134c7565b5b0492506002810190505b600a83106121e5576001810190505b80915050919050565b60405180604001604052806002905b60608152602001906001900390816121fd5790505090565b8260028101928215612250579160200282015b8281111561224f57825182908161223f919061318b565b5091602001919060010190612228565b5b50905061225d9190612261565b5090565b5b8082111561228157600081816122789190612285565b50600101612262565b5090565b50805461229190612e7d565b6000825580601f106122a357506122c2565b601f0160209004906000526020600020908101906122c191906122c5565b5b50565b5b808211156122de5760008160009055506001016122c6565b5090565b6000819050919050565b6122f5816122e2565b82525050565b600060208201905061231060008301846122ec565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61237d82612334565b810181811067ffffffffffffffff8211171561239c5761239b612345565b5b80604052505050565b60006123af612316565b90506123bb8282612374565b919050565b600067ffffffffffffffff8211156123db576123da612345565b5b6123e482612334565b9050602081019050919050565b82818337600083830152505050565b600061241361240e846123c0565b6123a5565b90508281526020810184848401111561242f5761242e61232f565b5b61243a8482856123f1565b509392505050565b600082601f8301126124575761245661232a565b5b8135612467848260208601612400565b91505092915050565b60006020828403121561248657612485612320565b5b600082013567ffffffffffffffff8111156124a4576124a3612325565b5b6124b084828501612442565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561251f578082015181840152602081019050612504565b60008484015250505050565b6000612536826124e5565b61254081856124f0565b9350612550818560208601612501565b61255981612334565b840191505092915050565b6000612570838361252b565b905092915050565b6000602082019050919050565b6000612590826124b9565b61259a81856124c4565b9350836020820285016125ac856124d5565b8060005b858110156125e857848403895281516125c98582612564565b94506125d483612578565b925060208a019950506001810190506125b0565b50829750879550505050505092915050565b600060208201905081810360008301526126148184612585565b905092915050565b6000806040838503121561263357612632612320565b5b600083013567ffffffffffffffff81111561265157612650612325565b5b61265d85828601612442565b925050602083013567ffffffffffffffff81111561267e5761267d612325565b5b61268a85828601612442565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006126bf82612694565b9050919050565b6126cf816126b4565b81146126da57600080fd5b50565b6000813590506126ec816126c6565b92915050565b60008060006060848603121561270b5761270a612320565b5b6000612719868287016126dd565b935050602084013567ffffffffffffffff81111561273a57612739612325565b5b61274686828701612442565b925050604084013567ffffffffffffffff81111561276757612766612325565b5b61277386828701612442565b9150509250925092565b60008115159050919050565b6127928161277d565b82525050565b60006020820190506127ad6000830184612789565b92915050565b600082825260208201905092915050565b60006127cf826124e5565b6127d981856127b3565b93506127e9818560208601612501565b6127f281612334565b840191505092915050565b6000602082019050818103600083015261281781846127c4565b905092915050565b612828816122e2565b811461283357600080fd5b50565b6000813590506128458161281f565b92915050565b60008060006060848603121561286457612863612320565b5b600061287286828701612836565b935050602084013567ffffffffffffffff81111561289357612892612325565b5b61289f86828701612442565b925050604084013567ffffffffffffffff8111156128c0576128bf612325565b5b6128cc86828701612442565b9150509250925092565b6000806000606084860312156128ef576128ee612320565b5b600084013567ffffffffffffffff81111561290d5761290c612325565b5b61291986828701612442565b935050602084013567ffffffffffffffff81111561293a57612939612325565b5b61294686828701612442565b925050604061295786828701612836565b9150509250925092565b600060029050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b600061299982612961565b6129a3818561296c565b9350836020820285016129b585612977565b8060005b858110156129f157848403895281516129d28582612564565b94506129dd83612981565b925060208a019950506001810190506129b9565b50829750879550505050505092915050565b60006020820190508181036000830152612a1d818461298e565b905092915050565b600060208284031215612a3b57612a3a612320565b5b6000612a4984828501612836565b91505092915050565b612a5b816126b4565b82525050565b60006080820190508181036000830152612a7b81876127c4565b90508181036020830152612a8f81866127c4565b9050612a9e6040830185612a52565b8181036060830152612ab081846127c4565b905095945050505050565b60008060408385031215612ad257612ad1612320565b5b600083013567ffffffffffffffff811115612af057612aef612325565b5b612afc85828601612442565b9250506020612b0d85828601612836565b9150509250929050565b600080600060608486031215612b3057612b2f612320565b5b600084013567ffffffffffffffff811115612b4e57612b4d612325565b5b612b5a86828701612442565b935050602084013567ffffffffffffffff811115612b7b57612b7a612325565b5b612b8786828701612442565b925050604084013567ffffffffffffffff811115612ba857612ba7612325565b5b612bb486828701612442565b9150509250925092565b60008060008060808587031215612bd857612bd7612320565b5b600085013567ffffffffffffffff811115612bf657612bf5612325565b5b612c0287828801612442565b945050602085013567ffffffffffffffff811115612c2357612c22612325565b5b612c2f87828801612442565b9350506040612c40878288016126dd565b925050606085013567ffffffffffffffff811115612c6157612c60612325565b5b612c6d87828801612442565b91505092959194509250565b600080600080600060a08688031215612c9557612c94612320565b5b600086013567ffffffffffffffff811115612cb357612cb2612325565b5b612cbf88828901612442565b955050602086013567ffffffffffffffff811115612ce057612cdf612325565b5b612cec88828901612442565b945050604086013567ffffffffffffffff811115612d0d57612d0c612325565b5b612d1988828901612442565b935050606086013567ffffffffffffffff811115612d3a57612d39612325565b5b612d4688828901612442565b925050608086013567ffffffffffffffff811115612d6757612d66612325565b5b612d7388828901612442565b9150509295509295909350565b7f6d5f000000000000000000000000000000000000000000000000000000000000815250565b600081905092915050565b6000612dbc826124e5565b612dc68185612da6565b9350612dd6818560208601612501565b80840191505092915050565b6000612ded82612d80565b600282019150612dfd8284612db1565b915081905092915050565b6000612e148284612db1565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612e9557607f821691505b602082108103612ea857612ea7612e4e565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154612edb81612e7d565b612ee58186612eae565b94506001821660008114612f005760018114612f1557612f48565b60ff1983168652811515820286019350612f48565b612f1e85612eb9565b60005b83811015612f4057815481890152600182019150602081019050612f21565b838801955050505b50505092915050565b6000612f5d8284612ece565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612fa2826122e2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612fd457612fd3612f68565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026130417fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613004565b61304b8683613004565b95508019841693508086168417925050509392505050565b6000819050919050565b600061308861308361307e846122e2565b613063565b6122e2565b9050919050565b6000819050919050565b6130a28361306d565b6130b66130ae8261308f565b848454613011565b825550505050565b600090565b6130cb6130be565b6130d6818484613099565b505050565b5b818110156130fa576130ef6000826130c3565b6001810190506130dc565b5050565b601f82111561313f5761311081612fdf565b61311984612ff4565b81016020851015613128578190505b61313c61313485612ff4565b8301826130db565b50505b505050565b600082821c905092915050565b600061316260001984600802613144565b1980831691505092915050565b600061317b8383613151565b9150826002028217905092915050565b613194826124e5565b67ffffffffffffffff8111156131ad576131ac612345565b5b6131b78254612e7d565b6131c28282856130fe565b600060209050601f8311600181146131f557600084156131e3578287015190505b6131ed858261316f565b865550613255565b601f19841661320386612fdf565b60005b8281101561322b57848901518255600182019150602085019450602081019050613206565b868310156132485784890151613244601f891682613151565b8355505b6001600288020188555050505b505050505050565b600060ff82169050919050565b60006132758261325d565b91506132808361325d565b9250828203905060ff81111561329957613298612f68565b5b92915050565b60006132aa826122e2565b91506132b5836122e2565b92508282039050818111156132cd576132cc612f68565b5b92915050565b60008160011c9050919050565b6000808291508390505b600185111561332a5780860481111561330657613305612f68565b5b60018516156133155780820291505b8081029050613323856132d3565b94506132ea565b94509492505050565b60008261334357600190506133ff565b8161335157600090506133ff565b81600181146133675760028114613371576133a0565b60019150506133ff565b60ff84111561338357613382612f68565b5b8360020a91508482111561339a57613399612f68565b5b506133ff565b5060208310610133831016604e8410600b84101617156133d55782820a9050838111156133d0576133cf612f68565b5b6133ff565b6133e284848460016132e0565b925090508184048111156133f9576133f8612f68565b5b81810290505b9392505050565b6000613411826122e2565b915061341c836122e2565b92506134497fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484613333565b905092915050565b600061345c826122e2565b9150613467836122e2565b9250828202613475816122e2565b9150828204841483151761348c5761348b612f68565b5b5092915050565b600061349e826122e2565b91506134a9836122e2565b92508282019050808211156134c1576134c0612f68565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220449cdc079e5cde619269038b64f9ef031827eac756e1b33fa63e4205514e557764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70881E72 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xBFEE6F8E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD45FC516 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD45FC516 EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0xDF6B96C7 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xEACB4A74 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xF7E34095 EQ PUSH2 0x6F2 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xBFEE6F8E EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0xC5EF3EC5 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xCE65E748 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0xD0FB8699 EQ PUSH2 0x646 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x8C2715B7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8C2715B7 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0x932A196B EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0xA42A665C EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xB91E924F EQ PUSH2 0x5C2 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x70881E72 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x783DB260 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x7AB4AB6E EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x7EADFA6A EQ PUSH2 0x514 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3358F45B GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x5555FE17 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x5555FE17 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x5F08C6B5 EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0x6BEEE9D7 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x6EBB4D87 EQ PUSH2 0x465 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3358F45B EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x4CF12D26 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x5457BBF9 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x545FA9EC EQ PUSH2 0x3B9 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x282E5E81 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x282E5E81 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x2A0D0373 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x2BDE1581 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x304B16DB EQ PUSH2 0x30D JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x144CBCA6 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x1E65E117 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x25C11F74 EQ PUSH2 0x261 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0xB5A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xD8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2798 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH2 0xF26 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xF82 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x14BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x156D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51C PUSH2 0x159D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x2ABB JUMP JUMPDEST PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x170D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH2 0x17BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH2 0x1819 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x614 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x1860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST PUSH2 0x1973 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x660 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x690 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68B SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x1DCA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x707 SWAP2 SWAP1 PUSH2 0x2C79 JUMP JUMPDEST PUSH2 0x1EBE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x7CC JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH2 0x742 DUP4 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x76E SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x78F JUMPI PUSH2 0x78E PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST ADD PUSH1 0x40 MLOAD PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x7B9 JUMPI DUP3 DUP1 PUSH2 0x7B5 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x7C4 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x725 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E8 PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x81C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x807 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x9C9 JUMPI DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH2 0x83F DUP4 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x88C JUMPI PUSH2 0x88B PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST ADD PUSH1 0x40 MLOAD PUSH2 0x89A SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x9B6 JUMPI PUSH1 0xE PUSH2 0x8B2 DUP3 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8C2 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x8FF JUMPI PUSH2 0x8FE PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST ADD DUP1 SLOAD PUSH2 0x90B SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x937 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x984 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x959 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x984 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x967 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x99C JUMPI PUSH2 0x99B PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x9B2 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x9C1 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x822 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9F4 JUMPI PUSH2 0x9F3 PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA27 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA12 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xB4F JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xA63 SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xB3C JUMPI PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xA91 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xABD SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB0A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB0A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xB38 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xB47 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA2E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB6B SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 DUP2 PUSH2 0xB85 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBA9 JUMPI PUSH2 0xBA8 PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDC JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xBC7 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xD04 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xC18 SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xCF1 JUMPI PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC46 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC72 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCBF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC94 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCBF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCA2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCD7 JUMPI PUSH2 0xCD6 PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xCED SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xCFC SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBE3 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD44 PUSH2 0xD1F PUSH1 0x0 SLOAD PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD2F SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP5 PUSH2 0x156D JUMP JUMPDEST PUSH2 0xD51 PUSH1 0x3 SLOAD DUP4 DUP6 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD63 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD7B SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xE35 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH2 0xDB1 DUP4 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDC1 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xDDD SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0xDFE JUMPI PUSH2 0xDFD PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST ADD PUSH1 0x40 MLOAD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xE22 JUMPI DUP1 SWAP2 POP POP PUSH2 0xE3B JUMP JUMPDEST DUP1 DUP1 PUSH2 0xE2D SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD94 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD DUP3 PUSH1 0x40 MLOAD PUSH2 0xE88 SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xEA1 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xECD SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF1A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEEF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF1A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEFD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0xF63 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xF79 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF94 SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFCA PUSH1 0x2 SLOAD PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFDA SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0xFF6 DUP2 DUP7 DUP7 PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x1035 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1047 SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x107F SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 SLOAD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC DUP3 PUSH1 0x40 MLOAD PUSH2 0x10A3 SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x10BC SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10E8 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1135 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x110A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1135 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1118 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x11AC JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x117B SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1199 JUMPI PUSH2 0x1191 DUP2 PUSH2 0x1FCD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11E6 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11A4 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1146 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2D31000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F3 PUSH2 0x21EE JUMP JUMPDEST PUSH1 0xE DUP3 PUSH1 0x40 MLOAD PUSH2 0x1203 SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x12CB JUMPI DUP4 DUP3 ADD DUP1 SLOAD PUSH2 0x123E SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x126A SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x128C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x129A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1228 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x12F9 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1325 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1372 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1372 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1355 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1387 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13B3 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1400 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1400 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x143B SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1467 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1489 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1497 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1561 JUMPI DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x14FB SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ DUP1 ISZERO PUSH2 0x1540 JUMPI POP DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x1536 SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x154E JUMPI DUP1 SWAP2 POP POP PUSH2 0x1567 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1559 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14C6 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0xD DUP4 PUSH1 0x40 MLOAD PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 DUP2 PUSH2 0x1598 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB DUP3 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x15D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 SLOAD PUSH2 0x15EC SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1618 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1665 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x163A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1665 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1648 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x1702 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH2 0x1692 DUP4 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16A2 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x16BE SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x16D9 SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x16EF JUMPI DUP1 SWAP2 POP POP PUSH2 0x1708 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x16FA SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1675 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF DUP3 PUSH1 0x40 MLOAD PUSH2 0x171F SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1738 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1764 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1786 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1794 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1810 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xE DUP5 PUSH1 0x40 MLOAD PUSH2 0x183E SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 PUSH1 0x2 PUSH2 0x185A SWAP3 SWAP2 SWAP1 PUSH2 0x2215 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x196C JUMPI PUSH1 0x0 PUSH1 0x30 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1888 JUMPI PUSH2 0x1887 PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH2 0x18A0 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0xFF AND LT DUP1 PUSH2 0x18DE JUMPI POP PUSH1 0x9 PUSH1 0x30 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18C1 JUMPI PUSH2 0x18C0 PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH2 0x18D9 SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0xFF AND GT JUMPDEST ISZERO PUSH2 0x18ED JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x196E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP5 MLOAD PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x329F JUMP JUMPDEST PUSH2 0x1906 SWAP2 SWAP1 PUSH2 0x329F JUMP JUMPDEST PUSH1 0xA PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST PUSH1 0x30 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1927 JUMPI PUSH2 0x1926 PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH2 0x193F SWAP2 SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x194C SWAP2 SWAP1 PUSH2 0x3451 JUMP JUMPDEST DUP3 PUSH2 0x1957 SWAP2 SWAP1 PUSH2 0x3493 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1964 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1868 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197E DUP6 PUSH2 0x1141 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2D31000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x1AAD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 PUSH2 0x1A0E DUP5 PUSH2 0x1860 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1A31 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1AA4 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP SWAP1 POP POP PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1B0E SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1B24 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1B81 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1B98 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BC4 JUMPI PUSH2 0x1BC3 PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BF7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1BE2 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1D1F JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0x1C33 SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1D0C JUMPI PUSH1 0x8 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1C61 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C8D SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CDA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CAF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CDA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CBD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CF2 JUMPI PUSH2 0x1CF1 PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x1D08 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1D17 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BFE JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x1DBF JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC PUSH2 0x1D4F DUP4 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D5F SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1D7B SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1D96 SWAP2 SWAP1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1DAC JUMPI DUP1 SWAP2 POP POP PUSH2 0x1DC5 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1DB7 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D32 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xC DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DDB SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 DUP2 PUSH2 0x1DF5 SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP3 PUSH1 0x40 MLOAD PUSH2 0x1E0C SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1E2D JUMPI PUSH2 0x1E2C PUSH2 0x2E1F JUMP JUMPDEST JUMPDEST ADD DUP1 SLOAD PUSH2 0x1E39 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E65 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EB2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E87 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1EB2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E95 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F70 DUP5 PUSH1 0xD DUP9 PUSH1 0x40 MLOAD PUSH2 0x1ED4 SWAP2 SWAP1 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1EED SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F19 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F66 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F3B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F66 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F49 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP PUSH2 0x1F7E DUP7 DUP6 CALLER DUP6 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1F88 DUP5 DUP5 PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x1F95 PUSH1 0x4 SLOAD DUP8 DUP8 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA8 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1FC0 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1FDC DUP5 PUSH2 0x209B JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FFB JUMPI PUSH2 0x1FFA PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x202D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2090 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2084 JUMPI PUSH2 0x2083 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x203B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x20F9 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x20EF JUMPI PUSH2 0x20EE PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2136 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x212C JUMPI PUSH2 0x212B PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2165 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x215B JUMPI PUSH2 0x215A PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x218E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2184 JUMPI PUSH2 0x2183 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x21B3 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x21A9 JUMPI PUSH2 0x21A8 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x21D6 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x21CC JUMPI PUSH2 0x21CB PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x21E5 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x21FD JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2250 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x224F JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH2 0x223F SWAP2 SWAP1 PUSH2 0x318B JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2228 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x225D SWAP2 SWAP1 PUSH2 0x2261 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2281 JUMPI PUSH1 0x0 DUP2 DUP2 PUSH2 0x2278 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2262 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2291 SWAP1 PUSH2 0x2E7D JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x22A3 JUMPI POP PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x22C1 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x22DE JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x22C6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F5 DUP2 PUSH2 0x22E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2310 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x237D DUP3 PUSH2 0x2334 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x239C JUMPI PUSH2 0x239B PUSH2 0x2345 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23AF PUSH2 0x2316 JUMP JUMPDEST SWAP1 POP PUSH2 0x23BB DUP3 DUP3 PUSH2 0x2374 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x23DB JUMPI PUSH2 0x23DA PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH2 0x23E4 DUP3 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2413 PUSH2 0x240E DUP5 PUSH2 0x23C0 JUMP JUMPDEST PUSH2 0x23A5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x242F JUMPI PUSH2 0x242E PUSH2 0x232F JUMP JUMPDEST JUMPDEST PUSH2 0x243A DUP5 DUP3 DUP6 PUSH2 0x23F1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2457 JUMPI PUSH2 0x2456 PUSH2 0x232A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2467 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2400 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2486 JUMPI PUSH2 0x2485 PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24A4 JUMPI PUSH2 0x24A3 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x24B0 DUP5 DUP3 DUP6 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x251F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2504 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2536 DUP3 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0x2540 DUP2 DUP6 PUSH2 0x24F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2550 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2501 JUMP JUMPDEST PUSH2 0x2559 DUP2 PUSH2 0x2334 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2570 DUP4 DUP4 PUSH2 0x252B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2590 DUP3 PUSH2 0x24B9 JUMP JUMPDEST PUSH2 0x259A DUP2 DUP6 PUSH2 0x24C4 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x25AC DUP6 PUSH2 0x24D5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x25E8 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x25C9 DUP6 DUP3 PUSH2 0x2564 JUMP JUMPDEST SWAP5 POP PUSH2 0x25D4 DUP4 PUSH2 0x2578 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25B0 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2614 DUP2 DUP5 PUSH2 0x2585 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2633 JUMPI PUSH2 0x2632 PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2651 JUMPI PUSH2 0x2650 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x265D DUP6 DUP3 DUP7 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x267E JUMPI PUSH2 0x267D PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x268A DUP6 DUP3 DUP7 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26BF DUP3 PUSH2 0x2694 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26CF DUP2 PUSH2 0x26B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x26DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26EC DUP2 PUSH2 0x26C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x270B JUMPI PUSH2 0x270A PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2719 DUP7 DUP3 DUP8 ADD PUSH2 0x26DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x273A JUMPI PUSH2 0x2739 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2746 DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2767 JUMPI PUSH2 0x2766 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2773 DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2792 DUP2 PUSH2 0x277D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2789 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27CF DUP3 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0x27D9 DUP2 DUP6 PUSH2 0x27B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x27E9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2501 JUMP JUMPDEST PUSH2 0x27F2 DUP2 PUSH2 0x2334 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2817 DUP2 DUP5 PUSH2 0x27C4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2828 DUP2 PUSH2 0x22E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2845 DUP2 PUSH2 0x281F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2864 JUMPI PUSH2 0x2863 PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2872 DUP7 DUP3 DUP8 ADD PUSH2 0x2836 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2893 JUMPI PUSH2 0x2892 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x289F DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28C0 JUMPI PUSH2 0x28BF PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x28CC DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x28EF JUMPI PUSH2 0x28EE PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x290D JUMPI PUSH2 0x290C PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2919 DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x293A JUMPI PUSH2 0x2939 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2946 DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2957 DUP7 DUP3 DUP8 ADD PUSH2 0x2836 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2999 DUP3 PUSH2 0x2961 JUMP JUMPDEST PUSH2 0x29A3 DUP2 DUP6 PUSH2 0x296C JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x29B5 DUP6 PUSH2 0x2977 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x29F1 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x29D2 DUP6 DUP3 PUSH2 0x2564 JUMP JUMPDEST SWAP5 POP PUSH2 0x29DD DUP4 PUSH2 0x2981 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x29B9 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A1D DUP2 DUP5 PUSH2 0x298E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A3B JUMPI PUSH2 0x2A3A PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A49 DUP5 DUP3 DUP6 ADD PUSH2 0x2836 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A5B DUP2 PUSH2 0x26B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A7B DUP2 DUP8 PUSH2 0x27C4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2A8F DUP2 DUP7 PUSH2 0x27C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A9E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2A52 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2AB0 DUP2 DUP5 PUSH2 0x27C4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AD2 JUMPI PUSH2 0x2AD1 PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AF0 JUMPI PUSH2 0x2AEF PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2AFC DUP6 DUP3 DUP7 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B0D DUP6 DUP3 DUP7 ADD PUSH2 0x2836 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B30 JUMPI PUSH2 0x2B2F PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B4E JUMPI PUSH2 0x2B4D PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2B5A DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B7B JUMPI PUSH2 0x2B7A PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2B87 DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BA8 JUMPI PUSH2 0x2BA7 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2BB4 DUP7 DUP3 DUP8 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2BD8 JUMPI PUSH2 0x2BD7 PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BF6 JUMPI PUSH2 0x2BF5 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2C02 DUP8 DUP3 DUP9 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C23 JUMPI PUSH2 0x2C22 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2C2F DUP8 DUP3 DUP9 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2C40 DUP8 DUP3 DUP9 ADD PUSH2 0x26DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C61 JUMPI PUSH2 0x2C60 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2C6D DUP8 DUP3 DUP9 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C95 JUMPI PUSH2 0x2C94 PUSH2 0x2320 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB3 JUMPI PUSH2 0x2CB2 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2CBF DUP9 DUP3 DUP10 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CE0 JUMPI PUSH2 0x2CDF PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2CEC DUP9 DUP3 DUP10 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D0D JUMPI PUSH2 0x2D0C PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2D19 DUP9 DUP3 DUP10 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D3A JUMPI PUSH2 0x2D39 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2D46 DUP9 DUP3 DUP10 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D67 JUMPI PUSH2 0x2D66 PUSH2 0x2325 JUMP JUMPDEST JUMPDEST PUSH2 0x2D73 DUP9 DUP3 DUP10 ADD PUSH2 0x2442 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x6D5F000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DBC DUP3 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0x2DC6 DUP2 DUP6 PUSH2 0x2DA6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DD6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2501 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DED DUP3 PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x2DFD DUP3 DUP5 PUSH2 0x2DB1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E14 DUP3 DUP5 PUSH2 0x2DB1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E95 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2EA8 JUMPI PUSH2 0x2EA7 PUSH2 0x2E4E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2EDB DUP2 PUSH2 0x2E7D JUMP JUMPDEST PUSH2 0x2EE5 DUP2 DUP7 PUSH2 0x2EAE JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2F00 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2F15 JUMPI PUSH2 0x2F48 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x2F48 JUMP JUMPDEST PUSH2 0x2F1E DUP6 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F40 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F21 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F5D DUP3 DUP5 PUSH2 0x2ECE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2FA2 DUP3 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2FD4 JUMPI PUSH2 0x2FD3 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3041 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3004 JUMP JUMPDEST PUSH2 0x304B DUP7 DUP4 PUSH2 0x3004 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3088 PUSH2 0x3083 PUSH2 0x307E DUP5 PUSH2 0x22E2 JUMP JUMPDEST PUSH2 0x3063 JUMP JUMPDEST PUSH2 0x22E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30A2 DUP4 PUSH2 0x306D JUMP JUMPDEST PUSH2 0x30B6 PUSH2 0x30AE DUP3 PUSH2 0x308F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3011 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x30CB PUSH2 0x30BE JUMP JUMPDEST PUSH2 0x30D6 DUP2 DUP5 DUP5 PUSH2 0x3099 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x30FA JUMPI PUSH2 0x30EF PUSH1 0x0 DUP3 PUSH2 0x30C3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x30DC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x313F JUMPI PUSH2 0x3110 DUP2 PUSH2 0x2FDF JUMP JUMPDEST PUSH2 0x3119 DUP5 PUSH2 0x2FF4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3128 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x313C PUSH2 0x3134 DUP6 PUSH2 0x2FF4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x30DB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3162 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3144 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317B DUP4 DUP4 PUSH2 0x3151 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3194 DUP3 PUSH2 0x24E5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31AD JUMPI PUSH2 0x31AC PUSH2 0x2345 JUMP JUMPDEST JUMPDEST PUSH2 0x31B7 DUP3 SLOAD PUSH2 0x2E7D JUMP JUMPDEST PUSH2 0x31C2 DUP3 DUP3 DUP6 PUSH2 0x30FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x31F5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x31E3 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x31ED DUP6 DUP3 PUSH2 0x316F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3255 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3203 DUP7 PUSH2 0x2FDF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x322B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3206 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3248 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3244 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3151 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3275 DUP3 PUSH2 0x325D JUMP JUMPDEST SWAP2 POP PUSH2 0x3280 DUP4 PUSH2 0x325D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x3299 JUMPI PUSH2 0x3298 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AA DUP3 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x32B5 DUP4 PUSH2 0x22E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x32CD JUMPI PUSH2 0x32CC PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x332A JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x3306 JUMPI PUSH2 0x3305 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x3315 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x3323 DUP6 PUSH2 0x32D3 JUMP JUMPDEST SWAP5 POP PUSH2 0x32EA JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3343 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x33FF JUMP JUMPDEST DUP2 PUSH2 0x3351 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x33FF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3367 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3371 JUMPI PUSH2 0x33A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x33FF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3383 JUMPI PUSH2 0x3382 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x339A JUMPI PUSH2 0x3399 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST POP PUSH2 0x33FF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x33D5 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x33D0 JUMPI PUSH2 0x33CF PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST PUSH2 0x33FF JUMP JUMPDEST PUSH2 0x33E2 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x32E0 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x33F9 JUMPI PUSH2 0x33F8 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3411 DUP3 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x341C DUP4 PUSH2 0x22E2 JUMP JUMPDEST SWAP3 POP PUSH2 0x3449 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x3333 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345C DUP3 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3467 DUP4 PUSH2 0x22E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3475 DUP2 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x348C JUMPI PUSH2 0x348B PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x349E DUP3 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x34A9 DUP4 PUSH2 0x22E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x34C1 JUMPI PUSH2 0x34C0 PUSH2 0x2F68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY SWAP13 0xDC SMOD SWAP15 0x5C 0xDE PUSH2 0x9269 SUB DUP12 PUSH5 0xF9EF031827 0xEA 0xC7 JUMP 0xE1 0xB3 EXTCODEHASH 0xA6 RETURNDATACOPY TIMESTAMP SDIV MLOAD 0x4E SSTORE PUSH24 0x64736F6C6343000811003300000000000000000000000000 ","sourceMap":"111:11797:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;892:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7216:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4742:982;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8307:646;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11205:130;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7660:639;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1552:379;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3238:436;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;934:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7037:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8961:271;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2696:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2231:455;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7538:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10517:491;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6904:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1139:68;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5732:559;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6720:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7312:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1261:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2814:416;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11016:181;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1939:284;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6499:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10099:412;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9242:851;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4064:670;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3682:374;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7407:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6299:192;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11343:562;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;892:35;;;;:::o;7216:88::-;7260:7;7287:9;;7280:16;;7216:88;:::o;4742:982::-;4861:15;4894:24;4933:18;4973:9;4968:258;4992:9;;4988:1;:13;4968:258;;;5138:6;5122:24;;;;;;5061:10;5092:19;5109:1;5092:16;:19::i;:::-;5072:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;5061:52;;;;;;:::i;:::-;;;;;;;;;;;;;5114:1;5061:55;;;;;;;:::i;:::-;;;5045:73;;;;;;:::i;:::-;;;;;;;;:101;5023:192;;5181:18;;;;;:::i;:::-;;;;5023:192;5003:3;;;;;:::i;:::-;;;;4968:258;;;;5236:36;5288:16;5275:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5236:69;;5321:9;5316:361;5340:9;;5336:1;:13;5316:361;;;5486:6;5470:24;;;;;;5409:10;5440:19;5457:1;5440:16;:19::i;:::-;5420:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;5409:52;;;;;;:::i;:::-;;;;;;;;;;;;;5462:1;5409:55;;;;;;;:::i;:::-;;;5393:73;;;;;;:::i;:::-;;;;;;;;:101;5371:295;;5564:10;5595:19;5612:1;5595:16;:19::i;:::-;5575:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;5564:52;;;;;;:::i;:::-;;;;;;;;;;;;;5617:1;5564:55;;;;;;;:::i;:::-;;;5529:90;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;5550:10;5529:32;;;;;;;;:::i;:::-;;;;;;;:90;;;;5638:12;;;;;:::i;:::-;;;;5371:295;5351:3;;;;;:::i;:::-;;;;5316:361;;;;5696:20;5689:27;;;;;4742:982;;;:::o;8307:646::-;8423:15;8456:33;8505:2;8492:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8456:52;;8521:27;8570:9;8565:344;8589:12;;8585:1;:16;8565:344;;;8732:7;8709:33;;;;;;8661:13;:16;8675:1;8661:16;;;;;;;;;;;:25;;8645:43;;;;;;:::i;:::-;;;;;;;;:97;8623:275;;8818:13;:16;8832:1;8818:16;;;;;;;;;;;:24;;8777:65;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;8795:19;8777:38;;;;;;;;:::i;:::-;;;;;;;:65;;;;8861:21;;;;;:::i;:::-;;;;8623:275;8603:3;;;;;:::i;:::-;;;;8565:344;;;;8928:17;8921:24;;;;8307:646;;;:::o;11205:130::-;11320:7;11295:12;11308:8;11295:22;;;;;;:::i;:::-;;;;;;;;;;;;;:32;;;;;;:::i;:::-;;11205:130;;:::o;7660:639::-;7769:15;7802:33;7851:2;7838:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7802:52;;7867:27;7916:9;7911:344;7935:12;;7931:1;:16;7911:344;;;8078:7;8055:33;;;;;;8007:13;:16;8021:1;8007:16;;;;;;;;;;;:25;;7991:43;;;;;;:::i;:::-;;;;;;;;:97;7969:275;;8164:13;:16;8178:1;8164:16;;;;;;;;;;;:24;;8123:65;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;8141:19;8123:38;;;;;;;;:::i;:::-;;;;;;;:65;;;;8207:21;;;;;:::i;:::-;;;;7969:275;7949:3;;;;;:::i;:::-;;;;7911:344;;;;8274:17;8267:24;;;;7660:639;;;:::o;1552:379::-;1689:7;1709:74;1743:27;1760:9;;1743:16;:27::i;:::-;1722:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;1773:9;1709:12;:74::i;:::-;1794:51;1809:14;;1825:8;1835:9;1794:14;:51::i;:::-;1858:9;;:11;;;;;;;;;:::i;:::-;;;;;;1880:14;;:16;;;;;;;;;:::i;:::-;;;;;;1914:9;;1907:16;;1552:379;;;;;:::o;3238:436::-;3353:7;3383:9;3395:1;3383:13;;3378:268;3402:9;;3398:1;:13;3378:268;;;3565:9;3549:27;;;;;;3471:10;3502:19;3519:1;3502:16;:19::i;:::-;3482:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;3471:52;;;;;;:::i;:::-;;;;;;;;;;;;;3524:1;3471:55;;;;;;;:::i;:::-;;;3455:73;;;;;;:::i;:::-;;;;;;;;:121;3433:202;;3618:1;3611:8;;;;;3433:202;3413:3;;;;;:::i;:::-;;;;3378:268;;;;3665:1;3658:8;;3238:436;;;;:::o;934:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7037:171::-;7143:13;7181:10;7192:7;7181:19;;;;;;:::i;:::-;;;;;;;;;;;;;7174:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7037:171;;;:::o;8961:271::-;9137:87;;;;;;;;9175:7;9137:87;;;;9205:7;9137:87;;;9109:13;:25;9123:10;9109:25;;;;;;;;;;;:115;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;8961:271;;;:::o;2696:112::-;2794:4;2767:15;2783:7;2767:24;;;;;;:::i;:::-;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2696:112;:::o;2231:455::-;2372:7;2392:26;2442:27;2459:9;;2442:16;:27::i;:::-;2421:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;2392:78;;2483:51;2496:12;2510;2524:9;2483:12;:51::i;:::-;2545:34;2561:12;2545:34;;;;;;;;;;;;;;;;;:15;:34::i;:::-;2622:5;2590:15;2606:12;2590:29;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2638:9;;:11;;;;;;;;;:::i;:::-;;;;;;2669:9;;2662:16;;;2231:455;;;;;:::o;7538:114::-;7596:13;7629:8;7638:5;7629:15;;;;;;:::i;:::-;;;;;;;;;;;;;7622:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7538:114;;;:::o;10517:491::-;10637:13;10671:9;10666:303;10690:19;;10686:1;:23;10666:303;;;10854:8;10831:34;;;;;;10773:19;:22;10793:1;10773:22;;;;;;;;;;;:31;;10757:49;;;;;;:::i;:::-;;;;;;;;:108;10731:223;;10915:19;10932:1;10915:16;:19::i;:::-;10908:26;;;;;10731:223;10711:3;;;;;:::i;:::-;;;;10666:303;;;;10983:11;;;;;;;;;;;;;;;;;;;10517:491;;;;:::o;6904:125::-;6966:16;;:::i;:::-;7002:10;7013:7;7002:19;;;;;;:::i;:::-;;;;;;;;;;;;;6995:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6904:125;;;:::o;1139:68::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5732:559::-;5874:7;5904:9;5916:1;5904:13;;5899:364;5923:14;;5919:1;:18;5899:364;;;6069:7;6046:33;;;;;;5997:14;:17;6012:1;5997:17;;;;;;;;;;;:26;;5981:44;;;;;;:::i;:::-;;;;;;;;:98;:212;;;;;6182:9;6166:27;;;;;;6116:14;:17;6131:1;6116:17;;;;;;;;;;;:27;;6100:45;;;;;;:::i;:::-;;;;;;;;:93;5981:212;5959:293;;;6235:1;6228:8;;;;;5959:293;5939:3;;;;;:::i;:::-;;;;5899:364;;;;6282:1;6275:8;;5732:559;;;;;:::o;6720:176::-;6861:9;6839:10;6850:7;6839:19;;;;;;:::i;:::-;;;;;;;;;;;;;:31;;;;;;:::i;:::-;;6720:176;;:::o;7312:87::-;7355:7;7382:9;;7375:16;;7312:87;:::o;1261:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2814:416::-;2929:7;2959:9;2971:1;2959:13;;2954:248;2978:9;;2974:1;:13;2954:248;;;3121:9;3105:27;;;;;;3047:10;3078:19;3095:1;3078:16;:19::i;:::-;3058:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;3047:52;;;;;;:::i;:::-;;;;;;;;;;;;;3031:70;;;;;;:::i;:::-;;;;;;;;:101;3009:182;;3174:1;3167:8;;;;;3009:182;2989:3;;;;;:::i;:::-;;;;2954:248;;;;3221:1;3214:8;;2814:416;;;;:::o;11016:181::-;11129:13;11167:12;11180:8;11167:22;;;;;;:::i;:::-;;;;;;;;;;;;;11160:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11016:181;;;:::o;1939:284::-;2124:91;;;;;;;;2164:7;2124:91;;;;2194:9;2124:91;;;2093:14;:28;2108:12;2093:28;;;;;;;;;;;:122;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;1939:284;;;:::o;6499:213::-;6657:47;;;;;;;;6680:12;6657:47;;;;6694:9;6657:47;;;:10;6668:7;6657:19;;;;;;:::i;:::-;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;6499:213;;;:::o;10099:412::-;10158:11;10197:9;10209:1;10197:13;;10192:279;10222:4;10216:18;10212:1;:22;10192:279;;;10291:1;10285:2;10273:4;10279:1;10267:14;;;;;;;;:::i;:::-;;;;;;;;;;10261:21;;:26;;;;:::i;:::-;10260:32;;;:68;;;;10327:1;10321:2;10309:4;10315:1;10303:14;;;;;;;;:::i;:::-;;;;;;;;;;10297:21;;:26;;;;:::i;:::-;10296:32;;;10260:68;10256:119;;;10357:1;10349:10;;;;;10256:119;10457:1;10453;10438:4;10432:18;:22;;;;:::i;:::-;:26;;;;:::i;:::-;10427:2;:32;;;;:::i;:::-;10421:2;10409:4;10415:1;10403:14;;;;;;;;:::i;:::-;;;;;;;;;;10397:21;;:26;;;;:::i;:::-;10396:63;;;;;;:::i;:::-;10389:70;;;;;:::i;:::-;;;10236:3;;;;;:::i;:::-;;;;10192:279;;;;10099:412;;;;:::o;9242:851::-;9427:20;9450:28;9469:8;9450:18;:28::i;:::-;9427:51;;9538:12;;;;;;;;;;;;;;;;;9522:30;;;;;;9510:6;9494:24;;;;;;:58;9489:595;;9610:176;;;;;;;;9661:8;9610:176;;;;9698:8;9610:176;;;;9733:6;9610:176;;;;;;9765:5;9610:176;;;9570:19;:38;9590:17;9600:6;9590:9;:17::i;:::-;9570:38;;;;;;;;;;;:216;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;9489:595;;;9860:176;;;;;;;;9911:8;9860:176;;;;9948:8;9860:176;;;;9983:6;9860:176;;;;;;10015:5;9860:176;;;9817:19;:40;9837:19;;9817:40;;;;;;;;;;;:219;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;10051:19;;:21;;;;;;;;;:::i;:::-;;;;;;9489:595;9414:679;9242:851;;;;:::o;4064:670::-;4186:15;4219:35;4270:2;4257:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4219:54;;4286:29;4337:9;4332:356;4356:14;;4352:1;:18;4332:356;;;4502:7;4479:33;;;;;;4430:14;:17;4445:1;4430:17;;;;;;;;;;;:26;;4414:44;;;;;;:::i;:::-;;;;;;;;:98;4392:285;;4592:14;:17;4607:1;4592:17;;;;;;;;;;;:27;;4547:72;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;4567:21;4547:42;;;;;;;;:::i;:::-;;;;;;;:72;;;;4638:23;;;;;:::i;:::-;;;;4392:285;4372:3;;;;;:::i;:::-;;;;4332:356;;;;4707:19;4700:26;;;;4064:670;;;:::o;3682:374::-;3793:7;3823:9;3835:1;3823:13;;3818:210;3842:7;;3838:1;:11;3818:210;;;3963:7;3947:25;;;;;;3891:8;3920:19;3937:1;3920:16;:19::i;:::-;3900:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;3891:50;;;;;;:::i;:::-;;;;;;;;;;;;;3875:68;;;;;;:::i;:::-;;;;;;;;:97;3871:146;;4000:1;3993:8;;;;;3871:146;3851:3;;;;;:::i;:::-;;;;3818:210;;;;4047:1;4040:8;;3682:374;;;;:::o;7407:123::-;7515:7;7497:8;7506:5;7497:15;;;;;;:::i;:::-;;;;;;;;;;;;;:25;;;;;;:::i;:::-;;7407:123;;:::o;6299:192::-;6418:13;6456:14;6471:8;6456:24;;;;;;:::i;:::-;;;;;;;;;;;;;6481:1;6456:27;;;;;;;:::i;:::-;;;6449:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6299:192;;;:::o;11343:562::-;11554:21;11578:88;11612:8;11635:10;11646:8;11635:20;;;;;;:::i;:::-;;;;;;;;;;;;;11578:88;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;:88::i;:::-;11554:112;;11679:60;11699:8;11708;11717:10;11728;11679:19;:60::i;:::-;11760:34;11776:8;11786:7;11760:15;:34::i;:::-;11807:45;11820:12;;11834:8;11844:7;11807:12;:45::i;:::-;11863:12;;:14;;;;;;;;;:::i;:::-;;;;;;11888:7;;:9;;;;;;;;;:::i;:::-;;;;;;11543:362;11343:562;;;;;:::o;447:696:0:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;10139:916:1:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:117;878:1;875;868:12;892:117;1001:1;998;991:12;1015:102;1056:6;1107:2;1103:7;1098:2;1091:5;1087:14;1083:28;1073:38;;1015:102;;;:::o;1123:180::-;1171:77;1168:1;1161:88;1268:4;1265:1;1258:15;1292:4;1289:1;1282:15;1309:281;1392:27;1414:4;1392:27;:::i;:::-;1384:6;1380:40;1522:6;1510:10;1507:22;1486:18;1474:10;1471:34;1468:62;1465:88;;;1533:18;;:::i;:::-;1465:88;1573:10;1569:2;1562:22;1352:238;1309:281;;:::o;1596:129::-;1630:6;1657:20;;:::i;:::-;1647:30;;1686:33;1714:4;1706:6;1686:33;:::i;:::-;1596:129;;;:::o;1731:308::-;1793:4;1883:18;1875:6;1872:30;1869:56;;;1905:18;;:::i;:::-;1869:56;1943:29;1965:6;1943:29;:::i;:::-;1935:37;;2027:4;2021;2017:15;2009:23;;1731:308;;;:::o;2045:146::-;2142:6;2137:3;2132;2119:30;2183:1;2174:6;2169:3;2165:16;2158:27;2045:146;;;:::o;2197:425::-;2275:5;2300:66;2316:49;2358:6;2316:49;:::i;:::-;2300:66;:::i;:::-;2291:75;;2389:6;2382:5;2375:21;2427:4;2420:5;2416:16;2465:3;2456:6;2451:3;2447:16;2444:25;2441:112;;;2472:79;;:::i;:::-;2441:112;2562:54;2609:6;2604:3;2599;2562:54;:::i;:::-;2281:341;2197:425;;;;;:::o;2642:340::-;2698:5;2747:3;2740:4;2732:6;2728:17;2724:27;2714:122;;2755:79;;:::i;:::-;2714:122;2872:6;2859:20;2897:79;2972:3;2964:6;2957:4;2949:6;2945:17;2897:79;:::i;:::-;2888:88;;2704:278;2642:340;;;;:::o;2988:509::-;3057:6;3106:2;3094:9;3085:7;3081:23;3077:32;3074:119;;;3112:79;;:::i;:::-;3074:119;3260:1;3249:9;3245:17;3232:31;3290:18;3282:6;3279:30;3276:117;;;3312:79;;:::i;:::-;3276:117;3417:63;3472:7;3463:6;3452:9;3448:22;3417:63;:::i;:::-;3407:73;;3203:287;2988:509;;;;:::o;3503:124::-;3580:6;3614:5;3608:12;3598:22;;3503:124;;;:::o;3633:194::-;3742:11;3776:6;3771:3;3764:19;3816:4;3811:3;3807:14;3792:29;;3633:194;;;;:::o;3833:142::-;3910:4;3933:3;3925:11;;3963:4;3958:3;3954:14;3946:22;;3833:142;;;:::o;3981:99::-;4033:6;4067:5;4061:12;4051:22;;3981:99;;;:::o;4086:159::-;4160:11;4194:6;4189:3;4182:19;4234:4;4229:3;4225:14;4210:29;;4086:159;;;;:::o;4251:246::-;4332:1;4342:113;4356:6;4353:1;4350:13;4342:113;;;4441:1;4436:3;4432:11;4426:18;4422:1;4417:3;4413:11;4406:39;4378:2;4375:1;4371:10;4366:15;;4342:113;;;4489:1;4480:6;4475:3;4471:16;4464:27;4313:184;4251:246;;;:::o;4503:357::-;4581:3;4609:39;4642:5;4609:39;:::i;:::-;4664:61;4718:6;4713:3;4664:61;:::i;:::-;4657:68;;4734:65;4792:6;4787:3;4780:4;4773:5;4769:16;4734:65;:::i;:::-;4824:29;4846:6;4824:29;:::i;:::-;4819:3;4815:39;4808:46;;4585:275;4503:357;;;;:::o;4866:196::-;4955:10;4990:66;5052:3;5044:6;4990:66;:::i;:::-;4976:80;;4866:196;;;;:::o;5068:123::-;5148:4;5180;5175:3;5171:14;5163:22;;5068:123;;;:::o;5225:991::-;5364:3;5393:64;5451:5;5393:64;:::i;:::-;5473:96;5562:6;5557:3;5473:96;:::i;:::-;5466:103;;5595:3;5640:4;5632:6;5628:17;5623:3;5619:27;5670:66;5730:5;5670:66;:::i;:::-;5759:7;5790:1;5775:396;5800:6;5797:1;5794:13;5775:396;;;5871:9;5865:4;5861:20;5856:3;5849:33;5922:6;5916:13;5950:84;6029:4;6014:13;5950:84;:::i;:::-;5942:92;;6057:70;6120:6;6057:70;:::i;:::-;6047:80;;6156:4;6151:3;6147:14;6140:21;;5835:336;5822:1;5819;5815:9;5810:14;;5775:396;;;5779:14;6187:4;6180:11;;6207:3;6200:10;;5369:847;;;;;5225:991;;;;:::o;6222:413::-;6385:4;6423:2;6412:9;6408:18;6400:26;;6472:9;6466:4;6462:20;6458:1;6447:9;6443:17;6436:47;6500:128;6623:4;6614:6;6500:128;:::i;:::-;6492:136;;6222:413;;;;:::o;6641:834::-;6729:6;6737;6786:2;6774:9;6765:7;6761:23;6757:32;6754:119;;;6792:79;;:::i;:::-;6754:119;6940:1;6929:9;6925:17;6912:31;6970:18;6962:6;6959:30;6956:117;;;6992:79;;:::i;:::-;6956:117;7097:63;7152:7;7143:6;7132:9;7128:22;7097:63;:::i;:::-;7087:73;;6883:287;7237:2;7226:9;7222:18;7209:32;7268:18;7260:6;7257:30;7254:117;;;7290:79;;:::i;:::-;7254:117;7395:63;7450:7;7441:6;7430:9;7426:22;7395:63;:::i;:::-;7385:73;;7180:288;6641:834;;;;;:::o;7481:126::-;7518:7;7558:42;7551:5;7547:54;7536:65;;7481:126;;;:::o;7613:96::-;7650:7;7679:24;7697:5;7679:24;:::i;:::-;7668:35;;7613:96;;;:::o;7715:122::-;7788:24;7806:5;7788:24;:::i;:::-;7781:5;7778:35;7768:63;;7827:1;7824;7817:12;7768:63;7715:122;:::o;7843:139::-;7889:5;7927:6;7914:20;7905:29;;7943:33;7970:5;7943:33;:::i;:::-;7843:139;;;;:::o;7988:979::-;8085:6;8093;8101;8150:2;8138:9;8129:7;8125:23;8121:32;8118:119;;;8156:79;;:::i;:::-;8118:119;8276:1;8301:53;8346:7;8337:6;8326:9;8322:22;8301:53;:::i;:::-;8291:63;;8247:117;8431:2;8420:9;8416:18;8403:32;8462:18;8454:6;8451:30;8448:117;;;8484:79;;:::i;:::-;8448:117;8589:63;8644:7;8635:6;8624:9;8620:22;8589:63;:::i;:::-;8579:73;;8374:288;8729:2;8718:9;8714:18;8701:32;8760:18;8752:6;8749:30;8746:117;;;8782:79;;:::i;:::-;8746:117;8887:63;8942:7;8933:6;8922:9;8918:22;8887:63;:::i;:::-;8877:73;;8672:288;7988:979;;;;;:::o;8973:90::-;9007:7;9050:5;9043:13;9036:21;9025:32;;8973:90;;;:::o;9069:109::-;9150:21;9165:5;9150:21;:::i;:::-;9145:3;9138:34;9069:109;;:::o;9184:210::-;9271:4;9309:2;9298:9;9294:18;9286:26;;9322:65;9384:1;9373:9;9369:17;9360:6;9322:65;:::i;:::-;9184:210;;;;:::o;9400:169::-;9484:11;9518:6;9513:3;9506:19;9558:4;9553:3;9549:14;9534:29;;9400:169;;;;:::o;9575:377::-;9663:3;9691:39;9724:5;9691:39;:::i;:::-;9746:71;9810:6;9805:3;9746:71;:::i;:::-;9739:78;;9826:65;9884:6;9879:3;9872:4;9865:5;9861:16;9826:65;:::i;:::-;9916:29;9938:6;9916:29;:::i;:::-;9911:3;9907:39;9900:46;;9667:285;9575:377;;;;:::o;9958:313::-;10071:4;10109:2;10098:9;10094:18;10086:26;;10158:9;10152:4;10148:20;10144:1;10133:9;10129:17;10122:47;10186:78;10259:4;10250:6;10186:78;:::i;:::-;10178:86;;9958:313;;;;:::o;10277:122::-;10350:24;10368:5;10350:24;:::i;:::-;10343:5;10340:35;10330:63;;10389:1;10386;10379:12;10330:63;10277:122;:::o;10405:139::-;10451:5;10489:6;10476:20;10467:29;;10505:33;10532:5;10505:33;:::i;:::-;10405:139;;;;:::o;10550:979::-;10647:6;10655;10663;10712:2;10700:9;10691:7;10687:23;10683:32;10680:119;;;10718:79;;:::i;:::-;10680:119;10838:1;10863:53;10908:7;10899:6;10888:9;10884:22;10863:53;:::i;:::-;10853:63;;10809:117;10993:2;10982:9;10978:18;10965:32;11024:18;11016:6;11013:30;11010:117;;;11046:79;;:::i;:::-;11010:117;11151:63;11206:7;11197:6;11186:9;11182:22;11151:63;:::i;:::-;11141:73;;10936:288;11291:2;11280:9;11276:18;11263:32;11322:18;11314:6;11311:30;11308:117;;;11344:79;;:::i;:::-;11308:117;11449:63;11504:7;11495:6;11484:9;11480:22;11449:63;:::i;:::-;11439:73;;11234:288;10550:979;;;;;:::o;11535:::-;11632:6;11640;11648;11697:2;11685:9;11676:7;11672:23;11668:32;11665:119;;;11703:79;;:::i;:::-;11665:119;11851:1;11840:9;11836:17;11823:31;11881:18;11873:6;11870:30;11867:117;;;11903:79;;:::i;:::-;11867:117;12008:63;12063:7;12054:6;12043:9;12039:22;12008:63;:::i;:::-;11998:73;;11794:287;12148:2;12137:9;12133:18;12120:32;12179:18;12171:6;12168:30;12165:117;;;12201:79;;:::i;:::-;12165:117;12306:63;12361:7;12352:6;12341:9;12337:22;12306:63;:::i;:::-;12296:73;;12091:288;12418:2;12444:53;12489:7;12480:6;12469:9;12465:22;12444:53;:::i;:::-;12434:63;;12389:118;11535:979;;;;;:::o;12520:114::-;12595:6;12623:4;12613:14;;12520:114;;;:::o;12640:153::-;12747:11;12784:3;12769:18;;12640:153;;;;:::o;12799:108::-;12874:4;12897:3;12889:11;;12799:108;;;:::o;12913:121::-;12991:4;13023;13018:3;13014:14;13006:22;;12913:121;;;:::o;13070:979::-;13205:3;13234:62;13290:5;13234:62;:::i;:::-;13312:94;13399:6;13394:3;13312:94;:::i;:::-;13305:101;;13432:3;13477:4;13469:6;13465:17;13460:3;13456:27;13507:64;13565:5;13507:64;:::i;:::-;13594:7;13625:1;13610:394;13635:6;13632:1;13629:13;13610:394;;;13706:9;13700:4;13696:20;13691:3;13684:33;13757:6;13751:13;13785:84;13864:4;13849:13;13785:84;:::i;:::-;13777:92;;13892:68;13953:6;13892:68;:::i;:::-;13882:78;;13989:4;13984:3;13980:14;13973:21;;13670:334;13657:1;13654;13650:9;13645:14;;13610:394;;;13614:14;14020:4;14013:11;;14040:3;14033:10;;13210:839;;;;;13070:979;;;;:::o;14055:405::-;14214:4;14252:2;14241:9;14237:18;14229:26;;14301:9;14295:4;14291:20;14287:1;14276:9;14272:17;14265:47;14329:124;14448:4;14439:6;14329:124;:::i;:::-;14321:132;;14055:405;;;;:::o;14466:329::-;14525:6;14574:2;14562:9;14553:7;14549:23;14545:32;14542:119;;;14580:79;;:::i;:::-;14542:119;14700:1;14725:53;14770:7;14761:6;14750:9;14746:22;14725:53;:::i;:::-;14715:63;;14671:117;14466:329;;;;:::o;14801:118::-;14888:24;14906:5;14888:24;:::i;:::-;14883:3;14876:37;14801:118;;:::o;14925:826::-;15162:4;15200:3;15189:9;15185:19;15177:27;;15250:9;15244:4;15240:20;15236:1;15225:9;15221:17;15214:47;15278:78;15351:4;15342:6;15278:78;:::i;:::-;15270:86;;15403:9;15397:4;15393:20;15388:2;15377:9;15373:18;15366:48;15431:78;15504:4;15495:6;15431:78;:::i;:::-;15423:86;;15519:72;15587:2;15576:9;15572:18;15563:6;15519:72;:::i;:::-;15638:9;15632:4;15628:20;15623:2;15612:9;15608:18;15601:48;15666:78;15739:4;15730:6;15666:78;:::i;:::-;15658:86;;14925:826;;;;;;;:::o;15757:654::-;15835:6;15843;15892:2;15880:9;15871:7;15867:23;15863:32;15860:119;;;15898:79;;:::i;:::-;15860:119;16046:1;16035:9;16031:17;16018:31;16076:18;16068:6;16065:30;16062:117;;;16098:79;;:::i;:::-;16062:117;16203:63;16258:7;16249:6;16238:9;16234:22;16203:63;:::i;:::-;16193:73;;15989:287;16315:2;16341:53;16386:7;16377:6;16366:9;16362:22;16341:53;:::i;:::-;16331:63;;16286:118;15757:654;;;;;:::o;16417:1159::-;16524:6;16532;16540;16589:2;16577:9;16568:7;16564:23;16560:32;16557:119;;;16595:79;;:::i;:::-;16557:119;16743:1;16732:9;16728:17;16715:31;16773:18;16765:6;16762:30;16759:117;;;16795:79;;:::i;:::-;16759:117;16900:63;16955:7;16946:6;16935:9;16931:22;16900:63;:::i;:::-;16890:73;;16686:287;17040:2;17029:9;17025:18;17012:32;17071:18;17063:6;17060:30;17057:117;;;17093:79;;:::i;:::-;17057:117;17198:63;17253:7;17244:6;17233:9;17229:22;17198:63;:::i;:::-;17188:73;;16983:288;17338:2;17327:9;17323:18;17310:32;17369:18;17361:6;17358:30;17355:117;;;17391:79;;:::i;:::-;17355:117;17496:63;17551:7;17542:6;17531:9;17527:22;17496:63;:::i;:::-;17486:73;;17281:288;16417:1159;;;;;:::o;17582:1305::-;17698:6;17706;17714;17722;17771:3;17759:9;17750:7;17746:23;17742:33;17739:120;;;17778:79;;:::i;:::-;17739:120;17926:1;17915:9;17911:17;17898:31;17956:18;17948:6;17945:30;17942:117;;;17978:79;;:::i;:::-;17942:117;18083:63;18138:7;18129:6;18118:9;18114:22;18083:63;:::i;:::-;18073:73;;17869:287;18223:2;18212:9;18208:18;18195:32;18254:18;18246:6;18243:30;18240:117;;;18276:79;;:::i;:::-;18240:117;18381:63;18436:7;18427:6;18416:9;18412:22;18381:63;:::i;:::-;18371:73;;18166:288;18493:2;18519:53;18564:7;18555:6;18544:9;18540:22;18519:53;:::i;:::-;18509:63;;18464:118;18649:2;18638:9;18634:18;18621:32;18680:18;18672:6;18669:30;18666:117;;;18702:79;;:::i;:::-;18666:117;18807:63;18862:7;18853:6;18842:9;18838:22;18807:63;:::i;:::-;18797:73;;18592:288;17582:1305;;;;;;;:::o;18893:1811::-;19038:6;19046;19054;19062;19070;19119:3;19107:9;19098:7;19094:23;19090:33;19087:120;;;19126:79;;:::i;:::-;19087:120;19274:1;19263:9;19259:17;19246:31;19304:18;19296:6;19293:30;19290:117;;;19326:79;;:::i;:::-;19290:117;19431:63;19486:7;19477:6;19466:9;19462:22;19431:63;:::i;:::-;19421:73;;19217:287;19571:2;19560:9;19556:18;19543:32;19602:18;19594:6;19591:30;19588:117;;;19624:79;;:::i;:::-;19588:117;19729:63;19784:7;19775:6;19764:9;19760:22;19729:63;:::i;:::-;19719:73;;19514:288;19869:2;19858:9;19854:18;19841:32;19900:18;19892:6;19889:30;19886:117;;;19922:79;;:::i;:::-;19886:117;20027:63;20082:7;20073:6;20062:9;20058:22;20027:63;:::i;:::-;20017:73;;19812:288;20167:2;20156:9;20152:18;20139:32;20198:18;20190:6;20187:30;20184:117;;;20220:79;;:::i;:::-;20184:117;20325:63;20380:7;20371:6;20360:9;20356:22;20325:63;:::i;:::-;20315:73;;20110:288;20465:3;20454:9;20450:19;20437:33;20497:18;20489:6;20486:30;20483:117;;;20519:79;;:::i;:::-;20483:117;20624:63;20679:7;20670:6;20659:9;20655:22;20624:63;:::i;:::-;20614:73;;20408:289;18893:1811;;;;;;;;:::o;20710:179::-;20878:4;20873:3;20866:17;20710:179;:::o;20895:148::-;20997:11;21034:3;21019:18;;20895:148;;;;:::o;21049:390::-;21155:3;21183:39;21216:5;21183:39;:::i;:::-;21238:89;21320:6;21315:3;21238:89;:::i;:::-;21231:96;;21336:65;21394:6;21389:3;21382:4;21375:5;21371:16;21336:65;:::i;:::-;21426:6;21421:3;21417:16;21410:23;;21159:280;21049:390;;;;:::o;21445:539::-;21667:3;21682:137;21815:3;21682:137;:::i;:::-;21844:1;21839:3;21835:11;21828:18;;21863:95;21954:3;21945:6;21863:95;:::i;:::-;21856:102;;21975:3;21968:10;;21445:539;;;;:::o;21990:275::-;22122:3;22144:95;22235:3;22226:6;22144:95;:::i;:::-;22137:102;;22256:3;22249:10;;21990:275;;;;:::o;22271:180::-;22319:77;22316:1;22309:88;22416:4;22413:1;22406:15;22440:4;22437:1;22430:15;22457:180;22505:77;22502:1;22495:88;22602:4;22599:1;22592:15;22626:4;22623:1;22616:15;22643:320;22687:6;22724:1;22718:4;22714:12;22704:22;;22771:1;22765:4;22761:12;22792:18;22782:81;;22848:4;22840:6;22836:17;22826:27;;22782:81;22910:2;22902:6;22899:14;22879:18;22876:38;22873:84;;22929:18;;:::i;:::-;22873:84;22694:269;22643:320;;;:::o;22969:147::-;23070:11;23107:3;23092:18;;22969:147;;;;:::o;23122:144::-;23174:4;23197:3;23189:11;;23220:3;23217:1;23210:14;23254:4;23251:1;23241:18;23233:26;;23122:144;;;:::o;23294:878::-;23399:3;23436:5;23430:12;23465:36;23491:9;23465:36;:::i;:::-;23517:88;23598:6;23593:3;23517:88;:::i;:::-;23510:95;;23636:1;23625:9;23621:17;23652:1;23647:166;;;;23827:1;23822:344;;;;23614:552;;23647:166;23731:4;23727:9;23716;23712:25;23707:3;23700:38;23793:6;23786:14;23779:22;23771:6;23767:35;23762:3;23758:45;23751:52;;23647:166;;23822:344;23889:41;23924:5;23889:41;:::i;:::-;23952:1;23966:154;23980:6;23977:1;23974:13;23966:154;;;24054:7;24048:14;24044:1;24039:3;24035:11;24028:35;24104:1;24095:7;24091:15;24080:26;;24002:4;23999:1;23995:12;23990:17;;23966:154;;;24149:6;24144:3;24140:16;24133:23;;23829:337;;23614:552;;23403:769;;23294:878;;;;:::o;24178:273::-;24309:3;24331:94;24421:3;24412:6;24331:94;:::i;:::-;24324:101;;24442:3;24435:10;;24178:273;;;;:::o;24457:180::-;24505:77;24502:1;24495:88;24602:4;24599:1;24592:15;24626:4;24623:1;24616:15;24643:233;24682:3;24705:24;24723:5;24705:24;:::i;:::-;24696:33;;24751:66;24744:5;24741:77;24738:103;;24821:18;;:::i;:::-;24738:103;24868:1;24861:5;24857:13;24850:20;;24643:233;;;:::o;24882:141::-;24931:4;24954:3;24946:11;;24977:3;24974:1;24967:14;25011:4;25008:1;24998:18;24990:26;;24882:141;;;:::o;25029:93::-;25066:6;25113:2;25108;25101:5;25097:14;25093:23;25083:33;;25029:93;;;:::o;25128:107::-;25172:8;25222:5;25216:4;25212:16;25191:37;;25128:107;;;;:::o;25241:393::-;25310:6;25360:1;25348:10;25344:18;25383:97;25413:66;25402:9;25383:97;:::i;:::-;25501:39;25531:8;25520:9;25501:39;:::i;:::-;25489:51;;25573:4;25569:9;25562:5;25558:21;25549:30;;25622:4;25612:8;25608:19;25601:5;25598:30;25588:40;;25317:317;;25241:393;;;;;:::o;25640:60::-;25668:3;25689:5;25682:12;;25640:60;;;:::o;25706:142::-;25756:9;25789:53;25807:34;25816:24;25834:5;25816:24;:::i;:::-;25807:34;:::i;:::-;25789:53;:::i;:::-;25776:66;;25706:142;;;:::o;25854:75::-;25897:3;25918:5;25911:12;;25854:75;;;:::o;25935:269::-;26045:39;26076:7;26045:39;:::i;:::-;26106:91;26155:41;26179:16;26155:41;:::i;:::-;26147:6;26140:4;26134:11;26106:91;:::i;:::-;26100:4;26093:105;26011:193;25935:269;;;:::o;26210:73::-;26255:3;26210:73;:::o;26289:189::-;26366:32;;:::i;:::-;26407:65;26465:6;26457;26451:4;26407:65;:::i;:::-;26342:136;26289:189;;:::o;26484:186::-;26544:120;26561:3;26554:5;26551:14;26544:120;;;26615:39;26652:1;26645:5;26615:39;:::i;:::-;26588:1;26581:5;26577:13;26568:22;;26544:120;;;26484:186;;:::o;26676:543::-;26777:2;26772:3;26769:11;26766:446;;;26811:38;26843:5;26811:38;:::i;:::-;26895:29;26913:10;26895:29;:::i;:::-;26885:8;26881:44;27078:2;27066:10;27063:18;27060:49;;;27099:8;27084:23;;27060:49;27122:80;27178:22;27196:3;27178:22;:::i;:::-;27168:8;27164:37;27151:11;27122:80;:::i;:::-;26781:431;;26766:446;26676:543;;;:::o;27225:117::-;27279:8;27329:5;27323:4;27319:16;27298:37;;27225:117;;;;:::o;27348:169::-;27392:6;27425:51;27473:1;27469:6;27461:5;27458:1;27454:13;27425:51;:::i;:::-;27421:56;27506:4;27500;27496:15;27486:25;;27399:118;27348:169;;;;:::o;27522:295::-;27598:4;27744:29;27769:3;27763:4;27744:29;:::i;:::-;27736:37;;27806:3;27803:1;27799:11;27793:4;27790:21;27782:29;;27522:295;;;;:::o;27822:1395::-;27939:37;27972:3;27939:37;:::i;:::-;28041:18;28033:6;28030:30;28027:56;;;28063:18;;:::i;:::-;28027:56;28107:38;28139:4;28133:11;28107:38;:::i;:::-;28192:67;28252:6;28244;28238:4;28192:67;:::i;:::-;28286:1;28310:4;28297:17;;28342:2;28334:6;28331:14;28359:1;28354:618;;;;29016:1;29033:6;29030:77;;;29082:9;29077:3;29073:19;29067:26;29058:35;;29030:77;29133:67;29193:6;29186:5;29133:67;:::i;:::-;29127:4;29120:81;28989:222;28324:887;;28354:618;28406:4;28402:9;28394:6;28390:22;28440:37;28472:4;28440:37;:::i;:::-;28499:1;28513:208;28527:7;28524:1;28521:14;28513:208;;;28606:9;28601:3;28597:19;28591:26;28583:6;28576:42;28657:1;28649:6;28645:14;28635:24;;28704:2;28693:9;28689:18;28676:31;;28550:4;28547:1;28543:12;28538:17;;28513:208;;;28749:6;28740:7;28737:19;28734:179;;;28807:9;28802:3;28798:19;28792:26;28850:48;28892:4;28884:6;28880:17;28869:9;28850:48;:::i;:::-;28842:6;28835:64;28757:156;28734:179;28959:1;28955;28947:6;28943:14;28939:22;28933:4;28926:36;28361:611;;;28324:887;;27914:1303;;;27822:1395;;:::o;29223:86::-;29258:7;29298:4;29291:5;29287:16;29276:27;;29223:86;;;:::o;29315:191::-;29353:4;29373:18;29389:1;29373:18;:::i;:::-;29368:23;;29405:18;29421:1;29405:18;:::i;:::-;29400:23;;29447:1;29444;29440:9;29432:17;;29471:4;29465;29462:14;29459:40;;;29479:18;;:::i;:::-;29459:40;29315:191;;;;:::o;29512:194::-;29552:4;29572:20;29590:1;29572:20;:::i;:::-;29567:25;;29606:20;29624:1;29606:20;:::i;:::-;29601:25;;29650:1;29647;29643:9;29635:17;;29674:1;29668:4;29665:11;29662:37;;;29679:18;;:::i;:::-;29662:37;29512:194;;;;:::o;29712:102::-;29754:8;29801:5;29798:1;29794:13;29773:34;;29712:102;;;:::o;29820:848::-;29881:5;29888:4;29912:6;29903:15;;29936:5;29927:14;;29950:712;29971:1;29961:8;29958:15;29950:712;;;30066:4;30061:3;30057:14;30051:4;30048:24;30045:50;;;30075:18;;:::i;:::-;30045:50;30125:1;30115:8;30111:16;30108:451;;;30540:4;30533:5;30529:16;30520:25;;30108:451;30590:4;30584;30580:15;30572:23;;30620:32;30643:8;30620:32;:::i;:::-;30608:44;;29950:712;;;29820:848;;;;;;;:::o;30674:1073::-;30728:5;30919:8;30909:40;;30940:1;30931:10;;30942:5;;30909:40;30968:4;30958:36;;30985:1;30976:10;;30987:5;;30958:36;31054:4;31102:1;31097:27;;;;31138:1;31133:191;;;;31047:277;;31097:27;31115:1;31106:10;;31117:5;;;31133:191;31178:3;31168:8;31165:17;31162:43;;;31185:18;;:::i;:::-;31162:43;31234:8;31231:1;31227:16;31218:25;;31269:3;31262:5;31259:14;31256:40;;;31276:18;;:::i;:::-;31256:40;31309:5;;;31047:277;;31433:2;31423:8;31420:16;31414:3;31408:4;31405:13;31401:36;31383:2;31373:8;31370:16;31365:2;31359:4;31356:12;31352:35;31336:111;31333:246;;;31489:8;31483:4;31479:19;31470:28;;31524:3;31517:5;31514:14;31511:40;;;31531:18;;:::i;:::-;31511:40;31564:5;;31333:246;31604:42;31642:3;31632:8;31626:4;31623:1;31604:42;:::i;:::-;31589:57;;;;31678:4;31673:3;31669:14;31662:5;31659:25;31656:51;;;31687:18;;:::i;:::-;31656:51;31736:4;31729:5;31725:16;31716:25;;30674:1073;;;;;;:::o;31753:285::-;31813:5;31837:23;31855:4;31837:23;:::i;:::-;31829:31;;31881:27;31899:8;31881:27;:::i;:::-;31869:39;;31927:104;31964:66;31954:8;31948:4;31927:104;:::i;:::-;31918:113;;31753:285;;;;:::o;32044:410::-;32084:7;32107:20;32125:1;32107:20;:::i;:::-;32102:25;;32141:20;32159:1;32141:20;:::i;:::-;32136:25;;32196:1;32193;32189:9;32218:30;32236:11;32218:30;:::i;:::-;32207:41;;32397:1;32388:7;32384:15;32381:1;32378:22;32358:1;32351:9;32331:83;32308:139;;32427:18;;:::i;:::-;32308:139;32092:362;32044:410;;;;:::o;32460:191::-;32500:3;32519:20;32537:1;32519:20;:::i;:::-;32514:25;;32553:20;32571:1;32553:20;:::i;:::-;32548:25;;32596:1;32593;32589:9;32582:16;;32617:3;32614:1;32611:10;32608:36;;;32624:18;;:::i;:::-;32608:36;32460:191;;;;:::o;32657:180::-;32705:77;32702:1;32695:88;32802:4;32799:1;32792:15;32826:4;32823:1;32816:15"},"gasEstimates":{"creation":{"codeDepositCost":"2722400","executionCost":"2961","totalCost":"2725361"},"external":{"AllEventEndTime(string)":"infinite","BidURI(string)":"infinite","TokenHighestBidders(uint256)":"infinite","_EventTokenSearchIds()":"2476","_SearchedStore(string,uint256)":"infinite","_getSearchedTokenURI(string)":"infinite","_setBidURI(string,string)":"infinite","_setEventRaised(string,string)":"infinite","_setEventURI(string,string,string)":"infinite","_setTokenBid(uint256,string,string)":"infinite","_setTokenEvent(uint256,string,string)":"infinite","_setTokenHighestBid(string,string,address,string)":"infinite","_setTokenURI(string,string)":"infinite","claimToken(address,string,string)":"infinite","createBid(string,string,string,string,string)":"infinite","createEvent(string,string,uint256)":"infinite","distribute_event(string)":"infinite","eventURI(string)":"infinite","getBidIdByUri(string)":"infinite","getBidsSearchToken(string)":"infinite","getEventIdByURI(string)":"infinite","getEventRaised(string)":"infinite","getGetEventsTokenID(string,string)":"infinite","getSearchEventbyWallet(string)":"infinite","getTokenHighestBid(string)":"infinite","getTotalBid(string)":"infinite","gettokenIdByUri(string)":"infinite","gettokenSearchEventTotal(string)":"infinite","strToUint(string)":"infinite","tokenURI(string)":"infinite","totalEvent()":"2549","totalSupply()":"2506"}},"methodIdentifiers":{"AllEventEndTime(string)":"3358f45b","BidURI(string)":"5f08c6b5","TokenHighestBidders(uint256)":"70881e72","_EventTokenSearchIds()":"144cbca6","_SearchedStore(string,uint256)":"8c2715b7","_getSearchedTokenURI(string)":"eacb4a74","_setBidURI(string,string)":"df6b96c7","_setEventRaised(string,string)":"282e5e81","_setEventURI(string,string,string)":"bfee6f8e","_setTokenBid(uint256,string,string)":"5457bbf9","_setTokenEvent(uint256,string,string)":"b91e924f","_setTokenHighestBid(string,string,address,string)":"ce65e748","_setTokenURI(string,string)":"7ab4ab6e","claimToken(address,string,string)":"2bde1581","createBid(string,string,string,string,string)":"f7e34095","createEvent(string,string,uint256)":"5555fe17","distribute_event(string)":"545fa9ec","eventURI(string)":"6ebb4d87","getBidIdByUri(string)":"d45fc516","getBidsSearchToken(string)":"25c11f74","getEventIdByURI(string)":"304b16db","getEventRaised(string)":"a42a665c","getGetEventsTokenID(string,string)":"783db260","getSearchEventbyWallet(string)":"1e65e117","getTokenHighestBid(string)":"6beee9d7","getTotalBid(string)":"2a0d0373","gettokenIdByUri(string)":"932a196b","gettokenSearchEventTotal(string)":"d0fb8699","strToUint(string)":"c5ef3ec5","tokenURI(string)":"4cf12d26","totalEvent()":"7eadfa6a","totalSupply()":"18160ddd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"AllEventEndTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"BidId\",\"type\":\"string\"}],\"name\":\"BidURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"TokenHighestBidders\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"token_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"event_id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"price\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_EventTokenSearchIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_SearchedStore\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenId\",\"type\":\"string\"}],\"name\":\"_getSearchedTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bidId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bidURI\",\"type\":\"string\"}],\"name\":\"_setBidURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_eventId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_raised\",\"type\":\"string\"}],\"name\":\"_setEventRaised\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"eventId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_eventWallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_eventURI\",\"type\":\"string\"}],\"name\":\"_setEventURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"TokenBidId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"TokenId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_BidURI\",\"type\":\"string\"}],\"name\":\"_setTokenBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"EventTokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"EventId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"_setTokenEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"token_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"event_id\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"price\",\"type\":\"string\"}],\"name\":\"_setTokenHighestBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"_setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_eventid\",\"type\":\"string\"}],\"name\":\"claimToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bidURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_eventid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_raised\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bid_price\",\"type\":\"string\"}],\"name\":\"createBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_eventWallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_eventURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"createEvent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"eventID\",\"type\":\"string\"}],\"name\":\"distribute_event\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"eventId\",\"type\":\"string\"}],\"name\":\"eventURI\",\"outputs\":[{\"internalType\":\"string[2]\",\"name\":\"\",\"type\":\"string[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_bidURI\",\"type\":\"string\"}],\"name\":\"getBidIdByUri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"TokenID\",\"type\":\"string\"}],\"name\":\"getBidsSearchToken\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_eventURI\",\"type\":\"string\"}],\"name\":\"getEventIdByURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_eventId\",\"type\":\"string\"}],\"name\":\"getEventRaised\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"EventId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"getGetEventsTokenID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"Wallet\",\"type\":\"string\"}],\"name\":\"getSearchEventbyWallet\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"token_id\",\"type\":\"string\"}],\"name\":\"getTokenHighestBid\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"TokenID\",\"type\":\"string\"}],\"name\":\"getTotalBid\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"gettokenIdByUri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"EventID\",\"type\":\"string\"}],\"name\":\"gettokenSearchEventTotal\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_str\",\"type\":\"string\"}],\"name\":\"strToUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"res\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenId\",\"type\":\"string\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalEvent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolkaGift.sol\":\"PolkaGift\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/PolkaGift.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\r\\ncontract PolkaGift {\\r\\n\\r\\n    /// Highest bidder struct\\r\\n    struct highest_bidder_struct {\\r\\n        ///Token Id\\r\\n        string token_id;\\r\\n        ///Event Id\\r\\n        string event_id;\\r\\n        ///Highest Bidder\\r\\n        address wallet;\\r\\n        ///Highest Bid price\\r\\n        string price;\\r\\n    }\\r\\n\\r\\n\\r\\n    struct event_token_struct{\\r\\n        ///Event Id\\r\\n        string event_id;\\r\\n        ///Token Uri\\r\\n        string token_uri;\\r\\n    }\\r\\n    struct token_bid_struct{\\r\\n        ///Token Id\\r\\n        string token_id;\\r\\n        ///Bid URI\\r\\n        string bid_uri;\\r\\n\\r\\n    }\\r\\n\\r\\n    uint256 private _tokenIds;\\r\\n    uint256 private _bidIds;\\r\\n    uint256 private _eventIds;\\r\\n    uint256 private _EventTokenIds;\\r\\n    uint256 private _TokenBidIds;\\r\\n    uint256 private _TokenHighestBidIds;\\r\\n    uint256 public _EventTokenSearchIds;\\r\\n    mapping(string => bool) public AllEventEndTime; //Event ID => bool\\r\\n    mapping(uint256 => event_token_struct) private AllEventTokens;\\r\\n    mapping(uint256 => token_bid_struct) private AllTokensBids;\\r\\n    mapping(uint256 => highest_bidder_struct) public TokenHighestBidders; //_TokenHighestBidIds => highest bidder struct\\r\\n    mapping(string => string[2]) public _SearchedStore;\\r\\n    mapping(string => string) private _bidURIs;\\r\\n    mapping(string => string) private _tokenURIs; //_tokenIds => Token URI\\r\\n    mapping(string => string[2]) private _eventURIs;\\r\\n    mapping(string => string) private _eventRaised;\\r\\n\\r\\n    function claimToken(\\r\\n        address _claimer,\\r\\n        string memory _tokenURI,\\r\\n        string memory _eventid\\r\\n    ) public returns (uint256) {\\r\\n        _setTokenURI(string.concat(\\\"m_\\\" , Strings.toString(_tokenIds)), _tokenURI);\\r\\n        _setTokenEvent(_EventTokenIds, _eventid, _tokenURI);\\r\\n\\r\\n        _tokenIds++;\\r\\n        _EventTokenIds++;\\r\\n        return _tokenIds;\\r\\n    }\\r\\n\\r\\n    function _setTokenEvent(\\r\\n        uint256 EventTokenId,\\r\\n        string memory EventId,\\r\\n        string memory _tokenURI\\r\\n    ) public virtual {\\r\\n        AllEventTokens[EventTokenId] = event_token_struct(\\r\\n            string(EventId),\\r\\n            string(_tokenURI)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function createEvent(\\r\\n        string memory _eventWallet,\\r\\n        string memory _eventURI,\\r\\n        uint256 endtime\\r\\n    ) public returns (uint256) {\\r\\n        string memory new_event_id = string.concat(\\\"m_\\\" , Strings.toString(_eventIds));\\r\\n\\r\\n        _setEventURI(new_event_id, _eventWallet, _eventURI);\\r\\n        _setEventRaised(new_event_id, \\\"0\\\");\\r\\n        AllEventEndTime[new_event_id] = false;\\r\\n        _eventIds++;\\r\\n\\r\\n        return _eventIds;\\r\\n    }\\r\\n\\r\\n\\r\\n    function distribute_event(string memory eventID) public{ \\r\\n      \\r\\n    AllEventEndTime[eventID] = true;\\r\\n\\r\\n    }\\r\\n    function gettokenIdByUri(string memory _tokenURI)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (uint256)\\r\\n    {\\r\\n        for (uint256 i = 0; i < _tokenIds; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(_tokenURIs[string.concat(\\\"m_\\\", Strings.toString(i))])) == keccak256(bytes(_tokenURI))\\r\\n            ) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function getEventIdByURI(string memory _eventURI)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (uint256)\\r\\n    {\\r\\n        for (uint256 i = 0; i < _eventIds; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(_eventURIs[string.concat(\\\"m_\\\", Strings.toString(i))][1])) ==\\r\\n                keccak256(bytes(_eventURI))\\r\\n            ) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function getBidIdByUri(string memory _bidURI)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (uint256)\\r\\n    {\\r\\n        for (uint256 i = 0; i < _bidIds; i++) {\\r\\n            if (keccak256(bytes(_bidURIs[string.concat(\\\"m_\\\", Strings.toString(i))])) == keccak256(bytes(_bidURI))) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function gettokenSearchEventTotal(string memory EventID)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (string[] memory)\\r\\n    {\\r\\n        string[] memory _SearchedStoreToken = new string[](10);\\r\\n\\r\\n        uint256 _EventTokenSearchIds2 = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < _EventTokenIds; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(AllEventTokens[i].event_id)) ==\\r\\n                keccak256(bytes(string(EventID)))\\r\\n            ) {\\r\\n                _SearchedStoreToken[_EventTokenSearchIds2] = AllEventTokens[i].token_uri;\\r\\n                _EventTokenSearchIds2++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _SearchedStoreToken;\\r\\n    }\\r\\n\\r\\n    function getSearchEventbyWallet(string memory Wallet)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (string[] memory)\\r\\n    {\\r\\n        uint256 _TemporarySearch = 0;\\r\\n        uint256 _SearchIds = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < _eventIds; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(_eventURIs[string.concat(\\\"m_\\\", Strings.toString(i))][0])) == keccak256(bytes(Wallet))\\r\\n            ) {\\r\\n                _TemporarySearch++;\\r\\n            }\\r\\n        }\\r\\n        string[] memory _SearchedStoreEvents = new string[](_TemporarySearch);\\r\\n        for (uint256 i = 0; i < _eventIds; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(_eventURIs[string.concat(\\\"m_\\\", Strings.toString(i))][0])) == keccak256(bytes(Wallet))\\r\\n            ) {\\r\\n                _SearchedStoreEvents[_SearchIds] = _eventURIs[string.concat(\\\"m_\\\", Strings.toString(i))][1];\\r\\n                _SearchIds++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _SearchedStoreEvents;\\r\\n    }\\r\\n\\r\\n    function getGetEventsTokenID(string memory EventId, string memory _tokenURI)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (uint256)\\r\\n    {\\r\\n        for (uint256 i = 0; i < _EventTokenIds; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(AllEventTokens[i].event_id)) ==\\r\\n                keccak256(bytes(string(EventId))) &&\\r\\n                keccak256(bytes(AllEventTokens[i].token_uri)) ==\\r\\n                keccak256(bytes(_tokenURI))\\r\\n            ) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function _getSearchedTokenURI(string memory _tokenId)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (string memory)\\r\\n    {\\r\\n        return _SearchedStore[_tokenId][0];\\r\\n    }\\r\\n\\r\\n    function _setEventURI(\\r\\n        string memory eventId,\\r\\n        string memory _eventWallet,\\r\\n        string memory _eventURI\\r\\n    ) public virtual {\\r\\n        _eventURIs[eventId] = [_eventWallet, _eventURI];\\r\\n    }\\r\\n\\r\\n    function _setTokenURI(string memory tokenId, string memory _tokenURI)\\r\\n        public\\r\\n        virtual\\r\\n    {\\r\\n        _tokenURIs[tokenId] = _tokenURI;\\r\\n                \\r\\n    }\\r\\n\\r\\n    function eventURI(string memory eventId) public view returns (string[2] memory) {\\r\\n        return _eventURIs[eventId];\\r\\n    }\\r\\n\\r\\n    function tokenURI(string memory tokenId)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (string memory)\\r\\n    {\\r\\n        return _tokenURIs[tokenId];\\r\\n    }\\r\\n\\r\\n    function totalSupply() public view returns (uint256) {\\r\\n        return _tokenIds;\\r\\n    }\\r\\n\\r\\n    function totalEvent() public view returns (uint256) {\\r\\n        return _eventIds;\\r\\n    }\\r\\n\\r\\n    function _setBidURI(string memory bidId, string memory _bidURI) public virtual {\\r\\n        _bidURIs[bidId] = _bidURI;\\r\\n    }\\r\\n\\r\\n    function BidURI(string memory BidId) public view returns (string memory) {\\r\\n        return _bidURIs[BidId];\\r\\n    }\\r\\n\\r\\n    function getTotalBid(string memory TokenID)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (string[] memory)\\r\\n    {\\r\\n        string[] memory _SearchedStoreBid = new string[](10);\\r\\n\\r\\n        uint256 _TokenBidSearchIds2 = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < _TokenBidIds; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(AllTokensBids[i].token_id)) ==\\r\\n                keccak256(bytes(string(TokenID)))\\r\\n            ) {\\r\\n                _SearchedStoreBid[_TokenBidSearchIds2] = AllTokensBids[i].bid_uri;\\r\\n                _TokenBidSearchIds2++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _SearchedStoreBid;\\r\\n    }\\r\\n\\r\\n    function getBidsSearchToken(string memory TokenID)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (string[] memory)\\r\\n    {\\r\\n        string[] memory _SearchedStoreBid = new string[](10);\\r\\n\\r\\n        uint256 _TokenBidSearchIds2 = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < _TokenBidIds; i++) {\\r\\n            if (\\r\\n                keccak256(bytes(AllTokensBids[i].token_id)) ==\\r\\n                keccak256(bytes(string(TokenID)))\\r\\n            ) {\\r\\n                _SearchedStoreBid[_TokenBidSearchIds2] = AllTokensBids[i].bid_uri;\\r\\n                _TokenBidSearchIds2++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _SearchedStoreBid;\\r\\n    }\\r\\n\\r\\n    function _setTokenBid(\\r\\n        uint256 TokenBidId,\\r\\n        string memory TokenId,\\r\\n        string memory _BidURI\\r\\n    ) public virtual {\\r\\n        AllTokensBids[TokenBidId] = token_bid_struct(\\r\\n            string(TokenId),\\r\\n            string(_BidURI)\\r\\n        );\\r\\n    }\\r\\n\\r\\n\\r\\n    function _setTokenHighestBid(\\r\\n        string memory token_id,\\r\\n        string memory event_id,\\r\\n        address wallet,\\r\\n        string memory price\\r\\n    ) public virtual {\\r\\n\\r\\n        string memory old_id = getTokenHighestBid(token_id);\\r\\n        if ( keccak256(bytes(old_id)) != keccak256(bytes(string(\\\"-1\\\")))){\\r\\n\\r\\n            TokenHighestBidders[strToUint(old_id)]= highest_bidder_struct({\\r\\n                token_id: token_id,\\r\\n                event_id: event_id,\\r\\n                wallet: wallet,\\r\\n                price: price\\r\\n            });\\r\\n        }else{\\r\\n            TokenHighestBidders[_TokenHighestBidIds] = highest_bidder_struct({\\r\\n                token_id: token_id,\\r\\n                event_id: event_id,\\r\\n                wallet: wallet,\\r\\n                price: price\\r\\n            });\\r\\n            _TokenHighestBidIds++;\\r\\n        }\\r\\n\\r\\n    }\\r\\n    function strToUint(string memory _str) public pure returns(uint256 res) {\\r\\n        \\r\\n        for (uint256 i = 0; i < bytes(_str).length; i++) {\\r\\n            if ((uint8(bytes(_str)[i]) - 48) < 0 || (uint8(bytes(_str)[i]) - 48) > 9) {\\r\\n                return (0);\\r\\n            }\\r\\n            res += (uint8(bytes(_str)[i]) - 48) * 10**(bytes(_str).length - i - 1);\\r\\n        }\\r\\n        \\r\\n        return (res);\\r\\n    }\\r\\n    function getTokenHighestBid(string memory token_id)   \\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (string memory){\\r\\n            for (uint256 i = 0; i < _TokenHighestBidIds; i++) {\\r\\n            if (\\r\\n                    keccak256(bytes(TokenHighestBidders[i].token_id)) ==\\r\\n                    keccak256(bytes(string(token_id)))\\r\\n                ) {\\r\\n                    return Strings.toString(i);\\r\\n                }\\r\\n            }\\r\\n            return \\\"-1\\\";\\r\\n\\r\\n        }\\r\\n\\r\\n    function getEventRaised(string memory _eventId)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        returns (string memory)\\r\\n    {\\r\\n        return _eventRaised[_eventId];\\r\\n    }\\r\\n\\r\\n    function _setEventRaised(string memory _eventId, string memory _raised) public {\\r\\n        _eventRaised[_eventId] = _raised;\\r\\n    }\\r\\n\\r\\n    function createBid(\\r\\n        string memory _tokenId,\\r\\n        string memory _bidURI,\\r\\n        string memory _eventid,\\r\\n        string memory _raised,\\r\\n        string memory _bid_price\\r\\n\\r\\n    ) public {\\r\\n        uint256 _EventTokenId = getGetEventsTokenID(\\r\\n            _eventid,\\r\\n            _tokenURIs[_tokenId]\\r\\n        );\\r\\n\\r\\n        _setTokenHighestBid(_tokenId,_eventid,msg.sender,_bid_price);\\r\\n        \\r\\n        _setEventRaised(_eventid, _raised);\\r\\n\\r\\n        _setTokenBid(_TokenBidIds, _tokenId, _bidURI);\\r\\n        _TokenBidIds++;\\r\\n        _bidIds++;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xdff2d7f987b8d21b1940890f62e55bbd49190f44ddad6ad0300fe489625e271d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1231,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"_tokenIds","offset":0,"slot":"0","type":"t_uint256"},{"astId":1233,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"_bidIds","offset":0,"slot":"1","type":"t_uint256"},{"astId":1235,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"_eventIds","offset":0,"slot":"2","type":"t_uint256"},{"astId":1237,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"_EventTokenIds","offset":0,"slot":"3","type":"t_uint256"},{"astId":1239,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"_TokenBidIds","offset":0,"slot":"4","type":"t_uint256"},{"astId":1241,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"_TokenHighestBidIds","offset":0,"slot":"5","type":"t_uint256"},{"astId":1243,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"_EventTokenSearchIds","offset":0,"slot":"6","type":"t_uint256"},{"astId":1247,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"AllEventEndTime","offset":0,"slot":"7","type":"t_mapping(t_string_memory_ptr,t_bool)"},{"astId":1252,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"AllEventTokens","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_struct(event_token_struct)1222_storage)"},{"astId":1257,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"AllTokensBids","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_struct(token_bid_struct)1229_storage)"},{"astId":1262,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"TokenHighestBidders","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_struct(highest_bidder_struct)1215_storage)"},{"astId":1268,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"_SearchedStore","offset":0,"slot":"11","type":"t_mapping(t_string_memory_ptr,t_array(t_string_storage)2_storage)"},{"astId":1272,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"_bidURIs","offset":0,"slot":"12","type":"t_mapping(t_string_memory_ptr,t_string_storage)"},{"astId":1276,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"_tokenURIs","offset":0,"slot":"13","type":"t_mapping(t_string_memory_ptr,t_string_storage)"},{"astId":1282,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"_eventURIs","offset":0,"slot":"14","type":"t_mapping(t_string_memory_ptr,t_array(t_string_storage)2_storage)"},{"astId":1286,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"_eventRaised","offset":0,"slot":"15","type":"t_mapping(t_string_memory_ptr,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)2_storage":{"base":"t_string_storage","encoding":"inplace","label":"string[2]","numberOfBytes":"64"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_string_memory_ptr,t_array(t_string_storage)2_storage)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => string[2])","numberOfBytes":"32","value":"t_array(t_string_storage)2_storage"},"t_mapping(t_string_memory_ptr,t_bool)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_string_memory_ptr,t_string_storage)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(event_token_struct)1222_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PolkaGift.event_token_struct)","numberOfBytes":"32","value":"t_struct(event_token_struct)1222_storage"},"t_mapping(t_uint256,t_struct(highest_bidder_struct)1215_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PolkaGift.highest_bidder_struct)","numberOfBytes":"32","value":"t_struct(highest_bidder_struct)1215_storage"},"t_mapping(t_uint256,t_struct(token_bid_struct)1229_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PolkaGift.token_bid_struct)","numberOfBytes":"32","value":"t_struct(token_bid_struct)1229_storage"},"t_string_memory_ptr":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(event_token_struct)1222_storage":{"encoding":"inplace","label":"struct PolkaGift.event_token_struct","members":[{"astId":1218,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"event_id","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1221,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"token_uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_struct(highest_bidder_struct)1215_storage":{"encoding":"inplace","label":"struct PolkaGift.highest_bidder_struct","members":[{"astId":1205,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"token_id","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1208,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"event_id","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1211,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"wallet","offset":0,"slot":"2","type":"t_address"},{"astId":1214,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"price","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(token_bid_struct)1229_storage":{"encoding":"inplace","label":"struct PolkaGift.token_bid_struct","members":[{"astId":1225,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"token_id","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1228,"contract":"contracts/PolkaGift.sol:PolkaGift","label":"bid_uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/Batch.sol":{"Batch":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"SubcallFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"SubcallSucceeded","type":"event"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"callData","type":"bytes[]"},{"internalType":"uint64[]","name":"gasLimit","type":"uint64[]"}],"name":"batchAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"callData","type":"bytes[]"},{"internalType":"uint64[]","name":"gasLimit","type":"uint64[]"}],"name":"batchSome","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"callData","type":"bytes[]"},{"internalType":"uint64[]","name":"gasLimit","type":"uint64[]"}],"name":"batchSomeUntilFailure","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"The Moonbeam Team","custom:address":"0x0000000000000000000000000000000000000808","details":"Allows to perform multiple calls throught one call to the precompile. Can be used by EOA to do multiple calls in a single transaction.","kind":"dev","methods":{"batchAll(address[],uint256[],bytes[],uint64[])":{"custom:selector":"96e292b8","details":"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting, the entire batch will revert.","params":{"callData":"Call data for each `to` address. If array is shorter than \"to\" then additional calls will be performed with an empty call data.","gasLimit":"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \"to\" then the remaining gas available will be used.","to":"List of addresses to call.","value":"List of values for each subcall. If array is shorter than \"to\" then additional calls will be performed with a value of 0."}},"batchSome(address[],uint256[],bytes[],uint64[])":{"custom:selector":"79df4b9c","details":"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting following subcalls will still be attempted.","params":{"callData":"Call data for each `to` address. If array is shorter than \"to\" then additional calls will be performed with an empty call data.","gasLimit":"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \"to\" then the remaining gas available will be used.","to":"List of addresses to call.","value":"List of values for each subcall. If array is shorter than \"to\" then additional calls will be performed with a value of 0."}},"batchSomeUntilFailure(address[],uint256[],bytes[],uint64[])":{"custom:selector":"cf0491c7","details":"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting, no more subcalls will be executed but the batch transaction will succeed. Use batchAll to revert on any subcall revert.","params":{"callData":"Call data for each `to` address. If array is shorter than \"to\" then additional calls will be performed with an empty call data.","gasLimit":"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \"to\" then the remaining gas available will be used.","to":"List of addresses to call.","value":"List of values for each subcall. If array is shorter than \"to\" then additional calls will be performed with a value of 0."}}},"title":"Batch precompile","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"batchAll(address[],uint256[],bytes[],uint64[])":"96e292b8","batchSome(address[],uint256[],bytes[],uint64[])":"79df4b9c","batchSomeUntilFailure(address[],uint256[],bytes[],uint64[])":"cf0491c7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"SubcallFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"SubcallSucceeded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64[]\",\"name\":\"gasLimit\",\"type\":\"uint64[]\"}],\"name\":\"batchAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64[]\",\"name\":\"gasLimit\",\"type\":\"uint64[]\"}],\"name\":\"batchSome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64[]\",\"name\":\"gasLimit\",\"type\":\"uint64[]\"}],\"name\":\"batchSomeUntilFailure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Moonbeam Team\",\"custom:address\":\"0x0000000000000000000000000000000000000808\",\"details\":\"Allows to perform multiple calls throught one call to the precompile. Can be used by EOA to do multiple calls in a single transaction.\",\"kind\":\"dev\",\"methods\":{\"batchAll(address[],uint256[],bytes[],uint64[])\":{\"custom:selector\":\"96e292b8\",\"details\":\"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting, the entire batch will revert.\",\"params\":{\"callData\":\"Call data for each `to` address. If array is shorter than \\\"to\\\" then additional calls will be performed with an empty call data.\",\"gasLimit\":\"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \\\"to\\\" then the remaining gas available will be used.\",\"to\":\"List of addresses to call.\",\"value\":\"List of values for each subcall. If array is shorter than \\\"to\\\" then additional calls will be performed with a value of 0.\"}},\"batchSome(address[],uint256[],bytes[],uint64[])\":{\"custom:selector\":\"79df4b9c\",\"details\":\"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting following subcalls will still be attempted.\",\"params\":{\"callData\":\"Call data for each `to` address. If array is shorter than \\\"to\\\" then additional calls will be performed with an empty call data.\",\"gasLimit\":\"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \\\"to\\\" then the remaining gas available will be used.\",\"to\":\"List of addresses to call.\",\"value\":\"List of values for each subcall. If array is shorter than \\\"to\\\" then additional calls will be performed with a value of 0.\"}},\"batchSomeUntilFailure(address[],uint256[],bytes[],uint64[])\":{\"custom:selector\":\"cf0491c7\",\"details\":\"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting, no more subcalls will be executed but the batch transaction will succeed. Use batchAll to revert on any subcall revert.\",\"params\":{\"callData\":\"Call data for each `to` address. If array is shorter than \\\"to\\\" then additional calls will be performed with an empty call data.\",\"gasLimit\":\"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \\\"to\\\" then the remaining gas available will be used.\",\"to\":\"List of addresses to call.\",\"value\":\"List of values for each subcall. If array is shorter than \\\"to\\\" then additional calls will be performed with a value of 0.\"}}},\"title\":\"Batch precompile\",\"version\":1},\"userdoc\":{\"events\":{\"SubcallFailed(uint256)\":{\"notice\":\"Emitted when a subcall fails.\"},\"SubcallSucceeded(uint256)\":{\"notice\":\"Emitted when a subcall succeeds.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/Batch.sol\":\"Batch\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/Batch.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\npragma solidity >=0.8.3;\\r\\n\\r\\n/// @dev The Batch contract's address.\\r\\naddress constant BATCH_ADDRESS = 0x0000000000000000000000000000000000000808;\\r\\n\\r\\n/// @dev The Batch contract's instance.\\r\\nBatch constant BATCH_CONTRACT = Batch(BATCH_ADDRESS);\\r\\n\\r\\n/// @author The Moonbeam Team\\r\\n/// @title Batch precompile\\r\\n/// @dev Allows to perform multiple calls throught one call to the precompile.\\r\\n/// Can be used by EOA to do multiple calls in a single transaction.\\r\\n/// @custom:address 0x0000000000000000000000000000000000000808\\r\\ninterface Batch {\\r\\n    /// @dev Batch multiple calls into a single transaction.\\r\\n    /// All calls are performed from the address calling this precompile.\\r\\n    ///\\r\\n    /// In case of one subcall reverting following subcalls will still be attempted.\\r\\n    ///\\r\\n    /// @param to List of addresses to call.\\r\\n    /// @param value List of values for each subcall. If array is shorter than \\\"to\\\" then additional\\r\\n    /// calls will be performed with a value of 0.\\r\\n    /// @param callData Call data for each `to` address. If array is shorter than \\\"to\\\" then\\r\\n    /// additional calls will be performed with an empty call data.\\r\\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\\r\\n    /// If array is shorter than \\\"to\\\" then the remaining gas available will be used.\\r\\n    /// @custom:selector 79df4b9c\\r\\n    function batchSome(\\r\\n        address[] memory to,\\r\\n        uint256[] memory value,\\r\\n        bytes[] memory callData,\\r\\n        uint64[] memory gasLimit\\r\\n    ) external;\\r\\n\\r\\n    /// @dev Batch multiple calls into a single transaction.\\r\\n    /// All calls are performed from the address calling this precompile.\\r\\n    ///\\r\\n    /// In case of one subcall reverting, no more subcalls will be executed but\\r\\n    /// the batch transaction will succeed. Use batchAll to revert on any subcall revert.\\r\\n    ///\\r\\n    /// @param to List of addresses to call.\\r\\n    /// @param value List of values for each subcall. If array is shorter than \\\"to\\\" then additional\\r\\n    /// calls will be performed with a value of 0.\\r\\n    /// @param callData Call data for each `to` address. If array is shorter than \\\"to\\\" then\\r\\n    /// additional calls will be performed with an empty call data.\\r\\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\\r\\n    /// If array is shorter than \\\"to\\\" then the remaining gas available will be used.\\r\\n    /// @custom:selector cf0491c7\\r\\n    function batchSomeUntilFailure(\\r\\n        address[] memory to,\\r\\n        uint256[] memory value,\\r\\n        bytes[] memory callData,\\r\\n        uint64[] memory gasLimit\\r\\n    ) external;\\r\\n\\r\\n    /// @dev Batch multiple calls into a single transaction.\\r\\n    /// All calls are performed from the address calling this precompile.\\r\\n    ///\\r\\n    /// In case of one subcall reverting, the entire batch will revert.\\r\\n    ///\\r\\n    /// @param to List of addresses to call.\\r\\n    /// @param value List of values for each subcall. If array is shorter than \\\"to\\\" then additional\\r\\n    /// calls will be performed with a value of 0.\\r\\n    /// @param callData Call data for each `to` address. If array is shorter than \\\"to\\\" then\\r\\n    /// additional calls will be performed with an empty call data.\\r\\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\\r\\n    /// If array is shorter than \\\"to\\\" then the remaining gas available will be used.\\r\\n    /// @custom:selector 96e292b8\\r\\n    function batchAll(\\r\\n        address[] memory to,\\r\\n        uint256[] memory value,\\r\\n        bytes[] memory callData,\\r\\n        uint64[] memory gasLimit\\r\\n    ) external;\\r\\n\\r\\n    /// Emitted when a subcall succeeds.\\r\\n    event SubcallSucceeded(uint256 index);\\r\\n\\r\\n    /// Emitted when a subcall fails.\\r\\n    event SubcallFailed(uint256 index);\\r\\n}\",\"keccak256\":\"0x5f7bd6403e434c7e9c199c362e8c4ad94a3b874ac67414dd183924ee80b3a62e\",\"license\":\"GPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"SubcallFailed(uint256)":{"notice":"Emitted when a subcall fails."},"SubcallSucceeded(uint256)":{"notice":"Emitted when a subcall succeeds."}},"kind":"user","methods":{},"version":1}}},"contracts/precompiles/CallPermit.sol":{"CallPermit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"gaslimit","type":"uint64"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"dispatch","outputs":[{"internalType":"bytes","name":"output","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"The Moonbeam Team","custom:address":"0x000000000000000000000000000000000000080a","details":"The interface aims to be a general-purpose tool to perform gas-less transactions. It uses the EIP-712 standard, and signed messages can be dispatched by another network participant with a transaction","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"custom:selector":"3644e515","details":"Returns the EIP712 domain separator. It is used to avoid replay attacks accross assets or other similar EIP712 message structures."},"dispatch(address,address,uint256,bytes,uint64,uint256,uint8,bytes32,bytes32)":{"custom:selector":"b5ea0966","details":"Dispatch a call on the behalf of an other user with a EIP712 permit. Will revert if the permit is not valid or if the dispatched call reverts or errors (such as out of gas). If successful the EIP712 nonce is increased to prevent this permit to be replayed.","params":{"data":"Call data","deadline":"Deadline in UNIX seconds after which the permit will no longer be valid.","from":"Who made the permit and want its call to be dispatched on their behalf.","gaslimit":"Gaslimit the dispatched call requires.     Providing it prevents the dispatcher to manipulate the gaslimit.","r":"R part of the signature.","s":"S part of the signature.","to":"Which address the call is made to.","v":"V part of the signature.","value":"Value being transfered from the \"from\" account."},"returns":{"output":"Output of the call."}},"nonces(address)":{"custom:selector":"7ecebe00","details":"Returns the current nonce for given owner. A permit must have this nonce to be consumed, which will increase the nonce by one."}},"title":"Call Permit Interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","dispatch(address,address,uint256,bytes,uint64,uint256,uint8,bytes32,bytes32)":"b5ea0966","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"gaslimit\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"dispatch\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"output\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Moonbeam Team\",\"custom:address\":\"0x000000000000000000000000000000000000080a\",\"details\":\"The interface aims to be a general-purpose tool to perform gas-less transactions. It uses the EIP-712 standard, and signed messages can be dispatched by another network participant with a transaction\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"custom:selector\":\"3644e515\",\"details\":\"Returns the EIP712 domain separator. It is used to avoid replay attacks accross assets or other similar EIP712 message structures.\"},\"dispatch(address,address,uint256,bytes,uint64,uint256,uint8,bytes32,bytes32)\":{\"custom:selector\":\"b5ea0966\",\"details\":\"Dispatch a call on the behalf of an other user with a EIP712 permit. Will revert if the permit is not valid or if the dispatched call reverts or errors (such as out of gas). If successful the EIP712 nonce is increased to prevent this permit to be replayed.\",\"params\":{\"data\":\"Call data\",\"deadline\":\"Deadline in UNIX seconds after which the permit will no longer be valid.\",\"from\":\"Who made the permit and want its call to be dispatched on their behalf.\",\"gaslimit\":\"Gaslimit the dispatched call requires.     Providing it prevents the dispatcher to manipulate the gaslimit.\",\"r\":\"R part of the signature.\",\"s\":\"S part of the signature.\",\"to\":\"Which address the call is made to.\",\"v\":\"V part of the signature.\",\"value\":\"Value being transfered from the \\\"from\\\" account.\"},\"returns\":{\"output\":\"Output of the call.\"}},\"nonces(address)\":{\"custom:selector\":\"7ecebe00\",\"details\":\"Returns the current nonce for given owner. A permit must have this nonce to be consumed, which will increase the nonce by one.\"}},\"title\":\"Call Permit Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/CallPermit.sol\":\"CallPermit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/CallPermit.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\npragma solidity >=0.8.3;\\r\\n\\r\\n/// @dev The CallPermit contract's address.\\r\\naddress constant CALL_PERMIT_ADDRESS = 0x000000000000000000000000000000000000080a;\\r\\n\\r\\n/// @dev The CallPermit contract's instance.\\r\\nCallPermit constant CALL_PERMIT_CONTRACT = CallPermit(CALL_PERMIT_ADDRESS);\\r\\n\\r\\n/// @author The Moonbeam Team\\r\\n/// @title Call Permit Interface\\r\\n/// @dev The interface aims to be a general-purpose tool to perform gas-less transactions. It uses the EIP-712 standard,\\r\\n/// and signed messages can be dispatched by another network participant with a transaction\\r\\n/// @custom:address 0x000000000000000000000000000000000000080a\\r\\ninterface CallPermit {\\r\\n    /// @dev Dispatch a call on the behalf of an other user with a EIP712 permit.\\r\\n    /// Will revert if the permit is not valid or if the dispatched call reverts or errors (such as\\r\\n    /// out of gas).\\r\\n    /// If successful the EIP712 nonce is increased to prevent this permit to be replayed.\\r\\n    /// @param from Who made the permit and want its call to be dispatched on their behalf.\\r\\n    /// @param to Which address the call is made to.\\r\\n    /// @param value Value being transfered from the \\\"from\\\" account.\\r\\n    /// @param data Call data\\r\\n    /// @param gaslimit Gaslimit the dispatched call requires.\\r\\n    ///     Providing it prevents the dispatcher to manipulate the gaslimit.\\r\\n    /// @param deadline Deadline in UNIX seconds after which the permit will no longer be valid.\\r\\n    /// @param v V part of the signature.\\r\\n    /// @param r R part of the signature.\\r\\n    /// @param s S part of the signature.\\r\\n    /// @return output Output of the call.\\r\\n    /// @custom:selector b5ea0966\\r\\n    function dispatch(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value,\\r\\n        bytes memory data,\\r\\n        uint64 gaslimit,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (bytes memory output);\\r\\n\\r\\n    /// @dev Returns the current nonce for given owner.\\r\\n    /// A permit must have this nonce to be consumed, which will\\r\\n    /// increase the nonce by one.\\r\\n    /// @custom:selector 7ecebe00\\r\\n    function nonces(address owner) external view returns (uint256);\\r\\n\\r\\n    /// @dev Returns the EIP712 domain separator. It is used to avoid replay\\r\\n    /// attacks accross assets or other similar EIP712 message structures.\\r\\n    /// @custom:selector 3644e515\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n}\",\"keccak256\":\"0x49105843ce0b766e463d12da623557b5bf637392ee9817109b9a84f9c83fcba3\",\"license\":\"GPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}